{"id": "21003651", "repo": "endlessm/chromium-browser", "path": "third_party/devtools-frontend/src/node_modules/ast-types/lib/shared.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function () { return null; }", "code_tokens": ["function", "(", ")", "{", "return", "null", ";", "}"], "original_docstring": "Functions were used because (among other reasons) that's the most elegant way to allow for the emptyArray one always to give a new array instance.", "docstring": {"block_comment": "Functions were used because  among other reasons  that s the most elegant way to allow for the emptyArray one always to give a new array instance.", "line_comment": null}, "docstring_tokens": ["Functions", "were", "used", "because", "among", "other", "reasons", "that", "s", "the", "most", "elegant", "way", "to", "allow", "for", "the", "emptyArray", "one", "always", "to", "give", "a", "new", "array", "instance", "."], "sample_id": 0, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003653", "repo": "ethrundr/KC3Kai", "path": "src/library/managers/ShipManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(){\r\n\t\t\tif(typeof localStorage.ships != \"undefined\"){\r\n\t\t\t\tthis.clear();\r\n\t\t\t\tvar ShipList = JSON.parse(localStorage.ships);\r\n\t\t\t\tfor(var ctr in ShipList){\r\n\t\t\t\t\tthis.add( ShipList[ctr] );\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "typeof", "localStorage", ".", "ships", "!=", "\"undefined\"", ")", "{", "this", ".", "clear", "(", ")", ";", "var", "ShipList", "=", "JSON", ".", "parse", "(", "localStorage", ".", "ships", ")", ";", "for", "(", "var", "ctr", "in", "ShipList", ")", "{", "this", ".", "add", "(", "ShipList", "[", "ctr", "]", ")", ";", "}", "return", "true", ";", "}", "return", "false", ";", "}"], "original_docstring": "Load from storage and add each one to manager list", "docstring": {"block_comment": "Load from storage and add each one to manager list", "line_comment": null}, "docstring_tokens": ["Load", "from", "storage", "and", "add", "each", "one", "to", "manager", "list"], "sample_id": 1, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003654", "repo": "ethrundr/KC3Kai", "path": "src/library/managers/ShipManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(){\r\n\t\t\tlocalStorage.ships = JSON.stringify(this.list);\r\n\t\t}", "code_tokens": ["function", "(", ")", "{", "localStorage", ".", "ships", "=", "JSON", ".", "stringify", "(", "this", ".", "list", ")", ";", "}"], "original_docstring": "Save ship list onto local storage", "docstring": {"block_comment": "Save ship list onto local storage", "line_comment": null}, "docstring_tokens": ["Save", "ship", "list", "onto", "local", "storage"], "sample_id": 2, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003656", "repo": "ethrundr/KC3Kai", "path": "src/library/managers/ShipManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(){\r\n\t\t\tconsole.log(JSON.stringify(this.list));\r\n\t\t}", "code_tokens": ["function", "(", ")", "{", "console", ".", "log", "(", "JSON", ".", "stringify", "(", "this", ".", "list", ")", ")", ";", "}"], "original_docstring": "Show JSON string of the list for debugging purposes", "docstring": {"block_comment": "Show JSON string of the list for debugging purposes", "line_comment": null}, "docstring_tokens": ["Show", "JSON", "string", "of", "the", "list", "for", "debugging", "purposes"], "sample_id": 3, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003657", "repo": "ethrundr/KC3Kai", "path": "src/library/managers/ShipManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( rosterId ){\r\n\t\t\tconsole.log(\"removing ship\", rosterId);\r\n\t\t\tvar thisShip = this.list[\"x\"+rosterId];\r\n\t\t\tif(thisShip != \"undefined\"){\r\n\t\t\t\t// initializing for fleet sanitizing of zombie ships\r\n\t\t\t\tvar\r\n\t\t\t\t\tflatShips  = PlayerManager.fleets\r\n\t\t\t\t\t\t.map(function(x){ return x.ships; })\r\n\t\t\t\t\t\t.reduce(function(x,y){ return x.concat(y); }),\r\n\t\t\t\t\tshipTargetOnFleet = flatShips.indexOf(Number(rosterId)), // check from which fleet\r\n\t\t\t\t\tshipTargetFleetID = Math.floor(shipTargetOnFleet/6);\r\n\t\t\t\t// check whether the designated ship is on fleet or not\r\n\t\t\t\tif(shipTargetOnFleet >= 0){\r\n\t\t\t\t\tPlayerManager.fleets[shipTargetFleetID].discard(rosterId);\r\n\t\t\t\t}\r\n\t\t\t\t// remove any equipments from her\r\n\t\t\t\tfor(var gctr in thisShip.items){\r\n\t\t\t\t\tif(thisShip.items[gctr] > -1){\r\n\t\t\t\t\t\tKC3GearManager.remove( thisShip.items[gctr] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdelete this.list[\"x\"+rosterId];\r\n\t\t\t\tthis.save();\r\n\t\t\t\tKC3GearManager.save();\r\n\t\t\t}\r\n\t\t}", "code_tokens": ["function", "(", "rosterId", ")", "{", "console", ".", "log", "(", "\"removing ship\"", ",", "rosterId", ")", ";", "var", "thisShip", "=", "this", ".", "list", "[", "\"x\"", "+", "rosterId", "]", ";", "if", "(", "thisShip", "!=", "\"undefined\"", ")", "{", "// initializing for fleet sanitizing of zombie ships\r", "var", "flatShips", "=", "PlayerManager", ".", "fleets", ".", "map", "(", "function", "(", "x", ")", "{", "return", "x", ".", "ships", ";", "}", ")", ".", "reduce", "(", "function", "(", "x", ",", "y", ")", "{", "return", "x", ".", "concat", "(", "y", ")", ";", "}", ")", ",", "shipTargetOnFleet", "=", "flatShips", ".", "indexOf", "(", "Number", "(", "rosterId", ")", ")", ",", "// check from which fleet\r", "shipTargetFleetID", "=", "Math", ".", "floor", "(", "shipTargetOnFleet", "/", "6", ")", ";", "// check whether the designated ship is on fleet or not\r", "if", "(", "shipTargetOnFleet", ">=", "0", ")", "{", "PlayerManager", ".", "fleets", "[", "shipTargetFleetID", "]", ".", "discard", "(", "rosterId", ")", ";", "}", "// remove any equipments from her\r", "for", "(", "var", "gctr", "in", "thisShip", ".", "items", ")", "{", "if", "(", "thisShip", ".", "items", "[", "gctr", "]", ">", "-", "1", ")", "{", "KC3GearManager", ".", "remove", "(", "thisShip", ".", "items", "[", "gctr", "]", ")", ";", "}", "}", "delete", "this", ".", "list", "[", "\"x\"", "+", "rosterId", "]", ";", "this", ".", "save", "(", ")", ";", "KC3GearManager", ".", "save", "(", ")", ";", "}", "}"], "original_docstring": "Remove ship from the list, scrapped, mod-fodded, or sunk", "docstring": {"block_comment": "Remove ship from the list, scrapped, mod fodded, or sunk", "line_comment": ["initializing for fleet sanitizing of zombie ships", "check from which fleet", "check whether the designated ship is on fleet or not", "remove any equipments from her"]}, "docstring_tokens": ["Remove", "ship", "from", "the", "list", "scrapped", "mod", "fodded", "or", "sunk"], "sample_id": 4, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003658", "repo": "ethrundr/KC3Kai", "path": "src/library/managers/ShipManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(data){\r\n\t\t\tvar ctr;\r\n\t\t\tfor(ctr in data){\r\n\t\t\t\tif(!!data[ctr]){\r\n\t\t\t\t\tthis.add(data[ctr]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.save();\r\n\t\t}", "code_tokens": ["function", "(", "data", ")", "{", "var", "ctr", ";", "for", "(", "ctr", "in", "data", ")", "{", "if", "(", "!", "!", "data", "[", "ctr", "]", ")", "{", "this", ".", "add", "(", "data", "[", "ctr", "]", ")", ";", "}", "}", "this", ".", "save", "(", ")", ";", "}"], "original_docstring": "Mass set multiple ships", "docstring": {"block_comment": "Mass set multiple ships", "line_comment": null}, "docstring_tokens": ["Mass", "set", "multiple", "ships"], "sample_id": 5, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003659", "repo": "ethrundr/KC3Kai", "path": "src/library/managers/ShipManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(data){\r\n\t\t\tvar didFlee = false;\r\n\t\t\tif(typeof data.api_id != \"undefined\"){\r\n\t\t\t\tif (typeof this.list[\"x\"+data.api_id] !== \"undefined\") {\r\n\t\t\t\t\tdidFlee = this.list[\"x\"+data.api_id].didFlee;\r\n\t\t\t\t}\r\n\t\t\t\tthis.list[\"x\"+data.api_id] = new KC3Ship(data);\r\n\t\t\t\tthis.list[\"x\"+data.api_id].didFlee = didFlee;\r\n\t\t\t}else if(typeof data.rosterId != \"undefined\"){\r\n\t\t\t\tif (typeof this.list[\"x\"+data.rosterId] !== \"undefined\") {\r\n\t\t\t\t\tdidFlee = this.list[\"x\"+data.rosterId].didFlee;\r\n\t\t\t\t}\r\n\t\t\t\tthis.list[\"x\"+data.rosterId] = new KC3Ship(data);\r\n\t\t\t\tthis.list[\"x\"+data.rosterId].didFlee = didFlee;\r\n\t\t\t}\r\n\t\t}", "code_tokens": ["function", "(", "data", ")", "{", "var", "didFlee", "=", "false", ";", "if", "(", "typeof", "data", ".", "api_id", "!=", "\"undefined\"", ")", "{", "if", "(", "typeof", "this", ".", "list", "[", "\"x\"", "+", "data", ".", "api_id", "]", "!==", "\"undefined\"", ")", "{", "didFlee", "=", "this", ".", "list", "[", "\"x\"", "+", "data", ".", "api_id", "]", ".", "didFlee", ";", "}", "this", ".", "list", "[", "\"x\"", "+", "data", ".", "api_id", "]", "=", "new", "KC3Ship", "(", "data", ")", ";", "this", ".", "list", "[", "\"x\"", "+", "data", ".", "api_id", "]", ".", "didFlee", "=", "didFlee", ";", "}", "else", "if", "(", "typeof", "data", ".", "rosterId", "!=", "\"undefined\"", ")", "{", "if", "(", "typeof", "this", ".", "list", "[", "\"x\"", "+", "data", ".", "rosterId", "]", "!==", "\"undefined\"", ")", "{", "didFlee", "=", "this", ".", "list", "[", "\"x\"", "+", "data", ".", "rosterId", "]", ".", "didFlee", ";", "}", "this", ".", "list", "[", "\"x\"", "+", "data", ".", "rosterId", "]", "=", "new", "KC3Ship", "(", "data", ")", ";", "this", ".", "list", "[", "\"x\"", "+", "data", ".", "rosterId", "]", ".", "didFlee", "=", "didFlee", ";", "}", "}"], "original_docstring": "Add or replace a ship on the list", "docstring": {"block_comment": "Add or replace a ship on the list", "line_comment": null}, "docstring_tokens": ["Add", "or", "replace", "a", "ship", "on", "the", "list"], "sample_id": 6, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003660", "repo": "ethrundr/KC3Kai", "path": "src/library/managers/ShipManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(){\r\n\t\t\treturn Object.size(this.list) + this.pendingShipNum;\r\n\t\t}", "code_tokens": ["function", "(", ")", "{", "return", "Object", ".", "size", "(", "this", ".", "list", ")", "+", "this", ".", "pendingShipNum", ";", "}"], "original_docstring": "Count number of ships", "docstring": {"block_comment": "Count number of ships", "line_comment": null}, "docstring_tokens": ["Count", "number", "of", "ships"], "sample_id": 7, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003661", "repo": "ethrundr/KC3Kai", "path": "src/library/managers/ShipManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( rosterId ){\r\n\t\t\t// console.log(\"getting ship\", rosterId, this.list[\"x\"+rosterId]);\r\n\t\t\treturn this.list[\"x\"+rosterId] || (new KC3Ship());\r\n\t\t}", "code_tokens": ["function", "(", "rosterId", ")", "{", "// console.log(\"getting ship\", rosterId, this.list[\"x\"+rosterId]);\r", "return", "this", ".", "list", "[", "\"x\"", "+", "rosterId", "]", "||", "(", "new", "KC3Ship", "(", ")", ")", ";", "}"], "original_docstring": "Get a specific ship by ID", "docstring": {"block_comment": "Get a specific ship by ID", "line_comment": ["console.log  getting ship , rosterId, this.list  x  rosterId   "]}, "docstring_tokens": ["Get", "a", "specific", "ship", "by", "ID"], "sample_id": 8, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003663", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }", "code_tokens": ["function", "(", "message", ",", "transfers", ")", "{", "if", "(", "transfers", "&&", "this", ".", "postMessageTransfers", ")", "{", "this", ".", "comObj", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}", "else", "{", "this", ".", "comObj", ".", "postMessage", "(", "message", ")", ";", "}", "}"], "original_docstring": "\nSends raw message to the comObj.\n@private\n@param message {Object} Raw message.\n@param transfers List of transfers/ArrayBuffers, or undefined.\n", "docstring": {"block_comment": "Sends raw message to the comObj.", "line_comment": null}, "docstring_tokens": ["Sends", "raw", "message", "to", "the", "comObj", "."], "sample_id": 9, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003664", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSendWithPromise", "code": "function messageHandlerSendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackIndex++;\n    var message = {\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  }", "code_tokens": ["function", "messageHandlerSendWithPromise", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "callbackId", "=", "this", ".", "callbackIndex", "++", ";", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", ",", "callbackId", ":", "callbackId", "}", ";", "var", "capability", "=", "createPromiseCapability", "(", ")", ";", "this", ".", "callbacksCapabilities", "[", "callbackId", "]", "=", "capability", ";", "try", "{", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}", "catch", "(", "e", ")", "{", "capability", ".", "reject", "(", "e", ")", ";", "}", "return", "capability", ".", "promise", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\nExpects that other side will callback with the response.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers.\n@returns {Promise} Promise to be resolved with response data.\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data. \nExpects that other side will callback with the response.", "line_comment": null}, "docstring_tokens": ["Sends", "a", "message", "to", "the", "comObj", "to", "invoke", "the", "action", "with", "the", "supplied", "data", ".", "Expects", "that", "other", "side", "will", "callback", "with", "the", "response", "."], "sample_id": 10, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003664", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSendWithPromise", "code": "function messageHandlerSendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackIndex++;\n    var message = {\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  }", "code_tokens": ["function", "messageHandlerSendWithPromise", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "callbackId", "=", "this", ".", "callbackIndex", "++", ";", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", ",", "callbackId", ":", "callbackId", "}", ";", "var", "capability", "=", "createPromiseCapability", "(", ")", ";", "this", ".", "callbacksCapabilities", "[", "callbackId", "]", "=", "capability", ";", "try", "{", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}", "catch", "(", "e", ")", "{", "capability", ".", "reject", "(", "e", ")", ";", "}", "return", "capability", ".", "promise", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\nExpects that other side will callback with the response.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers.\n@returns {Promise} Promise to be resolved with response data.\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data. \nExpects that other side will callback with the response.", "line_comment": null}, "docstring_tokens": ["Action", "to", "call", "."], "sample_id": 10, "prompt_tokens": ["<javascript>", "<param>", "actionName"], "comment_type": "param", "sentence_id": 1}
{"id": "21003664", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSendWithPromise", "code": "function messageHandlerSendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackIndex++;\n    var message = {\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  }", "code_tokens": ["function", "messageHandlerSendWithPromise", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "callbackId", "=", "this", ".", "callbackIndex", "++", ";", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", ",", "callbackId", ":", "callbackId", "}", ";", "var", "capability", "=", "createPromiseCapability", "(", ")", ";", "this", ".", "callbacksCapabilities", "[", "callbackId", "]", "=", "capability", ";", "try", "{", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}", "catch", "(", "e", ")", "{", "capability", ".", "reject", "(", "e", ")", ";", "}", "return", "capability", ".", "promise", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\nExpects that other side will callback with the response.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers.\n@returns {Promise} Promise to be resolved with response data.\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data. \nExpects that other side will callback with the response.", "line_comment": null}, "docstring_tokens": ["JSON", "data", "to", "send", "."], "sample_id": 10, "prompt_tokens": ["<javascript>", "<param>", "data"], "comment_type": "param", "sentence_id": 2}
{"id": "21003664", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSendWithPromise", "code": "function messageHandlerSendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackIndex++;\n    var message = {\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  }", "code_tokens": ["function", "messageHandlerSendWithPromise", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "callbackId", "=", "this", ".", "callbackIndex", "++", ";", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", ",", "callbackId", ":", "callbackId", "}", ";", "var", "capability", "=", "createPromiseCapability", "(", ")", ";", "this", ".", "callbacksCapabilities", "[", "callbackId", "]", "=", "capability", ";", "try", "{", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}", "catch", "(", "e", ")", "{", "capability", ".", "reject", "(", "e", ")", ";", "}", "return", "capability", ".", "promise", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\nExpects that other side will callback with the response.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers.\n@returns {Promise} Promise to be resolved with response data.\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data. \nExpects that other side will callback with the response.", "line_comment": null}, "docstring_tokens": ["Optional", "list", "of", "transfers", "/", "ArrayBuffers", "."], "sample_id": 10, "prompt_tokens": ["<javascript>", "<param>", "transfers"], "comment_type": "param", "sentence_id": 3}
{"id": "21003664", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSendWithPromise", "code": "function messageHandlerSendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackIndex++;\n    var message = {\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  }", "code_tokens": ["function", "messageHandlerSendWithPromise", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "callbackId", "=", "this", ".", "callbackIndex", "++", ";", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", ",", "callbackId", ":", "callbackId", "}", ";", "var", "capability", "=", "createPromiseCapability", "(", ")", ";", "this", ".", "callbacksCapabilities", "[", "callbackId", "]", "=", "capability", ";", "try", "{", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}", "catch", "(", "e", ")", "{", "capability", ".", "reject", "(", "e", ")", ";", "}", "return", "capability", ".", "promise", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\nExpects that other side will callback with the response.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers.\n@returns {Promise} Promise to be resolved with response data.\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data. \nExpects that other side will callback with the response.", "line_comment": null}, "docstring_tokens": ["{", "Promise", "}", "Promise", "to", "be", "resolved", "with", "response", "data", "."], "sample_id": 10, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 4}
{"id": "21003665", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSend", "code": "function messageHandlerSend(actionName, data, transfers) {\n    var message = {\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  }", "code_tokens": ["function", "messageHandlerSend", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", "}", ";", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data.", "line_comment": null}, "docstring_tokens": ["Sends", "a", "message", "to", "the", "comObj", "to", "invoke", "the", "action", "with", "the", "supplied", "data", "."], "sample_id": 11, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003665", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSend", "code": "function messageHandlerSend(actionName, data, transfers) {\n    var message = {\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  }", "code_tokens": ["function", "messageHandlerSend", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", "}", ";", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data.", "line_comment": null}, "docstring_tokens": ["Action", "to", "call", "."], "sample_id": 11, "prompt_tokens": ["<javascript>", "<param>", "actionName"], "comment_type": "param", "sentence_id": 1}
{"id": "21003665", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSend", "code": "function messageHandlerSend(actionName, data, transfers) {\n    var message = {\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  }", "code_tokens": ["function", "messageHandlerSend", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", "}", ";", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data.", "line_comment": null}, "docstring_tokens": ["JSON", "data", "to", "send", "."], "sample_id": 11, "prompt_tokens": ["<javascript>", "<param>", "data"], "comment_type": "param", "sentence_id": 2}
{"id": "21003665", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "messageHandlerSend", "code": "function messageHandlerSend(actionName, data, transfers) {\n    var message = {\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  }", "code_tokens": ["function", "messageHandlerSend", "(", "actionName", ",", "data", ",", "transfers", ")", "{", "var", "message", "=", "{", "action", ":", "actionName", ",", "data", ":", "data", "}", ";", "this", ".", "postMessage", "(", "message", ",", "transfers", ")", ";", "}"], "original_docstring": "\nSends a message to the comObj to invoke the action with the supplied data.\n@param {String} actionName Action to call.\n@param {JSON} data JSON data to send.\n@param {Array} [transfers] Optional list of transfers/ArrayBuffers\n", "docstring": {"block_comment": "Sends a message to the comObj to invoke the action with the supplied data.", "line_comment": null}, "docstring_tokens": ["Optional", "list", "of", "transfers", "/", "ArrayBuffers"], "sample_id": 11, "prompt_tokens": ["<javascript>", "<param>", "transfers"], "comment_type": "param", "sentence_id": 3}
{"id": "21003666", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewport_convertToPdfPoint", "code": "function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }", "code_tokens": ["function", "PageViewport_convertToPdfPoint", "(", "x", ",", "y", ")", "{", "return", "Util", ".", "applyInverseTransform", "(", "[", "x", ",", "y", "]", ",", "this", ".", "transform", ")", ";", "}"], "original_docstring": "\nConverts viewport coordinates to the PDF location. For examples, useful\nfor converting canvas pixel location into PDF one.\n@param x {number} X coordinate.\n@param y {number} Y coordinate.\n@returns {Object} Object that contains 'x' and 'y' properties of the\npoint in the PDF coordinate space.\n@see {@link convertToViewportPoint}\n", "docstring": {"block_comment": "Converts viewport coordinates to the PDF location. For examples, useful \nfor converting canvas pixel location into PDF one.", "line_comment": null}, "docstring_tokens": ["Converts", "viewport", "coordinates", "to", "the", "PDF", "location", ".", "For", "examples", "useful", "for", "converting", "canvas", "pixel", "location", "into", "PDF", "one", "."], "sample_id": 12, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003666", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewport_convertToPdfPoint", "code": "function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }", "code_tokens": ["function", "PageViewport_convertToPdfPoint", "(", "x", ",", "y", ")", "{", "return", "Util", ".", "applyInverseTransform", "(", "[", "x", ",", "y", "]", ",", "this", ".", "transform", ")", ";", "}"], "original_docstring": "\nConverts viewport coordinates to the PDF location. For examples, useful\nfor converting canvas pixel location into PDF one.\n@param x {number} X coordinate.\n@param y {number} Y coordinate.\n@returns {Object} Object that contains 'x' and 'y' properties of the\npoint in the PDF coordinate space.\n@see {@link convertToViewportPoint}\n", "docstring": {"block_comment": "Converts viewport coordinates to the PDF location. For examples, useful \nfor converting canvas pixel location into PDF one.", "line_comment": null}, "docstring_tokens": ["{", "Object", "}", "Object", "that", "contains", "x", "and", "y", "properties", "of", "the"], "sample_id": 12, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21003667", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewport_convertToViewportRectangle", "code": "function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    }", "code_tokens": ["function", "PageViewport_convertToViewportRectangle", "(", "rect", ")", "{", "var", "tl", "=", "Util", ".", "applyTransform", "(", "[", "rect", "[", "0", "]", ",", "rect", "[", "1", "]", "]", ",", "this", ".", "transform", ")", ";", "var", "br", "=", "Util", ".", "applyTransform", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ",", "this", ".", "transform", ")", ";", "return", "[", "tl", "[", "0", "]", ",", "tl", "[", "1", "]", ",", "br", "[", "0", "]", ",", "br", "[", "1", "]", "]", ";", "}"], "original_docstring": "\nConverts PDF rectangle to the viewport coordinates.\n@param rect {Array} xMin, yMin, xMax and yMax coordinates.\n@returns {Array} Contains corresponding coordinates of the rectangle\nin the viewport coordinate space.\n@see {@link convertToViewportPoint}\n", "docstring": {"block_comment": "Converts PDF rectangle to the viewport coordinates.", "line_comment": null}, "docstring_tokens": ["Converts", "PDF", "rectangle", "to", "the", "viewport", "coordinates", "."], "sample_id": 13, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003667", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewport_convertToViewportRectangle", "code": "function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    }", "code_tokens": ["function", "PageViewport_convertToViewportRectangle", "(", "rect", ")", "{", "var", "tl", "=", "Util", ".", "applyTransform", "(", "[", "rect", "[", "0", "]", ",", "rect", "[", "1", "]", "]", ",", "this", ".", "transform", ")", ";", "var", "br", "=", "Util", ".", "applyTransform", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ",", "this", ".", "transform", ")", ";", "return", "[", "tl", "[", "0", "]", ",", "tl", "[", "1", "]", ",", "br", "[", "0", "]", ",", "br", "[", "1", "]", "]", ";", "}"], "original_docstring": "\nConverts PDF rectangle to the viewport coordinates.\n@param rect {Array} xMin, yMin, xMax and yMax coordinates.\n@returns {Array} Contains corresponding coordinates of the rectangle\nin the viewport coordinate space.\n@see {@link convertToViewportPoint}\n", "docstring": {"block_comment": "Converts PDF rectangle to the viewport coordinates.", "line_comment": null}, "docstring_tokens": ["xMin", "yMin", "xMax", "and", "yMax", "coordinates", "."], "sample_id": 13, "prompt_tokens": ["<javascript>", "<param>", "rect"], "comment_type": "param", "sentence_id": 1}
{"id": "21003667", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewport_convertToViewportRectangle", "code": "function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    }", "code_tokens": ["function", "PageViewport_convertToViewportRectangle", "(", "rect", ")", "{", "var", "tl", "=", "Util", ".", "applyTransform", "(", "[", "rect", "[", "0", "]", ",", "rect", "[", "1", "]", "]", ",", "this", ".", "transform", ")", ";", "var", "br", "=", "Util", ".", "applyTransform", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ",", "this", ".", "transform", ")", ";", "return", "[", "tl", "[", "0", "]", ",", "tl", "[", "1", "]", ",", "br", "[", "0", "]", ",", "br", "[", "1", "]", "]", ";", "}"], "original_docstring": "\nConverts PDF rectangle to the viewport coordinates.\n@param rect {Array} xMin, yMin, xMax and yMax coordinates.\n@returns {Array} Contains corresponding coordinates of the rectangle\nin the viewport coordinate space.\n@see {@link convertToViewportPoint}\n", "docstring": {"block_comment": "Converts PDF rectangle to the viewport coordinates.", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "Contains", "corresponding", "coordinates", "of", "the", "rectangle"], "sample_id": 13, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003668", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewport_convertToViewportPoint", "code": "function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    }", "code_tokens": ["function", "PageViewport_convertToViewportPoint", "(", "x", ",", "y", ")", "{", "return", "Util", ".", "applyTransform", "(", "[", "x", ",", "y", "]", ",", "this", ".", "transform", ")", ";", "}"], "original_docstring": "\nConverts PDF point to the viewport coordinates. For examples, useful for\nconverting PDF location into canvas pixel coordinates.\n@param x {number} X coordinate.\n@param y {number} Y coordinate.\n@returns {Object} Object that contains 'x' and 'y' properties of the\npoint in the viewport coordinate space.\n@see {@link convertToPdfPoint}\n@see {@link convertToViewportRectangle}\n", "docstring": {"block_comment": "Converts PDF point to the viewport coordinates. For examples, useful for \nconverting PDF location into canvas pixel coordinates.", "line_comment": null}, "docstring_tokens": ["Converts", "PDF", "point", "to", "the", "viewport", "coordinates", ".", "For", "examples", "useful", "for", "converting", "PDF", "location", "into", "canvas", "pixel", "coordinates", "."], "sample_id": 14, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003668", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewport_convertToViewportPoint", "code": "function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    }", "code_tokens": ["function", "PageViewport_convertToViewportPoint", "(", "x", ",", "y", ")", "{", "return", "Util", ".", "applyTransform", "(", "[", "x", ",", "y", "]", ",", "this", ".", "transform", ")", ";", "}"], "original_docstring": "\nConverts PDF point to the viewport coordinates. For examples, useful for\nconverting PDF location into canvas pixel coordinates.\n@param x {number} X coordinate.\n@param y {number} Y coordinate.\n@returns {Object} Object that contains 'x' and 'y' properties of the\npoint in the viewport coordinate space.\n@see {@link convertToPdfPoint}\n@see {@link convertToViewportRectangle}\n", "docstring": {"block_comment": "Converts PDF point to the viewport coordinates. For examples, useful for \nconverting PDF location into canvas pixel coordinates.", "line_comment": null}, "docstring_tokens": ["{", "Object", "}", "Object", "that", "contains", "x", "and", "y", "properties", "of", "the"], "sample_id": 14, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21003669", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewPort_clone", "code": "function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation,\n                              this.offsetX, this.offsetY, args.dontFlip);\n    }", "code_tokens": ["function", "PageViewPort_clone", "(", "args", ")", "{", "args", "=", "args", "||", "{", "}", ";", "var", "scale", "=", "'scale'", "in", "args", "?", "args", ".", "scale", ":", "this", ".", "scale", ";", "var", "rotation", "=", "'rotation'", "in", "args", "?", "args", ".", "rotation", ":", "this", ".", "rotation", ";", "return", "new", "PageViewport", "(", "this", ".", "viewBox", ".", "slice", "(", ")", ",", "scale", ",", "rotation", ",", "this", ".", "offsetX", ",", "this", ".", "offsetY", ",", "args", ".", "dontFlip", ")", ";", "}"], "original_docstring": "\nClones viewport with additional properties.\n@param args {Object} (optional) If specified, may contain the 'scale' or\n'rotation' properties to override the corresponding properties in\nthe cloned viewport.\n@returns {PDFJS.PageViewport} Cloned viewport.\n", "docstring": {"block_comment": "Clones viewport with additional properties.", "line_comment": null}, "docstring_tokens": ["Clones", "viewport", "with", "additional", "properties", "."], "sample_id": 15, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003669", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewPort_clone", "code": "function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation,\n                              this.offsetX, this.offsetY, args.dontFlip);\n    }", "code_tokens": ["function", "PageViewPort_clone", "(", "args", ")", "{", "args", "=", "args", "||", "{", "}", ";", "var", "scale", "=", "'scale'", "in", "args", "?", "args", ".", "scale", ":", "this", ".", "scale", ";", "var", "rotation", "=", "'rotation'", "in", "args", "?", "args", ".", "rotation", ":", "this", ".", "rotation", ";", "return", "new", "PageViewport", "(", "this", ".", "viewBox", ".", "slice", "(", ")", ",", "scale", ",", "rotation", ",", "this", ".", "offsetX", ",", "this", ".", "offsetY", ",", "args", ".", "dontFlip", ")", ";", "}"], "original_docstring": "\nClones viewport with additional properties.\n@param args {Object} (optional) If specified, may contain the 'scale' or\n'rotation' properties to override the corresponding properties in\nthe cloned viewport.\n@returns {PDFJS.PageViewport} Cloned viewport.\n", "docstring": {"block_comment": "Clones viewport with additional properties.", "line_comment": null}, "docstring_tokens": ["(", "optional", ")", "If", "specified", "may", "contain", "the", "scale", "or"], "sample_id": 15, "prompt_tokens": ["<javascript>", "<param>", "args"], "comment_type": "param", "sentence_id": 1}
{"id": "21003669", "repo": "jpambrun/jpx-medical", "path": "util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "PageViewPort_clone", "code": "function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation,\n                              this.offsetX, this.offsetY, args.dontFlip);\n    }", "code_tokens": ["function", "PageViewPort_clone", "(", "args", ")", "{", "args", "=", "args", "||", "{", "}", ";", "var", "scale", "=", "'scale'", "in", "args", "?", "args", ".", "scale", ":", "this", ".", "scale", ";", "var", "rotation", "=", "'rotation'", "in", "args", "?", "args", ".", "rotation", ":", "this", ".", "rotation", ";", "return", "new", "PageViewport", "(", "this", ".", "viewBox", ".", "slice", "(", ")", ",", "scale", ",", "rotation", ",", "this", ".", "offsetX", ",", "this", ".", "offsetY", ",", "args", ".", "dontFlip", ")", ";", "}"], "original_docstring": "\nClones viewport with additional properties.\n@param args {Object} (optional) If specified, may contain the 'scale' or\n'rotation' properties to override the corresponding properties in\nthe cloned viewport.\n@returns {PDFJS.PageViewport} Cloned viewport.\n", "docstring": {"block_comment": "Clones viewport with additional properties.", "line_comment": null}, "docstring_tokens": ["{", "PDFJS", ".", "PageViewport", "}", "Cloned", "viewport", "."], "sample_id": 15, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003670", "repo": "ming-codes/ember.js", "path": "packages/ember/tests/helpers/link_to_test.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path) {}", "code_tokens": ["function", "(", "path", ")", "{", "}"], "original_docstring": "Don't actually touch the URL", "docstring": {"block_comment": "Don t actually touch the URL", "line_comment": null}, "docstring_tokens": ["Don", "t", "actually", "touch", "the", "URL"], "sample_id": 16, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003671", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(operation, invert) {\n    if (operation.op === 'add') {\n      return this.add(operation.path, operation.value, invert);\n\n    } else if (operation.op === 'remove') {\n      return this.remove(operation.path, invert);\n\n    } else if (operation.op === 'replace') {\n      return this.replace(operation.path, operation.value, invert);\n\n    } else if (operation.op === 'move') {\n      return this.move(operation.from, operation.path, invert);\n\n    } else if (operation.op === 'copy') {\n      return this.copy(operation.from, operation.path, invert);\n\n    } else if (operation.op === 'test') {\n      return this.copy(operation.path, operation.value);\n    }\n  }", "code_tokens": ["function", "(", "operation", ",", "invert", ")", "{", "if", "(", "operation", ".", "op", "===", "'add'", ")", "{", "return", "this", ".", "add", "(", "operation", ".", "path", ",", "operation", ".", "value", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'remove'", ")", "{", "return", "this", ".", "remove", "(", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'replace'", ")", "{", "return", "this", ".", "replace", "(", "operation", ".", "path", ",", "operation", ".", "value", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'move'", ")", "{", "return", "this", ".", "move", "(", "operation", ".", "from", ",", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'copy'", ")", "{", "return", "this", ".", "copy", "(", "operation", ".", "from", ",", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'test'", ")", "{", "return", "this", ".", "copy", "(", "operation", ".", "path", ",", "operation", ".", "value", ")", ";", "}", "}"], "original_docstring": "\nTransforms the document with an RFC 6902-compliant operation.\n\nThrows `PathNotFoundException` if the path does not exist in the document.\n\n@method transform\n@param {Object} operation\n@param {String} operation.op Must be \"add\", \"remove\", \"replace\", \"move\", \"copy\", or \"test\"\n@param {Array or String} operation.path Path to target location\n@param {Array or String} operation.from Path to source target location. Required for \"copy\" and \"move\"\n@param {Object} operation.value Value to set. Required for \"add\", \"replace\" and \"test\"\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Transforms the document with an RFC 6902 compliant operation. \nThrows  PathNotFoundException  if the path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Transforms", "the", "document", "with", "an", "RFC", "6902", "compliant", "operation", ".", "Throws", "PathNotFoundException", "if", "the", "path", "does", "not", "exist", "in", "the", "document", "."], "sample_id": 17, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003671", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(operation, invert) {\n    if (operation.op === 'add') {\n      return this.add(operation.path, operation.value, invert);\n\n    } else if (operation.op === 'remove') {\n      return this.remove(operation.path, invert);\n\n    } else if (operation.op === 'replace') {\n      return this.replace(operation.path, operation.value, invert);\n\n    } else if (operation.op === 'move') {\n      return this.move(operation.from, operation.path, invert);\n\n    } else if (operation.op === 'copy') {\n      return this.copy(operation.from, operation.path, invert);\n\n    } else if (operation.op === 'test') {\n      return this.copy(operation.path, operation.value);\n    }\n  }", "code_tokens": ["function", "(", "operation", ",", "invert", ")", "{", "if", "(", "operation", ".", "op", "===", "'add'", ")", "{", "return", "this", ".", "add", "(", "operation", ".", "path", ",", "operation", ".", "value", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'remove'", ")", "{", "return", "this", ".", "remove", "(", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'replace'", ")", "{", "return", "this", ".", "replace", "(", "operation", ".", "path", ",", "operation", ".", "value", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'move'", ")", "{", "return", "this", ".", "move", "(", "operation", ".", "from", ",", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'copy'", ")", "{", "return", "this", ".", "copy", "(", "operation", ".", "from", ",", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'test'", ")", "{", "return", "this", ".", "copy", "(", "operation", ".", "path", ",", "operation", ".", "value", ")", ";", "}", "}"], "original_docstring": "\nTransforms the document with an RFC 6902-compliant operation.\n\nThrows `PathNotFoundException` if the path does not exist in the document.\n\n@method transform\n@param {Object} operation\n@param {String} operation.op Must be \"add\", \"remove\", \"replace\", \"move\", \"copy\", or \"test\"\n@param {Array or String} operation.path Path to target location\n@param {Array or String} operation.from Path to source target location. Required for \"copy\" and \"move\"\n@param {Object} operation.value Value to set. Required for \"add\", \"replace\" and \"test\"\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Transforms the document with an RFC 6902 compliant operation. \nThrows  PathNotFoundException  if the path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Return", "the", "inverse", "operations?"], "sample_id": 17, "prompt_tokens": ["<javascript>", "<param>", "invert"], "comment_type": "param", "sentence_id": 1}
{"id": "21003671", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(operation, invert) {\n    if (operation.op === 'add') {\n      return this.add(operation.path, operation.value, invert);\n\n    } else if (operation.op === 'remove') {\n      return this.remove(operation.path, invert);\n\n    } else if (operation.op === 'replace') {\n      return this.replace(operation.path, operation.value, invert);\n\n    } else if (operation.op === 'move') {\n      return this.move(operation.from, operation.path, invert);\n\n    } else if (operation.op === 'copy') {\n      return this.copy(operation.from, operation.path, invert);\n\n    } else if (operation.op === 'test') {\n      return this.copy(operation.path, operation.value);\n    }\n  }", "code_tokens": ["function", "(", "operation", ",", "invert", ")", "{", "if", "(", "operation", ".", "op", "===", "'add'", ")", "{", "return", "this", ".", "add", "(", "operation", ".", "path", ",", "operation", ".", "value", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'remove'", ")", "{", "return", "this", ".", "remove", "(", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'replace'", ")", "{", "return", "this", ".", "replace", "(", "operation", ".", "path", ",", "operation", ".", "value", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'move'", ")", "{", "return", "this", ".", "move", "(", "operation", ".", "from", ",", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'copy'", ")", "{", "return", "this", ".", "copy", "(", "operation", ".", "from", ",", "operation", ".", "path", ",", "invert", ")", ";", "}", "else", "if", "(", "operation", ".", "op", "===", "'test'", ")", "{", "return", "this", ".", "copy", "(", "operation", ".", "path", ",", "operation", ".", "value", ")", ";", "}", "}"], "original_docstring": "\nTransforms the document with an RFC 6902-compliant operation.\n\nThrows `PathNotFoundException` if the path does not exist in the document.\n\n@method transform\n@param {Object} operation\n@param {String} operation.op Must be \"add\", \"remove\", \"replace\", \"move\", \"copy\", or \"test\"\n@param {Array or String} operation.path Path to target location\n@param {Array or String} operation.from Path to source target location. Required for \"copy\" and \"move\"\n@param {Object} operation.value Value to set. Required for \"add\", \"replace\" and \"test\"\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Transforms the document with an RFC 6902 compliant operation. \nThrows  PathNotFoundException  if the path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "Array", "of", "inverse", "operations", "if", "invert", "===", "true"], "sample_id": 17, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003672", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, quiet) {\n    return eq(this._retrieve(this.deserializePath(path), quiet), value);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "quiet", ")", "{", "return", "eq", "(", "this", ".", "_retrieve", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "quiet", ")", ",", "value", ")", ";", "}"], "original_docstring": "\nTests that the value at a path matches an expectation.\n\nUses `Orbit.eq` to test equality.\n\nThrows `PathNotFoundException` if the path does not exist in the document.\n\n@method test\n@param {Array or String} [path]\n@param {Object} [value] Expected value to test\n@param {Boolean} [quiet=false] Use `undefined` instead of throwing an exception if `path` can't be found?\n@returns {Boolean} Does the value at `path` equal `value`?\n", "docstring": {"block_comment": "Tests that the value at a path matches an expectation. \nUses  Orbit.eq  to test equality. \nThrows  PathNotFoundException  if the path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Tests", "that", "the", "value", "at", "a", "path", "matches", "an", "expectation", ".", "Uses", "Orbit", ".", "eq", "to", "test", "equality", ".", "Throws", "PathNotFoundException", "if", "the", "path", "does", "not", "exist", "in", "the", "document", "."], "sample_id": 18, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003672", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, quiet) {\n    return eq(this._retrieve(this.deserializePath(path), quiet), value);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "quiet", ")", "{", "return", "eq", "(", "this", ".", "_retrieve", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "quiet", ")", ",", "value", ")", ";", "}"], "original_docstring": "\nTests that the value at a path matches an expectation.\n\nUses `Orbit.eq` to test equality.\n\nThrows `PathNotFoundException` if the path does not exist in the document.\n\n@method test\n@param {Array or String} [path]\n@param {Object} [value] Expected value to test\n@param {Boolean} [quiet=false] Use `undefined` instead of throwing an exception if `path` can't be found?\n@returns {Boolean} Does the value at `path` equal `value`?\n", "docstring": {"block_comment": "Tests that the value at a path matches an expectation. \nUses  Orbit.eq  to test equality. \nThrows  PathNotFoundException  if the path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Expected", "value", "to", "test"], "sample_id": 18, "prompt_tokens": ["<javascript>", "<param>", "value"], "comment_type": "param", "sentence_id": 1}
{"id": "21003672", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, quiet) {\n    return eq(this._retrieve(this.deserializePath(path), quiet), value);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "quiet", ")", "{", "return", "eq", "(", "this", ".", "_retrieve", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "quiet", ")", ",", "value", ")", ";", "}"], "original_docstring": "\nTests that the value at a path matches an expectation.\n\nUses `Orbit.eq` to test equality.\n\nThrows `PathNotFoundException` if the path does not exist in the document.\n\n@method test\n@param {Array or String} [path]\n@param {Object} [value] Expected value to test\n@param {Boolean} [quiet=false] Use `undefined` instead of throwing an exception if `path` can't be found?\n@returns {Boolean} Does the value at `path` equal `value`?\n", "docstring": {"block_comment": "Tests that the value at a path matches an expectation. \nUses  Orbit.eq  to test equality. \nThrows  PathNotFoundException  if the path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Use", "undefined", "instead", "of", "throwing", "an", "exception", "if", "path", "can", "t", "be", "found?"], "sample_id": 18, "prompt_tokens": ["<javascript>", "<param>", "quiet"], "comment_type": "param", "sentence_id": 2}
{"id": "21003672", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, quiet) {\n    return eq(this._retrieve(this.deserializePath(path), quiet), value);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "quiet", ")", "{", "return", "eq", "(", "this", ".", "_retrieve", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "quiet", ")", ",", "value", ")", ";", "}"], "original_docstring": "\nTests that the value at a path matches an expectation.\n\nUses `Orbit.eq` to test equality.\n\nThrows `PathNotFoundException` if the path does not exist in the document.\n\n@method test\n@param {Array or String} [path]\n@param {Object} [value] Expected value to test\n@param {Boolean} [quiet=false] Use `undefined` instead of throwing an exception if `path` can't be found?\n@returns {Boolean} Does the value at `path` equal `value`?\n", "docstring": {"block_comment": "Tests that the value at a path matches an expectation. \nUses  Orbit.eq  to test equality. \nThrows  PathNotFoundException  if the path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["{", "Boolean", "}", "Does", "the", "value", "at", "path", "equal", "value", "?"], "sample_id": 18, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 3}
{"id": "21003673", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(fromPath, toPath, invert) {\n    return this._copy(this.deserializePath(fromPath), this.deserializePath(toPath), invert);\n  }", "code_tokens": ["function", "(", "fromPath", ",", "toPath", ",", "invert", ")", "{", "return", "this", ".", "_copy", "(", "this", ".", "deserializePath", "(", "fromPath", ")", ",", "this", ".", "deserializePath", "(", "toPath", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nCopies an object at one path and adds it to another.\n\nIdentical to calling `add()` with the value at `fromPath`.\n\nThrows `PathNotFoundException` if either path does not exist in the document.\n\n@method copy\n@param {Array or String} fromPath\n@param {Array or String} toPath\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Copies an object at one path and adds it to another. \nIdentical to calling  add    with the value at  fromPath . \nThrows  PathNotFoundException  if either path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Copies", "an", "object", "at", "one", "path", "and", "adds", "it", "to", "another", ".", "Identical", "to", "calling", "add", "with", "the", "value", "at", "fromPath", ".", "Throws", "PathNotFoundException", "if", "either", "path", "does", "not", "exist", "in", "the", "document", "."], "sample_id": 19, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003673", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(fromPath, toPath, invert) {\n    return this._copy(this.deserializePath(fromPath), this.deserializePath(toPath), invert);\n  }", "code_tokens": ["function", "(", "fromPath", ",", "toPath", ",", "invert", ")", "{", "return", "this", ".", "_copy", "(", "this", ".", "deserializePath", "(", "fromPath", ")", ",", "this", ".", "deserializePath", "(", "toPath", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nCopies an object at one path and adds it to another.\n\nIdentical to calling `add()` with the value at `fromPath`.\n\nThrows `PathNotFoundException` if either path does not exist in the document.\n\n@method copy\n@param {Array or String} fromPath\n@param {Array or String} toPath\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Copies an object at one path and adds it to another. \nIdentical to calling  add    with the value at  fromPath . \nThrows  PathNotFoundException  if either path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Return", "the", "inverse", "operations?"], "sample_id": 19, "prompt_tokens": ["<javascript>", "<param>", "invert"], "comment_type": "param", "sentence_id": 1}
{"id": "21003673", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(fromPath, toPath, invert) {\n    return this._copy(this.deserializePath(fromPath), this.deserializePath(toPath), invert);\n  }", "code_tokens": ["function", "(", "fromPath", ",", "toPath", ",", "invert", ")", "{", "return", "this", ".", "_copy", "(", "this", ".", "deserializePath", "(", "fromPath", ")", ",", "this", ".", "deserializePath", "(", "toPath", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nCopies an object at one path and adds it to another.\n\nIdentical to calling `add()` with the value at `fromPath`.\n\nThrows `PathNotFoundException` if either path does not exist in the document.\n\n@method copy\n@param {Array or String} fromPath\n@param {Array or String} toPath\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Copies an object at one path and adds it to another. \nIdentical to calling  add    with the value at  fromPath . \nThrows  PathNotFoundException  if either path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "Array", "of", "inverse", "operations", "if", "invert", "===", "true"], "sample_id": 19, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003674", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(fromPath, toPath, invert) {\n    return this._move(this.deserializePath(fromPath), this.deserializePath(toPath), invert);\n  }", "code_tokens": ["function", "(", "fromPath", ",", "toPath", ",", "invert", ")", "{", "return", "this", ".", "_move", "(", "this", ".", "deserializePath", "(", "fromPath", ")", ",", "this", ".", "deserializePath", "(", "toPath", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nMoves an object from one path to another.\n\nIdentical to calling `remove()` followed by `add()`.\n\nThrows `PathNotFoundException` if either path does not exist in the document.\n\n@method move\n@param {Array or String} fromPath\n@param {Array or String} toPath\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Moves an object from one path to another. \nIdentical to calling  remove    followed by  add   . \nThrows  PathNotFoundException  if either path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Moves", "an", "object", "from", "one", "path", "to", "another", ".", "Identical", "to", "calling", "remove", "followed", "by", "add", ".", "Throws", "PathNotFoundException", "if", "either", "path", "does", "not", "exist", "in", "the", "document", "."], "sample_id": 20, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003674", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(fromPath, toPath, invert) {\n    return this._move(this.deserializePath(fromPath), this.deserializePath(toPath), invert);\n  }", "code_tokens": ["function", "(", "fromPath", ",", "toPath", ",", "invert", ")", "{", "return", "this", ".", "_move", "(", "this", ".", "deserializePath", "(", "fromPath", ")", ",", "this", ".", "deserializePath", "(", "toPath", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nMoves an object from one path to another.\n\nIdentical to calling `remove()` followed by `add()`.\n\nThrows `PathNotFoundException` if either path does not exist in the document.\n\n@method move\n@param {Array or String} fromPath\n@param {Array or String} toPath\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Moves an object from one path to another. \nIdentical to calling  remove    followed by  add   . \nThrows  PathNotFoundException  if either path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["Return", "the", "inverse", "operations?"], "sample_id": 20, "prompt_tokens": ["<javascript>", "<param>", "invert"], "comment_type": "param", "sentence_id": 1}
{"id": "21003674", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(fromPath, toPath, invert) {\n    return this._move(this.deserializePath(fromPath), this.deserializePath(toPath), invert);\n  }", "code_tokens": ["function", "(", "fromPath", ",", "toPath", ",", "invert", ")", "{", "return", "this", ".", "_move", "(", "this", ".", "deserializePath", "(", "fromPath", ")", ",", "this", ".", "deserializePath", "(", "toPath", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nMoves an object from one path to another.\n\nIdentical to calling `remove()` followed by `add()`.\n\nThrows `PathNotFoundException` if either path does not exist in the document.\n\n@method move\n@param {Array or String} fromPath\n@param {Array or String} toPath\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Moves an object from one path to another. \nIdentical to calling  remove    followed by  add   . \nThrows  PathNotFoundException  if either path does not exist in the document.", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "Array", "of", "inverse", "operations", "if", "invert", "===", "true"], "sample_id": 20, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003675", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, invert) {\n    return this._replace(this.deserializePath(path), value, invert);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "invert", ")", "{", "return", "this", ".", "_replace", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "value", ",", "invert", ")", ";", "}"], "original_docstring": "\nReplaces the value at a path.\n\nThis operation is functionally identical to a \"remove\" operation for\na value, followed immediately by an \"add\" operation at the same\nlocation with the replacement value.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method replace\n@param {Array or String} path\n@param {Object} value\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Replaces the value at a path. \nThis operation is functionally identical to a  remove  operation for \na value, followed immediately by an  add  operation at the same \nlocation with the replacement value. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["Replaces", "the", "value", "at", "a", "path", ".", "This", "operation", "is", "functionally", "identical", "to", "a", "remove", "operation", "for", "a", "value", "followed", "immediately", "by", "an", "add", "operation", "at", "the", "same", "location", "with", "the", "replacement", "value", ".", "If", "the", "target", "location", "does", "not", "exist", "throws", "PathNotFoundException", "."], "sample_id": 21, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003675", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, invert) {\n    return this._replace(this.deserializePath(path), value, invert);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "invert", ")", "{", "return", "this", ".", "_replace", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "value", ",", "invert", ")", ";", "}"], "original_docstring": "\nReplaces the value at a path.\n\nThis operation is functionally identical to a \"remove\" operation for\na value, followed immediately by an \"add\" operation at the same\nlocation with the replacement value.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method replace\n@param {Array or String} path\n@param {Object} value\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Replaces the value at a path. \nThis operation is functionally identical to a  remove  operation for \na value, followed immediately by an  add  operation at the same \nlocation with the replacement value. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["Return", "the", "inverse", "operations?"], "sample_id": 21, "prompt_tokens": ["<javascript>", "<param>", "invert"], "comment_type": "param", "sentence_id": 1}
{"id": "21003675", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, invert) {\n    return this._replace(this.deserializePath(path), value, invert);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "invert", ")", "{", "return", "this", ".", "_replace", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "value", ",", "invert", ")", ";", "}"], "original_docstring": "\nReplaces the value at a path.\n\nThis operation is functionally identical to a \"remove\" operation for\na value, followed immediately by an \"add\" operation at the same\nlocation with the replacement value.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method replace\n@param {Array or String} path\n@param {Object} value\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Replaces the value at a path. \nThis operation is functionally identical to a  remove  operation for \na value, followed immediately by an  add  operation at the same \nlocation with the replacement value. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "Array", "of", "inverse", "operations", "if", "invert", "===", "true"], "sample_id": 21, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003676", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, invert) {\n    return this._remove(this.deserializePath(path), invert);\n  }", "code_tokens": ["function", "(", "path", ",", "invert", ")", "{", "return", "this", ".", "_remove", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nRemoves the value from a path.\n\nIf removing an element from an array, shifts any elements above the\nspecified index one position to the left.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method remove\n@param {Array or String} path\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Removes the value from a path. \nIf removing an element from an array, shifts any elements above the \nspecified index one position to the left. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["Removes", "the", "value", "from", "a", "path", ".", "If", "removing", "an", "element", "from", "an", "array", "shifts", "any", "elements", "above", "the", "specified", "index", "one", "position", "to", "the", "left", ".", "If", "the", "target", "location", "does", "not", "exist", "throws", "PathNotFoundException", "."], "sample_id": 22, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003676", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, invert) {\n    return this._remove(this.deserializePath(path), invert);\n  }", "code_tokens": ["function", "(", "path", ",", "invert", ")", "{", "return", "this", ".", "_remove", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nRemoves the value from a path.\n\nIf removing an element from an array, shifts any elements above the\nspecified index one position to the left.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method remove\n@param {Array or String} path\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Removes the value from a path. \nIf removing an element from an array, shifts any elements above the \nspecified index one position to the left. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["Return", "the", "inverse", "operations?"], "sample_id": 22, "prompt_tokens": ["<javascript>", "<param>", "invert"], "comment_type": "param", "sentence_id": 1}
{"id": "21003676", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, invert) {\n    return this._remove(this.deserializePath(path), invert);\n  }", "code_tokens": ["function", "(", "path", ",", "invert", ")", "{", "return", "this", ".", "_remove", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "invert", ")", ";", "}"], "original_docstring": "\nRemoves the value from a path.\n\nIf removing an element from an array, shifts any elements above the\nspecified index one position to the left.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method remove\n@param {Array or String} path\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Removes the value from a path. \nIf removing an element from an array, shifts any elements above the \nspecified index one position to the left. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "Array", "of", "inverse", "operations", "if", "invert", "===", "true"], "sample_id": 22, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003677", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, invert) {\n    return this._add(this.deserializePath(path), value, invert);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "invert", ")", "{", "return", "this", ".", "_add", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "value", ",", "invert", ")", ";", "}"], "original_docstring": "\nSets the value at a path.\n\nIf the target location specifies an array index, inserts a new value\ninto the array at the specified index.\n\nIf the target location specifies an object member that does not\nalready exist, adds a new member to the object.\n\nIf the target location specifies an object member that does exist,\nreplaces that member's value.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method add\n@param {Array or String} path\n@param {Object} value\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Sets the value at a path. \nIf the target location specifies an array index, inserts a new value \ninto the array at the specified index. \nIf the target location specifies an object member that does not \nalready exist, adds a new member to the object. \nIf the target location specifies an object member that does exist, \nreplaces that member s value. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["Sets", "the", "value", "at", "a", "path", ".", "If", "the", "target", "location", "specifies", "an", "array", "index", "inserts", "a", "new", "value", "into", "the", "array", "at", "the", "specified", "index", ".", "If", "the", "target", "location", "specifies", "an", "object", "member", "that", "does", "not", "already", "exist", "adds", "a", "new", "member", "to", "the", "object", ".", "If", "the", "target", "location", "specifies", "an", "object", "member", "that", "does", "exist", "replaces", "that", "member", "s", "value", ".", "If", "the", "target", "location", "does", "not", "exist", "throws", "PathNotFoundException", "."], "sample_id": 23, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003677", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, invert) {\n    return this._add(this.deserializePath(path), value, invert);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "invert", ")", "{", "return", "this", ".", "_add", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "value", ",", "invert", ")", ";", "}"], "original_docstring": "\nSets the value at a path.\n\nIf the target location specifies an array index, inserts a new value\ninto the array at the specified index.\n\nIf the target location specifies an object member that does not\nalready exist, adds a new member to the object.\n\nIf the target location specifies an object member that does exist,\nreplaces that member's value.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method add\n@param {Array or String} path\n@param {Object} value\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Sets the value at a path. \nIf the target location specifies an array index, inserts a new value \ninto the array at the specified index. \nIf the target location specifies an object member that does not \nalready exist, adds a new member to the object. \nIf the target location specifies an object member that does exist, \nreplaces that member s value. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["Return", "the", "inverse", "operations?"], "sample_id": 23, "prompt_tokens": ["<javascript>", "<param>", "invert"], "comment_type": "param", "sentence_id": 1}
{"id": "21003677", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, value, invert) {\n    return this._add(this.deserializePath(path), value, invert);\n  }", "code_tokens": ["function", "(", "path", ",", "value", ",", "invert", ")", "{", "return", "this", ".", "_add", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "value", ",", "invert", ")", ";", "}"], "original_docstring": "\nSets the value at a path.\n\nIf the target location specifies an array index, inserts a new value\ninto the array at the specified index.\n\nIf the target location specifies an object member that does not\nalready exist, adds a new member to the object.\n\nIf the target location specifies an object member that does exist,\nreplaces that member's value.\n\nIf the target location does not exist, throws `PathNotFoundException`.\n\n@method add\n@param {Array or String} path\n@param {Object} value\n@param {Boolean} [invert=false] Return the inverse operations?\n@returns {Array} Array of inverse operations if `invert === true`\n", "docstring": {"block_comment": "Sets the value at a path. \nIf the target location specifies an array index, inserts a new value \ninto the array at the specified index. \nIf the target location specifies an object member that does not \nalready exist, adds a new member to the object. \nIf the target location specifies an object member that does exist, \nreplaces that member s value. \nIf the target location does not exist, throws  PathNotFoundException .", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "Array", "of", "inverse", "operations", "if", "invert", "===", "true"], "sample_id": 23, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003678", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, quiet) {\n    return this._retrieve(this.deserializePath(path), quiet);\n  }", "code_tokens": ["function", "(", "path", ",", "quiet", ")", "{", "return", "this", ".", "_retrieve", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "quiet", ")", ";", "}"], "original_docstring": "\nRetrieve the value at a path.\n\nIf the path does not exist in the document, `PathNotFoundException` will be\nthrown by default. If `quiet` is truthy, `undefined` will be returned\ninstead.\n\n@method retrieve\n@param {Array or String} [path]\n@param {Boolean} [quiet=false] Return `undefined` instead of throwing an exception if `path` can't be found?\n@returns {Object} Value at the specified `path` or `undefined`\n", "docstring": {"block_comment": "Retrieve the value at a path. \nIf the path does not exist in the document,  PathNotFoundException  will be \nthrown by default. If  quiet  is truthy,  undefined  will be returned \ninstead.", "line_comment": null}, "docstring_tokens": ["Retrieve", "the", "value", "at", "a", "path", ".", "If", "the", "path", "does", "not", "exist", "in", "the", "document", "PathNotFoundException", "will", "be", "thrown", "by", "default", ".", "If", "quiet", "is", "truthy", "undefined", "will", "be", "returned", "instead", "."], "sample_id": 24, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003678", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, quiet) {\n    return this._retrieve(this.deserializePath(path), quiet);\n  }", "code_tokens": ["function", "(", "path", ",", "quiet", ")", "{", "return", "this", ".", "_retrieve", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "quiet", ")", ";", "}"], "original_docstring": "\nRetrieve the value at a path.\n\nIf the path does not exist in the document, `PathNotFoundException` will be\nthrown by default. If `quiet` is truthy, `undefined` will be returned\ninstead.\n\n@method retrieve\n@param {Array or String} [path]\n@param {Boolean} [quiet=false] Return `undefined` instead of throwing an exception if `path` can't be found?\n@returns {Object} Value at the specified `path` or `undefined`\n", "docstring": {"block_comment": "Retrieve the value at a path. \nIf the path does not exist in the document,  PathNotFoundException  will be \nthrown by default. If  quiet  is truthy,  undefined  will be returned \ninstead.", "line_comment": null}, "docstring_tokens": ["Return", "undefined", "instead", "of", "throwing", "an", "exception", "if", "path", "can", "t", "be", "found?"], "sample_id": 24, "prompt_tokens": ["<javascript>", "<param>", "quiet"], "comment_type": "param", "sentence_id": 1}
{"id": "21003678", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path, quiet) {\n    return this._retrieve(this.deserializePath(path), quiet);\n  }", "code_tokens": ["function", "(", "path", ",", "quiet", ")", "{", "return", "this", ".", "_retrieve", "(", "this", ".", "deserializePath", "(", "path", ")", ",", "quiet", ")", ";", "}"], "original_docstring": "\nRetrieve the value at a path.\n\nIf the path does not exist in the document, `PathNotFoundException` will be\nthrown by default. If `quiet` is truthy, `undefined` will be returned\ninstead.\n\n@method retrieve\n@param {Array or String} [path]\n@param {Boolean} [quiet=false] Return `undefined` instead of throwing an exception if `path` can't be found?\n@returns {Object} Value at the specified `path` or `undefined`\n", "docstring": {"block_comment": "Retrieve the value at a path. \nIf the path does not exist in the document,  PathNotFoundException  will be \nthrown by default. If  quiet  is truthy,  undefined  will be returned \ninstead.", "line_comment": null}, "docstring_tokens": ["{", "Object", "}", "Value", "at", "the", "specified", "path", "or", "undefined"], "sample_id": 24, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003679", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(data) {\n    this._data = data || {};\n  }", "code_tokens": ["function", "(", "data", ")", "{", "this", ".", "_data", "=", "data", "||", "{", "}", ";", "}"], "original_docstring": "\nReset the contents of the whole document.\n\nIf no data is specified, the contents of the document will be reset to an\nempty object.\n\n@method reset\n@param {Object} [data] New root object\n", "docstring": {"block_comment": "Reset the contents of the whole document. \nIf no data is specified, the contents of the document will be reset to an \nempty object.", "line_comment": null}, "docstring_tokens": ["Reset", "the", "contents", "of", "the", "whole", "document", ".", "If", "no", "data", "is", "specified", "the", "contents", "of", "the", "document", "will", "be", "reset", "to", "an", "empty", "object", "."], "sample_id": 25, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003679", "repo": "beni55/orbit.js", "path": "lib/orbit/document.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(data) {\n    this._data = data || {};\n  }", "code_tokens": ["function", "(", "data", ")", "{", "this", ".", "_data", "=", "data", "||", "{", "}", ";", "}"], "original_docstring": "\nReset the contents of the whole document.\n\nIf no data is specified, the contents of the document will be reset to an\nempty object.\n\n@method reset\n@param {Object} [data] New root object\n", "docstring": {"block_comment": "Reset the contents of the whole document. \nIf no data is specified, the contents of the document will be reset to an \nempty object.", "line_comment": null}, "docstring_tokens": ["New", "root", "object"], "sample_id": 25, "prompt_tokens": ["<javascript>", "<param>", "data"], "comment_type": "param", "sentence_id": 1}
{"id": "21003680", "repo": "Rwing/hackmd", "path": "public/js/google-drive-picker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (immediate, callback) {\n      window.gapi.auth.authorize({\n        client_id: this.clientId,\n        scope: 'https://www.googleapis.com/auth/drive.readonly',\n        immediate: immediate\n      }, callback || function () {})\n    }", "code_tokens": ["function", "(", "immediate", ",", "callback", ")", "{", "window", ".", "gapi", ".", "auth", ".", "authorize", "(", "{", "client_id", ":", "this", ".", "clientId", ",", "scope", ":", "'https://www.googleapis.com/auth/drive.readonly'", ",", "immediate", ":", "immediate", "}", ",", "callback", "||", "function", "(", ")", "{", "}", ")", "}"], "original_docstring": "\nAuthenticate with Google Drive via the Google JavaScript API.\n@private\n", "docstring": {"block_comment": "Authenticate with Google Drive via the Google JavaScript API.", "line_comment": null}, "docstring_tokens": ["Authenticate", "with", "Google", "Drive", "via", "the", "Google", "JavaScript", "API", "."], "sample_id": 26, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003681", "repo": "Rwing/hackmd", "path": "public/js/google-drive-picker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      this._doAuth(true)\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "_doAuth", "(", "true", ")", "}"], "original_docstring": "\nCalled when the Google Drive API has finished loading.\n@private\n", "docstring": {"block_comment": "Called when the Google Drive API has finished loading.", "line_comment": null}, "docstring_tokens": ["Called", "when", "the", "Google", "Drive", "API", "has", "finished", "loading", "."], "sample_id": 27, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003682", "repo": "Rwing/hackmd", "path": "public/js/google-drive-picker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      this.buttonEl.prop('disabled', false)\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "buttonEl", ".", "prop", "(", "'disabled'", ",", "false", ")", "}"], "original_docstring": "\nCalled when the Google Drive file picker API has finished loading.\n@private\n", "docstring": {"block_comment": "Called when the Google Drive file picker API has finished loading.", "line_comment": null}, "docstring_tokens": ["Called", "when", "the", "Google", "Drive", "file", "picker", "API", "has", "finished", "loading", "."], "sample_id": 28, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003683", "repo": "Rwing/hackmd", "path": "public/js/google-drive-picker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (file) {\n      if (this.onSelect) {\n        this.onSelect(file)\n      }\n    }", "code_tokens": ["function", "(", "file", ")", "{", "if", "(", "this", ".", "onSelect", ")", "{", "this", ".", "onSelect", "(", "file", ")", "}", "}"], "original_docstring": "\nCalled when file details have been retrieved from Google Drive.\n@private\n", "docstring": {"block_comment": "Called when file details have been retrieved from Google Drive.", "line_comment": null}, "docstring_tokens": ["Called", "when", "file", "details", "have", "been", "retrieved", "from", "Google", "Drive", "."], "sample_id": 29, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003684", "repo": "Rwing/hackmd", "path": "public/js/google-drive-picker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (data) {\n      if (data[window.google.picker.Response.ACTION] === window.google.picker.Action.PICKED) {\n        var file = data[window.google.picker.Response.DOCUMENTS][0]\n        var id = file[window.google.picker.Document.ID]\n        var request = window.gapi.client.drive.files.get({\n          fileId: id\n        })\n        request.execute(this._fileGetCallback.bind(this))\n      }\n    }", "code_tokens": ["function", "(", "data", ")", "{", "if", "(", "data", "[", "window", ".", "google", ".", "picker", ".", "Response", ".", "ACTION", "]", "===", "window", ".", "google", ".", "picker", ".", "Action", ".", "PICKED", ")", "{", "var", "file", "=", "data", "[", "window", ".", "google", ".", "picker", ".", "Response", ".", "DOCUMENTS", "]", "[", "0", "]", "var", "id", "=", "file", "[", "window", ".", "google", ".", "picker", ".", "Document", ".", "ID", "]", "var", "request", "=", "window", ".", "gapi", ".", "client", ".", "drive", ".", "files", ".", "get", "(", "{", "fileId", ":", "id", "}", ")", "request", ".", "execute", "(", "this", ".", "_fileGetCallback", ".", "bind", "(", "this", ")", ")", "}", "}"], "original_docstring": "\nCalled when a file has been selected in the Google Drive file picker.\n@private\n", "docstring": {"block_comment": "Called when a file has been selected in the Google Drive file picker.", "line_comment": null}, "docstring_tokens": ["Called", "when", "a", "file", "has", "been", "selected", "in", "the", "Google", "Drive", "file", "picker", "."], "sample_id": 30, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003685", "repo": "Rwing/hackmd", "path": "public/js/google-drive-picker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      var accessToken = window.gapi.auth.getToken().access_token\n      var view = new window.google.picker.DocsView()\n      view.setMimeTypes('text/markdown,text/html')\n      view.setIncludeFolders(true)\n      view.setOwnedByMe(true)\n      this.picker = new window.google.picker.PickerBuilder()\n                      .enableFeature(window.google.picker.Feature.NAV_HIDDEN)\n                      .addView(view)\n                      .setAppId(this.clientId)\n                      .setOAuthToken(accessToken)\n                      .setCallback(this._pickerCallback.bind(this))\n                      .build()\n                      .setVisible(true)\n    }", "code_tokens": ["function", "(", ")", "{", "var", "accessToken", "=", "window", ".", "gapi", ".", "auth", ".", "getToken", "(", ")", ".", "access_token", "var", "view", "=", "new", "window", ".", "google", ".", "picker", ".", "DocsView", "(", ")", "view", ".", "setMimeTypes", "(", "'text/markdown,text/html'", ")", "view", ".", "setIncludeFolders", "(", "true", ")", "view", ".", "setOwnedByMe", "(", "true", ")", "this", ".", "picker", "=", "new", "window", ".", "google", ".", "picker", ".", "PickerBuilder", "(", ")", ".", "enableFeature", "(", "window", ".", "google", ".", "picker", ".", "Feature", ".", "NAV_HIDDEN", ")", ".", "addView", "(", "view", ")", ".", "setAppId", "(", "this", ".", "clientId", ")", ".", "setOAuthToken", "(", "accessToken", ")", ".", "setCallback", "(", "this", ".", "_pickerCallback", ".", "bind", "(", "this", ")", ")", ".", "build", "(", ")", ".", "setVisible", "(", "true", ")", "}"], "original_docstring": "\nShow the file picker once authentication has been done.\n@private\n", "docstring": {"block_comment": "Show the file picker once authentication has been done.", "line_comment": null}, "docstring_tokens": ["Show", "the", "file", "picker", "once", "authentication", "has", "been", "done", "."], "sample_id": 31, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003686", "repo": "Rwing/hackmd", "path": "public/js/google-drive-picker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      // Check if the user has already authenticated\n      var token = window.gapi.auth.getToken()\n      if (token) {\n        this._showPicker()\n      } else {\n        // The user has not yet authenticated with Google\n        // We need to do the authentication before displaying the Drive picker.\n        this._doAuth(false, function () { this._showPicker() }.bind(this))\n      }\n    }", "code_tokens": ["function", "(", ")", "{", "// Check if the user has already authenticated", "var", "token", "=", "window", ".", "gapi", ".", "auth", ".", "getToken", "(", ")", "if", "(", "token", ")", "{", "this", ".", "_showPicker", "(", ")", "}", "else", "{", "// The user has not yet authenticated with Google", "// We need to do the authentication before displaying the Drive picker.", "this", ".", "_doAuth", "(", "false", ",", "function", "(", ")", "{", "this", ".", "_showPicker", "(", ")", "}", ".", "bind", "(", "this", ")", ")", "}", "}"], "original_docstring": "\nOpen the file picker.\n", "docstring": {"block_comment": "Open the file picker.", "line_comment": ["Check if the user has already authenticated", "The user has not yet authenticated with Google", "We need to do the authentication before displaying the Drive picker."]}, "docstring_tokens": ["Open", "the", "file", "picker", "."], "sample_id": 32, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003689", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(type){\n\t\treturn Ext.ux.grid.filter[type.substr(0, 1).toUpperCase() + type.substr(1) + 'Filter'];\n\t}", "code_tokens": ["function", "(", "type", ")", "{", "return", "Ext", ".", "ux", ".", "grid", ".", "filter", "[", "type", ".", "substr", "(", "0", ",", "1", ")", ".", "toUpperCase", "(", ")", "+", "type", ".", "substr", "(", "1", ")", "+", "'Filter'", "]", ";", "}"], "original_docstring": "\nFunction for locating filter classes, overwrite this with your favorite\nloader to provide dynamic filter loading.\n\n@param {String} type The type of filter to load.\n\n@return {Class}\n", "docstring": {"block_comment": "Function for locating filter classes, overwrite this with your favorite \nloader to provide dynamic filter loading.", "line_comment": null}, "docstring_tokens": ["Function", "for", "locating", "filter", "classes", "overwrite", "this", "with", "your", "favorite", "loader", "to", "provide", "dynamic", "filter", "loading", "."], "sample_id": 33, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003689", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(type){\n\t\treturn Ext.ux.grid.filter[type.substr(0, 1).toUpperCase() + type.substr(1) + 'Filter'];\n\t}", "code_tokens": ["function", "(", "type", ")", "{", "return", "Ext", ".", "ux", ".", "grid", ".", "filter", "[", "type", ".", "substr", "(", "0", ",", "1", ")", ".", "toUpperCase", "(", ")", "+", "type", ".", "substr", "(", "1", ")", "+", "'Filter'", "]", ";", "}"], "original_docstring": "\nFunction for locating filter classes, overwrite this with your favorite\nloader to provide dynamic filter loading.\n\n@param {String} type The type of filter to load.\n\n@return {Class}\n", "docstring": {"block_comment": "Function for locating filter classes, overwrite this with your favorite \nloader to provide dynamic filter loading.", "line_comment": null}, "docstring_tokens": ["The", "type", "of", "filter", "to", "load", "."], "sample_id": 33, "prompt_tokens": ["<javascript>", "<param>", "type"], "comment_type": "param", "sentence_id": 1}
{"id": "21003690", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(p){\n\t\tvar regex = new RegExp(\"^\" + this.paramPrefix + \"\\[[0-9]+\\]\");\n\t\tfor(var key in p)\n\t\t\tif(regex.test(key))\n\t\t\t\tdelete p[key];\n\t}", "code_tokens": ["function", "(", "p", ")", "{", "var", "regex", "=", "new", "RegExp", "(", "\"^\"", "+", "this", ".", "paramPrefix", "+", "\"\\[[0-9]+\\]\"", ")", ";", "for", "(", "var", "key", "in", "p", ")", "if", "(", "regex", ".", "test", "(", "key", ")", ")", "delete", "p", "[", "key", "]", ";", "}"], "original_docstring": "\nRemoves filter related query parameters from the provided object.\n\n@param {Object} p Query parameters that may contain filter related fields.\n", "docstring": {"block_comment": "Removes filter related query parameters from the provided object.", "line_comment": null}, "docstring_tokens": ["Removes", "filter", "related", "query", "parameters", "from", "the", "provided", "object", "."], "sample_id": 34, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003690", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(p){\n\t\tvar regex = new RegExp(\"^\" + this.paramPrefix + \"\\[[0-9]+\\]\");\n\t\tfor(var key in p)\n\t\t\tif(regex.test(key))\n\t\t\t\tdelete p[key];\n\t}", "code_tokens": ["function", "(", "p", ")", "{", "var", "regex", "=", "new", "RegExp", "(", "\"^\"", "+", "this", ".", "paramPrefix", "+", "\"\\[[0-9]+\\]\"", ")", ";", "for", "(", "var", "key", "in", "p", ")", "if", "(", "regex", ".", "test", "(", "key", ")", ")", "delete", "p", "[", "key", "]", ";", "}"], "original_docstring": "\nRemoves filter related query parameters from the provided object.\n\n@param {Object} p Query parameters that may contain filter related fields.\n", "docstring": {"block_comment": "Removes filter related query parameters from the provided object.", "line_comment": null}, "docstring_tokens": ["Query", "parameters", "that", "may", "contain", "filter", "related", "fields", "."], "sample_id": 34, "prompt_tokens": ["<javascript>", "<param>", "p"], "comment_type": "param", "sentence_id": 1}
{"id": "21003691", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(filters){\n\t\tvar p = {};\n\t\tfor(var i=0, len=filters.length; i<len; i++){\n\t\t\tvar f    = filters[i];\n\t\t\tvar root = [this.paramPrefix, '[', i, ']'].join('');\n\t\t\tp[root + '[field]'] = f.field;\n\t\t\t\n\t\t\tvar dataPrefix = root + '[data]';\n\t\t\tfor(var key in f.data)\n\t\t\t\tp[[dataPrefix, '[', key, ']'].join('')] = f.data[key];\n\t\t}\n\t\t\n\t\treturn p;\n\t}", "code_tokens": ["function", "(", "filters", ")", "{", "var", "p", "=", "{", "}", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "filters", ".", "length", ";", "i", "<", "len", ";", "i", "++", ")", "{", "var", "f", "=", "filters", "[", "i", "]", ";", "var", "root", "=", "[", "this", ".", "paramPrefix", ",", "'['", ",", "i", ",", "']'", "]", ".", "join", "(", "''", ")", ";", "p", "[", "root", "+", "'[field]'", "]", "=", "f", ".", "field", ";", "var", "dataPrefix", "=", "root", "+", "'[data]'", ";", "for", "(", "var", "key", "in", "f", ".", "data", ")", "p", "[", "[", "dataPrefix", ",", "'['", ",", "key", ",", "']'", "]", ".", "join", "(", "''", ")", "]", "=", "f", ".", "data", "[", "key", "]", ";", "}", "return", "p", ";", "}"], "original_docstring": "\nFunction to take structured filter data and 'flatten' it into query parameteres. The default function\nwill produce a query string of the form:\nfilters[0][field]=dataIndex&filters[0][data][param1]=param&filters[0][data][param2]=param...\n\n@param {Array} filters A collection of objects representing active filters and their configuration.\nEach element will take the form of {field: dataIndex, data: filterConf}. dataIndex is not assured\nto be unique as any one filter may be a composite of more basic filters for the same dataIndex.\n\n@return {Object} Query keys and values\n", "docstring": {"block_comment": "Function to take structured filter data and  flatten  it into query parameteres. The default function \nwill produce a query string of the form  \nfilters 0  field  dataIndex filters 0  data  param1  param filters 0  data  param2  param...", "line_comment": null}, "docstring_tokens": ["Function", "to", "take", "structured", "filter", "data", "and", "flatten", "it", "into", "query", "parameteres", ".", "The", "default", "function", "will", "produce", "a", "query", "string", "of", "the", "form", "filters", "0", "field", "dataIndex", "filters", "0", "data", "param1", "param", "filters", "0", "data", "param2", "param", "..."], "sample_id": 35, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003691", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(filters){\n\t\tvar p = {};\n\t\tfor(var i=0, len=filters.length; i<len; i++){\n\t\t\tvar f    = filters[i];\n\t\t\tvar root = [this.paramPrefix, '[', i, ']'].join('');\n\t\t\tp[root + '[field]'] = f.field;\n\t\t\t\n\t\t\tvar dataPrefix = root + '[data]';\n\t\t\tfor(var key in f.data)\n\t\t\t\tp[[dataPrefix, '[', key, ']'].join('')] = f.data[key];\n\t\t}\n\t\t\n\t\treturn p;\n\t}", "code_tokens": ["function", "(", "filters", ")", "{", "var", "p", "=", "{", "}", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "filters", ".", "length", ";", "i", "<", "len", ";", "i", "++", ")", "{", "var", "f", "=", "filters", "[", "i", "]", ";", "var", "root", "=", "[", "this", ".", "paramPrefix", ",", "'['", ",", "i", ",", "']'", "]", ".", "join", "(", "''", ")", ";", "p", "[", "root", "+", "'[field]'", "]", "=", "f", ".", "field", ";", "var", "dataPrefix", "=", "root", "+", "'[data]'", ";", "for", "(", "var", "key", "in", "f", ".", "data", ")", "p", "[", "[", "dataPrefix", ",", "'['", ",", "key", ",", "']'", "]", ".", "join", "(", "''", ")", "]", "=", "f", ".", "data", "[", "key", "]", ";", "}", "return", "p", ";", "}"], "original_docstring": "\nFunction to take structured filter data and 'flatten' it into query parameteres. The default function\nwill produce a query string of the form:\nfilters[0][field]=dataIndex&filters[0][data][param1]=param&filters[0][data][param2]=param...\n\n@param {Array} filters A collection of objects representing active filters and their configuration.\nEach element will take the form of {field: dataIndex, data: filterConf}. dataIndex is not assured\nto be unique as any one filter may be a composite of more basic filters for the same dataIndex.\n\n@return {Object} Query keys and values\n", "docstring": {"block_comment": "Function to take structured filter data and  flatten  it into query parameteres. The default function \nwill produce a query string of the form  \nfilters 0  field  dataIndex filters 0  data  param1  param filters 0  data  param2  param...", "line_comment": null}, "docstring_tokens": ["A", "collection", "of", "objects", "representing", "active", "filters", "and", "their", "configuration", "."], "sample_id": 35, "prompt_tokens": ["<javascript>", "<param>", "filters"], "comment_type": "param", "sentence_id": 1}
{"id": "21003691", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(filters){\n\t\tvar p = {};\n\t\tfor(var i=0, len=filters.length; i<len; i++){\n\t\t\tvar f    = filters[i];\n\t\t\tvar root = [this.paramPrefix, '[', i, ']'].join('');\n\t\t\tp[root + '[field]'] = f.field;\n\t\t\t\n\t\t\tvar dataPrefix = root + '[data]';\n\t\t\tfor(var key in f.data)\n\t\t\t\tp[[dataPrefix, '[', key, ']'].join('')] = f.data[key];\n\t\t}\n\t\t\n\t\treturn p;\n\t}", "code_tokens": ["function", "(", "filters", ")", "{", "var", "p", "=", "{", "}", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "filters", ".", "length", ";", "i", "<", "len", ";", "i", "++", ")", "{", "var", "f", "=", "filters", "[", "i", "]", ";", "var", "root", "=", "[", "this", ".", "paramPrefix", ",", "'['", ",", "i", ",", "']'", "]", ".", "join", "(", "''", ")", ";", "p", "[", "root", "+", "'[field]'", "]", "=", "f", ".", "field", ";", "var", "dataPrefix", "=", "root", "+", "'[data]'", ";", "for", "(", "var", "key", "in", "f", ".", "data", ")", "p", "[", "[", "dataPrefix", ",", "'['", ",", "key", ",", "']'", "]", ".", "join", "(", "''", ")", "]", "=", "f", ".", "data", "[", "key", "]", ";", "}", "return", "p", ";", "}"], "original_docstring": "\nFunction to take structured filter data and 'flatten' it into query parameteres. The default function\nwill produce a query string of the form:\nfilters[0][field]=dataIndex&filters[0][data][param1]=param&filters[0][data][param2]=param...\n\n@param {Array} filters A collection of objects representing active filters and their configuration.\nEach element will take the form of {field: dataIndex, data: filterConf}. dataIndex is not assured\nto be unique as any one filter may be a composite of more basic filters for the same dataIndex.\n\n@return {Object} Query keys and values\n", "docstring": {"block_comment": "Function to take structured filter data and  flatten  it into query parameteres. The default function \nwill produce a query string of the form  \nfilters 0  field  dataIndex filters 0  data  param1  param filters 0  data  param2  param...", "line_comment": null}, "docstring_tokens": ["Query", "keys", "and", "values"], "sample_id": 35, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003692", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\tthis.filters.each(function(filter){\n\t\t\tfilter.setActive(false);\n\t\t});\n\t}", "code_tokens": ["function", "(", ")", "{", "this", ".", "filters", ".", "each", "(", "function", "(", "filter", ")", "{", "filter", ".", "setActive", "(", "false", ")", ";", "}", ")", ";", "}"], "original_docstring": "\nTurns all filters off. This does not clear the configuration information.\n", "docstring": {"block_comment": "Turns all filters off. This does not clear the configuration information.", "line_comment": null}, "docstring_tokens": ["Turns", "all", "filters", "off", ".", "This", "does", "not", "clear", "the", "configuration", "information", "."], "sample_id": 36, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003693", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(dataIndex){\n\t\treturn this.filters.get(dataIndex);\n\t}", "code_tokens": ["function", "(", "dataIndex", ")", "{", "return", "this", ".", "filters", ".", "get", "(", "dataIndex", ")", ";", "}"], "original_docstring": "\nReturns a filter for the given dataIndex, if on exists.\n\n@param {String} dataIndex The dataIndex of the desired filter object.\n\n@return {Ext.ux.grid.filter.Filter}\n", "docstring": {"block_comment": "Returns a filter for the given dataIndex, if on exists.", "line_comment": null}, "docstring_tokens": ["Returns", "a", "filter", "for", "the", "given", "dataIndex", "if", "on", "exists", "."], "sample_id": 37, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003693", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(dataIndex){\n\t\treturn this.filters.get(dataIndex);\n\t}", "code_tokens": ["function", "(", "dataIndex", ")", "{", "return", "this", ".", "filters", ".", "get", "(", "dataIndex", ")", ";", "}"], "original_docstring": "\nReturns a filter for the given dataIndex, if on exists.\n\n@param {String} dataIndex The dataIndex of the desired filter object.\n\n@return {Ext.ux.grid.filter.Filter}\n", "docstring": {"block_comment": "Returns a filter for the given dataIndex, if on exists.", "line_comment": null}, "docstring_tokens": ["The", "dataIndex", "of", "the", "desired", "filter", "object", "."], "sample_id": 37, "prompt_tokens": ["<javascript>", "<param>", "dataIndex"], "comment_type": "param", "sentence_id": 1}
{"id": "21003694", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(config){\n\t\tvar filter = config.menu ? config : \n\t\t\t\tnew (this.getFilterClass(config.type))(config);\n\t\tthis.filters.add(filter);\n\t\t\n\t\tExt.util.Observable.capture(filter, this.onStateChange, this);\n\t\treturn filter;\n\t}", "code_tokens": ["function", "(", "config", ")", "{", "var", "filter", "=", "config", ".", "menu", "?", "config", ":", "new", "(", "this", ".", "getFilterClass", "(", "config", ".", "type", ")", ")", "(", "config", ")", ";", "this", ".", "filters", ".", "add", "(", "filter", ")", ";", "Ext", ".", "util", ".", "Observable", ".", "capture", "(", "filter", ",", "this", ".", "onStateChange", ",", "this", ")", ";", "return", "filter", ";", "}"], "original_docstring": "\nAdds a filter to the collection.\n\n@param {Object/Ext.ux.grid.filter.Filter} config A filter configuration or a filter object.\n\n@return {Ext.ux.grid.filter.Filter} The existing or newly created filter object.\n", "docstring": {"block_comment": "Adds a filter to the collection.", "line_comment": null}, "docstring_tokens": ["Adds", "a", "filter", "to", "the", "collection", "."], "sample_id": 38, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003694", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(config){\n\t\tvar filter = config.menu ? config : \n\t\t\t\tnew (this.getFilterClass(config.type))(config);\n\t\tthis.filters.add(filter);\n\t\t\n\t\tExt.util.Observable.capture(filter, this.onStateChange, this);\n\t\treturn filter;\n\t}", "code_tokens": ["function", "(", "config", ")", "{", "var", "filter", "=", "config", ".", "menu", "?", "config", ":", "new", "(", "this", ".", "getFilterClass", "(", "config", ".", "type", ")", ")", "(", "config", ")", ";", "this", ".", "filters", ".", "add", "(", "filter", ")", ";", "Ext", ".", "util", ".", "Observable", ".", "capture", "(", "filter", ",", "this", ".", "onStateChange", ",", "this", ")", ";", "return", "filter", ";", "}"], "original_docstring": "\nAdds a filter to the collection.\n\n@param {Object/Ext.ux.grid.filter.Filter} config A filter configuration or a filter object.\n\n@return {Ext.ux.grid.filter.Filter} The existing or newly created filter object.\n", "docstring": {"block_comment": "Adds a filter to the collection.", "line_comment": null}, "docstring_tokens": ["A", "filter", "configuration", "or", "a", "filter", "object", "."], "sample_id": 38, "prompt_tokens": ["<javascript>", "<param>", "config"], "comment_type": "param", "sentence_id": 1}
{"id": "21003694", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(config){\n\t\tvar filter = config.menu ? config : \n\t\t\t\tnew (this.getFilterClass(config.type))(config);\n\t\tthis.filters.add(filter);\n\t\t\n\t\tExt.util.Observable.capture(filter, this.onStateChange, this);\n\t\treturn filter;\n\t}", "code_tokens": ["function", "(", "config", ")", "{", "var", "filter", "=", "config", ".", "menu", "?", "config", ":", "new", "(", "this", ".", "getFilterClass", "(", "config", ".", "type", ")", ")", "(", "config", ")", ";", "this", ".", "filters", ".", "add", "(", "filter", ")", ";", "Ext", ".", "util", ".", "Observable", ".", "capture", "(", "filter", ",", "this", ".", "onStateChange", ",", "this", ")", ";", "return", "filter", ";", "}"], "original_docstring": "\nAdds a filter to the collection.\n\n@param {Object/Ext.ux.grid.filter.Filter} config A filter configuration or a filter object.\n\n@return {Ext.ux.grid.filter.Filter} The existing or newly created filter object.\n", "docstring": {"block_comment": "Adds a filter to the collection.", "line_comment": null}, "docstring_tokens": ["The", "existing", "or", "newly", "created", "filter", "object", "."], "sample_id": 38, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003695", "repo": "bundocba/unitedworld", "path": "components/com_ose_cpu/extjs/grid/GridFilters.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\tvar f = [];\n\t\tthis.filters.each(function(filter){\n\t\t\tif(filter.active) f.push(filter);\n\t\t});\n\t\t\n\t\tvar len = f.length;\n\t\treturn function(record){\n\t\t\tfor(var i=0; i<len; i++)\n\t\t\t\tif(!f[i].validateRecord(record))\n\t\t\t\t\treturn false;\n\t\t\t\t\n\t\t\treturn true;\n\t\t};\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "f", "=", "[", "]", ";", "this", ".", "filters", ".", "each", "(", "function", "(", "filter", ")", "{", "if", "(", "filter", ".", "active", ")", "f", ".", "push", "(", "filter", ")", ";", "}", ")", ";", "var", "len", "=", "f", ".", "length", ";", "return", "function", "(", "record", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "len", ";", "i", "++", ")", "if", "(", "!", "f", "[", "i", "]", ".", "validateRecord", "(", "record", ")", ")", "return", "false", ";", "return", "true", ";", "}", ";", "}"], "original_docstring": "\nMethod factory that generates a record validator for the filters active at the time\nof invokation.\n\n@private\n", "docstring": {"block_comment": "Method factory that generates a record validator for the filters active at the time \nof invokation.", "line_comment": null}, "docstring_tokens": ["Method", "factory", "that", "generates", "a", "record", "validator", "for", "the", "filters", "active", "at", "the", "time", "of", "invokation", "."], "sample_id": 39, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003700", "repo": "isabela-angelo/scratch-tangible-blocks", "path": "scratch-blocks/node_modules/google-closure-library/closure/goog/module/modulemanager.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(requestedId) {\n          var requestedDeps =\n              this.getNotYetLoadedTransitiveDepIds_(requestedId);\n          return goog.array.some(failedIds, function(id) {\n            return goog.array.contains(requestedDeps, id);\n          });\n        }", "code_tokens": ["function", "(", "requestedId", ")", "{", "var", "requestedDeps", "=", "this", ".", "getNotYetLoadedTransitiveDepIds_", "(", "requestedId", ")", ";", "return", "goog", ".", "array", ".", "some", "(", "failedIds", ",", "function", "(", "id", ")", "{", "return", "goog", ".", "array", ".", "contains", "(", "requestedDeps", ",", "id", ")", ";", "}", ")", ";", "}"], "original_docstring": "\nReturns true if the requestedId has dependencies on the modules that\njust failed to load.\n@param {string} requestedId The module to check for dependencies.\n@return {boolean} True if the module depends on failed modules.\n", "docstring": {"block_comment": "Returns true if the requestedId has dependencies on the modules that \njust failed to load.", "line_comment": null}, "docstring_tokens": ["Returns", "true", "if", "the", "requestedId", "has", "dependencies", "on", "the", "modules", "that", "just", "failed", "to", "load", "."], "sample_id": 40, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003700", "repo": "isabela-angelo/scratch-tangible-blocks", "path": "scratch-blocks/node_modules/google-closure-library/closure/goog/module/modulemanager.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(requestedId) {\n          var requestedDeps =\n              this.getNotYetLoadedTransitiveDepIds_(requestedId);\n          return goog.array.some(failedIds, function(id) {\n            return goog.array.contains(requestedDeps, id);\n          });\n        }", "code_tokens": ["function", "(", "requestedId", ")", "{", "var", "requestedDeps", "=", "this", ".", "getNotYetLoadedTransitiveDepIds_", "(", "requestedId", ")", ";", "return", "goog", ".", "array", ".", "some", "(", "failedIds", ",", "function", "(", "id", ")", "{", "return", "goog", ".", "array", ".", "contains", "(", "requestedDeps", ",", "id", ")", ";", "}", ")", ";", "}"], "original_docstring": "\nReturns true if the requestedId has dependencies on the modules that\njust failed to load.\n@param {string} requestedId The module to check for dependencies.\n@return {boolean} True if the module depends on failed modules.\n", "docstring": {"block_comment": "Returns true if the requestedId has dependencies on the modules that \njust failed to load.", "line_comment": null}, "docstring_tokens": ["The", "module", "to", "check", "for", "dependencies", "."], "sample_id": 40, "prompt_tokens": ["<javascript>", "<param>", "requestedId"], "comment_type": "param", "sentence_id": 1}
{"id": "21003700", "repo": "isabela-angelo/scratch-tangible-blocks", "path": "scratch-blocks/node_modules/google-closure-library/closure/goog/module/modulemanager.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(requestedId) {\n          var requestedDeps =\n              this.getNotYetLoadedTransitiveDepIds_(requestedId);\n          return goog.array.some(failedIds, function(id) {\n            return goog.array.contains(requestedDeps, id);\n          });\n        }", "code_tokens": ["function", "(", "requestedId", ")", "{", "var", "requestedDeps", "=", "this", ".", "getNotYetLoadedTransitiveDepIds_", "(", "requestedId", ")", ";", "return", "goog", ".", "array", ".", "some", "(", "failedIds", ",", "function", "(", "id", ")", "{", "return", "goog", ".", "array", ".", "contains", "(", "requestedDeps", ",", "id", ")", ";", "}", ")", ";", "}"], "original_docstring": "\nReturns true if the requestedId has dependencies on the modules that\njust failed to load.\n@param {string} requestedId The module to check for dependencies.\n@return {boolean} True if the module depends on failed modules.\n", "docstring": {"block_comment": "Returns true if the requestedId has dependencies on the modules that \njust failed to load.", "line_comment": null}, "docstring_tokens": ["True", "if", "the", "module", "depends", "on", "failed", "modules", "."], "sample_id": 40, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003702", "repo": "sgruhier/prototype_window", "path": "samples/rico/rico_change.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element,accountForDocScroll) {\r\n      var x = 0;\r\n      var y = 0;\r\n      var parent = element;\r\n      while ( parent ) {\r\n         x += parent.offsetLeft;\r\n         y += parent.offsetTop;\r\n         parent = parent.offsetParent;\r\n      }\r\n\r\n      parent = element;\r\n      while ( parent &&\r\n              parent != document.body &&\r\n              parent != document.documentElement ) {\r\n         if ( parent.scrollLeft  )\r\n            x -= parent.scrollLeft;\r\n         if ( parent.scrollTop )\r\n            y -= parent.scrollTop;\r\n         parent = parent.parentNode;\r\n      }\r\n\r\n      if ( accountForDocScroll ) {\r\n         x -= this.docScrollLeft();\r\n         y -= this.docScrollTop();\r\n      }\r\n\r\n      return { x:x, y:y };\r\n   }", "code_tokens": ["function", "(", "element", ",", "accountForDocScroll", ")", "{", "var", "x", "=", "0", ";", "var", "y", "=", "0", ";", "var", "parent", "=", "element", ";", "while", "(", "parent", ")", "{", "x", "+=", "parent", ".", "offsetLeft", ";", "y", "+=", "parent", ".", "offsetTop", ";", "parent", "=", "parent", ".", "offsetParent", ";", "}", "parent", "=", "element", ";", "while", "(", "parent", "&&", "parent", "!=", "document", ".", "body", "&&", "parent", "!=", "document", ".", "documentElement", ")", "{", "if", "(", "parent", ".", "scrollLeft", ")", "x", "-=", "parent", ".", "scrollLeft", ";", "if", "(", "parent", ".", "scrollTop", ")", "y", "-=", "parent", ".", "scrollTop", ";", "parent", "=", "parent", ".", "parentNode", ";", "}", "if", "(", "accountForDocScroll", ")", "{", "x", "-=", "this", ".", "docScrollLeft", "(", ")", ";", "y", "-=", "this", ".", "docScrollTop", "(", ")", ";", "}", "return", "{", "x", ":", "x", ",", "y", ":", "y", "}", ";", "}"], "original_docstring": "\nMozilla did not report all of the parents up the hierarchy via the\noffsetParent property that IE did.  So for the calculation of the\noffsets we use the offsetParent property, but for the calculation of\nthe scrollTop/scrollLeft adjustments we navigate up via the parentNode\nproperty instead so as to get the scroll offsets...\n\n", "docstring": {"block_comment": "Mozilla did not report all of the parents up the hierarchy via the \noffsetParent property that IE did.  So for the calculation of the \noffsets we use the offsetParent property, but for the calculation of \nthe scrollTop scrollLeft adjustments we navigate up via the parentNode \nproperty instead so as to get the scroll offsets...", "line_comment": null}, "docstring_tokens": ["Mozilla", "did", "not", "report", "all", "of", "the", "parents", "up", "the", "hierarchy", "via", "the", "offsetParent", "property", "that", "IE", "did", ".", "So", "for", "the", "calculation", "of", "the", "offsets", "we", "use", "the", "offsetParent", "property", "but", "for", "the", "calculation", "of", "the", "scrollTop", "scrollLeft", "adjustments", "we", "navigate", "up", "via", "the", "parentNode", "property", "instead", "so", "as", "to", "get", "the", "scroll", "offsets", "..."], "sample_id": 41, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003703", "repo": "sgruhier/prototype_window", "path": "samples/rico/rico_change.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element,accountForDocScroll) {\r\n\r\n      if ( navigator.userAgent.toLowerCase().indexOf(\"msie\") == -1 )\r\n         return this._toAbsoluteMozilla(element,accountForDocScroll);\r\n\r\n      var x = 0;\r\n      var y = 0;\r\n      var parent = element;\r\n      while ( parent ) {\r\n\r\n         var borderXOffset = 0;\r\n         var borderYOffset = 0;\r\n         if ( parent != element ) {\r\n            var borderXOffset = parseInt(this.getElementsComputedStyle(parent, \"borderLeftWidth\" ));\r\n            var borderYOffset = parseInt(this.getElementsComputedStyle(parent, \"borderTopWidth\" ));\r\n            borderXOffset = isNaN(borderXOffset) ? 0 : borderXOffset;\r\n            borderYOffset = isNaN(borderYOffset) ? 0 : borderYOffset;\r\n         }\r\n\r\n         x += parent.offsetLeft - parent.scrollLeft + borderXOffset;\r\n         y += parent.offsetTop - parent.scrollTop + borderYOffset;\r\n         parent = parent.offsetParent;\r\n      }\r\n\r\n      if ( accountForDocScroll ) {\r\n         x -= this.docScrollLeft();\r\n         y -= this.docScrollTop();\r\n      }\r\n\r\n      return { x:x, y:y };\r\n   }", "code_tokens": ["function", "(", "element", ",", "accountForDocScroll", ")", "{", "if", "(", "navigator", ".", "userAgent", ".", "toLowerCase", "(", ")", ".", "indexOf", "(", "\"msie\"", ")", "==", "-", "1", ")", "return", "this", ".", "_toAbsoluteMozilla", "(", "element", ",", "accountForDocScroll", ")", ";", "var", "x", "=", "0", ";", "var", "y", "=", "0", ";", "var", "parent", "=", "element", ";", "while", "(", "parent", ")", "{", "var", "borderXOffset", "=", "0", ";", "var", "borderYOffset", "=", "0", ";", "if", "(", "parent", "!=", "element", ")", "{", "var", "borderXOffset", "=", "parseInt", "(", "this", ".", "getElementsComputedStyle", "(", "parent", ",", "\"borderLeftWidth\"", ")", ")", ";", "var", "borderYOffset", "=", "parseInt", "(", "this", ".", "getElementsComputedStyle", "(", "parent", ",", "\"borderTopWidth\"", ")", ")", ";", "borderXOffset", "=", "isNaN", "(", "borderXOffset", ")", "?", "0", ":", "borderXOffset", ";", "borderYOffset", "=", "isNaN", "(", "borderYOffset", ")", "?", "0", ":", "borderYOffset", ";", "}", "x", "+=", "parent", ".", "offsetLeft", "-", "parent", ".", "scrollLeft", "+", "borderXOffset", ";", "y", "+=", "parent", ".", "offsetTop", "-", "parent", ".", "scrollTop", "+", "borderYOffset", ";", "parent", "=", "parent", ".", "offsetParent", ";", "}", "if", "(", "accountForDocScroll", ")", "{", "x", "-=", "this", ".", "docScrollLeft", "(", ")", ";", "y", "-=", "this", ".", "docScrollTop", "(", ")", ";", "}", "return", "{", "x", ":", "x", ",", "y", ":", "y", "}", ";", "}"], "original_docstring": "\nCompute the elements position in terms of the window viewport\nso that it can be compared to the position of the mouse (dnd)\nThis is additions of all the offsetTop,offsetLeft values up the\noffsetParent hierarchy, ...taking into account any scrollTop,\nscrollLeft values along the way...\n\nIE has a bug reporting a correct offsetLeft of elements within a\na relatively positioned parent!!!\n", "docstring": {"block_comment": "Compute the elements position in terms of the window viewport \nso that it can be compared to the position of the mouse  dnd  \nThis is additions of all the offsetTop,offsetLeft values up the \noffsetParent hierarchy, ...taking into account any scrollTop, \nscrollLeft values along the way... \nIE has a bug reporting a correct offsetLeft of elements within a \na relatively positioned parent   ", "line_comment": null}, "docstring_tokens": ["Compute", "the", "elements", "position", "in", "terms", "of", "the", "window", "viewport", "so", "that", "it", "can", "be", "compared", "to", "the", "position", "of", "the", "mouse", "dnd", "This", "is", "additions", "of", "all", "the", "offsetTop", "offsetLeft", "values", "up", "the", "offsetParent", "hierarchy", "...", "taking", "into", "account", "any", "scrollTop", "scrollLeft", "values", "along", "the", "way", "...", "IE", "has", "a", "bug", "reporting", "a", "correct", "offsetLeft", "of", "elements", "within", "a", "a", "relatively", "positioned", "parent"], "sample_id": 42, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003704", "repo": "sgruhier/prototype_window", "path": "samples/rico/rico_change.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\r\n      return this.htmlElement;\r\n   }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "htmlElement", ";", "}"], "original_docstring": "\nReturns the HTML element that should have a mouse down event\nadded to it in order to initiate a drag operation\n\n", "docstring": {"block_comment": "Returns the HTML element that should have a mouse down event \nadded to it in order to initiate a drag operation", "line_comment": null}, "docstring_tokens": ["Returns", "the", "HTML", "element", "that", "should", "have", "a", "mouse", "down", "event", "added", "to", "it", "in", "order", "to", "initiate", "a", "drag", "operation"], "sample_id": 43, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003705", "repo": "sgruhier/prototype_window", "path": "samples/rico/rico_change.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(options,xmlDoc) {\r\n      var requestHeaders = ['X-Rico-Version', Rico.Version ];\r\n      var sendMethod = 'post';\r\n      if ( xmlDoc == null )\r\n        if (Rico.prototypeVersion < 1.4)\r\n        requestHeaders.push( 'Content-type', 'text/xml' );\r\n      else\r\n          sendMethod = 'get';\r\n      (!options) ? options = {} : '';\r\n\r\n      if (!options._RicoOptionsProcessed){\r\n      // Check and keep any user onComplete functions\r\n        if (options.onComplete)\r\n             options.onRicoComplete = options.onComplete;\r\n        // Fix onComplete\r\n        if (options.overrideOnComplete)\r\n          options.onComplete = options.overrideOnComplete;\r\n        else\r\n          options.onComplete = this._onRequestComplete.bind(this);\r\n        options._RicoOptionsProcessed = true;\r\n      }\r\n\r\n     // Set the default options and extend with any user options\r\n     this.options = {\r\n                     requestHeaders: requestHeaders,\r\n                     parameters:     options.parameters,\r\n                     postBody:       xmlDoc,\r\n                     method:         sendMethod,\r\n                     onComplete:     options.onComplete\r\n                    };\r\n     // Set any user options:\r\n     Object.extend(this.options, options);\r\n     return this.options;\r\n   }", "code_tokens": ["function", "(", "options", ",", "xmlDoc", ")", "{", "var", "requestHeaders", "=", "[", "'X-Rico-Version'", ",", "Rico", ".", "Version", "]", ";", "var", "sendMethod", "=", "'post'", ";", "if", "(", "xmlDoc", "==", "null", ")", "if", "(", "Rico", ".", "prototypeVersion", "<", "1.4", ")", "requestHeaders", ".", "push", "(", "'Content-type'", ",", "'text/xml'", ")", ";", "else", "sendMethod", "=", "'get'", ";", "(", "!", "options", ")", "?", "options", "=", "{", "}", ":", "''", ";", "if", "(", "!", "options", ".", "_RicoOptionsProcessed", ")", "{", "// Check and keep any user onComplete functions\r", "if", "(", "options", ".", "onComplete", ")", "options", ".", "onRicoComplete", "=", "options", ".", "onComplete", ";", "// Fix onComplete\r", "if", "(", "options", ".", "overrideOnComplete", ")", "options", ".", "onComplete", "=", "options", ".", "overrideOnComplete", ";", "else", "options", ".", "onComplete", "=", "this", ".", "_onRequestComplete", ".", "bind", "(", "this", ")", ";", "options", ".", "_RicoOptionsProcessed", "=", "true", ";", "}", "// Set the default options and extend with any user options\r", "this", ".", "options", "=", "{", "requestHeaders", ":", "requestHeaders", ",", "parameters", ":", "options", ".", "parameters", ",", "postBody", ":", "xmlDoc", ",", "method", ":", "sendMethod", ",", "onComplete", ":", "options", ".", "onComplete", "}", ";", "// Set any user options:\r", "Object", ".", "extend", "(", "this", ".", "options", ",", "options", ")", ";", "return", "this", ".", "options", ";", "}"], "original_docstring": "Private -- not part of intended engine API --------------------------------------------------------------------", "docstring": {"block_comment": "Private    not part of intended engine API", "line_comment": ["Check and keep any user onComplete functions", "Fix onComplete", "Set the default options and extend with any user options", "Set any user options "]}, "docstring_tokens": ["Private", "not", "part", "of", "intended", "engine", "API"], "sample_id": 44, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003706", "repo": "padmaragl/activiti-karaf", "path": "bpmn-webui-components/bpmn-webui-editor/src/main/scripts/Plugins/selectssperspective.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(addExtensions, removeExtensions, removeAll) {\r\n\t\tvar stencilsets = this.facade.getStencilSets();\r\n\t\t\r\n\t\tvar atLeastOne = false;\r\n\t\t\r\n\t\t// unload unselected extensions\r\n\t\tstencilsets.values().each(function(stencilset) {\r\n\t\t\tvar unselected = stencilset.extensions().values().select(function(ext) { return addExtensions[ext.namespace] == undefined }); \r\n\t\t\tif(removeAll) {\r\n\t\t\t\tunselected.each(function(ext) {\r\n\t\t\t\t\tstencilset.removeExtension(ext.namespace);\r\n\t\t\t\t\tatLeastOne = true;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tunselected.each(function(ext) {\r\n\t\t\t\t\tvar remove = removeExtensions.find(function(remExt) {\r\n\t\t\t\t\t\treturn ext.namespace === remExt.namespace;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(remove) {\r\n\t\t\t\t\t\tstencilset.removeExtension(ext.namespace);\r\n\t\t\t\t\t\tatLeastOne = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// load selected extensions\r\n\t\taddExtensions.each(function(extension) {\r\n\t\t\t\r\n\t\t\tvar stencilset = stencilsets[extension[\"extends\"]];\r\n\t\t\t\r\n\t\t\tif(stencilset) {\r\n\t\t\t\t// Load absolute\r\n\t\t\t\tif ((extension.definition || \"\").startsWith(\"/\")) {\r\n\t\t\t\t\tstencilset.addExtension(extension.definition);\r\n\t\t\t\t// Load relative\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstencilset.addExtension(ORYX.CONFIG.SS_EXTENSIONS_FOLDER + extension.definition);\r\n\t\t\t\t}\r\n\t\t\t\tatLeastOne = true;\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\t\t\r\n\t\tif (atLeastOne) {\r\n\t\t\tstencilsets.values().each(function(stencilset) {\r\n\t\t\t\tthis.facade.getRules().initializeRules(stencilset);\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.facade.raiseEvent({\r\n\t\t\t\ttype: ORYX.CONFIG.EVENT_STENCIL_SET_LOADED\r\n\t\t\t});\r\n\t\t\tvar selection = this.facade.getSelection();\r\n\t\t\tthis.facade.setSelection();\r\n\t\t\tthis.facade.setSelection(selection);\r\n\t\t}\r\n\t}", "code_tokens": ["function", "(", "addExtensions", ",", "removeExtensions", ",", "removeAll", ")", "{", "var", "stencilsets", "=", "this", ".", "facade", ".", "getStencilSets", "(", ")", ";", "var", "atLeastOne", "=", "false", ";", "// unload unselected extensions\r", "stencilsets", ".", "values", "(", ")", ".", "each", "(", "function", "(", "stencilset", ")", "{", "var", "unselected", "=", "stencilset", ".", "extensions", "(", ")", ".", "values", "(", ")", ".", "select", "(", "function", "(", "ext", ")", "{", "return", "addExtensions", "[", "ext", ".", "namespace", "]", "==", "undefined", "}", ")", ";", "if", "(", "removeAll", ")", "{", "unselected", ".", "each", "(", "function", "(", "ext", ")", "{", "stencilset", ".", "removeExtension", "(", "ext", ".", "namespace", ")", ";", "atLeastOne", "=", "true", ";", "}", ")", ";", "}", "else", "{", "unselected", ".", "each", "(", "function", "(", "ext", ")", "{", "var", "remove", "=", "removeExtensions", ".", "find", "(", "function", "(", "remExt", ")", "{", "return", "ext", ".", "namespace", "===", "remExt", ".", "namespace", ";", "}", ")", ";", "if", "(", "remove", ")", "{", "stencilset", ".", "removeExtension", "(", "ext", ".", "namespace", ")", ";", "atLeastOne", "=", "true", ";", "}", "}", ")", ";", "}", "}", ")", ";", "// load selected extensions\r", "addExtensions", ".", "each", "(", "function", "(", "extension", ")", "{", "var", "stencilset", "=", "stencilsets", "[", "extension", "[", "\"extends\"", "]", "]", ";", "if", "(", "stencilset", ")", "{", "// Load absolute\r", "if", "(", "(", "extension", ".", "definition", "||", "\"\"", ")", ".", "startsWith", "(", "\"/\"", ")", ")", "{", "stencilset", ".", "addExtension", "(", "extension", ".", "definition", ")", ";", "// Load relative\r", "}", "else", "{", "stencilset", ".", "addExtension", "(", "ORYX", ".", "CONFIG", ".", "SS_EXTENSIONS_FOLDER", "+", "extension", ".", "definition", ")", ";", "}", "atLeastOne", "=", "true", ";", "}", "}", ".", "bind", "(", "this", ")", ")", ";", "if", "(", "atLeastOne", ")", "{", "stencilsets", ".", "values", "(", ")", ".", "each", "(", "function", "(", "stencilset", ")", "{", "this", ".", "facade", ".", "getRules", "(", ")", ".", "initializeRules", "(", "stencilset", ")", ";", "}", ".", "bind", "(", "this", ")", ")", ";", "this", ".", "facade", ".", "raiseEvent", "(", "{", "type", ":", "ORYX", ".", "CONFIG", ".", "EVENT_STENCIL_SET_LOADED", "}", ")", ";", "var", "selection", "=", "this", ".", "facade", ".", "getSelection", "(", ")", ";", "this", ".", "facade", ".", "setSelection", "(", ")", ";", "this", ".", "facade", ".", "setSelection", "(", "selection", ")", ";", "}", "}"], "original_docstring": "/*\nLoad all stencil set extensions specified in param extensions (key map: String -> Object)\nUnload all other extensions (method copied from addssextension plugin)\n", "docstring": {"block_comment": "Load all stencil set extensions specified in param extensions  key map  String    Object  \nUnload all other extensions  method copied from addssextension plugin ", "line_comment": ["unload unselected extensions", "load selected extensions", "Load absolute", "Load relative"]}, "docstring_tokens": ["Load", "all", "stencil", "set", "extensions", "specified", "in", "param", "extensions", "key", "map", "String", "Object", "Unload", "all", "other", "extensions", "method", "copied", "from", "addssextension", "plugin"], "sample_id": 45, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003707", "repo": "MarkySparky/teuchters", "path": "node_modules/gruntfile-gtx/node_modules/load-grunt-tasks/node_modules/multimatch/node_modules/lodash/dist/lodash.compat.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(obj) {\n\n      var __p = 'var index, iterable = ' +\n      (obj.firstArg) +\n      ', result = ' +\n      (obj.init) +\n      ';\\nif (!iterable) return result;\\n' +\n      (obj.top) +\n      ';';\n       if (obj.array) {\n      __p += '\\nvar length = iterable.length; index = -1;\\nif (' +\n      (obj.array) +\n      ') {  ';\n       if (support.unindexedChars) {\n      __p += '\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  ';\n       }\n      __p += '\\n  while (++index < length) {\\n    ' +\n      (obj.loop) +\n      ';\\n  }\\n}\\nelse {  ';\n       } else if (support.nonEnumArgs) {\n      __p += '\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      ' +\n      (obj.loop) +\n      ';\\n    }\\n  } else {  ';\n       }\n\n       if (support.enumPrototypes) {\n      __p += '\\n  var skipProto = typeof iterable == \\'function\\';\\n  ';\n       }\n\n       if (support.enumErrorProps) {\n      __p += '\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  ';\n       }\n\n          var conditions = [];    if (support.enumPrototypes) { conditions.push('!(skipProto && index == \"prototype\")'); }    if (support.enumErrorProps)  { conditions.push('!(skipErrorProps && (index == \"message\" || index == \"name\"))'); }\n\n       if (obj.useHas && obj.keys) {\n      __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n';\n          if (conditions.length) {\n      __p += '    if (' +\n      (conditions.join(' && ')) +\n      ') {\\n  ';\n       }\n      __p +=\n      (obj.loop) +\n      ';    ';\n       if (conditions.length) {\n      __p += '\\n    }';\n       }\n      __p += '\\n  }  ';\n       } else {\n      __p += '\\n  for (index in iterable) {\\n';\n          if (obj.useHas) { conditions.push(\"hasOwnProperty.call(iterable, index)\"); }    if (conditions.length) {\n      __p += '    if (' +\n      (conditions.join(' && ')) +\n      ') {\\n  ';\n       }\n      __p +=\n      (obj.loop) +\n      ';    ';\n       if (conditions.length) {\n      __p += '\\n    }';\n       }\n      __p += '\\n  }    ';\n       if (support.nonEnumShadows) {\n      __p += '\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      ';\n       for (k = 0; k < 7; k++) {\n      __p += '\\n    index = \\'' +\n      (obj.shadowedProps[k]) +\n      '\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';\n              if (!obj.useHas) {\n      __p += ' || (!nonEnum[index] && iterable[index] !== objectProto[index])';\n       }\n      __p += ') {\\n      ' +\n      (obj.loop) +\n      ';\\n    }      ';\n       }\n      __p += '\\n  }    ';\n       }\n\n       }\n\n       if (obj.array || support.nonEnumArgs) {\n      __p += '\\n}';\n       }\n      __p +=\n      (obj.bottom) +\n      ';\\nreturn result';\n\n      return __p\n    }", "code_tokens": ["function", "(", "obj", ")", "{", "var", "__p", "=", "'var index, iterable = '", "+", "(", "obj", ".", "firstArg", ")", "+", "', result = '", "+", "(", "obj", ".", "init", ")", "+", "';\\nif (!iterable) return result;\\n'", "+", "(", "obj", ".", "top", ")", "+", "';'", ";", "if", "(", "obj", ".", "array", ")", "{", "__p", "+=", "'\\nvar length = iterable.length; index = -1;\\nif ('", "+", "(", "obj", ".", "array", ")", "+", "') {  '", ";", "if", "(", "support", ".", "unindexedChars", ")", "{", "__p", "+=", "'\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  '", ";", "}", "__p", "+=", "'\\n  while (++index < length) {\\n    '", "+", "(", "obj", ".", "loop", ")", "+", "';\\n  }\\n}\\nelse {  '", ";", "}", "else", "if", "(", "support", ".", "nonEnumArgs", ")", "{", "__p", "+=", "'\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      '", "+", "(", "obj", ".", "loop", ")", "+", "';\\n    }\\n  } else {  '", ";", "}", "if", "(", "support", ".", "enumPrototypes", ")", "{", "__p", "+=", "'\\n  var skipProto = typeof iterable == \\'function\\';\\n  '", ";", "}", "if", "(", "support", ".", "enumErrorProps", ")", "{", "__p", "+=", "'\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  '", ";", "}", "var", "conditions", "=", "[", "]", ";", "if", "(", "support", ".", "enumPrototypes", ")", "{", "conditions", ".", "push", "(", "'!(skipProto && index == \"prototype\")'", ")", ";", "}", "if", "(", "support", ".", "enumErrorProps", ")", "{", "conditions", ".", "push", "(", "'!(skipErrorProps && (index == \"message\" || index == \"name\"))'", ")", ";", "}", "if", "(", "obj", ".", "useHas", "&&", "obj", ".", "keys", ")", "{", "__p", "+=", "'\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n'", ";", "if", "(", "conditions", ".", "length", ")", "{", "__p", "+=", "'    if ('", "+", "(", "conditions", ".", "join", "(", "' && '", ")", ")", "+", "') {\\n  '", ";", "}", "__p", "+=", "(", "obj", ".", "loop", ")", "+", "';    '", ";", "if", "(", "conditions", ".", "length", ")", "{", "__p", "+=", "'\\n    }'", ";", "}", "__p", "+=", "'\\n  }  '", ";", "}", "else", "{", "__p", "+=", "'\\n  for (index in iterable) {\\n'", ";", "if", "(", "obj", ".", "useHas", ")", "{", "conditions", ".", "push", "(", "\"hasOwnProperty.call(iterable, index)\"", ")", ";", "}", "if", "(", "conditions", ".", "length", ")", "{", "__p", "+=", "'    if ('", "+", "(", "conditions", ".", "join", "(", "' && '", ")", ")", "+", "') {\\n  '", ";", "}", "__p", "+=", "(", "obj", ".", "loop", ")", "+", "';    '", ";", "if", "(", "conditions", ".", "length", ")", "{", "__p", "+=", "'\\n    }'", ";", "}", "__p", "+=", "'\\n  }    '", ";", "if", "(", "support", ".", "nonEnumShadows", ")", "{", "__p", "+=", "'\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      '", ";", "for", "(", "k", "=", "0", ";", "k", "<", "7", ";", "k", "++", ")", "{", "__p", "+=", "'\\n    index = \\''", "+", "(", "obj", ".", "shadowedProps", "[", "k", "]", ")", "+", "'\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))'", ";", "if", "(", "!", "obj", ".", "useHas", ")", "{", "__p", "+=", "' || (!nonEnum[index] && iterable[index] !== objectProto[index])'", ";", "}", "__p", "+=", "') {\\n      '", "+", "(", "obj", ".", "loop", ")", "+", "';\\n    }      '", ";", "}", "__p", "+=", "'\\n  }    '", ";", "}", "}", "if", "(", "obj", ".", "array", "||", "support", ".", "nonEnumArgs", ")", "{", "__p", "+=", "'\\n}'", ";", "}", "__p", "+=", "(", "obj", ".", "bottom", ")", "+", "';\\nreturn result'", ";", "return", "__p", "}"], "original_docstring": "/*-------------------------------------------------------------------------- \nThe template used to create iterator functions.\n\n@private\n@param {Object} data The data object used to populate the text.\n@returns {string} Returns the interpolated text.\n", "docstring": {"block_comment": "The template used to create iterator functions.", "line_comment": null}, "docstring_tokens": ["The", "template", "used", "to", "create", "iterator", "functions", "."], "sample_id": 46, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003707", "repo": "MarkySparky/teuchters", "path": "node_modules/gruntfile-gtx/node_modules/load-grunt-tasks/node_modules/multimatch/node_modules/lodash/dist/lodash.compat.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(obj) {\n\n      var __p = 'var index, iterable = ' +\n      (obj.firstArg) +\n      ', result = ' +\n      (obj.init) +\n      ';\\nif (!iterable) return result;\\n' +\n      (obj.top) +\n      ';';\n       if (obj.array) {\n      __p += '\\nvar length = iterable.length; index = -1;\\nif (' +\n      (obj.array) +\n      ') {  ';\n       if (support.unindexedChars) {\n      __p += '\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  ';\n       }\n      __p += '\\n  while (++index < length) {\\n    ' +\n      (obj.loop) +\n      ';\\n  }\\n}\\nelse {  ';\n       } else if (support.nonEnumArgs) {\n      __p += '\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      ' +\n      (obj.loop) +\n      ';\\n    }\\n  } else {  ';\n       }\n\n       if (support.enumPrototypes) {\n      __p += '\\n  var skipProto = typeof iterable == \\'function\\';\\n  ';\n       }\n\n       if (support.enumErrorProps) {\n      __p += '\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  ';\n       }\n\n          var conditions = [];    if (support.enumPrototypes) { conditions.push('!(skipProto && index == \"prototype\")'); }    if (support.enumErrorProps)  { conditions.push('!(skipErrorProps && (index == \"message\" || index == \"name\"))'); }\n\n       if (obj.useHas && obj.keys) {\n      __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n';\n          if (conditions.length) {\n      __p += '    if (' +\n      (conditions.join(' && ')) +\n      ') {\\n  ';\n       }\n      __p +=\n      (obj.loop) +\n      ';    ';\n       if (conditions.length) {\n      __p += '\\n    }';\n       }\n      __p += '\\n  }  ';\n       } else {\n      __p += '\\n  for (index in iterable) {\\n';\n          if (obj.useHas) { conditions.push(\"hasOwnProperty.call(iterable, index)\"); }    if (conditions.length) {\n      __p += '    if (' +\n      (conditions.join(' && ')) +\n      ') {\\n  ';\n       }\n      __p +=\n      (obj.loop) +\n      ';    ';\n       if (conditions.length) {\n      __p += '\\n    }';\n       }\n      __p += '\\n  }    ';\n       if (support.nonEnumShadows) {\n      __p += '\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      ';\n       for (k = 0; k < 7; k++) {\n      __p += '\\n    index = \\'' +\n      (obj.shadowedProps[k]) +\n      '\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';\n              if (!obj.useHas) {\n      __p += ' || (!nonEnum[index] && iterable[index] !== objectProto[index])';\n       }\n      __p += ') {\\n      ' +\n      (obj.loop) +\n      ';\\n    }      ';\n       }\n      __p += '\\n  }    ';\n       }\n\n       }\n\n       if (obj.array || support.nonEnumArgs) {\n      __p += '\\n}';\n       }\n      __p +=\n      (obj.bottom) +\n      ';\\nreturn result';\n\n      return __p\n    }", "code_tokens": ["function", "(", "obj", ")", "{", "var", "__p", "=", "'var index, iterable = '", "+", "(", "obj", ".", "firstArg", ")", "+", "', result = '", "+", "(", "obj", ".", "init", ")", "+", "';\\nif (!iterable) return result;\\n'", "+", "(", "obj", ".", "top", ")", "+", "';'", ";", "if", "(", "obj", ".", "array", ")", "{", "__p", "+=", "'\\nvar length = iterable.length; index = -1;\\nif ('", "+", "(", "obj", ".", "array", ")", "+", "') {  '", ";", "if", "(", "support", ".", "unindexedChars", ")", "{", "__p", "+=", "'\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  '", ";", "}", "__p", "+=", "'\\n  while (++index < length) {\\n    '", "+", "(", "obj", ".", "loop", ")", "+", "';\\n  }\\n}\\nelse {  '", ";", "}", "else", "if", "(", "support", ".", "nonEnumArgs", ")", "{", "__p", "+=", "'\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      '", "+", "(", "obj", ".", "loop", ")", "+", "';\\n    }\\n  } else {  '", ";", "}", "if", "(", "support", ".", "enumPrototypes", ")", "{", "__p", "+=", "'\\n  var skipProto = typeof iterable == \\'function\\';\\n  '", ";", "}", "if", "(", "support", ".", "enumErrorProps", ")", "{", "__p", "+=", "'\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  '", ";", "}", "var", "conditions", "=", "[", "]", ";", "if", "(", "support", ".", "enumPrototypes", ")", "{", "conditions", ".", "push", "(", "'!(skipProto && index == \"prototype\")'", ")", ";", "}", "if", "(", "support", ".", "enumErrorProps", ")", "{", "conditions", ".", "push", "(", "'!(skipErrorProps && (index == \"message\" || index == \"name\"))'", ")", ";", "}", "if", "(", "obj", ".", "useHas", "&&", "obj", ".", "keys", ")", "{", "__p", "+=", "'\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n'", ";", "if", "(", "conditions", ".", "length", ")", "{", "__p", "+=", "'    if ('", "+", "(", "conditions", ".", "join", "(", "' && '", ")", ")", "+", "') {\\n  '", ";", "}", "__p", "+=", "(", "obj", ".", "loop", ")", "+", "';    '", ";", "if", "(", "conditions", ".", "length", ")", "{", "__p", "+=", "'\\n    }'", ";", "}", "__p", "+=", "'\\n  }  '", ";", "}", "else", "{", "__p", "+=", "'\\n  for (index in iterable) {\\n'", ";", "if", "(", "obj", ".", "useHas", ")", "{", "conditions", ".", "push", "(", "\"hasOwnProperty.call(iterable, index)\"", ")", ";", "}", "if", "(", "conditions", ".", "length", ")", "{", "__p", "+=", "'    if ('", "+", "(", "conditions", ".", "join", "(", "' && '", ")", ")", "+", "') {\\n  '", ";", "}", "__p", "+=", "(", "obj", ".", "loop", ")", "+", "';    '", ";", "if", "(", "conditions", ".", "length", ")", "{", "__p", "+=", "'\\n    }'", ";", "}", "__p", "+=", "'\\n  }    '", ";", "if", "(", "support", ".", "nonEnumShadows", ")", "{", "__p", "+=", "'\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      '", ";", "for", "(", "k", "=", "0", ";", "k", "<", "7", ";", "k", "++", ")", "{", "__p", "+=", "'\\n    index = \\''", "+", "(", "obj", ".", "shadowedProps", "[", "k", "]", ")", "+", "'\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))'", ";", "if", "(", "!", "obj", ".", "useHas", ")", "{", "__p", "+=", "' || (!nonEnum[index] && iterable[index] !== objectProto[index])'", ";", "}", "__p", "+=", "') {\\n      '", "+", "(", "obj", ".", "loop", ")", "+", "';\\n    }      '", ";", "}", "__p", "+=", "'\\n  }    '", ";", "}", "}", "if", "(", "obj", ".", "array", "||", "support", ".", "nonEnumArgs", ")", "{", "__p", "+=", "'\\n}'", ";", "}", "__p", "+=", "(", "obj", ".", "bottom", ")", "+", "';\\nreturn result'", ";", "return", "__p", "}"], "original_docstring": "/*-------------------------------------------------------------------------- \nThe template used to create iterator functions.\n\n@private\n@param {Object} data The data object used to populate the text.\n@returns {string} Returns the interpolated text.\n", "docstring": {"block_comment": "The template used to create iterator functions.", "line_comment": null}, "docstring_tokens": ["{", "string", "}", "Returns", "the", "interpolated", "text", "."], "sample_id": 46, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21003708", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(oldIndex, newIndex){\n        var oldLocked = this.isLocked(oldIndex),\n            newLocked = this.isLocked(newIndex);\n\n        if (oldIndex < newIndex && oldLocked && !newLocked) {\n            this.setLocked(oldIndex, false, true);\n        } else if (oldIndex > newIndex && !oldLocked && newLocked) {\n            this.setLocked(oldIndex, true, true);\n        }\n\n        Ext.ux.grid.LockingColumnModel.superclass.moveColumn.apply(this, arguments);\n    }", "code_tokens": ["function", "(", "oldIndex", ",", "newIndex", ")", "{", "var", "oldLocked", "=", "this", ".", "isLocked", "(", "oldIndex", ")", ",", "newLocked", "=", "this", ".", "isLocked", "(", "newIndex", ")", ";", "if", "(", "oldIndex", "<", "newIndex", "&&", "oldLocked", "&&", "!", "newLocked", ")", "{", "this", ".", "setLocked", "(", "oldIndex", ",", "false", ",", "true", ")", ";", "}", "else", "if", "(", "oldIndex", ">", "newIndex", "&&", "!", "oldLocked", "&&", "newLocked", ")", "{", "this", ".", "setLocked", "(", "oldIndex", ",", "true", ",", "true", ")", ";", "}", "Ext", ".", "ux", ".", "grid", ".", "LockingColumnModel", ".", "superclass", ".", "moveColumn", ".", "apply", "(", "this", ",", "arguments", ")", ";", "}"], "original_docstring": "\nMoves a column from one position to another\n@param {Number} oldIndex The current column index\n@param {Number} newIndex The destination column index\n", "docstring": {"block_comment": "Moves a column from one position to another", "line_comment": null}, "docstring_tokens": ["Moves", "a", "column", "from", "one", "position", "to", "another"], "sample_id": 47, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003708", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(oldIndex, newIndex){\n        var oldLocked = this.isLocked(oldIndex),\n            newLocked = this.isLocked(newIndex);\n\n        if (oldIndex < newIndex && oldLocked && !newLocked) {\n            this.setLocked(oldIndex, false, true);\n        } else if (oldIndex > newIndex && !oldLocked && newLocked) {\n            this.setLocked(oldIndex, true, true);\n        }\n\n        Ext.ux.grid.LockingColumnModel.superclass.moveColumn.apply(this, arguments);\n    }", "code_tokens": ["function", "(", "oldIndex", ",", "newIndex", ")", "{", "var", "oldLocked", "=", "this", ".", "isLocked", "(", "oldIndex", ")", ",", "newLocked", "=", "this", ".", "isLocked", "(", "newIndex", ")", ";", "if", "(", "oldIndex", "<", "newIndex", "&&", "oldLocked", "&&", "!", "newLocked", ")", "{", "this", ".", "setLocked", "(", "oldIndex", ",", "false", ",", "true", ")", ";", "}", "else", "if", "(", "oldIndex", ">", "newIndex", "&&", "!", "oldLocked", "&&", "newLocked", ")", "{", "this", ".", "setLocked", "(", "oldIndex", ",", "true", ",", "true", ")", ";", "}", "Ext", ".", "ux", ".", "grid", ".", "LockingColumnModel", ".", "superclass", ".", "moveColumn", ".", "apply", "(", "this", ",", "arguments", ")", ";", "}"], "original_docstring": "\nMoves a column from one position to another\n@param {Number} oldIndex The current column index\n@param {Number} newIndex The destination column index\n", "docstring": {"block_comment": "Moves a column from one position to another", "line_comment": null}, "docstring_tokens": ["The", "current", "column", "index"], "sample_id": 47, "prompt_tokens": ["<javascript>", "<param>", "oldIndex"], "comment_type": "param", "sentence_id": 1}
{"id": "21003708", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(oldIndex, newIndex){\n        var oldLocked = this.isLocked(oldIndex),\n            newLocked = this.isLocked(newIndex);\n\n        if (oldIndex < newIndex && oldLocked && !newLocked) {\n            this.setLocked(oldIndex, false, true);\n        } else if (oldIndex > newIndex && !oldLocked && newLocked) {\n            this.setLocked(oldIndex, true, true);\n        }\n\n        Ext.ux.grid.LockingColumnModel.superclass.moveColumn.apply(this, arguments);\n    }", "code_tokens": ["function", "(", "oldIndex", ",", "newIndex", ")", "{", "var", "oldLocked", "=", "this", ".", "isLocked", "(", "oldIndex", ")", ",", "newLocked", "=", "this", ".", "isLocked", "(", "newIndex", ")", ";", "if", "(", "oldIndex", "<", "newIndex", "&&", "oldLocked", "&&", "!", "newLocked", ")", "{", "this", ".", "setLocked", "(", "oldIndex", ",", "false", ",", "true", ")", ";", "}", "else", "if", "(", "oldIndex", ">", "newIndex", "&&", "!", "oldLocked", "&&", "newLocked", ")", "{", "this", ".", "setLocked", "(", "oldIndex", ",", "true", ",", "true", ")", ";", "}", "Ext", ".", "ux", ".", "grid", ".", "LockingColumnModel", ".", "superclass", ".", "moveColumn", ".", "apply", "(", "this", ",", "arguments", ")", ";", "}"], "original_docstring": "\nMoves a column from one position to another\n@param {Number} oldIndex The current column index\n@param {Number} newIndex The destination column index\n", "docstring": {"block_comment": "Moves a column from one position to another", "line_comment": null}, "docstring_tokens": ["The", "destination", "column", "index"], "sample_id": 47, "prompt_tokens": ["<javascript>", "<param>", "newIndex"], "comment_type": "param", "sentence_id": 2}
{"id": "21003709", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        var len = this.config.length;\n\n        for (var i = 0; i < len; i++) {\n            if (!this.isLocked(i)) {\n                return i;\n            }\n        }\n\n        //if we get to this point all of the columns are locked so we return the total\n        return len;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "len", "=", "this", ".", "config", ".", "length", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "len", ";", "i", "++", ")", "{", "if", "(", "!", "this", ".", "isLocked", "(", "i", ")", ")", "{", "return", "i", ";", "}", "}", "//if we get to this point all of the columns are locked so we return the total", "return", "len", ";", "}"], "original_docstring": "\nReturns the total number of locked columns\n@return {Number} The number of locked columns\n", "docstring": {"block_comment": "Returns the total number of locked columns", "line_comment": ["if we get to this point all of the columns are locked so we return the total"]}, "docstring_tokens": ["Returns", "the", "total", "number", "of", "locked", "columns"], "sample_id": 48, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003709", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        var len = this.config.length;\n\n        for (var i = 0; i < len; i++) {\n            if (!this.isLocked(i)) {\n                return i;\n            }\n        }\n\n        //if we get to this point all of the columns are locked so we return the total\n        return len;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "len", "=", "this", ".", "config", ".", "length", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "len", ";", "i", "++", ")", "{", "if", "(", "!", "this", ".", "isLocked", "(", "i", ")", ")", "{", "return", "i", ";", "}", "}", "//if we get to this point all of the columns are locked so we return the total", "return", "len", ";", "}"], "original_docstring": "\nReturns the total number of locked columns\n@return {Number} The number of locked columns\n", "docstring": {"block_comment": "Returns the total number of locked columns", "line_comment": ["if we get to this point all of the columns are locked so we return the total"]}, "docstring_tokens": ["The", "number", "of", "locked", "columns"], "sample_id": 48, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21003710", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(){\n        var totalWidth = 0;\n        for (var i = 0, len = this.config.length; i < len; i++) {\n            if (this.isLocked(i) && !this.isHidden(i)) {\n                totalWidth += this.getColumnWidth(i);\n            }\n        }\n\n        return totalWidth;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "totalWidth", "=", "0", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "this", ".", "config", ".", "length", ";", "i", "<", "len", ";", "i", "++", ")", "{", "if", "(", "this", ".", "isLocked", "(", "i", ")", "&&", "!", "this", ".", "isHidden", "(", "i", ")", ")", "{", "totalWidth", "+=", "this", ".", "getColumnWidth", "(", "i", ")", ";", "}", "}", "return", "totalWidth", ";", "}"], "original_docstring": "\nReturns the total width of all locked columns\n@return {Number} The width of all locked columns\n", "docstring": {"block_comment": "Returns the total width of all locked columns", "line_comment": null}, "docstring_tokens": ["Returns", "the", "total", "width", "of", "all", "locked", "columns"], "sample_id": 49, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003710", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(){\n        var totalWidth = 0;\n        for (var i = 0, len = this.config.length; i < len; i++) {\n            if (this.isLocked(i) && !this.isHidden(i)) {\n                totalWidth += this.getColumnWidth(i);\n            }\n        }\n\n        return totalWidth;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "totalWidth", "=", "0", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "this", ".", "config", ".", "length", ";", "i", "<", "len", ";", "i", "++", ")", "{", "if", "(", "this", ".", "isLocked", "(", "i", ")", "&&", "!", "this", ".", "isHidden", "(", "i", ")", ")", "{", "totalWidth", "+=", "this", ".", "getColumnWidth", "(", "i", ")", ";", "}", "}", "return", "totalWidth", ";", "}"], "original_docstring": "\nReturns the total width of all locked columns\n@return {Number} The width of all locked columns\n", "docstring": {"block_comment": "Returns the total width of all locked columns", "line_comment": null}, "docstring_tokens": ["The", "width", "of", "all", "locked", "columns"], "sample_id": 49, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21003711", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(colIndex, value, suppressEvent){\n        if (this.isLocked(colIndex) == value) {\n            return;\n        }\n        this.config[colIndex].locked = value;\n        if (!suppressEvent) {\n            this.fireEvent('columnlockchange', this, colIndex, value);\n        }\n    }", "code_tokens": ["function", "(", "colIndex", ",", "value", ",", "suppressEvent", ")", "{", "if", "(", "this", ".", "isLocked", "(", "colIndex", ")", "==", "value", ")", "{", "return", ";", "}", "this", ".", "config", "[", "colIndex", "]", ".", "locked", "=", "value", ";", "if", "(", "!", "suppressEvent", ")", "{", "this", ".", "fireEvent", "(", "'columnlockchange'", ",", "this", ",", "colIndex", ",", "value", ")", ";", "}", "}"], "original_docstring": "\nLocks or unlocks a given column\n@param {Number} colIndex The column index\n@param {Boolean} value True to lock, false to unlock\n@param {Boolean} suppressEvent Pass false to cause the columnlockchange event not to fire\n", "docstring": {"block_comment": "Locks or unlocks a given column", "line_comment": null}, "docstring_tokens": ["Locks", "or", "unlocks", "a", "given", "column"], "sample_id": 50, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003711", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(colIndex, value, suppressEvent){\n        if (this.isLocked(colIndex) == value) {\n            return;\n        }\n        this.config[colIndex].locked = value;\n        if (!suppressEvent) {\n            this.fireEvent('columnlockchange', this, colIndex, value);\n        }\n    }", "code_tokens": ["function", "(", "colIndex", ",", "value", ",", "suppressEvent", ")", "{", "if", "(", "this", ".", "isLocked", "(", "colIndex", ")", "==", "value", ")", "{", "return", ";", "}", "this", ".", "config", "[", "colIndex", "]", ".", "locked", "=", "value", ";", "if", "(", "!", "suppressEvent", ")", "{", "this", ".", "fireEvent", "(", "'columnlockchange'", ",", "this", ",", "colIndex", ",", "value", ")", ";", "}", "}"], "original_docstring": "\nLocks or unlocks a given column\n@param {Number} colIndex The column index\n@param {Boolean} value True to lock, false to unlock\n@param {Boolean} suppressEvent Pass false to cause the columnlockchange event not to fire\n", "docstring": {"block_comment": "Locks or unlocks a given column", "line_comment": null}, "docstring_tokens": ["The", "column", "index"], "sample_id": 50, "prompt_tokens": ["<javascript>", "<param>", "colIndex"], "comment_type": "param", "sentence_id": 1}
{"id": "21003711", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(colIndex, value, suppressEvent){\n        if (this.isLocked(colIndex) == value) {\n            return;\n        }\n        this.config[colIndex].locked = value;\n        if (!suppressEvent) {\n            this.fireEvent('columnlockchange', this, colIndex, value);\n        }\n    }", "code_tokens": ["function", "(", "colIndex", ",", "value", ",", "suppressEvent", ")", "{", "if", "(", "this", ".", "isLocked", "(", "colIndex", ")", "==", "value", ")", "{", "return", ";", "}", "this", ".", "config", "[", "colIndex", "]", ".", "locked", "=", "value", ";", "if", "(", "!", "suppressEvent", ")", "{", "this", ".", "fireEvent", "(", "'columnlockchange'", ",", "this", ",", "colIndex", ",", "value", ")", ";", "}", "}"], "original_docstring": "\nLocks or unlocks a given column\n@param {Number} colIndex The column index\n@param {Boolean} value True to lock, false to unlock\n@param {Boolean} suppressEvent Pass false to cause the columnlockchange event not to fire\n", "docstring": {"block_comment": "Locks or unlocks a given column", "line_comment": null}, "docstring_tokens": ["True", "to", "lock", "false", "to", "unlock"], "sample_id": 50, "prompt_tokens": ["<javascript>", "<param>", "value"], "comment_type": "param", "sentence_id": 2}
{"id": "21003711", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(colIndex, value, suppressEvent){\n        if (this.isLocked(colIndex) == value) {\n            return;\n        }\n        this.config[colIndex].locked = value;\n        if (!suppressEvent) {\n            this.fireEvent('columnlockchange', this, colIndex, value);\n        }\n    }", "code_tokens": ["function", "(", "colIndex", ",", "value", ",", "suppressEvent", ")", "{", "if", "(", "this", ".", "isLocked", "(", "colIndex", ")", "==", "value", ")", "{", "return", ";", "}", "this", ".", "config", "[", "colIndex", "]", ".", "locked", "=", "value", ";", "if", "(", "!", "suppressEvent", ")", "{", "this", ".", "fireEvent", "(", "'columnlockchange'", ",", "this", ",", "colIndex", ",", "value", ")", ";", "}", "}"], "original_docstring": "\nLocks or unlocks a given column\n@param {Number} colIndex The column index\n@param {Boolean} value True to lock, false to unlock\n@param {Boolean} suppressEvent Pass false to cause the columnlockchange event not to fire\n", "docstring": {"block_comment": "Locks or unlocks a given column", "line_comment": null}, "docstring_tokens": ["Pass", "false", "to", "cause", "the", "columnlockchange", "event", "not", "to", "fire"], "sample_id": 50, "prompt_tokens": ["<javascript>", "<param>", "suppressEvent"], "comment_type": "param", "sentence_id": 3}
{"id": "21003712", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(colIndex){\n        return this.config[colIndex].locked === true;\n    }", "code_tokens": ["function", "(", "colIndex", ")", "{", "return", "this", ".", "config", "[", "colIndex", "]", ".", "locked", "===", "true", ";", "}"], "original_docstring": "\nReturns true if the given column index is currently locked\n@param {Number} colIndex The column index\n@return {Boolean} True if the column is locked\n", "docstring": {"block_comment": "Returns true if the given column index is currently locked", "line_comment": null}, "docstring_tokens": ["Returns", "true", "if", "the", "given", "column", "index", "is", "currently", "locked"], "sample_id": 51, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003712", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(colIndex){\n        return this.config[colIndex].locked === true;\n    }", "code_tokens": ["function", "(", "colIndex", ")", "{", "return", "this", ".", "config", "[", "colIndex", "]", ".", "locked", "===", "true", ";", "}"], "original_docstring": "\nReturns true if the given column index is currently locked\n@param {Number} colIndex The column index\n@return {Boolean} True if the column is locked\n", "docstring": {"block_comment": "Returns true if the given column index is currently locked", "line_comment": null}, "docstring_tokens": ["The", "column", "index"], "sample_id": 51, "prompt_tokens": ["<javascript>", "<param>", "colIndex"], "comment_type": "param", "sentence_id": 1}
{"id": "21003712", "repo": "limscoder/js-file-browser", "path": "src/extjs/examples/ux/LockingGridView.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(colIndex){\n        return this.config[colIndex].locked === true;\n    }", "code_tokens": ["function", "(", "colIndex", ")", "{", "return", "this", ".", "config", "[", "colIndex", "]", ".", "locked", "===", "true", ";", "}"], "original_docstring": "\nReturns true if the given column index is currently locked\n@param {Number} colIndex The column index\n@return {Boolean} True if the column is locked\n", "docstring": {"block_comment": "Returns true if the given column index is currently locked", "line_comment": null}, "docstring_tokens": ["True", "if", "the", "column", "is", "locked"], "sample_id": 51, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003713", "repo": "begoldsm/azure-sdk-for-node", "path": "lib/services/keyVault/sample.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (challenge, callback) {\n\n  // Create a new authentication context.\n  var context = new AuthenticationContext(challenge.authorization);\n  \n  // Use the context to acquire an authentication token.\n  return context.acquireTokenWithClientCredentials(challenge.resource, clientId, clientSecret, function (err, tokenResponse) {\n    if (err) throw err;\n    // Calculate the value to be set in the request's Authorization header and resume the call.\n    var authorizationValue = tokenResponse.tokenType + ' ' + tokenResponse.accessToken;\n\n    return callback(null, authorizationValue);\n  });\n\n}", "code_tokens": ["function", "(", "challenge", ",", "callback", ")", "{", "// Create a new authentication context.", "var", "context", "=", "new", "AuthenticationContext", "(", "challenge", ".", "authorization", ")", ";", "// Use the context to acquire an authentication token.", "return", "context", ".", "acquireTokenWithClientCredentials", "(", "challenge", ".", "resource", ",", "clientId", ",", "clientSecret", ",", "function", "(", "err", ",", "tokenResponse", ")", "{", "if", "(", "err", ")", "throw", "err", ";", "// Calculate the value to be set in the request's Authorization header and resume the call.", "var", "authorizationValue", "=", "tokenResponse", ".", "tokenType", "+", "' '", "+", "tokenResponse", ".", "accessToken", ";", "return", "callback", "(", "null", ",", "authorizationValue", ")", ";", "}", ")", ";", "}"], "original_docstring": "Authenticator - retrieves the access token", "docstring": {"block_comment": "Authenticator   retrieves the access token", "line_comment": ["Create a new authentication context.", "Use the context to acquire an authentication token.", "Calculate the value to be set in the request s Authorization header and resume the call."]}, "docstring_tokens": ["Authenticator", "retrieves", "the", "access", "token"], "sample_id": 52, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003714", "repo": "SeeyaSia/www", "path": "web/libraries/ckeditor/core/dom/comment.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function() {\n\t\treturn '<!--' + this.$.nodeValue + '-->';\n\t}", "code_tokens": ["function", "(", ")", "{", "return", "'<!--'", "+", "this", ".", "$", ".", "nodeValue", "+", "'-->'", ";", "}"], "original_docstring": "\nGets the outer HTML of this comment.\n\n@returns {String} The HTML `<!-- comment value -->`.\n", "docstring": {"block_comment": "Gets the outer HTML of this comment.", "line_comment": null}, "docstring_tokens": ["Gets", "the", "outer", "HTML", "of", "this", "comment", "."], "sample_id": 53, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003714", "repo": "SeeyaSia/www", "path": "web/libraries/ckeditor/core/dom/comment.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function() {\n\t\treturn '<!--' + this.$.nodeValue + '-->';\n\t}", "code_tokens": ["function", "(", ")", "{", "return", "'<!--'", "+", "this", ".", "$", ".", "nodeValue", "+", "'-->'", ";", "}"], "original_docstring": "\nGets the outer HTML of this comment.\n\n@returns {String} The HTML `<!-- comment value -->`.\n", "docstring": {"block_comment": "Gets the outer HTML of this comment.", "line_comment": null}, "docstring_tokens": ["{", "String", "}", "The", "HTML", "<!", "--", "comment", "value", "--", ">", "."], "sample_id": 53, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21003715", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( event, eventData ) {\n\t\tvar that = this,\n\t\t\ttoShow = eventData.newPanel,\n\t\t\ttoHide = eventData.oldPanel;\n\n\t\tthis.running = true;\n\n\t\tfunction complete() {\n\t\t\tthat.running = false;\n\t\t\tthat._trigger( \"activate\", event, eventData );\n\t\t}\n\n\t\tfunction show() {\n\t\t\teventData.newTab.closest( \"li\" ).addClass( \"ui-tabs-active ui-state-active\" );\n\n\t\t\tif ( toShow.length && that.options.show ) {\n\t\t\t\tthat._show( toShow, that.options.show, complete );\n\t\t\t} else {\n\t\t\t\ttoShow.show();\n\t\t\t\tcomplete();\n\t\t\t}\n\t\t}\n\n\t\t// start out by hiding, then showing, then completing\n\t\tif ( toHide.length && this.options.hide ) {\n\t\t\tthis._hide( toHide, this.options.hide, function() {\n\t\t\t\teventData.oldTab.closest( \"li\" ).removeClass( \"ui-tabs-active ui-state-active\" );\n\t\t\t\tshow();\n\t\t\t});\n\t\t} else {\n\t\t\teventData.oldTab.closest( \"li\" ).removeClass( \"ui-tabs-active ui-state-active\" );\n\t\t\ttoHide.hide();\n\t\t\tshow();\n\t\t}\n\n\t\ttoHide.attr({\n\t\t\t\"aria-expanded\": \"false\",\n\t\t\t\"aria-hidden\": \"true\"\n\t\t});\n\t\teventData.oldTab.attr( \"aria-selected\", \"false\" );\n\t\t// If we're switching tabs, remove the old tab from the tab order.\n\t\t// If we're opening from collapsed state, remove the previous tab from the tab order.\n\t\t// If we're collapsing, then keep the collapsing tab in the tab order.\n\t\tif ( toShow.length && toHide.length ) {\n\t\t\teventData.oldTab.attr( \"tabIndex\", -1 );\n\t\t} else if ( toShow.length ) {\n\t\t\tthis.tabs.filter(function() {\n\t\t\t\treturn $( this ).attr( \"tabIndex\" ) === 0;\n\t\t\t})\n\t\t\t.attr( \"tabIndex\", -1 );\n\t\t}\n\n\t\ttoShow.attr({\n\t\t\t\"aria-expanded\": \"true\",\n\t\t\t\"aria-hidden\": \"false\"\n\t\t});\n\t\teventData.newTab.attr({\n\t\t\t\"aria-selected\": \"true\",\n\t\t\ttabIndex: 0\n\t\t});\n\t}", "code_tokens": ["function", "(", "event", ",", "eventData", ")", "{", "var", "that", "=", "this", ",", "toShow", "=", "eventData", ".", "newPanel", ",", "toHide", "=", "eventData", ".", "oldPanel", ";", "this", ".", "running", "=", "true", ";", "function", "complete", "(", ")", "{", "that", ".", "running", "=", "false", ";", "that", ".", "_trigger", "(", "\"activate\"", ",", "event", ",", "eventData", ")", ";", "}", "function", "show", "(", ")", "{", "eventData", ".", "newTab", ".", "closest", "(", "\"li\"", ")", ".", "addClass", "(", "\"ui-tabs-active ui-state-active\"", ")", ";", "if", "(", "toShow", ".", "length", "&&", "that", ".", "options", ".", "show", ")", "{", "that", ".", "_show", "(", "toShow", ",", "that", ".", "options", ".", "show", ",", "complete", ")", ";", "}", "else", "{", "toShow", ".", "show", "(", ")", ";", "complete", "(", ")", ";", "}", "}", "// start out by hiding, then showing, then completing", "if", "(", "toHide", ".", "length", "&&", "this", ".", "options", ".", "hide", ")", "{", "this", ".", "_hide", "(", "toHide", ",", "this", ".", "options", ".", "hide", ",", "function", "(", ")", "{", "eventData", ".", "oldTab", ".", "closest", "(", "\"li\"", ")", ".", "removeClass", "(", "\"ui-tabs-active ui-state-active\"", ")", ";", "show", "(", ")", ";", "}", ")", ";", "}", "else", "{", "eventData", ".", "oldTab", ".", "closest", "(", "\"li\"", ")", ".", "removeClass", "(", "\"ui-tabs-active ui-state-active\"", ")", ";", "toHide", ".", "hide", "(", ")", ";", "show", "(", ")", ";", "}", "toHide", ".", "attr", "(", "{", "\"aria-expanded\"", ":", "\"false\"", ",", "\"aria-hidden\"", ":", "\"true\"", "}", ")", ";", "eventData", ".", "oldTab", ".", "attr", "(", "\"aria-selected\"", ",", "\"false\"", ")", ";", "// If we're switching tabs, remove the old tab from the tab order.", "// If we're opening from collapsed state, remove the previous tab from the tab order.", "// If we're collapsing, then keep the collapsing tab in the tab order.", "if", "(", "toShow", ".", "length", "&&", "toHide", ".", "length", ")", "{", "eventData", ".", "oldTab", ".", "attr", "(", "\"tabIndex\"", ",", "-", "1", ")", ";", "}", "else", "if", "(", "toShow", ".", "length", ")", "{", "this", ".", "tabs", ".", "filter", "(", "function", "(", ")", "{", "return", "$", "(", "this", ")", ".", "attr", "(", "\"tabIndex\"", ")", "===", "0", ";", "}", ")", ".", "attr", "(", "\"tabIndex\"", ",", "-", "1", ")", ";", "}", "toShow", ".", "attr", "(", "{", "\"aria-expanded\"", ":", "\"true\"", ",", "\"aria-hidden\"", ":", "\"false\"", "}", ")", ";", "eventData", ".", "newTab", ".", "attr", "(", "{", "\"aria-selected\"", ":", "\"true\"", ",", "tabIndex", ":", "0", "}", ")", ";", "}"], "original_docstring": "handles show/hide for selecting tabs", "docstring": {"block_comment": "handles show hide for selecting tabs", "line_comment": ["start out by hiding, then showing, then completing", "If we re switching tabs, remove the old tab from the tab order.", "If we re opening from collapsed state, remove the previous tab from the tab order.", "If we re collapsing, then keep the collapsing tab in the tab order."]}, "docstring_tokens": ["handles", "show", "hide", "for", "selecting", "tabs"], "sample_id": 54, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003716", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\n\t\treturn this.element.find( \"ol,ul\" ).eq( 0 );\n\t}", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "element", ".", "find", "(", "\"ol,ul\"", ")", ".", "eq", "(", "0", ")", ";", "}"], "original_docstring": "allow overriding how to find the list for rare usage scenarios (#7715)", "docstring": {"block_comment": "allow overriding how to find the list for rare usage scenarios   7715 ", "line_comment": null}, "docstring_tokens": ["allow", "overriding", "how", "to", "find", "the", "list", "for", "rare", "usage", "scenarios", "7715"], "sample_id": 55, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003717", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( event ) {\n\t\tif ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP ) {\n\t\t\tthis._activate( this._focusNextTab( this.options.active - 1, false ) );\n\t\t\treturn true;\n\t\t}\n\t\tif ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN ) {\n\t\t\tthis._activate( this._focusNextTab( this.options.active + 1, true ) );\n\t\t\treturn true;\n\t\t}\n\t}", "code_tokens": ["function", "(", "event", ")", "{", "if", "(", "event", ".", "altKey", "&&", "event", ".", "keyCode", "===", "$", ".", "ui", ".", "keyCode", ".", "PAGE_UP", ")", "{", "this", ".", "_activate", "(", "this", ".", "_focusNextTab", "(", "this", ".", "options", ".", "active", "-", "1", ",", "false", ")", ")", ";", "return", "true", ";", "}", "if", "(", "event", ".", "altKey", "&&", "event", ".", "keyCode", "===", "$", ".", "ui", ".", "keyCode", ".", "PAGE_DOWN", ")", "{", "this", ".", "_activate", "(", "this", ".", "_focusNextTab", "(", "this", ".", "options", ".", "active", "+", "1", ",", "true", ")", ")", ";", "return", "true", ";", "}", "}"], "original_docstring": "Alt+page up/down moves focus to the previous/next tab (and activates)", "docstring": {"block_comment": "Alt page up down moves focus to the previous next tab  and activates ", "line_comment": null}, "docstring_tokens": ["Alt", "page", "up", "down", "moves", "focus", "to", "the", "previous", "next", "tab", "and", "activates"], "sample_id": 56, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003718", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( value, allowAny ) {\n\t\tvar parsed;\n\t\tif ( value !== \"\" ) {\n\t\t\tparsed = this._parse( value );\n\t\t\tif ( parsed !== null ) {\n\t\t\t\tif ( !allowAny ) {\n\t\t\t\t\tparsed = this._adjustValue( parsed );\n\t\t\t\t}\n\t\t\t\tvalue = this._format( parsed );\n\t\t\t}\n\t\t}\n\t\tthis.element.val( value );\n\t\tthis._refresh();\n\t}", "code_tokens": ["function", "(", "value", ",", "allowAny", ")", "{", "var", "parsed", ";", "if", "(", "value", "!==", "\"\"", ")", "{", "parsed", "=", "this", ".", "_parse", "(", "value", ")", ";", "if", "(", "parsed", "!==", "null", ")", "{", "if", "(", "!", "allowAny", ")", "{", "parsed", "=", "this", ".", "_adjustValue", "(", "parsed", ")", ";", "}", "value", "=", "this", ".", "_format", "(", "parsed", ")", ";", "}", "}", "this", ".", "element", ".", "val", "(", "value", ")", ";", "this", ".", "_refresh", "(", ")", ";", "}"], "original_docstring": "update the value without triggering change", "docstring": {"block_comment": "update the value without triggering change", "line_comment": null}, "docstring_tokens": ["update", "the", "value", "without", "triggering", "change"], "sample_id": 57, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003722", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( startMenu ) {\n\t\tif ( !startMenu ) {\n\t\t\tstartMenu = this.active ? this.active.parent() : this.element;\n\t\t}\n\n\t\tstartMenu\n\t\t\t.find( \".ui-menu\" )\n\t\t\t\t.hide()\n\t\t\t\t.attr( \"aria-hidden\", \"true\" )\n\t\t\t\t.attr( \"aria-expanded\", \"false\" )\n\t\t\t.end()\n\t\t\t.find( \"a.ui-state-active\" )\n\t\t\t\t.removeClass( \"ui-state-active\" );\n\t}", "code_tokens": ["function", "(", "startMenu", ")", "{", "if", "(", "!", "startMenu", ")", "{", "startMenu", "=", "this", ".", "active", "?", "this", ".", "active", ".", "parent", "(", ")", ":", "this", ".", "element", ";", "}", "startMenu", ".", "find", "(", "\".ui-menu\"", ")", ".", "hide", "(", ")", ".", "attr", "(", "\"aria-hidden\"", ",", "\"true\"", ")", ".", "attr", "(", "\"aria-expanded\"", ",", "\"false\"", ")", ".", "end", "(", ")", ".", "find", "(", "\"a.ui-state-active\"", ")", ".", "removeClass", "(", "\"ui-state-active\"", ")", ";", "}"], "original_docstring": "With no arguments, closes the currently active menu - if nothing is active it closes all menus.  If passed an argument, it will search for menus BELOW", "docstring": {"block_comment": "With no arguments, closes the currently active menu   if nothing is active it closes all menus.  If passed an argument, it will search for menus BELOW", "line_comment": null}, "docstring_tokens": ["With", "no", "arguments", "closes", "the", "currently", "active", "menu", "if", "nothing", "is", "active", "it", "closes", "all", "menus", ".", "If", "passed", "an", "argument", "it", "will", "search", "for", "menus", "BELOW"], "sample_id": 58, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003723", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}", "code_tokens": ["function", "(", "event", ")", "{", "event", ".", "preventDefault", "(", ")", ";", "}"], "original_docstring": "Prevent focus from sticking to links inside menu after clicking them (focus should always stay on UL during navigation).", "docstring": {"block_comment": "Prevent focus from sticking to links inside menu after clicking them  focus should always stay on UL during navigation .", "line_comment": null}, "docstring_tokens": ["Prevent", "focus", "from", "sticking", "to", "links", "inside", "menu", "after", "clicking", "them", "focus", "should", "always", "stay", "on", "UL", "during", "navigation", "."], "sample_id": 59, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003724", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( pos ) {\n\t\t\t\tvar topOffset = $( this ).css( pos ).offset().top;\n\t\t\t\tif ( topOffset < 0 ) {\n\t\t\t\t\t$( this ).css( \"top\", pos.top - topOffset );\n\t\t\t\t}\n\t\t\t}", "code_tokens": ["function", "(", "pos", ")", "{", "var", "topOffset", "=", "$", "(", "this", ")", ".", "css", "(", "pos", ")", ".", "offset", "(", ")", ".", "top", ";", "if", "(", "topOffset", "<", "0", ")", "{", "$", "(", "this", ")", ".", "css", "(", "\"top\"", ",", "pos", ".", "top", "-", "topOffset", ")", ";", "}", "}"], "original_docstring": "Ensure the titlebar is always visible", "docstring": {"block_comment": "Ensure the titlebar is always visible", "line_comment": null}, "docstring_tokens": ["Ensure", "the", "titlebar", "is", "always", "visible"], "sample_id": 60, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003783", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( element ) {\n\n\t\t// if the element is already wrapped, return it\n\t\tif ( element.parent().is( \".ui-effects-wrapper\" )) {\n\t\t\treturn element.parent();\n\t\t}\n\n\t\t// wrap the element\n\t\tvar props = {\n\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\theight: element.outerHeight(true),\n\t\t\t\t\"float\": element.css( \"float\" )\n\t\t\t},\n\t\t\twrapper = $( \"<div></div>\" )\n\t\t\t\t.addClass( \"ui-effects-wrapper\" )\n\t\t\t\t.css({\n\t\t\t\t\tfontSize: \"100%\",\n\t\t\t\t\tbackground: \"transparent\",\n\t\t\t\t\tborder: \"none\",\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0\n\t\t\t\t}),\n\t\t\t// Store the size in case width/height are defined in % - Fixes #5245\n\t\t\tsize = {\n\t\t\t\twidth: element.width(),\n\t\t\t\theight: element.height()\n\t\t\t},\n\t\t\tactive = document.activeElement;\n\n\t\t// support: Firefox\n\t\t// Firefox incorrectly exposes anonymous content\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=561664\n\t\ttry {\n\t\t\tactive.id;\n\t\t} catch( e ) {\n\t\t\tactive = document.body;\n\t\t}\n\n\t\telement.wrap( wrapper );\n\n\t\t// Fixes #7595 - Elements lose focus when wrapped.\n\t\tif ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {\n\t\t\t$( active ).focus();\n\t\t}\n\n\t\twrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element\n\n\t\t// transfer positioning properties to the wrapper\n\t\tif ( element.css( \"position\" ) === \"static\" ) {\n\t\t\twrapper.css({ position: \"relative\" });\n\t\t\telement.css({ position: \"relative\" });\n\t\t} else {\n\t\t\t$.extend( props, {\n\t\t\t\tposition: element.css( \"position\" ),\n\t\t\t\tzIndex: element.css( \"z-index\" )\n\t\t\t});\n\t\t\t$.each([ \"top\", \"left\", \"bottom\", \"right\" ], function(i, pos) {\n\t\t\t\tprops[ pos ] = element.css( pos );\n\t\t\t\tif ( isNaN( parseInt( props[ pos ], 10 ) ) ) {\n\t\t\t\t\tprops[ pos ] = \"auto\";\n\t\t\t\t}\n\t\t\t});\n\t\t\telement.css({\n\t\t\t\tposition: \"relative\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: \"auto\",\n\t\t\t\tbottom: \"auto\"\n\t\t\t});\n\t\t}\n\t\telement.css(size);\n\n\t\treturn wrapper.css( props ).show();\n\t}", "code_tokens": ["function", "(", "element", ")", "{", "// if the element is already wrapped, return it", "if", "(", "element", ".", "parent", "(", ")", ".", "is", "(", "\".ui-effects-wrapper\"", ")", ")", "{", "return", "element", ".", "parent", "(", ")", ";", "}", "// wrap the element", "var", "props", "=", "{", "width", ":", "element", ".", "outerWidth", "(", "true", ")", ",", "height", ":", "element", ".", "outerHeight", "(", "true", ")", ",", "\"float\"", ":", "element", ".", "css", "(", "\"float\"", ")", "}", ",", "wrapper", "=", "$", "(", "\"<div></div>\"", ")", ".", "addClass", "(", "\"ui-effects-wrapper\"", ")", ".", "css", "(", "{", "fontSize", ":", "\"100%\"", ",", "background", ":", "\"transparent\"", ",", "border", ":", "\"none\"", ",", "margin", ":", "0", ",", "padding", ":", "0", "}", ")", ",", "// Store the size in case width/height are defined in % - Fixes #5245", "size", "=", "{", "width", ":", "element", ".", "width", "(", ")", ",", "height", ":", "element", ".", "height", "(", ")", "}", ",", "active", "=", "document", ".", "activeElement", ";", "// support: Firefox", "// Firefox incorrectly exposes anonymous content", "// https://bugzilla.mozilla.org/show_bug.cgi?id=561664", "try", "{", "active", ".", "id", ";", "}", "catch", "(", "e", ")", "{", "active", "=", "document", ".", "body", ";", "}", "element", ".", "wrap", "(", "wrapper", ")", ";", "// Fixes #7595 - Elements lose focus when wrapped.", "if", "(", "element", "[", "0", "]", "===", "active", "||", "$", ".", "contains", "(", "element", "[", "0", "]", ",", "active", ")", ")", "{", "$", "(", "active", ")", ".", "focus", "(", ")", ";", "}", "wrapper", "=", "element", ".", "parent", "(", ")", ";", "//Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element", "// transfer positioning properties to the wrapper", "if", "(", "element", ".", "css", "(", "\"position\"", ")", "===", "\"static\"", ")", "{", "wrapper", ".", "css", "(", "{", "position", ":", "\"relative\"", "}", ")", ";", "element", ".", "css", "(", "{", "position", ":", "\"relative\"", "}", ")", ";", "}", "else", "{", "$", ".", "extend", "(", "props", ",", "{", "position", ":", "element", ".", "css", "(", "\"position\"", ")", ",", "zIndex", ":", "element", ".", "css", "(", "\"z-index\"", ")", "}", ")", ";", "$", ".", "each", "(", "[", "\"top\"", ",", "\"left\"", ",", "\"bottom\"", ",", "\"right\"", "]", ",", "function", "(", "i", ",", "pos", ")", "{", "props", "[", "pos", "]", "=", "element", ".", "css", "(", "pos", ")", ";", "if", "(", "isNaN", "(", "parseInt", "(", "props", "[", "pos", "]", ",", "10", ")", ")", ")", "{", "props", "[", "pos", "]", "=", "\"auto\"", ";", "}", "}", ")", ";", "element", ".", "css", "(", "{", "position", ":", "\"relative\"", ",", "top", ":", "0", ",", "left", ":", "0", ",", "right", ":", "\"auto\"", ",", "bottom", ":", "\"auto\"", "}", ")", ";", "}", "element", ".", "css", "(", "size", ")", ";", "return", "wrapper", ".", "css", "(", "props", ")", ".", "show", "(", ")", ";", "}"], "original_docstring": "Wraps the element around a wrapper that copies position properties", "docstring": {"block_comment": "Wraps the element around a wrapper that copies position properties", "line_comment": ["if the element is already wrapped, return it", "wrap the element", "Store the size in case width height are defined in     Fixes  5245", null, "Firefox incorrectly exposes anonymous content", "", "Fixes  7595   Elements lose focus when wrapped.", "Hotfix for jQuery 1.4 since some change in wrap   seems to actually lose the reference to the wrapped element", "transfer positioning properties to the wrapper"]}, "docstring_tokens": ["Wraps", "the", "element", "around", "a", "wrapper", "that", "copies", "position", "properties"], "sample_id": 61, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003784", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( origin, original ) {\n\t\tvar y, x;\n\t\tswitch ( origin[ 0 ] ) {\n\t\t\tcase \"top\": y = 0; break;\n\t\t\tcase \"middle\": y = 0.5; break;\n\t\t\tcase \"bottom\": y = 1; break;\n\t\t\tdefault: y = origin[ 0 ] / original.height;\n\t\t}\n\t\tswitch ( origin[ 1 ] ) {\n\t\t\tcase \"left\": x = 0; break;\n\t\t\tcase \"center\": x = 0.5; break;\n\t\t\tcase \"right\": x = 1; break;\n\t\t\tdefault: x = origin[ 1 ] / original.width;\n\t\t}\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}", "code_tokens": ["function", "(", "origin", ",", "original", ")", "{", "var", "y", ",", "x", ";", "switch", "(", "origin", "[", "0", "]", ")", "{", "case", "\"top\"", ":", "y", "=", "0", ";", "break", ";", "case", "\"middle\"", ":", "y", "=", "0.5", ";", "break", ";", "case", "\"bottom\"", ":", "y", "=", "1", ";", "break", ";", "default", ":", "y", "=", "origin", "[", "0", "]", "/", "original", ".", "height", ";", "}", "switch", "(", "origin", "[", "1", "]", ")", "{", "case", "\"left\"", ":", "x", "=", "0", ";", "break", ";", "case", "\"center\"", ":", "x", "=", "0.5", ";", "break", ";", "case", "\"right\"", ":", "x", "=", "1", ";", "break", ";", "default", ":", "x", "=", "origin", "[", "1", "]", "/", "original", ".", "width", ";", "}", "return", "{", "x", ":", "x", ",", "y", ":", "y", "}", ";", "}"], "original_docstring": "Translates a [top,left] array into a baseline value this should be a little more flexible in the future to handle a string & hash", "docstring": {"block_comment": "Translates a  top,left  array into a baseline value this should be a little more flexible in the future to handle a string   hash", "line_comment": null}, "docstring_tokens": ["Translates", "a", "top", "left", "array", "into", "a", "baseline", "value", "this", "should", "be", "a", "little", "more", "flexible", "in", "the", "future", "to", "handle", "a", "string", "hash"], "sample_id": 62, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003785", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( element, set ) {\n\t\tvar val, i;\n\t\tfor( i=0; i < set.length; i++ ) {\n\t\t\tif ( set[ i ] !== null ) {\n\t\t\t\tval = element.data( dataSpace + set[ i ] );\n\t\t\t\t// support: jQuery 1.6.2\n\t\t\t\t// http://bugs.jquery.com/ticket/9917\n\t\t\t\t// jQuery 1.6.2 incorrectly returns undefined for any falsy value.\n\t\t\t\t// We can't differentiate between \"\" and 0 here, so we just assume\n\t\t\t\t// empty string since it's likely to be a more common value...\n\t\t\t\tif ( val === undefined ) {\n\t\t\t\t\tval = \"\";\n\t\t\t\t}\n\t\t\t\telement.css( set[ i ], val );\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["function", "(", "element", ",", "set", ")", "{", "var", "val", ",", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "set", ".", "length", ";", "i", "++", ")", "{", "if", "(", "set", "[", "i", "]", "!==", "null", ")", "{", "val", "=", "element", ".", "data", "(", "dataSpace", "+", "set", "[", "i", "]", ")", ";", "// support: jQuery 1.6.2", "// http://bugs.jquery.com/ticket/9917", "// jQuery 1.6.2 incorrectly returns undefined for any falsy value.", "// We can't differentiate between \"\" and 0 here, so we just assume", "// empty string since it's likely to be a more common value...", "if", "(", "val", "===", "undefined", ")", "{", "val", "=", "\"\"", ";", "}", "element", ".", "css", "(", "set", "[", "i", "]", ",", "val", ")", ";", "}", "}", "}"], "original_docstring": "Restores a set of previously saved properties from a data storage", "docstring": {"block_comment": "Restores a set of previously saved properties from a data storage", "line_comment": [null, "", "jQuery 1.6.2 incorrectly returns undefined for any falsy value.", "We can t differentiate between    and 0 here, so we just assume", "empty string since it s likely to be a more common value..."]}, "docstring_tokens": ["Restores", "a", "set", "of", "previously", "saved", "properties", "from", "a", "data", "storage"], "sample_id": 63, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003786", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( element, set ) {\n\t\tfor( var i=0; i < set.length; i++ ) {\n\t\t\tif ( set[ i ] !== null ) {\n\t\t\t\telement.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );\n\t\t\t}\n\t\t}\n\t}", "code_tokens": ["function", "(", "element", ",", "set", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "set", ".", "length", ";", "i", "++", ")", "{", "if", "(", "set", "[", "i", "]", "!==", "null", ")", "{", "element", ".", "data", "(", "dataSpace", "+", "set", "[", "i", "]", ",", "element", "[", "0", "]", ".", "style", "[", "set", "[", "i", "]", "]", ")", ";", "}", "}", "}"], "original_docstring": "Saves a set of properties in a data storage", "docstring": {"block_comment": "Saves a set of properties in a data storage", "line_comment": null}, "docstring_tokens": ["Saves", "a", "set", "of", "properties", "in", "a", "data", "storage"], "sample_id": 64, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003787", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(item) {\n\n\t\tvar x1 = this.positionAbs.left,\n\t\t\tx2 = x1 + this.helperProportions.width,\n\t\t\ty1 = this.positionAbs.top,\n\t\t\ty2 = y1 + this.helperProportions.height,\n\t\t\tl = item.left,\n\t\t\tr = l + item.width,\n\t\t\tt = item.top,\n\t\t\tb = t + item.height,\n\t\t\tdyClick = this.offset.click.top,\n\t\t\tdxClick = this.offset.click.left,\n\t\t\tisOverElementHeight = ( this.options.axis === \"x\" ) || ( ( y1 + dyClick ) > t && ( y1 + dyClick ) < b ),\n\t\t\tisOverElementWidth = ( this.options.axis === \"y\" ) || ( ( x1 + dxClick ) > l && ( x1 + dxClick ) < r ),\n\t\t\tisOverElement = isOverElementHeight && isOverElementWidth;\n\n\t\tif ( this.options.tolerance === \"pointer\" ||\n\t\t\tthis.options.forcePointerForContainers ||\n\t\t\t(this.options.tolerance !== \"pointer\" && this.helperProportions[this.floating ? \"width\" : \"height\"] > item[this.floating ? \"width\" : \"height\"])\n\t\t) {\n\t\t\treturn isOverElement;\n\t\t} else {\n\n\t\t\treturn (l < x1 + (this.helperProportions.width / 2) && // Right Half\n\t\t\t\tx2 - (this.helperProportions.width / 2) < r && // Left Half\n\t\t\t\tt < y1 + (this.helperProportions.height / 2) && // Bottom Half\n\t\t\t\ty2 - (this.helperProportions.height / 2) < b ); // Top Half\n\n\t\t}\n\t}", "code_tokens": ["function", "(", "item", ")", "{", "var", "x1", "=", "this", ".", "positionAbs", ".", "left", ",", "x2", "=", "x1", "+", "this", ".", "helperProportions", ".", "width", ",", "y1", "=", "this", ".", "positionAbs", ".", "top", ",", "y2", "=", "y1", "+", "this", ".", "helperProportions", ".", "height", ",", "l", "=", "item", ".", "left", ",", "r", "=", "l", "+", "item", ".", "width", ",", "t", "=", "item", ".", "top", ",", "b", "=", "t", "+", "item", ".", "height", ",", "dyClick", "=", "this", ".", "offset", ".", "click", ".", "top", ",", "dxClick", "=", "this", ".", "offset", ".", "click", ".", "left", ",", "isOverElementHeight", "=", "(", "this", ".", "options", ".", "axis", "===", "\"x\"", ")", "||", "(", "(", "y1", "+", "dyClick", ")", ">", "t", "&&", "(", "y1", "+", "dyClick", ")", "<", "b", ")", ",", "isOverElementWidth", "=", "(", "this", ".", "options", ".", "axis", "===", "\"y\"", ")", "||", "(", "(", "x1", "+", "dxClick", ")", ">", "l", "&&", "(", "x1", "+", "dxClick", ")", "<", "r", ")", ",", "isOverElement", "=", "isOverElementHeight", "&&", "isOverElementWidth", ";", "if", "(", "this", ".", "options", ".", "tolerance", "===", "\"pointer\"", "||", "this", ".", "options", ".", "forcePointerForContainers", "||", "(", "this", ".", "options", ".", "tolerance", "!==", "\"pointer\"", "&&", "this", ".", "helperProportions", "[", "this", ".", "floating", "?", "\"width\"", ":", "\"height\"", "]", ">", "item", "[", "this", ".", "floating", "?", "\"width\"", ":", "\"height\"", "]", ")", ")", "{", "return", "isOverElement", ";", "}", "else", "{", "return", "(", "l", "<", "x1", "+", "(", "this", ".", "helperProportions", ".", "width", "/", "2", ")", "&&", "// Right Half", "x2", "-", "(", "this", ".", "helperProportions", ".", "width", "/", "2", ")", "<", "r", "&&", "// Left Half", "t", "<", "y1", "+", "(", "this", ".", "helperProportions", ".", "height", "/", "2", ")", "&&", "// Bottom Half", "y2", "-", "(", "this", ".", "helperProportions", ".", "height", "/", "2", ")", "<", "b", ")", ";", "// Top Half", "}", "}"], "original_docstring": "/* Be careful with the following core functions", "docstring": {"block_comment": "Be careful with the following core functions", "line_comment": ["Right Half", "Left Half", "Bottom Half", "Top Half"]}, "docstring_tokens": ["Be", "careful", "with", "the", "following", "core", "functions"], "sample_id": 65, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003788", "repo": "sureshverity/VHRIS_NEW", "path": "public/media/js/jquery-ui.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(type, event, ui) {\n\t\tui = ui || this._uiHash();\n\t\t$.ui.plugin.call(this, type, [event, ui]);\n\t\t//The absolute position has to be recalculated after plugins\n\t\tif(type === \"drag\") {\n\t\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\n\t\t}\n\t\treturn $.Widget.prototype._trigger.call(this, type, event, ui);\n\t}", "code_tokens": ["function", "(", "type", ",", "event", ",", "ui", ")", "{", "ui", "=", "ui", "||", "this", ".", "_uiHash", "(", ")", ";", "$", ".", "ui", ".", "plugin", ".", "call", "(", "this", ",", "type", ",", "[", "event", ",", "ui", "]", ")", ";", "//The absolute position has to be recalculated after plugins", "if", "(", "type", "===", "\"drag\"", ")", "{", "this", ".", "positionAbs", "=", "this", ".", "_convertPositionTo", "(", "\"absolute\"", ")", ";", "}", "return", "$", ".", "Widget", ".", "prototype", ".", "_trigger", ".", "call", "(", "this", ",", "type", ",", "event", ",", "ui", ")", ";", "}"], "original_docstring": "From now on bulk stuff - mainly helpers", "docstring": {"block_comment": "From now on bulk stuff   mainly helpers", "line_comment": ["The absolute position has to be recalculated after plugins"]}, "docstring_tokens": ["From", "now", "on", "bulk", "stuff", "mainly", "helpers"], "sample_id": 66, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003791", "repo": "dbmalkovsky/flowable-engine", "path": "modules/flowable-ui/flowable-ui-modeler-frontend/src/main/resources/static/modeler/editor-app/toolbar-controller.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(functionName, context /*, args */) {\n            var args = Array.prototype.slice.call(arguments).splice(2);\n            var namespaces = functionName.split(\".\");\n            var func = namespaces.pop();\n            for(var i = 0; i < namespaces.length; i++) {\n                context = context[namespaces[i]];\n            }\n            return context[func].apply(this, args);\n        }", "code_tokens": ["function", "(", "functionName", ",", "context", "/*, args */", ")", "{", "var", "args", "=", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "arguments", ")", ".", "splice", "(", "2", ")", ";", "var", "namespaces", "=", "functionName", ".", "split", "(", "\".\"", ")", ";", "var", "func", "=", "namespaces", ".", "pop", "(", ")", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "namespaces", ".", "length", ";", "i", "++", ")", "{", "context", "=", "context", "[", "namespaces", "[", "i", "]", "]", ";", "}", "return", "context", "[", "func", "]", ".", "apply", "(", "this", ",", "args", ")", ";", "}"], "original_docstring": "Call configurable click handler (From http://stackoverflow.com/questions/359788/how-to-execute-a-javascript-function-when-i-have-its-name-as-a-string)", "docstring": {"block_comment": "Call configurable click handler  From", "line_comment": [", args"]}, "docstring_tokens": ["Call", "configurable", "click", "handler", "From"], "sample_id": 67, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003792", "repo": "nathalialanzendorf/scalapp", "path": "node_modules/mongoose/lib/model.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(err) {\n    if (err && model.schema.options.emitIndexErrors) {\n      model.emit('error', err);\n    }\n    model.emit('index', err);\n    callback && callback(err);\n  }", "code_tokens": ["function", "(", "err", ")", "{", "if", "(", "err", "&&", "model", ".", "schema", ".", "options", ".", "emitIndexErrors", ")", "{", "model", ".", "emit", "(", "'error'", ",", "err", ")", ";", "}", "model", ".", "emit", "(", "'index'", ",", "err", ")", ";", "callback", "&&", "callback", "(", "err", ")", ";", "}"], "original_docstring": "Indexes are created one-by-one to support how MongoDB < 2.4 deals with background indexes.", "docstring": {"block_comment": "Indexes are created one by one to support how MongoDB   2.4 deals with background indexes.", "line_comment": null}, "docstring_tokens": ["Indexes", "are", "created", "one", "by", "one", "to", "support", "how", "MongoDB", "2", ".", "4", "deals", "with", "background", "indexes", "."], "sample_id": 68, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003803", "repo": "ozoneplatform/owf-framework", "path": "web-app/js-lib/dojo-release-1.5.0-src/dojox/xmpp/PresenceService.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(avatarHash) {\n\t\t\tthis.avatarHash = avatarHash;\n\t\t\tthis._setPresence();\n\t}", "code_tokens": ["function", "(", "avatarHash", ")", "{", "this", ".", "avatarHash", "=", "avatarHash", ";", "this", ".", "_setPresence", "(", ")", ";", "}"], "original_docstring": "\n<presence from='juliet@capulet.com/balcony'>\n<x xmlns='vcard-temp:x:update'>\n<photo>sha1-hash-of-image</photo>\n</x>\n</presence>\n\n\n<presence>\n<x xmlns='vcard-temp:x:update'>\n<photo/>\n</x>\n</presence>\n\n", "docstring": {"block_comment": "sha1 hash of image", "line_comment": null}, "docstring_tokens": ["sha1", "hash", "of", "image"], "sample_id": 69, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003809", "repo": "kiwi89/cdnjs", "path": "ajax/libs/systemjs/0.18.5/system.src.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(name, referrerName, referrerAddress) {\n      return name;\n    }", "code_tokens": ["function", "(", "name", ",", "referrerName", ",", "referrerAddress", ")", "{", "return", "name", ";", "}"], "original_docstring": "26.3.3.15 values not implemented 26.3.3.16 @@iterator not implemented 26.3.3.17 @@toStringTag not implemented 26.3.3.18.1", "docstring": {"block_comment": "26.3.3.15 values not implemented 26.3.3.16   iterator not implemented 26.3.3.17   toStringTag not implemented 26.3.3.18.1", "line_comment": null}, "docstring_tokens": ["26", ".", "3", ".", "3", ".", "15", "values", "not", "implemented", "26", ".", "3", ".", "3", ".", "16", "iterator", "not", "implemented", "26", ".", "3", ".", "3", ".", "17", "toStringTag", "not", "implemented", "26", ".", "3", ".", "3", ".", "18", ".", "1"], "sample_id": 70, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003810", "repo": "kiwi89/cdnjs", "path": "ajax/libs/systemjs/0.18.5/system.src.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(name, options) {\n      var loader = this._loader;\n      if (loader.modules[name]) {\n        doEnsureEvaluated(loader.modules[name], [], loader);\n        return Promise.resolve(loader.modules[name].module);\n      }\n      return loader.importPromises[name] || createImportPromise(this, name,\n        loadModule(loader, name, {})\n        .then(function(load) {\n          delete loader.importPromises[name];\n          return evaluateLoadedModule(loader, load);\n        }));\n    }", "code_tokens": ["function", "(", "name", ",", "options", ")", "{", "var", "loader", "=", "this", ".", "_loader", ";", "if", "(", "loader", ".", "modules", "[", "name", "]", ")", "{", "doEnsureEvaluated", "(", "loader", ".", "modules", "[", "name", "]", ",", "[", "]", ",", "loader", ")", ";", "return", "Promise", ".", "resolve", "(", "loader", ".", "modules", "[", "name", "]", ".", "module", ")", ";", "}", "return", "loader", ".", "importPromises", "[", "name", "]", "||", "createImportPromise", "(", "this", ",", "name", ",", "loadModule", "(", "loader", ",", "name", ",", "{", "}", ")", ".", "then", "(", "function", "(", "load", ")", "{", "delete", "loader", ".", "importPromises", "[", "name", "]", ";", "return", "evaluateLoadedModule", "(", "loader", ",", "load", ")", ";", "}", ")", ")", ";", "}"], "original_docstring": "26.3.3.9 keys not implemented 26.3.3.10", "docstring": {"block_comment": "26.3.3.9 keys not implemented 26.3.3.10", "line_comment": null}, "docstring_tokens": ["26", ".", "3", ".", "3", ".", "9", "keys", "not", "implemented", "26", ".", "3", ".", "3", ".", "10"], "sample_id": 71, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003811", "repo": "kiwi89/cdnjs", "path": "ajax/libs/systemjs/0.18.5/system.src.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(key) {\n      if (!this._loader.modules[key])\n        return;\n      doEnsureEvaluated(this._loader.modules[key], [], this);\n      return this._loader.modules[key].module;\n    }", "code_tokens": ["function", "(", "key", ")", "{", "if", "(", "!", "this", ".", "_loader", ".", "modules", "[", "key", "]", ")", "return", ";", "doEnsureEvaluated", "(", "this", ".", "_loader", ".", "modules", "[", "key", "]", ",", "[", "]", ",", "this", ")", ";", "return", "this", ".", "_loader", ".", "modules", "[", "key", "]", ".", "module", ";", "}"], "original_docstring": "26.3.3.4 entries not implemented 26.3.3.5", "docstring": {"block_comment": "26.3.3.4 entries not implemented 26.3.3.5", "line_comment": null}, "docstring_tokens": ["26", ".", "3", ".", "3", ".", "4", "entries", "not", "implemented", "26", ".", "3", ".", "3", ".", "5"], "sample_id": 72, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003812", "repo": "berkmancenter/spectacle", "path": "web/js/app/editor/node_modules/grunt-contrib/node_modules/grunt-contrib-yuidoc/node_modules/yuidocjs/tests/input/charts/BarSeries.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(type, i)\n    {\n        if(this._markers && this._markers[i])\n        {\n            var styles = Y.clone(this.get(\"styles\").marker),\n                markerStyles,\n                state = this._getState(type),\n                xcoords = this.get(\"xcoords\"),\n                ycoords = this.get(\"ycoords\"),\n                marker = this._markers[i],\n                markers,\n                graph = this.get(\"graph\"),\n                seriesCollection = graph.seriesTypes[this.get(\"type\")],\n                seriesLen = seriesCollection.length,\n                seriesStyles,\n                seriesSize = 0,\n                offset = 0,\n                renderer,\n                n = 0,\n                ys = [],\n                order = this.get(\"order\"),\n                config;\n            markerStyles = state == \"off\" || !styles[state] ? styles : styles[state]; \n            markerStyles.fill.color = this._getItemColor(markerStyles.fill.color, i);\n            markerStyles.border.color = this._getItemColor(markerStyles.border.color, i);\n            config = this._getMarkerDimensions(xcoords[i], ycoords[i], styles.height, offset);\n            markerStyles.width = config.calculatedSize;\n            markerStyles.height = Math.min(this._maxSize, markerStyles.height);\n            marker.set(markerStyles);\n            for(; n < seriesLen; ++n)\n            {\n                ys[n] = ycoords[i] + seriesSize;\n                seriesStyles = seriesCollection[n].get(\"styles\").marker;\n                seriesSize += Math.min(this._maxSize, seriesStyles.height); \n                if(order > n)\n                {\n                    offset = seriesSize;\n                }\n                offset -= seriesSize/2;\n            }\n            for(n = 0; n < seriesLen; ++n)\n            {\n                markers = seriesCollection[n].get(\"markers\");\n                if(markers)\n                {\n                    renderer = markers[i];\n                    if(renderer && renderer !== undefined)\n                    {\n                        renderer.set(\"y\", (ys[n] - seriesSize/2));\n                    }\n                }\n            }\n        }\n    }", "code_tokens": ["function", "(", "type", ",", "i", ")", "{", "if", "(", "this", ".", "_markers", "&&", "this", ".", "_markers", "[", "i", "]", ")", "{", "var", "styles", "=", "Y", ".", "clone", "(", "this", ".", "get", "(", "\"styles\"", ")", ".", "marker", ")", ",", "markerStyles", ",", "state", "=", "this", ".", "_getState", "(", "type", ")", ",", "xcoords", "=", "this", ".", "get", "(", "\"xcoords\"", ")", ",", "ycoords", "=", "this", ".", "get", "(", "\"ycoords\"", ")", ",", "marker", "=", "this", ".", "_markers", "[", "i", "]", ",", "markers", ",", "graph", "=", "this", ".", "get", "(", "\"graph\"", ")", ",", "seriesCollection", "=", "graph", ".", "seriesTypes", "[", "this", ".", "get", "(", "\"type\"", ")", "]", ",", "seriesLen", "=", "seriesCollection", ".", "length", ",", "seriesStyles", ",", "seriesSize", "=", "0", ",", "offset", "=", "0", ",", "renderer", ",", "n", "=", "0", ",", "ys", "=", "[", "]", ",", "order", "=", "this", ".", "get", "(", "\"order\"", ")", ",", "config", ";", "markerStyles", "=", "state", "==", "\"off\"", "||", "!", "styles", "[", "state", "]", "?", "styles", ":", "styles", "[", "state", "]", ";", "markerStyles", ".", "fill", ".", "color", "=", "this", ".", "_getItemColor", "(", "markerStyles", ".", "fill", ".", "color", ",", "i", ")", ";", "markerStyles", ".", "border", ".", "color", "=", "this", ".", "_getItemColor", "(", "markerStyles", ".", "border", ".", "color", ",", "i", ")", ";", "config", "=", "this", ".", "_getMarkerDimensions", "(", "xcoords", "[", "i", "]", ",", "ycoords", "[", "i", "]", ",", "styles", ".", "height", ",", "offset", ")", ";", "markerStyles", ".", "width", "=", "config", ".", "calculatedSize", ";", "markerStyles", ".", "height", "=", "Math", ".", "min", "(", "this", ".", "_maxSize", ",", "markerStyles", ".", "height", ")", ";", "marker", ".", "set", "(", "markerStyles", ")", ";", "for", "(", ";", "n", "<", "seriesLen", ";", "++", "n", ")", "{", "ys", "[", "n", "]", "=", "ycoords", "[", "i", "]", "+", "seriesSize", ";", "seriesStyles", "=", "seriesCollection", "[", "n", "]", ".", "get", "(", "\"styles\"", ")", ".", "marker", ";", "seriesSize", "+=", "Math", ".", "min", "(", "this", ".", "_maxSize", ",", "seriesStyles", ".", "height", ")", ";", "if", "(", "order", ">", "n", ")", "{", "offset", "=", "seriesSize", ";", "}", "offset", "-=", "seriesSize", "/", "2", ";", "}", "for", "(", "n", "=", "0", ";", "n", "<", "seriesLen", ";", "++", "n", ")", "{", "markers", "=", "seriesCollection", "[", "n", "]", ".", "get", "(", "\"markers\"", ")", ";", "if", "(", "markers", ")", "{", "renderer", "=", "markers", "[", "i", "]", ";", "if", "(", "renderer", "&&", "renderer", "!==", "undefined", ")", "{", "renderer", ".", "set", "(", "\"y\"", ",", "(", "ys", "[", "n", "]", "-", "seriesSize", "/", "2", ")", ")", ";", "}", "}", "}", "}", "}"], "original_docstring": "\nResizes and positions markers based on a mouse interaction.\n\n@method updateMarkerState\n@param {String} type state of the marker\n@param {Number} i index of the marker\n@protected\n", "docstring": {"block_comment": "Resizes and positions markers based on a mouse interaction.", "line_comment": null}, "docstring_tokens": ["Resizes", "and", "positions", "markers", "based", "on", "a", "mouse", "interaction", "."], "sample_id": 73, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003812", "repo": "berkmancenter/spectacle", "path": "web/js/app/editor/node_modules/grunt-contrib/node_modules/grunt-contrib-yuidoc/node_modules/yuidocjs/tests/input/charts/BarSeries.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(type, i)\n    {\n        if(this._markers && this._markers[i])\n        {\n            var styles = Y.clone(this.get(\"styles\").marker),\n                markerStyles,\n                state = this._getState(type),\n                xcoords = this.get(\"xcoords\"),\n                ycoords = this.get(\"ycoords\"),\n                marker = this._markers[i],\n                markers,\n                graph = this.get(\"graph\"),\n                seriesCollection = graph.seriesTypes[this.get(\"type\")],\n                seriesLen = seriesCollection.length,\n                seriesStyles,\n                seriesSize = 0,\n                offset = 0,\n                renderer,\n                n = 0,\n                ys = [],\n                order = this.get(\"order\"),\n                config;\n            markerStyles = state == \"off\" || !styles[state] ? styles : styles[state]; \n            markerStyles.fill.color = this._getItemColor(markerStyles.fill.color, i);\n            markerStyles.border.color = this._getItemColor(markerStyles.border.color, i);\n            config = this._getMarkerDimensions(xcoords[i], ycoords[i], styles.height, offset);\n            markerStyles.width = config.calculatedSize;\n            markerStyles.height = Math.min(this._maxSize, markerStyles.height);\n            marker.set(markerStyles);\n            for(; n < seriesLen; ++n)\n            {\n                ys[n] = ycoords[i] + seriesSize;\n                seriesStyles = seriesCollection[n].get(\"styles\").marker;\n                seriesSize += Math.min(this._maxSize, seriesStyles.height); \n                if(order > n)\n                {\n                    offset = seriesSize;\n                }\n                offset -= seriesSize/2;\n            }\n            for(n = 0; n < seriesLen; ++n)\n            {\n                markers = seriesCollection[n].get(\"markers\");\n                if(markers)\n                {\n                    renderer = markers[i];\n                    if(renderer && renderer !== undefined)\n                    {\n                        renderer.set(\"y\", (ys[n] - seriesSize/2));\n                    }\n                }\n            }\n        }\n    }", "code_tokens": ["function", "(", "type", ",", "i", ")", "{", "if", "(", "this", ".", "_markers", "&&", "this", ".", "_markers", "[", "i", "]", ")", "{", "var", "styles", "=", "Y", ".", "clone", "(", "this", ".", "get", "(", "\"styles\"", ")", ".", "marker", ")", ",", "markerStyles", ",", "state", "=", "this", ".", "_getState", "(", "type", ")", ",", "xcoords", "=", "this", ".", "get", "(", "\"xcoords\"", ")", ",", "ycoords", "=", "this", ".", "get", "(", "\"ycoords\"", ")", ",", "marker", "=", "this", ".", "_markers", "[", "i", "]", ",", "markers", ",", "graph", "=", "this", ".", "get", "(", "\"graph\"", ")", ",", "seriesCollection", "=", "graph", ".", "seriesTypes", "[", "this", ".", "get", "(", "\"type\"", ")", "]", ",", "seriesLen", "=", "seriesCollection", ".", "length", ",", "seriesStyles", ",", "seriesSize", "=", "0", ",", "offset", "=", "0", ",", "renderer", ",", "n", "=", "0", ",", "ys", "=", "[", "]", ",", "order", "=", "this", ".", "get", "(", "\"order\"", ")", ",", "config", ";", "markerStyles", "=", "state", "==", "\"off\"", "||", "!", "styles", "[", "state", "]", "?", "styles", ":", "styles", "[", "state", "]", ";", "markerStyles", ".", "fill", ".", "color", "=", "this", ".", "_getItemColor", "(", "markerStyles", ".", "fill", ".", "color", ",", "i", ")", ";", "markerStyles", ".", "border", ".", "color", "=", "this", ".", "_getItemColor", "(", "markerStyles", ".", "border", ".", "color", ",", "i", ")", ";", "config", "=", "this", ".", "_getMarkerDimensions", "(", "xcoords", "[", "i", "]", ",", "ycoords", "[", "i", "]", ",", "styles", ".", "height", ",", "offset", ")", ";", "markerStyles", ".", "width", "=", "config", ".", "calculatedSize", ";", "markerStyles", ".", "height", "=", "Math", ".", "min", "(", "this", ".", "_maxSize", ",", "markerStyles", ".", "height", ")", ";", "marker", ".", "set", "(", "markerStyles", ")", ";", "for", "(", ";", "n", "<", "seriesLen", ";", "++", "n", ")", "{", "ys", "[", "n", "]", "=", "ycoords", "[", "i", "]", "+", "seriesSize", ";", "seriesStyles", "=", "seriesCollection", "[", "n", "]", ".", "get", "(", "\"styles\"", ")", ".", "marker", ";", "seriesSize", "+=", "Math", ".", "min", "(", "this", ".", "_maxSize", ",", "seriesStyles", ".", "height", ")", ";", "if", "(", "order", ">", "n", ")", "{", "offset", "=", "seriesSize", ";", "}", "offset", "-=", "seriesSize", "/", "2", ";", "}", "for", "(", "n", "=", "0", ";", "n", "<", "seriesLen", ";", "++", "n", ")", "{", "markers", "=", "seriesCollection", "[", "n", "]", ".", "get", "(", "\"markers\"", ")", ";", "if", "(", "markers", ")", "{", "renderer", "=", "markers", "[", "i", "]", ";", "if", "(", "renderer", "&&", "renderer", "!==", "undefined", ")", "{", "renderer", ".", "set", "(", "\"y\"", ",", "(", "ys", "[", "n", "]", "-", "seriesSize", "/", "2", ")", ")", ";", "}", "}", "}", "}", "}"], "original_docstring": "\nResizes and positions markers based on a mouse interaction.\n\n@method updateMarkerState\n@param {String} type state of the marker\n@param {Number} i index of the marker\n@protected\n", "docstring": {"block_comment": "Resizes and positions markers based on a mouse interaction.", "line_comment": null}, "docstring_tokens": ["state", "of", "the", "marker"], "sample_id": 73, "prompt_tokens": ["<javascript>", "<param>", "type"], "comment_type": "param", "sentence_id": 1}
{"id": "21003812", "repo": "berkmancenter/spectacle", "path": "web/js/app/editor/node_modules/grunt-contrib/node_modules/grunt-contrib-yuidoc/node_modules/yuidocjs/tests/input/charts/BarSeries.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(type, i)\n    {\n        if(this._markers && this._markers[i])\n        {\n            var styles = Y.clone(this.get(\"styles\").marker),\n                markerStyles,\n                state = this._getState(type),\n                xcoords = this.get(\"xcoords\"),\n                ycoords = this.get(\"ycoords\"),\n                marker = this._markers[i],\n                markers,\n                graph = this.get(\"graph\"),\n                seriesCollection = graph.seriesTypes[this.get(\"type\")],\n                seriesLen = seriesCollection.length,\n                seriesStyles,\n                seriesSize = 0,\n                offset = 0,\n                renderer,\n                n = 0,\n                ys = [],\n                order = this.get(\"order\"),\n                config;\n            markerStyles = state == \"off\" || !styles[state] ? styles : styles[state]; \n            markerStyles.fill.color = this._getItemColor(markerStyles.fill.color, i);\n            markerStyles.border.color = this._getItemColor(markerStyles.border.color, i);\n            config = this._getMarkerDimensions(xcoords[i], ycoords[i], styles.height, offset);\n            markerStyles.width = config.calculatedSize;\n            markerStyles.height = Math.min(this._maxSize, markerStyles.height);\n            marker.set(markerStyles);\n            for(; n < seriesLen; ++n)\n            {\n                ys[n] = ycoords[i] + seriesSize;\n                seriesStyles = seriesCollection[n].get(\"styles\").marker;\n                seriesSize += Math.min(this._maxSize, seriesStyles.height); \n                if(order > n)\n                {\n                    offset = seriesSize;\n                }\n                offset -= seriesSize/2;\n            }\n            for(n = 0; n < seriesLen; ++n)\n            {\n                markers = seriesCollection[n].get(\"markers\");\n                if(markers)\n                {\n                    renderer = markers[i];\n                    if(renderer && renderer !== undefined)\n                    {\n                        renderer.set(\"y\", (ys[n] - seriesSize/2));\n                    }\n                }\n            }\n        }\n    }", "code_tokens": ["function", "(", "type", ",", "i", ")", "{", "if", "(", "this", ".", "_markers", "&&", "this", ".", "_markers", "[", "i", "]", ")", "{", "var", "styles", "=", "Y", ".", "clone", "(", "this", ".", "get", "(", "\"styles\"", ")", ".", "marker", ")", ",", "markerStyles", ",", "state", "=", "this", ".", "_getState", "(", "type", ")", ",", "xcoords", "=", "this", ".", "get", "(", "\"xcoords\"", ")", ",", "ycoords", "=", "this", ".", "get", "(", "\"ycoords\"", ")", ",", "marker", "=", "this", ".", "_markers", "[", "i", "]", ",", "markers", ",", "graph", "=", "this", ".", "get", "(", "\"graph\"", ")", ",", "seriesCollection", "=", "graph", ".", "seriesTypes", "[", "this", ".", "get", "(", "\"type\"", ")", "]", ",", "seriesLen", "=", "seriesCollection", ".", "length", ",", "seriesStyles", ",", "seriesSize", "=", "0", ",", "offset", "=", "0", ",", "renderer", ",", "n", "=", "0", ",", "ys", "=", "[", "]", ",", "order", "=", "this", ".", "get", "(", "\"order\"", ")", ",", "config", ";", "markerStyles", "=", "state", "==", "\"off\"", "||", "!", "styles", "[", "state", "]", "?", "styles", ":", "styles", "[", "state", "]", ";", "markerStyles", ".", "fill", ".", "color", "=", "this", ".", "_getItemColor", "(", "markerStyles", ".", "fill", ".", "color", ",", "i", ")", ";", "markerStyles", ".", "border", ".", "color", "=", "this", ".", "_getItemColor", "(", "markerStyles", ".", "border", ".", "color", ",", "i", ")", ";", "config", "=", "this", ".", "_getMarkerDimensions", "(", "xcoords", "[", "i", "]", ",", "ycoords", "[", "i", "]", ",", "styles", ".", "height", ",", "offset", ")", ";", "markerStyles", ".", "width", "=", "config", ".", "calculatedSize", ";", "markerStyles", ".", "height", "=", "Math", ".", "min", "(", "this", ".", "_maxSize", ",", "markerStyles", ".", "height", ")", ";", "marker", ".", "set", "(", "markerStyles", ")", ";", "for", "(", ";", "n", "<", "seriesLen", ";", "++", "n", ")", "{", "ys", "[", "n", "]", "=", "ycoords", "[", "i", "]", "+", "seriesSize", ";", "seriesStyles", "=", "seriesCollection", "[", "n", "]", ".", "get", "(", "\"styles\"", ")", ".", "marker", ";", "seriesSize", "+=", "Math", ".", "min", "(", "this", ".", "_maxSize", ",", "seriesStyles", ".", "height", ")", ";", "if", "(", "order", ">", "n", ")", "{", "offset", "=", "seriesSize", ";", "}", "offset", "-=", "seriesSize", "/", "2", ";", "}", "for", "(", "n", "=", "0", ";", "n", "<", "seriesLen", ";", "++", "n", ")", "{", "markers", "=", "seriesCollection", "[", "n", "]", ".", "get", "(", "\"markers\"", ")", ";", "if", "(", "markers", ")", "{", "renderer", "=", "markers", "[", "i", "]", ";", "if", "(", "renderer", "&&", "renderer", "!==", "undefined", ")", "{", "renderer", ".", "set", "(", "\"y\"", ",", "(", "ys", "[", "n", "]", "-", "seriesSize", "/", "2", ")", ")", ";", "}", "}", "}", "}", "}"], "original_docstring": "\nResizes and positions markers based on a mouse interaction.\n\n@method updateMarkerState\n@param {String} type state of the marker\n@param {Number} i index of the marker\n@protected\n", "docstring": {"block_comment": "Resizes and positions markers based on a mouse interaction.", "line_comment": null}, "docstring_tokens": ["index", "of", "the", "marker"], "sample_id": 73, "prompt_tokens": ["<javascript>", "<param>", "i"], "comment_type": "param", "sentence_id": 2}
{"id": "21003813", "repo": "berkmancenter/spectacle", "path": "web/js/app/editor/node_modules/grunt-contrib/node_modules/grunt-contrib-yuidoc/node_modules/yuidocjs/tests/input/charts/BarSeries.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(xcoord, ycoord, calculatedSize, offset)\n    {\n        var config = {\n            top: ycoord + offset\n        };\n        if(xcoord >= this._leftOrigin)\n        {\n            config.left = this._leftOrigin;\n            config.calculatedSize = xcoord - config.left;\n        }\n        else\n        {\n            config.left = xcoord;\n            config.calculatedSize = this._leftOrigin - xcoord;\n        }\n        return config;\n    }", "code_tokens": ["function", "(", "xcoord", ",", "ycoord", ",", "calculatedSize", ",", "offset", ")", "{", "var", "config", "=", "{", "top", ":", "ycoord", "+", "offset", "}", ";", "if", "(", "xcoord", ">=", "this", ".", "_leftOrigin", ")", "{", "config", ".", "left", "=", "this", ".", "_leftOrigin", ";", "config", ".", "calculatedSize", "=", "xcoord", "-", "config", ".", "left", ";", "}", "else", "{", "config", ".", "left", "=", "xcoord", ";", "config", ".", "calculatedSize", "=", "this", ".", "_leftOrigin", "-", "xcoord", ";", "}", "return", "config", ";", "}"], "original_docstring": "\nHelper method for calculating the size of markers.\n\n@method _getMarkerDimensions\n@param {Number} xcoord The x-coordinate representing the data point for the marker.\n@param {Number} ycoord The y-coordinate representing the data point for the marker.\n@param {Number} calculatedSize The calculated size for the marker. For a `BarSeries` is it the width. For a `ColumnSeries` it is the height.\n@param {Number} offset Distance of position offset dictated by other marker series in the same graph.\n@return Object\n@private\n", "docstring": {"block_comment": "Helper method for calculating the size of markers.", "line_comment": null}, "docstring_tokens": ["Helper", "method", "for", "calculating", "the", "size", "of", "markers", "."], "sample_id": 74, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003813", "repo": "berkmancenter/spectacle", "path": "web/js/app/editor/node_modules/grunt-contrib/node_modules/grunt-contrib-yuidoc/node_modules/yuidocjs/tests/input/charts/BarSeries.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(xcoord, ycoord, calculatedSize, offset)\n    {\n        var config = {\n            top: ycoord + offset\n        };\n        if(xcoord >= this._leftOrigin)\n        {\n            config.left = this._leftOrigin;\n            config.calculatedSize = xcoord - config.left;\n        }\n        else\n        {\n            config.left = xcoord;\n            config.calculatedSize = this._leftOrigin - xcoord;\n        }\n        return config;\n    }", "code_tokens": ["function", "(", "xcoord", ",", "ycoord", ",", "calculatedSize", ",", "offset", ")", "{", "var", "config", "=", "{", "top", ":", "ycoord", "+", "offset", "}", ";", "if", "(", "xcoord", ">=", "this", ".", "_leftOrigin", ")", "{", "config", ".", "left", "=", "this", ".", "_leftOrigin", ";", "config", ".", "calculatedSize", "=", "xcoord", "-", "config", ".", "left", ";", "}", "else", "{", "config", ".", "left", "=", "xcoord", ";", "config", ".", "calculatedSize", "=", "this", ".", "_leftOrigin", "-", "xcoord", ";", "}", "return", "config", ";", "}"], "original_docstring": "\nHelper method for calculating the size of markers.\n\n@method _getMarkerDimensions\n@param {Number} xcoord The x-coordinate representing the data point for the marker.\n@param {Number} ycoord The y-coordinate representing the data point for the marker.\n@param {Number} calculatedSize The calculated size for the marker. For a `BarSeries` is it the width. For a `ColumnSeries` it is the height.\n@param {Number} offset Distance of position offset dictated by other marker series in the same graph.\n@return Object\n@private\n", "docstring": {"block_comment": "Helper method for calculating the size of markers.", "line_comment": null}, "docstring_tokens": ["The", "x", "-", "coordinate", "representing", "the", "data", "point", "for", "the", "marker", "."], "sample_id": 74, "prompt_tokens": ["<javascript>", "<param>", "xcoord"], "comment_type": "param", "sentence_id": 1}
{"id": "21003813", "repo": "berkmancenter/spectacle", "path": "web/js/app/editor/node_modules/grunt-contrib/node_modules/grunt-contrib-yuidoc/node_modules/yuidocjs/tests/input/charts/BarSeries.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(xcoord, ycoord, calculatedSize, offset)\n    {\n        var config = {\n            top: ycoord + offset\n        };\n        if(xcoord >= this._leftOrigin)\n        {\n            config.left = this._leftOrigin;\n            config.calculatedSize = xcoord - config.left;\n        }\n        else\n        {\n            config.left = xcoord;\n            config.calculatedSize = this._leftOrigin - xcoord;\n        }\n        return config;\n    }", "code_tokens": ["function", "(", "xcoord", ",", "ycoord", ",", "calculatedSize", ",", "offset", ")", "{", "var", "config", "=", "{", "top", ":", "ycoord", "+", "offset", "}", ";", "if", "(", "xcoord", ">=", "this", ".", "_leftOrigin", ")", "{", "config", ".", "left", "=", "this", ".", "_leftOrigin", ";", "config", ".", "calculatedSize", "=", "xcoord", "-", "config", ".", "left", ";", "}", "else", "{", "config", ".", "left", "=", "xcoord", ";", "config", ".", "calculatedSize", "=", "this", ".", "_leftOrigin", "-", "xcoord", ";", "}", "return", "config", ";", "}"], "original_docstring": "\nHelper method for calculating the size of markers.\n\n@method _getMarkerDimensions\n@param {Number} xcoord The x-coordinate representing the data point for the marker.\n@param {Number} ycoord The y-coordinate representing the data point for the marker.\n@param {Number} calculatedSize The calculated size for the marker. For a `BarSeries` is it the width. For a `ColumnSeries` it is the height.\n@param {Number} offset Distance of position offset dictated by other marker series in the same graph.\n@return Object\n@private\n", "docstring": {"block_comment": "Helper method for calculating the size of markers.", "line_comment": null}, "docstring_tokens": ["The", "y", "-", "coordinate", "representing", "the", "data", "point", "for", "the", "marker", "."], "sample_id": 74, "prompt_tokens": ["<javascript>", "<param>", "ycoord"], "comment_type": "param", "sentence_id": 2}
{"id": "21003813", "repo": "berkmancenter/spectacle", "path": "web/js/app/editor/node_modules/grunt-contrib/node_modules/grunt-contrib-yuidoc/node_modules/yuidocjs/tests/input/charts/BarSeries.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(xcoord, ycoord, calculatedSize, offset)\n    {\n        var config = {\n            top: ycoord + offset\n        };\n        if(xcoord >= this._leftOrigin)\n        {\n            config.left = this._leftOrigin;\n            config.calculatedSize = xcoord - config.left;\n        }\n        else\n        {\n            config.left = xcoord;\n            config.calculatedSize = this._leftOrigin - xcoord;\n        }\n        return config;\n    }", "code_tokens": ["function", "(", "xcoord", ",", "ycoord", ",", "calculatedSize", ",", "offset", ")", "{", "var", "config", "=", "{", "top", ":", "ycoord", "+", "offset", "}", ";", "if", "(", "xcoord", ">=", "this", ".", "_leftOrigin", ")", "{", "config", ".", "left", "=", "this", ".", "_leftOrigin", ";", "config", ".", "calculatedSize", "=", "xcoord", "-", "config", ".", "left", ";", "}", "else", "{", "config", ".", "left", "=", "xcoord", ";", "config", ".", "calculatedSize", "=", "this", ".", "_leftOrigin", "-", "xcoord", ";", "}", "return", "config", ";", "}"], "original_docstring": "\nHelper method for calculating the size of markers.\n\n@method _getMarkerDimensions\n@param {Number} xcoord The x-coordinate representing the data point for the marker.\n@param {Number} ycoord The y-coordinate representing the data point for the marker.\n@param {Number} calculatedSize The calculated size for the marker. For a `BarSeries` is it the width. For a `ColumnSeries` it is the height.\n@param {Number} offset Distance of position offset dictated by other marker series in the same graph.\n@return Object\n@private\n", "docstring": {"block_comment": "Helper method for calculating the size of markers.", "line_comment": null}, "docstring_tokens": ["The", "calculated", "size", "for", "the", "marker", ".", "For", "a", "BarSeries", "is", "it", "the", "width", ".", "For", "a", "ColumnSeries", "it", "is", "the", "height", "."], "sample_id": 74, "prompt_tokens": ["<javascript>", "<param>", "calculatedSize"], "comment_type": "param", "sentence_id": 3}
{"id": "21003813", "repo": "berkmancenter/spectacle", "path": "web/js/app/editor/node_modules/grunt-contrib/node_modules/grunt-contrib-yuidoc/node_modules/yuidocjs/tests/input/charts/BarSeries.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(xcoord, ycoord, calculatedSize, offset)\n    {\n        var config = {\n            top: ycoord + offset\n        };\n        if(xcoord >= this._leftOrigin)\n        {\n            config.left = this._leftOrigin;\n            config.calculatedSize = xcoord - config.left;\n        }\n        else\n        {\n            config.left = xcoord;\n            config.calculatedSize = this._leftOrigin - xcoord;\n        }\n        return config;\n    }", "code_tokens": ["function", "(", "xcoord", ",", "ycoord", ",", "calculatedSize", ",", "offset", ")", "{", "var", "config", "=", "{", "top", ":", "ycoord", "+", "offset", "}", ";", "if", "(", "xcoord", ">=", "this", ".", "_leftOrigin", ")", "{", "config", ".", "left", "=", "this", ".", "_leftOrigin", ";", "config", ".", "calculatedSize", "=", "xcoord", "-", "config", ".", "left", ";", "}", "else", "{", "config", ".", "left", "=", "xcoord", ";", "config", ".", "calculatedSize", "=", "this", ".", "_leftOrigin", "-", "xcoord", ";", "}", "return", "config", ";", "}"], "original_docstring": "\nHelper method for calculating the size of markers.\n\n@method _getMarkerDimensions\n@param {Number} xcoord The x-coordinate representing the data point for the marker.\n@param {Number} ycoord The y-coordinate representing the data point for the marker.\n@param {Number} calculatedSize The calculated size for the marker. For a `BarSeries` is it the width. For a `ColumnSeries` it is the height.\n@param {Number} offset Distance of position offset dictated by other marker series in the same graph.\n@return Object\n@private\n", "docstring": {"block_comment": "Helper method for calculating the size of markers.", "line_comment": null}, "docstring_tokens": ["Distance", "of", "position", "offset", "dictated", "by", "other", "marker", "series", "in", "the", "same", "graph", "."], "sample_id": 74, "prompt_tokens": ["<javascript>", "<param>", "offset"], "comment_type": "param", "sentence_id": 4}
{"id": "21003814", "repo": "labase/activnce", "path": "main/static/yui/3.13.0/datasource-arrayschema/datasource-arrayschema.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(e) {\n        var data = (Y.DataSource.IO && (this.get(\"host\") instanceof Y.DataSource.IO) && Y.Lang.isString(e.data.responseText)) ? e.data.responseText : e.data,\n            response = Y.DataSchema.Array.apply.call(this, this.get(\"schema\"), data),\n            payload = e.details[0];\n\n        // Default\n        if (!response) {\n            response = {\n                meta: {},\n                results: data\n            };\n        }\n\n        payload.response = response;\n\n        this.get(\"host\").fire(\"response\", payload);\n\n        return new Y.Do.Halt(\"DataSourceArraySchema plugin halted _defDataFn\");\n    }", "code_tokens": ["function", "(", "e", ")", "{", "var", "data", "=", "(", "Y", ".", "DataSource", ".", "IO", "&&", "(", "this", ".", "get", "(", "\"host\"", ")", "instanceof", "Y", ".", "DataSource", ".", "IO", ")", "&&", "Y", ".", "Lang", ".", "isString", "(", "e", ".", "data", ".", "responseText", ")", ")", "?", "e", ".", "data", ".", "responseText", ":", "e", ".", "data", ",", "response", "=", "Y", ".", "DataSchema", ".", "Array", ".", "apply", ".", "call", "(", "this", ",", "this", ".", "get", "(", "\"schema\"", ")", ",", "data", ")", ",", "payload", "=", "e", ".", "details", "[", "0", "]", ";", "// Default", "if", "(", "!", "response", ")", "{", "response", "=", "{", "meta", ":", "{", "}", ",", "results", ":", "data", "}", ";", "}", "payload", ".", "response", "=", "response", ";", "this", ".", "get", "(", "\"host\"", ")", ".", "fire", "(", "\"response\"", ",", "payload", ")", ";", "return", "new", "Y", ".", "Do", ".", "Halt", "(", "\"DataSourceArraySchema plugin halted _defDataFn\"", ")", ";", "}"], "original_docstring": "\nParses raw data into a normalized response.\n\n@method _beforeDefDataFn\n@param tId {Number} Unique transaction ID.\n@param request {Object} The request.\n@param callback {Object} The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n@param data {Object} Raw data.\n@protected\n", "docstring": {"block_comment": "Parses raw data into a normalized response.", "line_comment": ["Default"]}, "docstring_tokens": ["Parses", "raw", "data", "into", "a", "normalized", "response", "."], "sample_id": 75, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003815", "repo": "labase/activnce", "path": "main/static/yui/3.13.0/datasource-arrayschema/datasource-arrayschema.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(config) {\n        this.doBefore(\"_defDataFn\", this._beforeDefDataFn);\n    }", "code_tokens": ["function", "(", "config", ")", "{", "this", ".", "doBefore", "(", "\"_defDataFn\"", ",", "this", ".", "_beforeDefDataFn", ")", ";", "}"], "original_docstring": "\nInternal init() handler.\n\n@method initializer\n@param config {Object} Config object.\n@private\n", "docstring": {"block_comment": "Internal init   handler.", "line_comment": null}, "docstring_tokens": ["Internal", "init", "handler", "."], "sample_id": 76, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003816", "repo": "labase/activnce", "path": "main/static/yui/3.13.0/datasource-arrayschema/datasource-arrayschema.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function() {\n    DataSourceArraySchema.superclass.constructor.apply(this, arguments);\n}", "code_tokens": ["function", "(", ")", "{", "DataSourceArraySchema", ".", "superclass", ".", "constructor", ".", "apply", "(", "this", ",", "arguments", ")", ";", "}"], "original_docstring": "\nExtends DataSource with schema-parsing on array data.\n\n@module datasource\n@submodule datasource-arrayschema\n \nAdds schema-parsing to the DataSource Utility.\n@class DataSourceArraySchema\n@extends Plugin.Base\n", "docstring": {"block_comment": "Extends DataSource with schema parsing on array data.", "line_comment": null}, "docstring_tokens": ["Extends", "DataSource", "with", "schema", "parsing", "on", "array", "data", "."], "sample_id": 77, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003817", "repo": "jerome-jacob/selenium", "path": "third_party/js/wgxpath/node.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(node) {\n    return wgxpath.userAgent.IE_DOC_PRE_9 &&\n        node.nodeName.toLowerCase() == 'title';\n  }", "code_tokens": ["function", "(", "node", ")", "{", "return", "wgxpath", ".", "userAgent", ".", "IE_DOC_PRE_9", "&&", "node", ".", "nodeName", ".", "toLowerCase", "(", ")", "==", "'title'", ";", "}"], "original_docstring": "Old IE title problem.", "docstring": {"block_comment": "Old IE title problem.", "line_comment": null}, "docstring_tokens": ["Old", "IE", "title", "problem", "."], "sample_id": 78, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003818", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function($cell, column) {\n\t\tvar wo = $cell.closest('table')[0].config.widgetOptions;\n\t\tif (!wo.filter_initialized) {\n\t\t\t// add updates by column since this function\n\t\t\t// may be called numerous times before initialization\n\t\t\two.filter_formatterInit[column] = 1;\n\t\t}\n\t}", "code_tokens": ["function", "(", "$cell", ",", "column", ")", "{", "var", "wo", "=", "$cell", ".", "closest", "(", "'table'", ")", "[", "0", "]", ".", "config", ".", "widgetOptions", ";", "if", "(", "!", "wo", ".", "filter_initialized", ")", "{", "// add updates by column since this function", "// may be called numerous times before initialization", "wo", ".", "filter_formatterInit", "[", "column", "]", "=", "1", ";", "}", "}"], "original_docstring": "$cell parameter, but not the config, is passed to the filter_formatters, so we have to work with it instead", "docstring": {"block_comment": " cell parameter, but not the config, is passed to the filter_formatters, so we have to work with it instead", "line_comment": ["add updates by column since this function", "may be called numerous times before initialization"]}, "docstring_tokens": ["cell", "parameter", "but", "not", "the", "config", "is", "passed", "to", "the", "filter_formatters", "so", "we", "have", "to", "work", "with", "it", "instead"], "sample_id": 79, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003819", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( c, data ) {\n\t\t\tif ( /^~/.test(data.iFilter) ) {\n\t\t\t\tvar indx,\n\t\t\t\t\tpatternIndx = 0,\n\t\t\t\t\tlen = data.iExact.length,\n\t\t\t\t\tpattern = ts.filter.parseFilter(c, data.iFilter.slice(1), data.index, data.parsed[data.index]);\n\t\t\t\tfor (indx = 0; indx < len; indx++) {\n\t\t\t\t\tif (data.iExact[indx] === pattern[patternIndx]) {\n\t\t\t\t\t\tpatternIndx += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (patternIndx === pattern.length) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["function", "(", "c", ",", "data", ")", "{", "if", "(", "/", "^~", "/", ".", "test", "(", "data", ".", "iFilter", ")", ")", "{", "var", "indx", ",", "patternIndx", "=", "0", ",", "len", "=", "data", ".", "iExact", ".", "length", ",", "pattern", "=", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "data", ".", "iFilter", ".", "slice", "(", "1", ")", ",", "data", ".", "index", ",", "data", ".", "parsed", "[", "data", ".", "index", "]", ")", ";", "for", "(", "indx", "=", "0", ";", "indx", "<", "len", ";", "indx", "++", ")", "{", "if", "(", "data", ".", "iExact", "[", "indx", "]", "===", "pattern", "[", "patternIndx", "]", ")", "{", "patternIndx", "+=", "1", ";", "}", "}", "if", "(", "patternIndx", "===", "pattern", ".", "length", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "return", "null", ";", "}"], "original_docstring": "fuzzy text search; modified from https://github.com/mattyork/fuzzy (MIT license)", "docstring": {"block_comment": "fuzzy text search  modified from   MIT license ", "line_comment": null}, "docstring_tokens": ["fuzzy", "text", "search", "modified", "from", "MIT", "license"], "sample_id": 80, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003820", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( c, data ) {\n\t\t\tif ( /[\\?\\*\\|]/.test(data.iFilter) || ts.filter.regex.orReplace.test(data.filter) ) {\n\t\t\t\tvar index = data.index,\n\t\t\t\t\tparsed = data.parsed[index],\n\t\t\t\t\tquery = ts.filter.parseFilter(c, data.iFilter.replace(ts.filter.regex.orReplace, \"|\"), index, parsed);\n\t\t\t\t// look for an exact match with the \"or\" unless the \"filter-match\" class is found\n\t\t\t\tif (!c.$headers.filter('[data-column=\"' + index + '\"]:last').hasClass('filter-match') && /\\|/.test(query)) {\n\t\t\t\t\t// show all results while using filter match. Fixes #727\n\t\t\t\t\tif (query[ query.length - 1 ] === '|') { query += '*'; }\n\t\t\t\t\tquery = data.anyMatch && $.isArray(data.rowArray) ? '(' + query + ')' : '^(' + query + ')$';\n\t\t\t\t}\n\t\t\t\t// parsing the filter may not work properly when using wildcards =/\n\t\t\t\treturn new RegExp( query.replace(/\\?/g, '\\\\S{1}').replace(/\\*/g, '\\\\S*') ).test(data.iExact);\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["function", "(", "c", ",", "data", ")", "{", "if", "(", "/", "[\\?\\*\\|]", "/", ".", "test", "(", "data", ".", "iFilter", ")", "||", "ts", ".", "filter", ".", "regex", ".", "orReplace", ".", "test", "(", "data", ".", "filter", ")", ")", "{", "var", "index", "=", "data", ".", "index", ",", "parsed", "=", "data", ".", "parsed", "[", "index", "]", ",", "query", "=", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "data", ".", "iFilter", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "orReplace", ",", "\"|\"", ")", ",", "index", ",", "parsed", ")", ";", "// look for an exact match with the \"or\" unless the \"filter-match\" class is found", "if", "(", "!", "c", ".", "$headers", ".", "filter", "(", "'[data-column=\"'", "+", "index", "+", "'\"]:last'", ")", ".", "hasClass", "(", "'filter-match'", ")", "&&", "/", "\\|", "/", ".", "test", "(", "query", ")", ")", "{", "// show all results while using filter match. Fixes #727", "if", "(", "query", "[", "query", ".", "length", "-", "1", "]", "===", "'|'", ")", "{", "query", "+=", "'*'", ";", "}", "query", "=", "data", ".", "anyMatch", "&&", "$", ".", "isArray", "(", "data", ".", "rowArray", ")", "?", "'('", "+", "query", "+", "')'", ":", "'^('", "+", "query", "+", "')$'", ";", "}", "// parsing the filter may not work properly when using wildcards =/", "return", "new", "RegExp", "(", "query", ".", "replace", "(", "/", "\\?", "/", "g", ",", "'\\\\S{1}'", ")", ".", "replace", "(", "/", "\\*", "/", "g", ",", "'\\\\S*'", ")", ")", ".", "test", "(", "data", ".", "iExact", ")", ";", "}", "return", "null", ";", "}"], "original_docstring": "Look for wild card: ? = single, * = multiple, or | = logical OR", "docstring": {"block_comment": "Look for wild card      single,     multiple, or     logical OR", "line_comment": ["look for an exact match with the  or  unless the  filter match  class is found", "show all results while using filter match. Fixes  727", "parsing the filter may not work properly when using wildcards"]}, "docstring_tokens": ["Look", "for", "wild", "card", "single", "multiple", "or", "logical", "OR"], "sample_id": 81, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003821", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( c, data ) {\n\t\t\tif ( ts.filter.regex.toTest.test(data.iFilter) ) {\n\t\t\t\tvar result, tmp,\n\t\t\t\t\ttable = c.table,\n\t\t\t\t\tindex = data.index,\n\t\t\t\t\tparsed = data.parsed[index],\n\t\t\t\t\t// make sure the dash is for a range and not indicating a negative number\n\t\t\t\t\tquery = data.iFilter.split( ts.filter.regex.toSplit ),\n\t\t\t\t\trange1 = ts.formatFloat( ts.filter.parseFilter(c, query[0].replace(ts.filter.regex.nondigit, ''), index, parsed), table ),\n\t\t\t\t\trange2 = ts.formatFloat( ts.filter.parseFilter(c, query[1].replace(ts.filter.regex.nondigit, ''), index, parsed), table );\n\t\t\t\t\t// parse filter value in case we're comparing numbers (dates)\n\t\t\t\tif (parsed || c.parsers[index].type === 'numeric') {\n\t\t\t\t\tresult = c.parsers[index].format('' + query[0], table, c.$headers.eq(index), index);\n\t\t\t\t\trange1 = (result !== '' && !isNaN(result)) ? result : range1;\n\t\t\t\t\tresult = c.parsers[index].format('' + query[1], table, c.$headers.eq(index), index);\n\t\t\t\t\trange2 = (result !== '' && !isNaN(result)) ? result : range2;\n\t\t\t\t}\n\t\t\t\tresult = ( parsed || c.parsers[index].type === 'numeric' ) && !isNaN(range1) && !isNaN(range2) ? data.cache :\n\t\t\t\t\tisNaN(data.iExact) ? ts.formatFloat( data.iExact.replace(ts.filter.regex.nondigit, ''), table) :\n\t\t\t\t\tts.formatFloat( data.iExact, table );\n\t\t\t\tif (range1 > range2) { tmp = range1; range1 = range2; range2 = tmp; } // swap\n\t\t\t\treturn (result >= range1 && result <= range2) || (range1 === '' || range2 === '');\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["function", "(", "c", ",", "data", ")", "{", "if", "(", "ts", ".", "filter", ".", "regex", ".", "toTest", ".", "test", "(", "data", ".", "iFilter", ")", ")", "{", "var", "result", ",", "tmp", ",", "table", "=", "c", ".", "table", ",", "index", "=", "data", ".", "index", ",", "parsed", "=", "data", ".", "parsed", "[", "index", "]", ",", "// make sure the dash is for a range and not indicating a negative number", "query", "=", "data", ".", "iFilter", ".", "split", "(", "ts", ".", "filter", ".", "regex", ".", "toSplit", ")", ",", "range1", "=", "ts", ".", "formatFloat", "(", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "query", "[", "0", "]", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "nondigit", ",", "''", ")", ",", "index", ",", "parsed", ")", ",", "table", ")", ",", "range2", "=", "ts", ".", "formatFloat", "(", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "query", "[", "1", "]", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "nondigit", ",", "''", ")", ",", "index", ",", "parsed", ")", ",", "table", ")", ";", "// parse filter value in case we're comparing numbers (dates)", "if", "(", "parsed", "||", "c", ".", "parsers", "[", "index", "]", ".", "type", "===", "'numeric'", ")", "{", "result", "=", "c", ".", "parsers", "[", "index", "]", ".", "format", "(", "''", "+", "query", "[", "0", "]", ",", "table", ",", "c", ".", "$headers", ".", "eq", "(", "index", ")", ",", "index", ")", ";", "range1", "=", "(", "result", "!==", "''", "&&", "!", "isNaN", "(", "result", ")", ")", "?", "result", ":", "range1", ";", "result", "=", "c", ".", "parsers", "[", "index", "]", ".", "format", "(", "''", "+", "query", "[", "1", "]", ",", "table", ",", "c", ".", "$headers", ".", "eq", "(", "index", ")", ",", "index", ")", ";", "range2", "=", "(", "result", "!==", "''", "&&", "!", "isNaN", "(", "result", ")", ")", "?", "result", ":", "range2", ";", "}", "result", "=", "(", "parsed", "||", "c", ".", "parsers", "[", "index", "]", ".", "type", "===", "'numeric'", ")", "&&", "!", "isNaN", "(", "range1", ")", "&&", "!", "isNaN", "(", "range2", ")", "?", "data", ".", "cache", ":", "isNaN", "(", "data", ".", "iExact", ")", "?", "ts", ".", "formatFloat", "(", "data", ".", "iExact", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "nondigit", ",", "''", ")", ",", "table", ")", ":", "ts", ".", "formatFloat", "(", "data", ".", "iExact", ",", "table", ")", ";", "if", "(", "range1", ">", "range2", ")", "{", "tmp", "=", "range1", ";", "range1", "=", "range2", ";", "range2", "=", "tmp", ";", "}", "// swap", "return", "(", "result", ">=", "range1", "&&", "result", "<=", "range2", ")", "||", "(", "range1", "===", "''", "||", "range2", "===", "''", ")", ";", "}", "return", "null", ";", "}"], "original_docstring": "Look for a range (using \" to \" or \" - \") - see issue #166; thanks matzhu!", "docstring": {"block_comment": "Look for a range  using   to   or          see issue  166  thanks matzhu ", "line_comment": ["make sure the dash is for a range and not indicating a negative number", "parse filter value in case we re comparing numbers  dates ", "swap"]}, "docstring_tokens": ["Look", "for", "a", "range", "using", "to", "or", "see", "issue", "166", "thanks", "matzhu"], "sample_id": 82, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003822", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( c, data ) {\n\t\t\tif ( ts.filter.regex.andTest.test(data.filter) ) {\n\t\t\t\tvar index = data.index,\n\t\t\t\t\tparsed = data.parsed[index],\n\t\t\t\t\tquery = data.iFilter.split( ts.filter.regex.andSplit ),\n\t\t\t\t\tresult = data.iExact.search( $.trim( ts.filter.parseFilter(c, query[0], index, parsed) ) ) >= 0,\n\t\t\t\t\tindx = query.length - 1;\n\t\t\t\twhile (result && indx) {\n\t\t\t\t\tresult = result && data.iExact.search( $.trim( ts.filter.parseFilter(c, query[indx], index, parsed) ) ) >= 0;\n\t\t\t\t\tindx--;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["function", "(", "c", ",", "data", ")", "{", "if", "(", "ts", ".", "filter", ".", "regex", ".", "andTest", ".", "test", "(", "data", ".", "filter", ")", ")", "{", "var", "index", "=", "data", ".", "index", ",", "parsed", "=", "data", ".", "parsed", "[", "index", "]", ",", "query", "=", "data", ".", "iFilter", ".", "split", "(", "ts", ".", "filter", ".", "regex", ".", "andSplit", ")", ",", "result", "=", "data", ".", "iExact", ".", "search", "(", "$", ".", "trim", "(", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "query", "[", "0", "]", ",", "index", ",", "parsed", ")", ")", ")", ">=", "0", ",", "indx", "=", "query", ".", "length", "-", "1", ";", "while", "(", "result", "&&", "indx", ")", "{", "result", "=", "result", "&&", "data", ".", "iExact", ".", "search", "(", "$", ".", "trim", "(", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "query", "[", "indx", "]", ",", "index", ",", "parsed", ")", ")", ")", ">=", "0", ";", "indx", "--", ";", "}", "return", "result", ";", "}", "return", "null", ";", "}"], "original_docstring": "Look for an AND or && operator (logical and)", "docstring": {"block_comment": "Look for an AND or    operator  logical and ", "line_comment": null}, "docstring_tokens": ["Look", "for", "an", "AND", "or", "operator", "logical", "and"], "sample_id": 83, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003823", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( c, data ) {\n\t\t\t/*jshint eqeqeq:false */\n\t\t\tif (ts.filter.regex.exact.test(data.iFilter)) {\n\t\t\t\tvar filter = ts.filter.parseFilter(c, data.iFilter.replace(ts.filter.regex.exact, ''), data.index, data.parsed[data.index]);\n\t\t\t\treturn data.anyMatch ? $.inArray(filter, data.rowArray) >= 0 : filter == data.iExact;\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["function", "(", "c", ",", "data", ")", "{", "/*jshint eqeqeq:false */", "if", "(", "ts", ".", "filter", ".", "regex", ".", "exact", ".", "test", "(", "data", ".", "iFilter", ")", ")", "{", "var", "filter", "=", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "data", ".", "iFilter", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "exact", ",", "''", ")", ",", "data", ".", "index", ",", "data", ".", "parsed", "[", "data", ".", "index", "]", ")", ";", "return", "data", ".", "anyMatch", "?", "$", ".", "inArray", "(", "filter", ",", "data", ".", "rowArray", ")", ">=", "0", ":", "filter", "==", "data", ".", "iExact", ";", "}", "return", "null", ";", "}"], "original_docstring": "Look for quotes or equals to get an exact match; ignore type since iExact could be numeric", "docstring": {"block_comment": "Look for quotes or equals to get an exact match  ignore type since iExact could be numeric", "line_comment": ["jshint eqeqeq false"]}, "docstring_tokens": ["Look", "for", "quotes", "or", "equals", "to", "get", "an", "exact", "match", "ignore", "type", "since", "iExact", "could", "be", "numeric"], "sample_id": 84, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003824", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( c, data ) {\n\t\t\tif ( /^\\!/.test(data.iFilter) ) {\n\t\t\t\tvar indx,\n\t\t\t\t\tfilter = ts.filter.parseFilter(c, data.iFilter.replace('!', ''), data.index, data.parsed[data.index]);\n\t\t\t\tif (ts.filter.regex.exact.test(filter)) {\n\t\t\t\t\t// look for exact not matches - see #628\n\t\t\t\t\tfilter = filter.replace(ts.filter.regex.exact, '');\n\t\t\t\t\treturn filter === '' ? true : $.trim(filter) !== data.iExact;\n\t\t\t\t} else {\n\t\t\t\t\tindx = data.iExact.search( $.trim(filter) );\n\t\t\t\t\treturn filter === '' ? true : !(c.widgetOptions.filter_startsWith ? indx === 0 : indx >= 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["function", "(", "c", ",", "data", ")", "{", "if", "(", "/", "^\\!", "/", ".", "test", "(", "data", ".", "iFilter", ")", ")", "{", "var", "indx", ",", "filter", "=", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "data", ".", "iFilter", ".", "replace", "(", "'!'", ",", "''", ")", ",", "data", ".", "index", ",", "data", ".", "parsed", "[", "data", ".", "index", "]", ")", ";", "if", "(", "ts", ".", "filter", ".", "regex", ".", "exact", ".", "test", "(", "filter", ")", ")", "{", "// look for exact not matches - see #628", "filter", "=", "filter", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "exact", ",", "''", ")", ";", "return", "filter", "===", "''", "?", "true", ":", "$", ".", "trim", "(", "filter", ")", "!==", "data", ".", "iExact", ";", "}", "else", "{", "indx", "=", "data", ".", "iExact", ".", "search", "(", "$", ".", "trim", "(", "filter", ")", ")", ";", "return", "filter", "===", "''", "?", "true", ":", "!", "(", "c", ".", "widgetOptions", ".", "filter_startsWith", "?", "indx", "===", "0", ":", "indx", ">=", "0", ")", ";", "}", "}", "return", "null", ";", "}"], "original_docstring": "Look for a not match", "docstring": {"block_comment": "Look for a not match", "line_comment": ["look for exact not matches   see  628"]}, "docstring_tokens": ["Look", "for", "a", "not", "match"], "sample_id": 85, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003825", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( c, data ) {\n\t\t\tif ( /^[<>]=?/.test(data.iFilter) ) {\n\t\t\t\tvar cachedValue, result,\n\t\t\t\t\ttable = c.table,\n\t\t\t\t\tindex = data.index,\n\t\t\t\t\tparsed = data.parsed[index],\n\t\t\t\t\tquery = ts.formatFloat( data.iFilter.replace(ts.filter.regex.operators, ''), table ),\n\t\t\t\t\tparser = c.parsers[index],\n\t\t\t\t\tsavedSearch = query;\n\t\t\t\t// parse filter value in case we're comparing numbers (dates)\n\t\t\t\tif (parsed || parser.type === 'numeric') {\n\t\t\t\t\tresult = ts.filter.parseFilter(c, $.trim('' + data.iFilter.replace(ts.filter.regex.operators, '')), index, parsed, true);\n\t\t\t\t\tquery = ( typeof result === \"number\" && result !== '' && !isNaN(result) ) ? result : query;\n\t\t\t\t}\n\n\t\t\t\t// iExact may be numeric - see issue #149;\n\t\t\t\t// check if cached is defined, because sometimes j goes out of range? (numeric columns)\n\t\t\t\tcachedValue = ( parsed || parser.type === 'numeric' ) && !isNaN(query) && typeof data.cache !== 'undefined' ? data.cache :\n\t\t\t\t\tisNaN(data.iExact) ? ts.formatFloat( data.iExact.replace(ts.filter.regex.nondigit, ''), table) :\n\t\t\t\t\tts.formatFloat( data.iExact, table );\n\n\t\t\t\tif ( />/.test(data.iFilter) ) { result = />=/.test(data.iFilter) ? cachedValue >= query : cachedValue > query; }\n\t\t\t\tif ( /</.test(data.iFilter) ) { result = /<=/.test(data.iFilter) ? cachedValue <= query : cachedValue < query; }\n\t\t\t\t// keep showing all rows if nothing follows the operator\n\t\t\t\tif ( !result && savedSearch === '' ) { result = true; }\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "code_tokens": ["function", "(", "c", ",", "data", ")", "{", "if", "(", "/", "^[<>]=?", "/", ".", "test", "(", "data", ".", "iFilter", ")", ")", "{", "var", "cachedValue", ",", "result", ",", "table", "=", "c", ".", "table", ",", "index", "=", "data", ".", "index", ",", "parsed", "=", "data", ".", "parsed", "[", "index", "]", ",", "query", "=", "ts", ".", "formatFloat", "(", "data", ".", "iFilter", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "operators", ",", "''", ")", ",", "table", ")", ",", "parser", "=", "c", ".", "parsers", "[", "index", "]", ",", "savedSearch", "=", "query", ";", "// parse filter value in case we're comparing numbers (dates)", "if", "(", "parsed", "||", "parser", ".", "type", "===", "'numeric'", ")", "{", "result", "=", "ts", ".", "filter", ".", "parseFilter", "(", "c", ",", "$", ".", "trim", "(", "''", "+", "data", ".", "iFilter", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "operators", ",", "''", ")", ")", ",", "index", ",", "parsed", ",", "true", ")", ";", "query", "=", "(", "typeof", "result", "===", "\"number\"", "&&", "result", "!==", "''", "&&", "!", "isNaN", "(", "result", ")", ")", "?", "result", ":", "query", ";", "}", "// iExact may be numeric - see issue #149;", "// check if cached is defined, because sometimes j goes out of range? (numeric columns)", "cachedValue", "=", "(", "parsed", "||", "parser", ".", "type", "===", "'numeric'", ")", "&&", "!", "isNaN", "(", "query", ")", "&&", "typeof", "data", ".", "cache", "!==", "'undefined'", "?", "data", ".", "cache", ":", "isNaN", "(", "data", ".", "iExact", ")", "?", "ts", ".", "formatFloat", "(", "data", ".", "iExact", ".", "replace", "(", "ts", ".", "filter", ".", "regex", ".", "nondigit", ",", "''", ")", ",", "table", ")", ":", "ts", ".", "formatFloat", "(", "data", ".", "iExact", ",", "table", ")", ";", "if", "(", "/", ">", "/", ".", "test", "(", "data", ".", "iFilter", ")", ")", "{", "result", "=", "/", ">=", "/", ".", "test", "(", "data", ".", "iFilter", ")", "?", "cachedValue", ">=", "query", ":", "cachedValue", ">", "query", ";", "}", "if", "(", "/", "<", "/", ".", "test", "(", "data", ".", "iFilter", ")", ")", "{", "result", "=", "/", "<=", "/", ".", "test", "(", "data", ".", "iFilter", ")", "?", "cachedValue", "<=", "query", ":", "cachedValue", "<", "query", ";", "}", "// keep showing all rows if nothing follows the operator", "if", "(", "!", "result", "&&", "savedSearch", "===", "''", ")", "{", "result", "=", "true", ";", "}", "return", "result", ";", "}", "return", "null", ";", "}"], "original_docstring": "Look for operators >, >=, < or <=", "docstring": {"block_comment": "Look for operators  ,   ,   or  ", "line_comment": ["parse filter value in case we re comparing numbers  dates ", "iExact may be numeric   see issue  149 ", "check if cached is defined, because sometimes j goes out of range   numeric columns ", "keep showing all rows if nothing follows the operator"]}, "docstring_tokens": ["Look", "for", "operators", "or"], "sample_id": 86, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003826", "repo": "wdbo/webdocbook", "path": "www/webdocbook_assets/vendor/jquery.tablesorter/js/jquery.tablesorter.widgets.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(triggerEvent) {\n\t\t\two.resize_flag = true;\n\t\t\theaders = [];\n\t\t\tc.$headers.each(function() {\n\t\t\t\tvar $header = $(this),\n\t\t\t\t\tsizes = $header.data('savedSizes') || [0,0], // fixes #394\n\t\t\t\t\twidth = this.offsetWidth,\n\t\t\t\t\theight = this.offsetHeight;\n\t\t\t\tif (width !== sizes[0] || height !== sizes[1]) {\n\t\t\t\t\t$header.data('savedSizes', [ width, height ]);\n\t\t\t\t\theaders.push(this);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (headers.length && triggerEvent !== false) {\n\t\t\t\tc.$table.trigger('resize', [ headers ]);\n\t\t\t}\n\t\t\two.resize_flag = false;\n\t\t}", "code_tokens": ["function", "(", "triggerEvent", ")", "{", "wo", ".", "resize_flag", "=", "true", ";", "headers", "=", "[", "]", ";", "c", ".", "$headers", ".", "each", "(", "function", "(", ")", "{", "var", "$header", "=", "$", "(", "this", ")", ",", "sizes", "=", "$header", ".", "data", "(", "'savedSizes'", ")", "||", "[", "0", ",", "0", "]", ",", "// fixes #394", "width", "=", "this", ".", "offsetWidth", ",", "height", "=", "this", ".", "offsetHeight", ";", "if", "(", "width", "!==", "sizes", "[", "0", "]", "||", "height", "!==", "sizes", "[", "1", "]", ")", "{", "$header", ".", "data", "(", "'savedSizes'", ",", "[", "width", ",", "height", "]", ")", ";", "headers", ".", "push", "(", "this", ")", ";", "}", "}", ")", ";", "if", "(", "headers", ".", "length", "&&", "triggerEvent", "!==", "false", ")", "{", "c", ".", "$table", ".", "trigger", "(", "'resize'", ",", "[", "headers", "]", ")", ";", "}", "wo", ".", "resize_flag", "=", "false", ";", "}"], "original_docstring": "make sure we're usig a dom element", "docstring": {"block_comment": "make sure we re usig a dom element", "line_comment": ["fixes  394"]}, "docstring_tokens": ["make", "sure", "we", "re", "usig", "a", "dom", "element"], "sample_id": 87, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003838", "repo": "jaredtking/heartbeat", "path": "lib/rules.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(schedule) {\n\n\t\tif (typeof schedule != 'object' || typeof schedule.schedules == 'undefined') {\n\t\t\tif (_.isEmpty(schedule) || (schedule instanceof Array && schedule.length == 0) || typeof schedule == 'string')\n\t\t\t\treturn false;\n\n\t\t\tschedule = {schedules: schedule};\n\t\t}\n\n\t\t// attempt to compile schedule in later.js\n\t\ttry {\n\t\t\tlater.schedule(schedule);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}", "code_tokens": ["function", "(", "schedule", ")", "{", "if", "(", "typeof", "schedule", "!=", "'object'", "||", "typeof", "schedule", ".", "schedules", "==", "'undefined'", ")", "{", "if", "(", "_", ".", "isEmpty", "(", "schedule", ")", "||", "(", "schedule", "instanceof", "Array", "&&", "schedule", ".", "length", "==", "0", ")", "||", "typeof", "schedule", "==", "'string'", ")", "return", "false", ";", "schedule", "=", "{", "schedules", ":", "schedule", "}", ";", "}", "// attempt to compile schedule in later.js", "try", "{", "later", ".", "schedule", "(", "schedule", ")", ";", "}", "catch", "(", "e", ")", "{", "return", "false", ";", "}", "return", "true", ";", "}"], "original_docstring": "\nValidates an rule scedule\n\n@param object schedule\n\n@return boolean\n", "docstring": {"block_comment": "Validates an rule scedule", "line_comment": ["attempt to compile schedule in later.js"]}, "docstring_tokens": ["Validates", "an", "rule", "scedule"], "sample_id": 88, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003839", "repo": "jaredtking/heartbeat", "path": "lib/rules.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(type) {\n\n\t\treturn typeof type == 'string' && _.contains(Rules.types, type);\n\t}", "code_tokens": ["function", "(", "type", ")", "{", "return", "typeof", "type", "==", "'string'", "&&", "_", ".", "contains", "(", "Rules", ".", "types", ",", "type", ")", ";", "}"], "original_docstring": "\nValidates a rule type\n\n@param string type\n\n@return boolean\n", "docstring": {"block_comment": "Validates a rule type", "line_comment": null}, "docstring_tokens": ["Validates", "a", "rule", "type"], "sample_id": 89, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003840", "repo": "inikoo/fact", "path": "libs/yui/yui-2in3/dist/2.8.2/build/yui2-button/yui2-button-debug.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (p_bDisabled) {\n        \n            var nButtons = this.getCount(),\n                i;\n        \n            if (nButtons > 0) {\n        \n                i = nButtons - 1;\n                \n                do {\n        \n                    this._buttons[i].set(\"disabled\", p_bDisabled);\n                \n                }\n                while (i--);\n        \n            }\n        \n        }", "code_tokens": ["function", "(", "p_bDisabled", ")", "{", "var", "nButtons", "=", "this", ".", "getCount", "(", ")", ",", "i", ";", "if", "(", "nButtons", ">", "0", ")", "{", "i", "=", "nButtons", "-", "1", ";", "do", "{", "this", ".", "_buttons", "[", "i", "]", ".", "set", "(", "\"disabled\"", ",", "p_bDisabled", ")", ";", "}", "while", "(", "i", "--", ")", ";", "}", "}"], "original_docstring": "Protected attribute setter methods \n@method _setDisabled\n@description Sets the value of the button groups's\n\"disabled\" attribute.\n@protected\n@param {Boolean} p_bDisabled Boolean indicating the value for\nthe button group's \"disabled\" attribute.\n", "docstring": {"block_comment": "Protected attribute setter methods", "line_comment": null}, "docstring_tokens": ["Protected", "attribute", "setter", "methods"], "sample_id": 90, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003840", "repo": "inikoo/fact", "path": "libs/yui/yui-2in3/dist/2.8.2/build/yui2-button/yui2-button-debug.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (p_bDisabled) {\n        \n            var nButtons = this.getCount(),\n                i;\n        \n            if (nButtons > 0) {\n        \n                i = nButtons - 1;\n                \n                do {\n        \n                    this._buttons[i].set(\"disabled\", p_bDisabled);\n                \n                }\n                while (i--);\n        \n            }\n        \n        }", "code_tokens": ["function", "(", "p_bDisabled", ")", "{", "var", "nButtons", "=", "this", ".", "getCount", "(", ")", ",", "i", ";", "if", "(", "nButtons", ">", "0", ")", "{", "i", "=", "nButtons", "-", "1", ";", "do", "{", "this", ".", "_buttons", "[", "i", "]", ".", "set", "(", "\"disabled\"", ",", "p_bDisabled", ")", ";", "}", "while", "(", "i", "--", ")", ";", "}", "}"], "original_docstring": "Protected attribute setter methods \n@method _setDisabled\n@description Sets the value of the button groups's\n\"disabled\" attribute.\n@protected\n@param {Boolean} p_bDisabled Boolean indicating the value for\nthe button group's \"disabled\" attribute.\n", "docstring": {"block_comment": "Protected attribute setter methods", "line_comment": null}, "docstring_tokens": ["Boolean", "indicating", "the", "value", "for"], "sample_id": 90, "prompt_tokens": ["<javascript>", "<param>", "p_bDisabled"], "comment_type": "param", "sentence_id": 1}
{"id": "21003841", "repo": "inikoo/fact", "path": "libs/yui/yui-2in3/dist/2.8.2/build/yui2-button/yui2-button-debug.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (p_sType) {\n        \n            if (p_sType == \"split\") {\n        \n                this.on(\"option\", this._onOption);\n        \n            }\n        \n        }", "code_tokens": ["function", "(", "p_sType", ")", "{", "if", "(", "p_sType", "==", "\"split\"", ")", "{", "this", ".", "on", "(", "\"option\"", ",", "this", ".", "_onOption", ")", ";", "}", "}"], "original_docstring": "Protected attribute setter methods \n@method _setType\n@description Sets the value of the button's \"type\" attribute.\n@protected\n@param {String} p_sType String indicating the value for the button's\n\"type\" attribute.\n", "docstring": {"block_comment": "Protected attribute setter methods", "line_comment": null}, "docstring_tokens": ["Protected", "attribute", "setter", "methods"], "sample_id": 91, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003841", "repo": "inikoo/fact", "path": "libs/yui/yui-2in3/dist/2.8.2/build/yui2-button/yui2-button-debug.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (p_sType) {\n        \n            if (p_sType == \"split\") {\n        \n                this.on(\"option\", this._onOption);\n        \n            }\n        \n        }", "code_tokens": ["function", "(", "p_sType", ")", "{", "if", "(", "p_sType", "==", "\"split\"", ")", "{", "this", ".", "on", "(", "\"option\"", ",", "this", ".", "_onOption", ")", ";", "}", "}"], "original_docstring": "Protected attribute setter methods \n@method _setType\n@description Sets the value of the button's \"type\" attribute.\n@protected\n@param {String} p_sType String indicating the value for the button's\n\"type\" attribute.\n", "docstring": {"block_comment": "Protected attribute setter methods", "line_comment": null}, "docstring_tokens": ["String", "indicating", "the", "value", "for", "the", "button", "s"], "sample_id": 91, "prompt_tokens": ["<javascript>", "<param>", "p_sType"], "comment_type": "param", "sentence_id": 1}
{"id": "21003842", "repo": "Xrave/CalendarFromCourses", "path": "js/parser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(){\n\n    var cs = document.getElementById(\"classes\").value.trim(),\n        quarterLength = document.getElementById(\"weeks\").value.trim(),\n        calObj = ics(),\n        startDate = document.getElementById(\"startDate\").value.trim() + \" \";\n\n    if(badString(cs)){ alert(\"Please copy paste in the Axess course table\"); return; }\n    if(badString(startDate)){ alert(\"Please input start date in the MM/DD/YYYY format\"); return; }\n    if(badString(quarterLength) || !_.isNumber(parseInt(quarterLength)) || parseInt(quarterLength) < 1){ \n    \talert(\"Please insert a valid number of weeks in the quarter.\");\n    \treturn;\n    }\n\n    var counter = 0;\n\t//removes descrepancy between Firefox and Chrome copy pasting.\n\tvar prelimFilter = _.chain(cs.split(\"\\n\")).filter(function(row){\n\t\treturn row.trim().length > 0\n\t}).value().join('\\n').split('Academic Calendar Deadlines');\n\n\t_.chain(prelimFilter).map(function(row){\n\t\treturn _.compact(row.split(\"\\n\"));\n\t}).filter(function(items){\n\t\tif(items.length != 6 && items.length > 3){\n\t\t\tcounter ++;\n\t\t}\n\t\treturn items.length === 6;\n\t}).map(function(items){\n\t\tvar name = items[0],\n            desc = items[1] + \" Unit: \" + items[2] + \" Grading:\" + items[3],\n            location = items[5],\n            timeObj = items[4].split(\" \"),\n            timeStart = new Date(startDate + timeObj[1].substr(0, timeObj[1].length - 2) + \" \" + timeObj[1].substr(-2)),\n            timeEnd = new Date(startDate + timeObj[3].substr(0, timeObj[3].length - 2) + \" \" + timeObj[3].substr(-2));\n\n        if(timeStart===null || timeEnd === null || timeStart.toString()===\"Invalid Date\" || timeEnd.toString()===\"Invalid Date\"){\n        \talert(\"Please input a correct start date format of MM/DD/YYYY\");\n        \tthrow \"Badly formatted Start Date  (\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b\";\n        }\n\n        var wkNumber = timeStart.getWeek(),\n            repeat = timeObj[0].match(/.{1,2}/g).join(','),\n            shiftedStart = Date.today().setWeek(wkNumber).sunday().last()[weekAbbrev[repeat.split(',')[0]]]().at(timeObj[1]), //Alterations to the dates because the library acts strangely\n            shiftedEnd =   Date.today().setWeek(wkNumber).sunday().last()[weekAbbrev[repeat.split(',')[0]]]().at(timeObj[3]);\n\n\t\tcalObj.addEvent(name, desc, location, shiftedStart, shiftedEnd, repeat, quarterLength * repeat.split(',').length);\n\t});\n\n\tcalObj.download(\"schedule\", \".ics\");\n\n\tif(counter > 0){\n\t\talert(counter + (counter > 1 ? \" classes \": \" class \") + \"failed to be exported. The formatting was weird.\")\n\t}\n\n}", "code_tokens": ["function", "(", ")", "{", "var", "cs", "=", "document", ".", "getElementById", "(", "\"classes\"", ")", ".", "value", ".", "trim", "(", ")", ",", "quarterLength", "=", "document", ".", "getElementById", "(", "\"weeks\"", ")", ".", "value", ".", "trim", "(", ")", ",", "calObj", "=", "ics", "(", ")", ",", "startDate", "=", "document", ".", "getElementById", "(", "\"startDate\"", ")", ".", "value", ".", "trim", "(", ")", "+", "\" \"", ";", "if", "(", "badString", "(", "cs", ")", ")", "{", "alert", "(", "\"Please copy paste in the Axess course table\"", ")", ";", "return", ";", "}", "if", "(", "badString", "(", "startDate", ")", ")", "{", "alert", "(", "\"Please input start date in the MM/DD/YYYY format\"", ")", ";", "return", ";", "}", "if", "(", "badString", "(", "quarterLength", ")", "||", "!", "_", ".", "isNumber", "(", "parseInt", "(", "quarterLength", ")", ")", "||", "parseInt", "(", "quarterLength", ")", "<", "1", ")", "{", "alert", "(", "\"Please insert a valid number of weeks in the quarter.\"", ")", ";", "return", ";", "}", "var", "counter", "=", "0", ";", "//removes descrepancy between Firefox and Chrome copy pasting.", "var", "prelimFilter", "=", "_", ".", "chain", "(", "cs", ".", "split", "(", "\"\\n\"", ")", ")", ".", "filter", "(", "function", "(", "row", ")", "{", "return", "row", ".", "trim", "(", ")", ".", "length", ">", "0", "}", ")", ".", "value", "(", ")", ".", "join", "(", "'\\n'", ")", ".", "split", "(", "'Academic Calendar Deadlines'", ")", ";", "_", ".", "chain", "(", "prelimFilter", ")", ".", "map", "(", "function", "(", "row", ")", "{", "return", "_", ".", "compact", "(", "row", ".", "split", "(", "\"\\n\"", ")", ")", ";", "}", ")", ".", "filter", "(", "function", "(", "items", ")", "{", "if", "(", "items", ".", "length", "!=", "6", "&&", "items", ".", "length", ">", "3", ")", "{", "counter", "++", ";", "}", "return", "items", ".", "length", "===", "6", ";", "}", ")", ".", "map", "(", "function", "(", "items", ")", "{", "var", "name", "=", "items", "[", "0", "]", ",", "desc", "=", "items", "[", "1", "]", "+", "\" Unit: \"", "+", "items", "[", "2", "]", "+", "\" Grading:\"", "+", "items", "[", "3", "]", ",", "location", "=", "items", "[", "5", "]", ",", "timeObj", "=", "items", "[", "4", "]", ".", "split", "(", "\" \"", ")", ",", "timeStart", "=", "new", "Date", "(", "startDate", "+", "timeObj", "[", "1", "]", ".", "substr", "(", "0", ",", "timeObj", "[", "1", "]", ".", "length", "-", "2", ")", "+", "\" \"", "+", "timeObj", "[", "1", "]", ".", "substr", "(", "-", "2", ")", ")", ",", "timeEnd", "=", "new", "Date", "(", "startDate", "+", "timeObj", "[", "3", "]", ".", "substr", "(", "0", ",", "timeObj", "[", "3", "]", ".", "length", "-", "2", ")", "+", "\" \"", "+", "timeObj", "[", "3", "]", ".", "substr", "(", "-", "2", ")", ")", ";", "if", "(", "timeStart", "===", "null", "||", "timeEnd", "===", "null", "||", "timeStart", ".", "toString", "(", ")", "===", "\"Invalid Date\"", "||", "timeEnd", ".", "toString", "(", ")", "===", "\"Invalid Date\"", ")", "{", "alert", "(", "\"Please input a correct start date format of MM/DD/YYYY\"", ")", ";", "throw", "\"Badly formatted Start Date  (\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b\";", "", "}", "var", "wkNumber", "=", "timeStart", ".", "getWeek", "(", ")", ",", "repeat", "=", "timeObj", "[", "0", "]", ".", "match", "(", "/", ".{1,2}", "/", "g", ")", ".", "join", "(", "','", ")", ",", "shiftedStart", "=", "Date", ".", "today", "(", ")", ".", "setWeek", "(", "wkNumber", ")", ".", "sunday", "(", ")", ".", "last", "(", ")", "[", "weekAbbrev", "[", "repeat", ".", "split", "(", "','", ")", "[", "0", "]", "]", "]", "(", ")", ".", "at", "(", "timeObj", "[", "1", "]", ")", ",", "//Alterations to the dates because the library acts strangely", "shiftedEnd", "=", "Date", ".", "today", "(", ")", ".", "setWeek", "(", "wkNumber", ")", ".", "sunday", "(", ")", ".", "last", "(", ")", "[", "weekAbbrev", "[", "repeat", ".", "split", "(", "','", ")", "[", "0", "]", "]", "]", "(", ")", ".", "at", "(", "timeObj", "[", "3", "]", ")", ";", "calObj", ".", "addEvent", "(", "name", ",", "desc", ",", "location", ",", "shiftedStart", ",", "shiftedEnd", ",", "repeat", ",", "quarterLength", "*", "repeat", ".", "split", "(", "','", ")", ".", "length", ")", ";", "}", ")", ";", "calObj", ".", "download", "(", "\"schedule\"", ",", "\".ics\"", ")", ";", "if", "(", "counter", ">", "0", ")", "{", "alert", "(", "counter", "+", "(", "counter", ">", "1", "?", "\" classes \"", ":", "\" class \"", ")", "+", "\"failed to be exported. The formatting was weird.\"", ")", "}", "}"], "original_docstring": "returns an ics object", "docstring": {"block_comment": "returns an ics object", "line_comment": ["removes descrepancy between Firefox and Chrome copy pasting.", "Alterations to the dates because the library acts strangely"]}, "docstring_tokens": ["returns", "an", "ics", "object"], "sample_id": 92, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003844", "repo": "404904728/ui_zui", "path": "src/js/browser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var isIE = this.isIE;\n        var ie = isIE();\n        if (ie)\n        {\n            for (var i = 10; i > 5; i--)\n            {\n                if (isIE(i))\n                {\n                    ie = i;\n                    break;\n                }\n            }\n        }\n\n        this.ie = ie;\n\n        this.cssHelper();\n    }", "code_tokens": ["function", "(", ")", "{", "var", "isIE", "=", "this", ".", "isIE", ";", "var", "ie", "=", "isIE", "(", ")", ";", "if", "(", "ie", ")", "{", "for", "(", "var", "i", "=", "10", ";", "i", ">", "5", ";", "i", "--", ")", "{", "if", "(", "isIE", "(", "i", ")", ")", "{", "ie", "=", "i", ";", "break", ";", "}", "}", "}", "this", ".", "ie", "=", "ie", ";", "this", ".", "cssHelper", "(", ")", ";", "}"], "original_docstring": "The browser modal class", "docstring": {"block_comment": "The browser modal class", "line_comment": null}, "docstring_tokens": ["The", "browser", "modal", "class"], "sample_id": 93, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003845", "repo": "krisrandall/boilerplate", "path": "libs/boilerplate/js/boilerplate.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\n\t\n\t\n\tthis.popup = function(html) {\n\t\t$('#popup').html(html);\t\n\t\t// add X\n\t\tvar close = '<img id=\"close\" src=\"libs/icons/close.png\"></img>';\n\t\t$('#popup').append(close);\n\t\t$('#close').on('click', function() { $('#magic_positioning_table').hide(); $('#overlay').hide(); });\n\t\t\n\t\t// add overlay\n\t\t$('#overlay').show();\n\t\t\n\t\t$('#magic_positioning_table').show();\n\t};\n\t\n\t// for ajax popup use:  $('#popup').load(URL, function(html) { popup(html); }); \n\t\n}", "code_tokens": ["function", "(", ")", "{", "this", ".", "popup", "=", "function", "(", "html", ")", "{", "$", "(", "'#popup'", ")", ".", "html", "(", "html", ")", ";", "// add X", "var", "close", "=", "'<img id=\"close\" src=\"libs/icons/close.png\"></img>'", ";", "$", "(", "'#popup'", ")", ".", "append", "(", "close", ")", ";", "$", "(", "'#close'", ")", ".", "on", "(", "'click'", ",", "function", "(", ")", "{", "$", "(", "'#magic_positioning_table'", ")", ".", "hide", "(", ")", ";", "$", "(", "'#overlay'", ")", ".", "hide", "(", ")", ";", "}", ")", ";", "// add overlay", "$", "(", "'#overlay'", ")", ".", "show", "(", ")", ";", "$", "(", "'#magic_positioning_table'", ")", ".", "show", "(", ")", ";", "}", ";", "// for ajax popup use:  $('#popup').load(URL, function(html) { popup(html); }); ", "}"], "original_docstring": "I am well aware this could be so very much tidier, we are going fo basic functionality first. will tidy up later.", "docstring": {"block_comment": "I am well aware this could be so very much tidier, we are going fo basic functionality first. will tidy up later.", "line_comment": ["add X", "add overlay", "for ajax popup use       popup  .load URL, function html    popup html      "]}, "docstring_tokens": ["I", "am", "well", "aware", "this", "could", "be", "so", "very", "much", "tidier", "we", "are", "going", "fo", "basic", "functionality", "first", ".", "will", "tidy", "up", "later", "."], "sample_id": 94, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003846", "repo": "mitermayer/shortcut-untangler", "path": "src/js/lib/debug/Tools.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(shortcut) {\n        console.log('Shortcut \"' + shortcut.name + '\" triggered with key \"' + shortcut.key + '\"', shortcut);\n    }", "code_tokens": ["function", "(", "shortcut", ")", "{", "console", ".", "log", "(", "'Shortcut \"'", "+", "shortcut", ".", "name", "+", "'\" triggered with key \"'", "+", "shortcut", ".", "key", "+", "'\"'", ",", "shortcut", ")", ";", "}"], "original_docstring": "\nPrints a debugging console message for a shortcut\n\n@param {Shortcut} shortcut - shortcut object\n", "docstring": {"block_comment": "Prints a debugging console message for a shortcut", "line_comment": null}, "docstring_tokens": ["Prints", "a", "debugging", "console", "message", "for", "a", "shortcut"], "sample_id": 95, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003846", "repo": "mitermayer/shortcut-untangler", "path": "src/js/lib/debug/Tools.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(shortcut) {\n        console.log('Shortcut \"' + shortcut.name + '\" triggered with key \"' + shortcut.key + '\"', shortcut);\n    }", "code_tokens": ["function", "(", "shortcut", ")", "{", "console", ".", "log", "(", "'Shortcut \"'", "+", "shortcut", ".", "name", "+", "'\" triggered with key \"'", "+", "shortcut", ".", "key", "+", "'\"'", ",", "shortcut", ")", ";", "}"], "original_docstring": "\nPrints a debugging console message for a shortcut\n\n@param {Shortcut} shortcut - shortcut object\n", "docstring": {"block_comment": "Prints a debugging console message for a shortcut", "line_comment": null}, "docstring_tokens": ["-", "shortcut", "object"], "sample_id": 95, "prompt_tokens": ["<javascript>", "<param>", "shortcut"], "comment_type": "param", "sentence_id": 1}
{"id": "21003847", "repo": "hbzhang/rsstackYZ", "path": "bower_components/angular-ui-router/src/state.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    }", "code_tokens": ["function", "(", "state", ")", "{", "var", "includes", "=", "state", ".", "parent", "?", "extend", "(", "{", "}", ",", "state", ".", "parent", ".", "includes", ")", ":", "{", "}", ";", "includes", "[", "state", ".", "name", "]", "=", "true", ";", "return", "includes", ";", "}"], "original_docstring": "Speed up $state.contains() as it's used a lot", "docstring": {"block_comment": "Speed up  state.contains   as it s used a lot", "line_comment": null}, "docstring_tokens": ["Speed", "up", "state", ".", "contains", "as", "it", "s", "used", "a", "lot"], "sample_id": 96, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003848", "repo": "hbzhang/rsstackYZ", "path": "bower_components/angular-ui-router/src/state.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    }", "code_tokens": ["function", "(", "state", ")", "{", "return", "state", ".", "parent", "?", "state", ".", "parent", ".", "path", ".", "concat", "(", "state", ")", ":", "[", "]", ";", "// exclude root from path", "}"], "original_docstring": "Keep a full path from the root down to this state as this is needed for state activation.", "docstring": {"block_comment": "Keep a full path from the root down to this state as this is needed for state activation.", "line_comment": ["exclude root from path"]}, "docstring_tokens": ["Keep", "a", "full", "path", "from", "the", "root", "down", "to", "this", "state", "as", "this", "is", "needed", "for", "state", "activation", "."], "sample_id": 97, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003849", "repo": "hbzhang/rsstackYZ", "path": "bower_components/angular-ui-router/src/state.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        views[name] = view;\n      });\n      return views;\n    }", "code_tokens": ["function", "(", "state", ")", "{", "var", "views", "=", "{", "}", ";", "forEach", "(", "isDefined", "(", "state", ".", "views", ")", "?", "state", ".", "views", ":", "{", "''", ":", "state", "}", ",", "function", "(", "view", ",", "name", ")", "{", "if", "(", "name", ".", "indexOf", "(", "'@'", ")", "<", "0", ")", "name", "+=", "'@'", "+", "state", ".", "parent", ".", "name", ";", "views", "[", "name", "]", "=", "view", ";", "}", ")", ";", "return", "views", ";", "}"], "original_docstring": "If there is no explicit multi-view configuration, make one up so we don't have to handle both cases in the view directive later. Note that having an explicit 'views' property will mean the default unnamed view properties are ignored. This is also a good time to resolve view names to absolute names, so everything is a straight lookup at link time.", "docstring": {"block_comment": "If there is no explicit multi view configuration, make one up so we don t have to handle both cases in the view directive later. Note that having an explicit  views  property will mean the default unnamed view properties are ignored. This is also a good time to resolve view names to absolute names, so everything is a straight lookup at link time.", "line_comment": null}, "docstring_tokens": ["If", "there", "is", "no", "explicit", "multi", "view", "configuration", "make", "one", "up", "so", "we", "don", "t", "have", "to", "handle", "both", "cases", "in", "the", "view", "directive", "later", ".", "Note", "that", "having", "an", "explicit", "views", "property", "will", "mean", "the", "default", "unnamed", "view", "properties", "are", "ignored", ".", "This", "is", "also", "a", "good", "time", "to", "resolve", "view", "names", "to", "absolute", "names", "so", "everything", "is", "a", "straight", "lookup", "at", "link", "time", "."], "sample_id": 98, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003850", "repo": "hbzhang/rsstackYZ", "path": "bower_components/angular-ui-router/src/state.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(state) {\n      if (!state.params) {\n        return state.url ? state.url.params : state.parent.params;\n      }\n      return state.params;\n    }", "code_tokens": ["function", "(", "state", ")", "{", "if", "(", "!", "state", ".", "params", ")", "{", "return", "state", ".", "url", "?", "state", ".", "url", ".", "params", ":", "state", ".", "parent", ".", "params", ";", "}", "return", "state", ".", "params", ";", "}"], "original_docstring": "Derive parameters for this state and ensure they're a super-set of parent's parameters", "docstring": {"block_comment": "Derive parameters for this state and ensure they re a super set of parent s parameters", "line_comment": null}, "docstring_tokens": ["Derive", "parameters", "for", "this", "state", "and", "ensure", "they", "re", "a", "super", "set", "of", "parent", "s", "parameters"], "sample_id": 99, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003851", "repo": "hbzhang/rsstackYZ", "path": "bower_components/angular-ui-router/src/state.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    }", "code_tokens": ["function", "(", "state", ")", "{", "return", "state", ".", "url", "?", "state", ":", "(", "state", ".", "parent", "?", "state", ".", "parent", ".", "navigable", ":", "null", ")", ";", "}"], "original_docstring": "Keep track of the closest ancestor state that has a URL (i.e. is navigable)", "docstring": {"block_comment": "Keep track of the closest ancestor state that has a URL  i.e. is navigable ", "line_comment": null}, "docstring_tokens": ["Keep", "track", "of", "the", "closest", "ancestor", "state", "that", "has", "a", "URL", "i", ".", "e", ".", "is", "navigable"], "sample_id": 100, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003852", "repo": "hbzhang/rsstackYZ", "path": "bower_components/angular-ui-router/src/state.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    }", "code_tokens": ["function", "(", "state", ")", "{", "var", "url", "=", "state", ".", "url", ",", "config", "=", "{", "params", ":", "state", ".", "params", "||", "{", "}", "}", ";", "if", "(", "isString", "(", "url", ")", ")", "{", "if", "(", "url", ".", "charAt", "(", "0", ")", "==", "'^'", ")", "return", "$urlMatcherFactory", ".", "compile", "(", "url", ".", "substring", "(", "1", ")", ",", "config", ")", ";", "return", "(", "state", ".", "parent", ".", "navigable", "||", "root", ")", ".", "url", ".", "concat", "(", "url", ",", "config", ")", ";", "}", "if", "(", "!", "url", "||", "$urlMatcherFactory", ".", "isMatcher", "(", "url", ")", ")", "return", "url", ";", "throw", "new", "Error", "(", "\"Invalid url '\"", "+", "url", "+", "\"' in state '\"", "+", "state", "+", "\"'\"", ")", ";", "}"], "original_docstring": "Build a URLMatcher if necessary, either via a relative or absolute URL", "docstring": {"block_comment": "Build a URLMatcher if necessary, either via a relative or absolute URL", "line_comment": null}, "docstring_tokens": ["Build", "a", "URLMatcher", "if", "necessary", "either", "via", "a", "relative", "or", "absolute", "URL"], "sample_id": 101, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003853", "repo": "hbzhang/rsstackYZ", "path": "bower_components/angular-ui-router/src/state.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = extend({}, state.parent.data, state.data);\n      }\n      return state.data;\n    }", "code_tokens": ["function", "(", "state", ")", "{", "if", "(", "state", ".", "parent", "&&", "state", ".", "parent", ".", "data", ")", "{", "state", ".", "data", "=", "state", ".", "self", ".", "data", "=", "extend", "(", "{", "}", ",", "state", ".", "parent", ".", "data", ",", "state", ".", "data", ")", ";", "}", "return", "state", ".", "data", ";", "}"], "original_docstring": "inherit 'data' from parent and override by own values (if any)", "docstring": {"block_comment": "inherit  data  from parent and override by own values  if any ", "line_comment": null}, "docstring_tokens": ["inherit", "data", "from", "parent", "and", "override", "by", "own", "values", "if", "any"], "sample_id": 102, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003854", "repo": "hbzhang/rsstackYZ", "path": "bower_components/angular-ui-router/src/state.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    }", "code_tokens": ["function", "(", "state", ")", "{", "if", "(", "isDefined", "(", "state", ".", "parent", ")", "&&", "state", ".", "parent", ")", "return", "findState", "(", "state", ".", "parent", ")", ";", "// regex matches any valid composite state name", "// would match \"contact.list\" but not \"contacts\"", "var", "compositeName", "=", "/", "^(.+)\\.[^.]+$", "/", ".", "exec", "(", "state", ".", "name", ")", ";", "return", "compositeName", "?", "findState", "(", "compositeName", "[", "1", "]", ")", ":", "root", ";", "}"], "original_docstring": "Derive parent state from a hierarchical name only if 'parent' is not explicitly defined. state.children = []; if (parent) parent.children.push(state);", "docstring": {"block_comment": "Derive parent state from a hierarchical name only if  parent  is not explicitly defined. state.children       if  parent  parent.children.push state  ", "line_comment": ["regex matches any valid composite state name", "would match  contact.list  but not  contacts "]}, "docstring_tokens": ["Derive", "parent", "state", "from", "a", "hierarchical", "name", "only", "if", "parent", "is", "not", "explicitly", "defined", ".", "state", ".", "children", "if", "parent", "parent", ".", "children", ".", "push", "state"], "sample_id": 103, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003855", "repo": "sbrodkey/Elastic-RestIndex", "path": "getJsonFromBody.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(body) {\n\tvar prom_json = new Promise(function(resolve, reject) {\n\t\ttry {\n\t\t\tvar json = JSON.parse(body);\n\t\t\tresolve(json);\n\t\t} catch(e) {\n\t\t\tvar xml = body;\n\t\t\tparseString(xml, function(err, json) {\n\t\t\t\tif (err)\n\t\t\t\t\treject(err);\n\t\t\t\telse \n\t\t\t\t\tresolve(json);\n\t\t\t});\n\t\t}\n\t});\n\treturn prom_json;\n}", "code_tokens": ["function", "(", "body", ")", "{", "var", "prom_json", "=", "new", "Promise", "(", "function", "(", "resolve", ",", "reject", ")", "{", "try", "{", "var", "json", "=", "JSON", ".", "parse", "(", "body", ")", ";", "resolve", "(", "json", ")", ";", "}", "catch", "(", "e", ")", "{", "var", "xml", "=", "body", ";", "parseString", "(", "xml", ",", "function", "(", "err", ",", "json", ")", "{", "if", "(", "err", ")", "reject", "(", "err", ")", ";", "else", "resolve", "(", "json", ")", ";", "}", ")", ";", "}", "}", ")", ";", "return", "prom_json", ";", "}"], "original_docstring": "The body of the response from each of our api requests can either be xml or json if body is json, simply return the json else body is xml, so asynchronously parse the xml and wait for the result This function returns a promise for the json value", "docstring": {"block_comment": "The body of the response from each of our api requests can either be xml or json if body is json, simply return the json else body is xml, so asynchronously parse the xml and wait for the result This function returns a promise for the json value", "line_comment": null}, "docstring_tokens": ["The", "body", "of", "the", "response", "from", "each", "of", "our", "api", "requests", "can", "either", "be", "xml", "or", "json", "if", "body", "is", "json", "simply", "return", "the", "json", "else", "body", "is", "xml", "so", "asynchronously", "parse", "the", "xml", "and", "wait", "for", "the", "result", "This", "function", "returns", "a", "promise", "for", "the", "json", "value"], "sample_id": 104, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003856", "repo": "ChrisWphoto/react-ccms", "path": "src/pages/home/page.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (rowCaseData) {\n    //setting state allows us to update data in viewCaseModal\n    this.setState({caseData: rowCaseData.props.data});\n    this.refs.viewCaseModal.open();\n  }", "code_tokens": ["function", "(", "rowCaseData", ")", "{", "//setting state allows us to update data in viewCaseModal", "this", ".", "setState", "(", "{", "caseData", ":", "rowCaseData", ".", "props", ".", "data", "}", ")", ";", "this", ".", "refs", ".", "viewCaseModal", ".", "open", "(", ")", ";", "}"], "original_docstring": "open modal to view all case details", "docstring": {"block_comment": "open modal to view all case details", "line_comment": ["setting state allows us to update data in viewCaseModal"]}, "docstring_tokens": ["open", "modal", "to", "view", "all", "case", "details"], "sample_id": 105, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003857", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(target, region_start_element, region_end_element) {\n\n\t\ttarget.parentNode.insertBefore(\n\t\t\tthis._createOuterRange(region_start_element, region_end_element).extractContents(),\n\t\t\ttarget.nextSibling\n\t\t);\n\n\t}", "code_tokens": ["function", "(", "target", ",", "region_start_element", ",", "region_end_element", ")", "{", "target", ".", "parentNode", ".", "insertBefore", "(", "this", ".", "_createOuterRange", "(", "region_start_element", ",", "region_end_element", ")", ".", "extractContents", "(", ")", ",", "target", ".", "nextSibling", ")", ";", "}"], "original_docstring": "\nVersion of `moveRegionAfter`, which works with ranges\n@param {HTMLElement} target\n@param {HTMLElement} region_start_element\n@param {HTMLElement} region_end_element\n", "docstring": {"block_comment": "Version of  moveRegionAfter , which works with ranges", "line_comment": null}, "docstring_tokens": ["Version", "of", "moveRegionAfter", "which", "works", "with", "ranges"], "sample_id": 106, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003858", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(target, region_start_element, region_end_element) {\n\n\t\ttarget.parentNode.insertBefore(\n\t\t\tthis._createOuterRange(region_start_element, region_end_element).extractContents(),\n\t\t\ttarget\n\t\t);\n\n\t}", "code_tokens": ["function", "(", "target", ",", "region_start_element", ",", "region_end_element", ")", "{", "target", ".", "parentNode", ".", "insertBefore", "(", "this", ".", "_createOuterRange", "(", "region_start_element", ",", "region_end_element", ")", ".", "extractContents", "(", ")", ",", "target", ")", ";", "}"], "original_docstring": "\nVersion of `moveRegionBefore`, which works with ranges\n@param {HTMLElement} target\n@param {HTMLElement} region_start_element\n@param {HTMLElement} region_end_element\n", "docstring": {"block_comment": "Version of  moveRegionBefore , which works with ranges", "line_comment": null}, "docstring_tokens": ["Version", "of", "moveRegionBefore", "which", "works", "with", "ranges"], "sample_id": 107, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003859", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tvar last_child = element.lastChild,\n\t\t\trange;\n\n\t\tif (last_child) {\n\n\t\t\trange = document.createRange();\n\t\t\trange.setStartAfter(last_child);\n\t\t\trange.collapse(true);\n\t\t\trange.insertNode(range.createContextualFragment(html));\n\n\t\t} else {\n\n\t\t\tthis.insertHTMLTop_Range(element, html);\n\n\t\t}\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "var", "last_child", "=", "element", ".", "lastChild", ",", "range", ";", "if", "(", "last_child", ")", "{", "range", "=", "document", ".", "createRange", "(", ")", ";", "range", ".", "setStartAfter", "(", "last_child", ")", ";", "range", ".", "collapse", "(", "true", ")", ";", "range", ".", "insertNode", "(", "range", ".", "createContextualFragment", "(", "html", ")", ")", ";", "}", "else", "{", "this", ".", "insertHTMLTop_Range", "(", "element", ",", "html", ")", ";", "}", "}"], "original_docstring": "\nVersion of insertHTMLBottom, which works with Range API\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Version of insertHTMLBottom, which works with Range API", "line_comment": null}, "docstring_tokens": ["Version", "of", "insertHTMLBottom", "which", "works", "with", "Range", "API"], "sample_id": 108, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003860", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tvar range = document.createRange();\n\t\trange.setStart(element, 0);\n\t\trange.collapse(true);\n\t\trange.insertNode(range.createContextualFragment(html));\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "var", "range", "=", "document", ".", "createRange", "(", ")", ";", "range", ".", "setStart", "(", "element", ",", "0", ")", ";", "range", ".", "collapse", "(", "true", ")", ";", "range", ".", "insertNode", "(", "range", ".", "createContextualFragment", "(", "html", ")", ")", ";", "}"], "original_docstring": "\nVersion of insertHTMLTop, which works with Range API\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Version of insertHTMLTop, which works with Range API", "line_comment": null}, "docstring_tokens": ["Version", "of", "insertHTMLTop", "which", "works", "with", "Range", "API"], "sample_id": 109, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003861", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tvar range = document.createRange();\n\t\trange.setStartBefore(element);\n\t\trange.setEndBefore(element);\n\n\t\trange.insertNode(range.createContextualFragment(html));\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "var", "range", "=", "document", ".", "createRange", "(", ")", ";", "range", ".", "setStartBefore", "(", "element", ")", ";", "range", ".", "setEndBefore", "(", "element", ")", ";", "range", ".", "insertNode", "(", "range", ".", "createContextualFragment", "(", "html", ")", ")", ";", "}"], "original_docstring": "\nVersion of insertHTMLBefore, which works with Range API\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Version of insertHTMLBefore, which works with Range API", "line_comment": null}, "docstring_tokens": ["Version", "of", "insertHTMLBefore", "which", "works", "with", "Range", "API"], "sample_id": 110, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003862", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tvar range = document.createRange();\n\t\trange.setStartAfter(element);\n\t\trange.setEndAfter(element);\n\n\t\trange.insertNode(range.createContextualFragment(html));\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "var", "range", "=", "document", ".", "createRange", "(", ")", ";", "range", ".", "setStartAfter", "(", "element", ")", ";", "range", ".", "setEndAfter", "(", "element", ")", ";", "range", ".", "insertNode", "(", "range", ".", "createContextualFragment", "(", "html", ")", ")", ";", "}"], "original_docstring": "\nVersion of insertHTMLAfter, which works with Range API\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Version of insertHTMLAfter, which works with Range API", "line_comment": null}, "docstring_tokens": ["Version", "of", "insertHTMLAfter", "which", "works", "with", "Range", "API"], "sample_id": 111, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003863", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element) {\n\n\t\tvar range = this._createInnerRange(start_element, end_element);\n\t\trange.deleteContents();\n\n\t}", "code_tokens": ["function", "(", "start_element", ",", "end_element", ")", "{", "var", "range", "=", "this", ".", "_createInnerRange", "(", "start_element", ",", "end_element", ")", ";", "range", ".", "deleteContents", "(", ")", ";", "}"], "original_docstring": "\nVersion of clearInnerRange, which works with Range API\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n", "docstring": {"block_comment": "Version of clearInnerRange, which works with Range API", "line_comment": null}, "docstring_tokens": ["Version", "of", "clearInnerRange", "which", "works", "with", "Range", "API"], "sample_id": 112, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003864", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element) {\n\n\t\tvar range = this._createOuterRange(start_element, end_element);\n\t\trange.deleteContents();\n\n\t}", "code_tokens": ["function", "(", "start_element", ",", "end_element", ")", "{", "var", "range", "=", "this", ".", "_createOuterRange", "(", "start_element", ",", "end_element", ")", ";", "range", ".", "deleteContents", "(", ")", ";", "}"], "original_docstring": "\nVersion of clearOuterRange, which works with Range API\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n", "docstring": {"block_comment": "Version of clearOuterRange, which works with Range API", "line_comment": null}, "docstring_tokens": ["Version", "of", "clearOuterRange", "which", "works", "with", "Range", "API"], "sample_id": 113, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003865", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element, html) {\n\n\t\tvar range = this._createInnerRange(start_element, end_element);\n\n\t\trange.deleteContents();\n\t\trange.insertNode(range.createContextualFragment(html));\n\t}", "code_tokens": ["function", "(", "start_element", ",", "end_element", ",", "html", ")", "{", "var", "range", "=", "this", ".", "_createInnerRange", "(", "start_element", ",", "end_element", ")", ";", "range", ".", "deleteContents", "(", ")", ";", "range", ".", "insertNode", "(", "range", ".", "createContextualFragment", "(", "html", ")", ")", ";", "}"], "original_docstring": "\nVersion of replaceInnerRange, which works with Range API\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n@param {string} html\n", "docstring": {"block_comment": "Version of replaceInnerRange, which works with Range API", "line_comment": null}, "docstring_tokens": ["Version", "of", "replaceInnerRange", "which", "works", "with", "Range", "API"], "sample_id": 114, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003866", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element) {\n\n\t\tvar range = document.createRange();\n\t\trange.setStartBefore(start_element);\n\t\trange.setEndAfter(end_element);\n\t\treturn range;\n\n\t}", "code_tokens": ["function", "(", "start_element", ",", "end_element", ")", "{", "var", "range", "=", "document", ".", "createRange", "(", ")", ";", "range", ".", "setStartBefore", "(", "start_element", ")", ";", "range", ".", "setEndAfter", "(", "end_element", ")", ";", "return", "range", ";", "}"], "original_docstring": "\nCreate a Range object, which includes the given elements\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n@returns {Range|TextRange}\n", "docstring": {"block_comment": "Create a Range object, which includes the given elements", "line_comment": null}, "docstring_tokens": ["Create", "a", "Range", "object", "which", "includes", "the", "given", "elements"], "sample_id": 115, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003867", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element) {\n\n\t\tvar range = document.createRange();\n\t\trange.setStartAfter(start_element);\n\t\trange.setEndBefore(end_element);\n\t\treturn range;\n\n\t}", "code_tokens": ["function", "(", "start_element", ",", "end_element", ")", "{", "var", "range", "=", "document", ".", "createRange", "(", ")", ";", "range", ".", "setStartAfter", "(", "start_element", ")", ";", "range", ".", "setEndBefore", "(", "end_element", ")", ";", "return", "range", ";", "}"], "original_docstring": "////////////////////////////////////////////////////////////////////////////////////////////////////////////////// range api \nCreate a Range object, with limits between the given elements\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n@returns {Range|TextRange}\n", "docstring": {"block_comment": "range api \nCreate a Range object, with limits between the given elements", "line_comment": null}, "docstring_tokens": ["range", "api", "Create", "a", "Range", "object", "with", "limits", "between", "the", "given", "elements"], "sample_id": 116, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003868", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(target, region_start_element, region_end_element) {\n\n\t\tthis._moveRegionBefore(target.parentNode, target.nextSibling, region_start_element, region_end_element);\n\n\t}", "code_tokens": ["function", "(", "target", ",", "region_start_element", ",", "region_end_element", ")", "{", "this", ".", "_moveRegionBefore", "(", "target", ".", "parentNode", ",", "target", ".", "nextSibling", ",", "region_start_element", ",", "region_end_element", ")", ";", "}"], "original_docstring": "\nVersion of `moveRegionAfter`, which works with DOM nodes.\n@param {HTMLElement} target\n@param {HTMLElement} region_start_element\n@param {HTMLElement} region_end_element\n", "docstring": {"block_comment": "Version of  moveRegionAfter , which works with DOM nodes.", "line_comment": null}, "docstring_tokens": ["Version", "of", "moveRegionAfter", "which", "works", "with", "DOM", "nodes", "."], "sample_id": 117, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003869", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(target, region_start_element, region_end_element) {\n\n\t\tthis._moveRegionBefore(target.parentNode, target, region_start_element, region_end_element);\n\n\t}", "code_tokens": ["function", "(", "target", ",", "region_start_element", ",", "region_end_element", ")", "{", "this", ".", "_moveRegionBefore", "(", "target", ".", "parentNode", ",", "target", ",", "region_start_element", ",", "region_end_element", ")", ";", "}"], "original_docstring": "\nVersion of `moveRegionBefore`, which works with DOM nodes.\n@param {HTMLElement} target\n@param {HTMLElement} region_start_element\n@param {HTMLElement} region_end_element\n", "docstring": {"block_comment": "Version of  moveRegionBefore , which works with DOM nodes.", "line_comment": null}, "docstring_tokens": ["Version", "of", "moveRegionBefore", "which", "works", "with", "DOM", "nodes", "."], "sample_id": 118, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003870", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(parent, target, node, region_end_element) {\n\n\t\tvar next_sibling;\n\n\t\twhile (node && node !== region_end_element) {\n\t\t\tnext_sibling = node.nextSibling;\n\t\t\tparent.insertBefore(node, target);\n\t\t\tnode = next_sibling;\n\t\t}\n\t\tparent.insertBefore(region_end_element, target);\n\n\t}", "code_tokens": ["function", "(", "parent", ",", "target", ",", "node", ",", "region_end_element", ")", "{", "var", "next_sibling", ";", "while", "(", "node", "&&", "node", "!==", "region_end_element", ")", "{", "next_sibling", "=", "node", ".", "nextSibling", ";", "parent", ".", "insertBefore", "(", "node", ",", "target", ")", ";", "node", "=", "next_sibling", ";", "}", "parent", ".", "insertBefore", "(", "region_end_element", ",", "target", ")", ";", "}"], "original_docstring": "\nPerform movement of a range of nodes\n@param {HTMLElement} parent\n@param {HTMLElement} target\n@param {HTMLElement} node\n@param {HTMLElement} region_end_element\n", "docstring": {"block_comment": "Perform movement of a range of nodes", "line_comment": null}, "docstring_tokens": ["Perform", "movement", "of", "a", "range", "of", "nodes"], "sample_id": 119, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003871", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tthis._insertHTMLBefore(element, html, null);\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "this", ".", "_insertHTMLBefore", "(", "element", ",", "html", ",", "null", ")", ";", "}"], "original_docstring": "\nVersion of insertHTMLBottom which works with nodes\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Version of insertHTMLBottom which works with nodes", "line_comment": null}, "docstring_tokens": ["Version", "of", "insertHTMLBottom", "which", "works", "with", "nodes"], "sample_id": 120, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003872", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tthis._insertHTMLBefore(element, html, element.firstChild);\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "this", ".", "_insertHTMLBefore", "(", "element", ",", "html", ",", "element", ".", "firstChild", ")", ";", "}"], "original_docstring": "\nVersion of insertHTMLTop which works with nodes\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Version of insertHTMLTop which works with nodes", "line_comment": null}, "docstring_tokens": ["Version", "of", "insertHTMLTop", "which", "works", "with", "nodes"], "sample_id": 121, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003873", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tthis._insertHTMLBefore(element.parentNode, html, element);\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "this", ".", "_insertHTMLBefore", "(", "element", ".", "parentNode", ",", "html", ",", "element", ")", ";", "}"], "original_docstring": "\nVersion of insertHTMLBefore which works with nodes\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Version of insertHTMLBefore which works with nodes", "line_comment": null}, "docstring_tokens": ["Version", "of", "insertHTMLBefore", "which", "works", "with", "nodes"], "sample_id": 122, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003874", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tthis._insertHTMLBefore(element.parentNode, html, element.nextSibling);\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "this", ".", "_insertHTMLBefore", "(", "element", ".", "parentNode", ",", "html", ",", "element", ".", "nextSibling", ")", ";", "}"], "original_docstring": "\nVersion of insertHTMLAfter which works with nodes\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Version of insertHTMLAfter which works with nodes", "line_comment": null}, "docstring_tokens": ["Version", "of", "insertHTMLAfter", "which", "works", "with", "nodes"], "sample_id": 123, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003875", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(parent_node, html, insert_before) {\n\n\t\tvar node,\n\t\t\tnext_sibling;\n\n\t\tnode = this._firstNodeFor(parent_node, html);\n\n\t\twhile (node) {\n\t\t\tnext_sibling = node.nextSibling;\n\t\t\tparent_node.insertBefore(node, insert_before);\n\t\t\tnode = next_sibling;\n\t\t}\n\n\t}", "code_tokens": ["function", "(", "parent_node", ",", "html", ",", "insert_before", ")", "{", "var", "node", ",", "next_sibling", ";", "node", "=", "this", ".", "_firstNodeFor", "(", "parent_node", ",", "html", ")", ";", "while", "(", "node", ")", "{", "next_sibling", "=", "node", ".", "nextSibling", ";", "parent_node", ".", "insertBefore", "(", "node", ",", "insert_before", ")", ";", "node", "=", "next_sibling", ";", "}", "}"], "original_docstring": "\nTurn HTML into nodes with respect to the parent node and sequentially insert them before `insert_before` element\n@param {HTMLElement} parent_node\n@param {string} html\n@param {HTMLElement} insert_before\n", "docstring": {"block_comment": "Turn HTML into nodes with respect to the parent node and sequentially insert them before  insert_before  element", "line_comment": null}, "docstring_tokens": ["Turn", "HTML", "into", "nodes", "with", "respect", "to", "the", "parent", "node", "and", "sequentially", "insert", "them", "before", "insert_before", "element"], "sample_id": 124, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003876", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element, html) {\n\n\t\tthis.clearInnerRange_Nodes(start_element, end_element);\n\t\tthis.insertHTMLBefore_Nodes(end_element, html);\n\n\t}", "code_tokens": ["function", "(", "start_element", ",", "end_element", ",", "html", ")", "{", "this", ".", "clearInnerRange_Nodes", "(", "start_element", ",", "end_element", ")", ";", "this", ".", "insertHTMLBefore_Nodes", "(", "end_element", ",", "html", ")", ";", "}"], "original_docstring": "\nVersion of replaceInnerRange, which manipulates HTML nodes\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n@param {string} html\n", "docstring": {"block_comment": "Version of replaceInnerRange, which manipulates HTML nodes", "line_comment": null}, "docstring_tokens": ["Version", "of", "replaceInnerRange", "which", "manipulates", "HTML", "nodes"], "sample_id": 125, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003877", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element) {\n\n\t\tthis.clearInnerRange_Nodes(start_element, end_element);\n\t\tstart_element.parentNode.removeChild(start_element);\n\t\tend_element.parentNode.removeChild(end_element);\n\n\t}", "code_tokens": ["function", "(", "start_element", ",", "end_element", ")", "{", "this", ".", "clearInnerRange_Nodes", "(", "start_element", ",", "end_element", ")", ";", "start_element", ".", "parentNode", ".", "removeChild", "(", "start_element", ")", ";", "end_element", ".", "parentNode", ".", "removeChild", "(", "end_element", ")", ";", "}"], "original_docstring": "\nVersion of clearOuterRange, which manipulates HTML nodes\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n", "docstring": {"block_comment": "Version of clearOuterRange, which manipulates HTML nodes", "line_comment": null}, "docstring_tokens": ["Version", "of", "clearOuterRange", "which", "manipulates", "HTML", "nodes"], "sample_id": 126, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003878", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element) {\n\n\t\tvar parent_node = start_element.parentNode,\n\t\t\tnode = start_element.nextSibling;\n\n\t\twhile (node && node !== end_element) {\n\n\t\t\tparent_node.removeChild(node);\n\t\t\tnode = start_element.nextSibling;\n\n\t\t}\n\n\t}", "code_tokens": ["function", "(", "start_element", ",", "end_element", ")", "{", "var", "parent_node", "=", "start_element", ".", "parentNode", ",", "node", "=", "start_element", ".", "nextSibling", ";", "while", "(", "node", "&&", "node", "!==", "end_element", ")", "{", "parent_node", ".", "removeChild", "(", "node", ")", ";", "node", "=", "start_element", ".", "nextSibling", ";", "}", "}"], "original_docstring": "\nRemove everything between two tags\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n", "docstring": {"block_comment": "Remove everything between two tags", "line_comment": null}, "docstring_tokens": ["Remove", "everything", "between", "two", "tags"], "sample_id": 127, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003879", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(parentNode, html) {\n\n\t\tvar map = this._wrap_map[parentNode.nodeName.toLowerCase()] || [ 0, \"\", \"\" ],\n\t\t\tdepth = map[0],\n\t\t\tstart = map[1],\n\t\t\tend = map[2],\n\t\t\telement,\n\t\t\ti,\n\t\t\tshy_element;\n\n\t\tif (this._needs_shy) {\n\t\t\t// make the first tag an invisible text node to retain scripts and styles at the beginning\n\t\t\thtml = '&shy;' + html;\n\t\t}\n\n\t\telement = document.createElement('div');\n\n\t\tthis._setInnerHTML(element, start + html + end);\n\n\t\tfor (i = 0; i <= depth; i++) {\n\n\t\t\telement = element.firstChild;\n\n\t\t}\n\n\t\tif (this._needs_shy) {\n\n\t\t\t// Look for &shy; to remove it.\n\t\t\tshy_element = element;\n\n\t\t\t// Sometimes we get nameless elements with the shy inside\n\t\t\twhile (shy_element.nodeType === 1 && !shy_element.nodeName) {\n\t\t\t\tshy_element = shy_element.firstChild;\n\t\t\t}\n\n\t\t\t// At this point it's the actual unicode character.\n\t\t\tif (shy_element.nodeType === 3 && shy_element.nodeValue.charAt(0) === \"\\u00AD\") {\n\t\t\t\tshy_element.nodeValue = shy_element.nodeValue.slice(1);\n\t\t\t}\n\n\t\t}\n\n\t\treturn element;\n\n\t}", "code_tokens": ["function", "(", "parentNode", ",", "html", ")", "{", "var", "map", "=", "this", ".", "_wrap_map", "[", "parentNode", ".", "nodeName", ".", "toLowerCase", "(", ")", "]", "||", "[", "0", ",", "\"\"", ",", "\"\"", "]", ",", "depth", "=", "map", "[", "0", "]", ",", "start", "=", "map", "[", "1", "]", ",", "end", "=", "map", "[", "2", "]", ",", "element", ",", "i", ",", "shy_element", ";", "if", "(", "this", ".", "_needs_shy", ")", "{", "// make the first tag an invisible text node to retain scripts and styles at the beginning", "html", "=", "'&shy;'", "+", "html", ";", "}", "element", "=", "document", ".", "createElement", "(", "'div'", ")", ";", "this", ".", "_setInnerHTML", "(", "element", ",", "start", "+", "html", "+", "end", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<=", "depth", ";", "i", "++", ")", "{", "element", "=", "element", ".", "firstChild", ";", "}", "if", "(", "this", ".", "_needs_shy", ")", "{", "// Look for &shy; to remove it.", "shy_element", "=", "element", ";", "// Sometimes we get nameless elements with the shy inside", "while", "(", "shy_element", ".", "nodeType", "===", "1", "&&", "!", "shy_element", ".", "nodeName", ")", "{", "shy_element", "=", "shy_element", ".", "firstChild", ";", "}", "// At this point it's the actual unicode character.", "if", "(", "shy_element", ".", "nodeType", "===", "3", "&&", "shy_element", ".", "nodeValue", ".", "charAt", "(", "0", ")", "===", "\"\\u00AD\"", ")", "{", "shy_element", ".", "nodeValue", "=", "shy_element", ".", "nodeValue", ".", "slice", "(", "1", ")", ";", "}", "}", "return", "element", ";", "}"], "original_docstring": "\nGiven a parent node and some HTML, generate a set of nodes. Return the first\nnode, which will allow us to traverse the rest using nextSibling.\n\nIn cases of certain elements like tables and lists we cannot just assign innerHTML and get the nodes,\ncause innerHTML is either readonly on them in IE, or it would destroy some of the content\n\n@param {HTMLElement} parentNode\n@param {string} html\n", "docstring": {"block_comment": "Given a parent node and some HTML, generate a set of nodes. Return the first \nnode, which will allow us to traverse the rest using nextSibling. \nIn cases of certain elements like tables and lists we cannot just assign innerHTML and get the nodes, \ncause innerHTML is either readonly on them in IE, or it would destroy some of the content", "line_comment": ["make the first tag an invisible text node to retain scripts and styles at the beginning", null, "Sometimes we get nameless elements with the shy inside", "At this point it s the actual unicode character."]}, "docstring_tokens": ["Given", "a", "parent", "node", "and", "some", "HTML", "generate", "a", "set", "of", "nodes", ".", "Return", "the", "first", "node", "which", "will", "allow", "us", "to", "traverse", "the", "rest", "using", "nextSibling", ".", "In", "cases", "of", "certain", "elements", "like", "tables", "and", "lists", "we", "cannot", "just", "assign", "innerHTML", "and", "get", "the", "nodes", "cause", "innerHTML", "is", "either", "readonly", "on", "them", "in", "IE", "or", "it", "would", "destroy", "some", "of", "the", "content"], "sample_id": 128, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003880", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) {\n\n\t\tvar matches,\n\t\t\tcount,\n\t\t\ti,\n\t\t\tscript;\n\n\t\tif (this._moves_whitespace) {\n\t\t\tmatches = [];\n\t\t\t// Right now we only check for script tags with ids with the goal of targeting morphs.\n\t\t\t// Remove space before script to insert it later.\n\t\t\thtml = html.replace(/(\\s+)(<script id='([^']+)')/g, function(match, spaces, tag, id) {\n\t\t\t\tmatches.push([id, spaces]);\n\t\t\t\treturn tag;\n\t\t\t});\n\n\t\t}\n\n\t\telement.innerHTML = html;\n\n\t\t// If we have to do any whitespace adjustments, do them now\n\t\tif (matches && matches.length > 0) {\n\n\t\t\tcount = matches.length;\n\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\tscript = Firestorm.Element.findChildById(element, matches[i][0]);\n\t\t\t\tscript.parentNode.insertBefore(document.createTextNode(matches[i][1]), script);\n\t\t\t}\n\n\t\t}\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "var", "matches", ",", "count", ",", "i", ",", "script", ";", "if", "(", "this", ".", "_moves_whitespace", ")", "{", "matches", "=", "[", "]", ";", "// Right now we only check for script tags with ids with the goal of targeting morphs.", "// Remove space before script to insert it later.", "html", "=", "html", ".", "replace", "(", "/", "(\\s+)(<script id='([^']+)')", "/", "g", ",", "function", "(", "match", ",", "spaces", ",", "tag", ",", "id", ")", "{", "matches", ".", "push", "(", "[", "id", ",", "spaces", "]", ")", ";", "return", "tag", ";", "}", ")", ";", "}", "element", ".", "innerHTML", "=", "html", ";", "// If we have to do any whitespace adjustments, do them now", "if", "(", "matches", "&&", "matches", ".", "length", ">", "0", ")", "{", "count", "=", "matches", ".", "length", ";", "for", "(", "i", "=", "0", ";", "i", "<", "count", ";", "i", "++", ")", "{", "script", "=", "Firestorm", ".", "Element", ".", "findChildById", "(", "element", ",", "matches", "[", "i", "]", "[", "0", "]", ")", ";", "script", ".", "parentNode", ".", "insertBefore", "(", "document", ".", "createTextNode", "(", "matches", "[", "i", "]", "[", "1", "]", ")", ",", "script", ")", ";", "}", "}", "}"], "original_docstring": "////////////////////////////////////////////////////////////////////////////////////////////////////////////////// nodes api \nSet the element's innerHTML, taking into account various browser bugs\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "nodes api \nSet the element s innerHTML, taking into account various browser bugs", "line_comment": ["Right now we only check for script tags with ids with the goal of targeting morphs.", "Remove space before script to insert it later.", "If we have to do any whitespace adjustments, do them now"]}, "docstring_tokens": ["nodes", "api", "Set", "the", "element", "s", "innerHTML", "taking", "into", "account", "various", "browser", "bugs"], "sample_id": 129, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003881", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html, position) {\n\n\t\tthis['insertHTML' + (position || 'Bottom')](element, html);\n\n\t}", "code_tokens": ["function", "(", "element", ",", "html", ",", "position", ")", "{", "this", "[", "'insertHTML'", "+", "(", "position", "||", "'Bottom'", ")", "]", "(", "element", ",", "html", ")", ";", "}"], "original_docstring": "\nTurn HTML into nodes and insert them relatively to the given element\n@param {HTMLElement} element\n@param {string} html\n@param {_eInsertPosition} [position='Bottom']\n", "docstring": {"block_comment": "Turn HTML into nodes and insert them relatively to the given element", "line_comment": null}, "docstring_tokens": ["Turn", "HTML", "into", "nodes", "and", "insert", "them", "relatively", "to", "the", "given", "element"], "sample_id": 130, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003882", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(target, region_start_element, region_end_element) { Firestorm.t(1); }", "code_tokens": ["function", "(", "target", ",", "region_start_element", ",", "region_end_element", ")", "{", "Firestorm", ".", "t", "(", "1", ")", ";", "}"], "original_docstring": "\nMove `region_start_element`, `region_end_element` and all elements between them after `target`\n@param {HTMLElement} target\n@param {HTMLElement} region_start_element\n@param {HTMLElement} region_end_element\n", "docstring": {"block_comment": "Move  region_start_element ,  region_end_element  and all elements between them after  target ", "line_comment": null}, "docstring_tokens": ["Move", "region_start_element", "region_end_element", "and", "all", "elements", "between", "them", "after", "target"], "sample_id": 131, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003884", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element, html) { Firestorm.t(1); }", "code_tokens": ["function", "(", "start_element", ",", "end_element", ",", "html", ")", "{", "Firestorm", ".", "t", "(", "1", ")", ";", "}"], "original_docstring": "\nRemove all HTML nodes between the elements and insert the given html there\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n@param {string} html\n", "docstring": {"block_comment": "Remove all HTML nodes between the elements and insert the given html there", "line_comment": null}, "docstring_tokens": ["Remove", "all", "HTML", "nodes", "between", "the", "elements", "and", "insert", "the", "given", "html", "there"], "sample_id": 132, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003885", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(start_element, end_element) { Firestorm.t(1); }", "code_tokens": ["function", "(", "start_element", ",", "end_element", ")", "{", "Firestorm", ".", "t", "(", "1", ")", ";", "}"], "original_docstring": "\nRemove all HTML nodes between the given elements\n@param {HTMLElement} start_element\n@param {HTMLElement} end_element\n", "docstring": {"block_comment": "Remove all HTML nodes between the given elements", "line_comment": null}, "docstring_tokens": ["Remove", "all", "HTML", "nodes", "between", "the", "given", "elements"], "sample_id": 133, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003887", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, html) { Firestorm.t(1); }", "code_tokens": ["function", "(", "element", ",", "html", ")", "{", "Firestorm", ".", "t", "(", "1", ")", ";", "}"], "original_docstring": "\nTurn given HTML into DOM nodes and insert them inside the given element, at the bottom\n@param {HTMLElement} element\n@param {string} html\n", "docstring": {"block_comment": "Turn given HTML into DOM nodes and insert them inside the given element, at the bottom", "line_comment": null}, "docstring_tokens": ["Turn", "given", "HTML", "into", "DOM", "nodes", "and", "insert", "them", "inside", "the", "given", "element", "at", "the", "bottom"], "sample_id": 134, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003891", "repo": "kogarashisan/Firestorm", "path": "src/DOM.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\n\t\tvar e = Firestorm.Environment;\n\n\t\tthis._needs_shy = e.capabilities[Firestorm.CAPABILITY_NAMES.STRIPS_INNER_HTML_SCRIPT_AND_STYLE_TAGS];\n\t\tthis._moves_whitespace = e.capabilities[Firestorm.CAPABILITY_NAMES.MOVES_WHITESPACE_BEFORE_SCRIPT];\n\n\t\tif (Firestorm.schema.dom.PREFER_RANGE_API && e.capabilities[Firestorm.CAPABILITY_NAMES.SUPPORTS_RANGE]) {\n\n\t\t\tthis.insertHTMLBefore = this.insertHTMLBefore_Range;\n\t\t\tthis.insertHTMLAfter = this.insertHTMLAfter_Range;\n\t\t\tthis.insertHTMLTop = this.insertHTMLTop_Range;\n\t\t\tthis.insertHTMLBottom = this.insertHTMLBottom_Range;\n\t\t\tthis.clearOuterRange = this.clearOuterRange_Range;\n\t\t\tthis.clearInnerRange = this.clearInnerRange_Range;\n\t\t\tthis.replaceInnerRange = this.replaceInnerRange_Range;\n\t\t\tthis.moveRegionAfter = this.moveRegionAfter_Range;\n\t\t\tthis.moveRegionBefore = this.moveRegionBefore_Range;\n\n\t\t} else {\n\n\t\t\tthis.insertHTMLBefore = this.insertHTMLBefore_Nodes;\n\t\t\tthis.insertHTMLAfter = this.insertHTMLAfter_Nodes;\n\t\t\tthis.insertHTMLTop = this.insertHTMLTop_Nodes;\n\t\t\tthis.insertHTMLBottom = this.insertHTMLBottom_Nodes;\n\t\t\tthis.clearOuterRange = this.clearOuterRange_Nodes;\n\t\t\tthis.clearInnerRange = this.clearInnerRange_Nodes;\n\t\t\tthis.replaceInnerRange = this.replaceInnerRange_Nodes;\n\t\t\tthis.moveRegionAfter = this.moveRegionAfter_Nodes;\n\t\t\tthis.moveRegionBefore = this.moveRegionBefore_Nodes;\n\n\t\t}\n\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "e", "=", "Firestorm", ".", "Environment", ";", "this", ".", "_needs_shy", "=", "e", ".", "capabilities", "[", "Firestorm", ".", "CAPABILITY_NAMES", ".", "STRIPS_INNER_HTML_SCRIPT_AND_STYLE_TAGS", "]", ";", "this", ".", "_moves_whitespace", "=", "e", ".", "capabilities", "[", "Firestorm", ".", "CAPABILITY_NAMES", ".", "MOVES_WHITESPACE_BEFORE_SCRIPT", "]", ";", "if", "(", "Firestorm", ".", "schema", ".", "dom", ".", "PREFER_RANGE_API", "&&", "e", ".", "capabilities", "[", "Firestorm", ".", "CAPABILITY_NAMES", ".", "SUPPORTS_RANGE", "]", ")", "{", "this", ".", "insertHTMLBefore", "=", "this", ".", "insertHTMLBefore_Range", ";", "this", ".", "insertHTMLAfter", "=", "this", ".", "insertHTMLAfter_Range", ";", "this", ".", "insertHTMLTop", "=", "this", ".", "insertHTMLTop_Range", ";", "this", ".", "insertHTMLBottom", "=", "this", ".", "insertHTMLBottom_Range", ";", "this", ".", "clearOuterRange", "=", "this", ".", "clearOuterRange_Range", ";", "this", ".", "clearInnerRange", "=", "this", ".", "clearInnerRange_Range", ";", "this", ".", "replaceInnerRange", "=", "this", ".", "replaceInnerRange_Range", ";", "this", ".", "moveRegionAfter", "=", "this", ".", "moveRegionAfter_Range", ";", "this", ".", "moveRegionBefore", "=", "this", ".", "moveRegionBefore_Range", ";", "}", "else", "{", "this", ".", "insertHTMLBefore", "=", "this", ".", "insertHTMLBefore_Nodes", ";", "this", ".", "insertHTMLAfter", "=", "this", ".", "insertHTMLAfter_Nodes", ";", "this", ".", "insertHTMLTop", "=", "this", ".", "insertHTMLTop_Nodes", ";", "this", ".", "insertHTMLBottom", "=", "this", ".", "insertHTMLBottom_Nodes", ";", "this", ".", "clearOuterRange", "=", "this", ".", "clearOuterRange_Nodes", ";", "this", ".", "clearInnerRange", "=", "this", ".", "clearInnerRange_Nodes", ";", "this", ".", "replaceInnerRange", "=", "this", ".", "replaceInnerRange_Nodes", ";", "this", ".", "moveRegionAfter", "=", "this", ".", "moveRegionAfter_Nodes", ";", "this", ".", "moveRegionBefore", "=", "this", ".", "moveRegionBefore_Nodes", ";", "}", "}"], "original_docstring": "\nInit the object: choose appropriate methods for DOM manipulation, depending on browser capabilities\n", "docstring": {"block_comment": "Init the object  choose appropriate methods for DOM manipulation, depending on browser capabilities", "line_comment": null}, "docstring_tokens": ["Init", "the", "object", "choose", "appropriate", "methods", "for", "DOM", "manipulation", "depending", "on", "browser", "capabilities"], "sample_id": 135, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003892", "repo": "Munawwar/Lithium", "path": "src/lithium.dom.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (node) {\n            return Li.slice(node.parentNode.childNodes).indexOf(node);\n        }", "code_tokens": ["function", "(", "node", ")", "{", "return", "Li", ".", "slice", "(", "node", ".", "parentNode", ".", "childNodes", ")", ".", "indexOf", "(", "node", ")", ";", "}"], "original_docstring": "\njQuery's index() method doesn't return the child index properly for non-element nodes (like text node, comment).\n@method childIndex\n", "docstring": {"block_comment": "jQuery s index   method doesn t return the child index properly for non element nodes  like text node, comment .", "line_comment": null}, "docstring_tokens": ["jQuery", "s", "index", "method", "doesn", "t", "return", "the", "child", "index", "properly", "for", "non", "element", "nodes", "like", "text", "node", "comment", "."], "sample_id": 136, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003893", "repo": "chemerisuk/better-timeinput-polyfill", "path": "src/better-timeinput-polyfill.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(hours, minutes, ampm) {\n            return zeropad(ampm === \"PM\" ? hours + 12 : hours) + \":\" + zeropad(minutes);\n        }", "code_tokens": ["function", "(", "hours", ",", "minutes", ",", "ampm", ")", "{", "return", "zeropad", "(", "ampm", "===", "\"PM\"", "?", "hours", "+", "12", ":", "hours", ")", "+", "\":\"", "+", "zeropad", "(", "minutes", ")", ";", "}"], "original_docstring": "skip mobile/tablet browsers polyfill timeinput for desktop browsers", "docstring": {"block_comment": "skip mobile tablet browsers polyfill timeinput for desktop browsers", "line_comment": null}, "docstring_tokens": ["skip", "mobile", "tablet", "browsers", "polyfill", "timeinput", "for", "desktop", "browsers"], "sample_id": 137, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003897", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        var me = this,\n            values = [],\n            i = 0,\n            thumbs = me.thumbs,\n            len = thumbs.length;\n\n        for (; i < len; i++) {\n            values.push(me.reversePercentageValue(parseInt(me.thumbs[i].dom.style[me.getThumbPositionStyle()], 10)));\n        }\n        return values;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "me", "=", "this", ",", "values", "=", "[", "]", ",", "i", "=", "0", ",", "thumbs", "=", "me", ".", "thumbs", ",", "len", "=", "thumbs", ".", "length", ";", "for", "(", ";", "i", "<", "len", ";", "i", "++", ")", "{", "values", ".", "push", "(", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "me", ".", "thumbs", "[", "i", "]", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ")", ";", "}", "return", "values", ";", "}"], "original_docstring": "\nReturns an array of values - one for the location of each thumb\n@return {Number[]} The set of thumb values\n", "docstring": {"block_comment": "Returns an array of values   one for the location of each thumb", "line_comment": null}, "docstring_tokens": ["Returns", "an", "array", "of", "values", "one", "for", "the", "location", "of", "each", "thumb"], "sample_id": 138, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003897", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        var me = this,\n            values = [],\n            i = 0,\n            thumbs = me.thumbs,\n            len = thumbs.length;\n\n        for (; i < len; i++) {\n            values.push(me.reversePercentageValue(parseInt(me.thumbs[i].dom.style[me.getThumbPositionStyle()], 10)));\n        }\n        return values;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "me", "=", "this", ",", "values", "=", "[", "]", ",", "i", "=", "0", ",", "thumbs", "=", "me", ".", "thumbs", ",", "len", "=", "thumbs", ".", "length", ";", "for", "(", ";", "i", "<", "len", ";", "i", "++", ")", "{", "values", ".", "push", "(", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "me", ".", "thumbs", "[", "i", "]", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ")", ";", "}", "return", "values", ";", "}"], "original_docstring": "\nReturns an array of values - one for the location of each thumb\n@return {Number[]} The set of thumb values\n", "docstring": {"block_comment": "Returns an array of values   one for the location of each thumb", "line_comment": null}, "docstring_tokens": ["The", "set", "of", "thumb", "values"], "sample_id": 138, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21003898", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(index) {\n        var me = this;\n        return Ext.isNumber(index) ? me.reversePercentageValue(parseInt(me.thumbs[index].dom.style[me.getThumbPositionStyle()], 10)) : me.getValues();\n    }", "code_tokens": ["function", "(", "index", ")", "{", "var", "me", "=", "this", ";", "return", "Ext", ".", "isNumber", "(", "index", ")", "?", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "me", ".", "thumbs", "[", "index", "]", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ":", "me", ".", "getValues", "(", ")", ";", "}"], "original_docstring": "\nReturns the current value of the slider\n@param {Number} index The index of the thumb to return a value for\n@return {Number/Number[]} The current value of the slider at the given index, or an array of all thumb values if\nno index is given.\n", "docstring": {"block_comment": "Returns the current value of the slider", "line_comment": null}, "docstring_tokens": ["Returns", "the", "current", "value", "of", "the", "slider"], "sample_id": 139, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003898", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(index) {\n        var me = this;\n        return Ext.isNumber(index) ? me.reversePercentageValue(parseInt(me.thumbs[index].dom.style[me.getThumbPositionStyle()], 10)) : me.getValues();\n    }", "code_tokens": ["function", "(", "index", ")", "{", "var", "me", "=", "this", ";", "return", "Ext", ".", "isNumber", "(", "index", ")", "?", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "me", ".", "thumbs", "[", "index", "]", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ":", "me", ".", "getValues", "(", ")", ";", "}"], "original_docstring": "\nReturns the current value of the slider\n@param {Number} index The index of the thumb to return a value for\n@return {Number/Number[]} The current value of the slider at the given index, or an array of all thumb values if\nno index is given.\n", "docstring": {"block_comment": "Returns the current value of the slider", "line_comment": null}, "docstring_tokens": ["The", "index", "of", "the", "thumb", "to", "return", "a", "value", "for"], "sample_id": 139, "prompt_tokens": ["<javascript>", "<param>", "index"], "comment_type": "param", "sentence_id": 1}
{"id": "21003898", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(index) {\n        var me = this;\n        return Ext.isNumber(index) ? me.reversePercentageValue(parseInt(me.thumbs[index].dom.style[me.getThumbPositionStyle()], 10)) : me.getValues();\n    }", "code_tokens": ["function", "(", "index", ")", "{", "var", "me", "=", "this", ";", "return", "Ext", ".", "isNumber", "(", "index", ")", "?", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "me", ".", "thumbs", "[", "index", "]", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ":", "me", ".", "getValues", "(", ")", ";", "}"], "original_docstring": "\nReturns the current value of the slider\n@param {Number} index The index of the thumb to return a value for\n@return {Number/Number[]} The current value of the slider at the given index, or an array of all thumb values if\nno index is given.\n", "docstring": {"block_comment": "Returns the current value of the slider", "line_comment": null}, "docstring_tokens": ["The", "current", "value", "of", "the", "slider", "at", "the", "given", "index", "or", "an", "array", "of", "all", "thumb", "values", "if"], "sample_id": 139, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21003899", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(index, value, animate, changeComplete) {\n        var me = this,\n            thumb, thumbValue, len, i, values;\n\n        if (Ext.isArray(index)) {\n            values = index;\n            animate = value;\n\n            for (i = 0, len = values.length; i < len; ++i) {\n                me.setThumbValue(i, values[i], animate);\n            }\n            return me;\n        }\n\n        thumb = me.getThumb(index);\n        thumbValue = me.reversePercentageValue(parseInt(thumb.dom.style[me.getThumbPositionStyle()], 10));\n\n        // ensures value is contstrained and snapped\n        value = me.normalizeValue(value);\n\n        if (value !== thumbValue && me.fireEvent('beforechange', me, value, thumbValue, thumb) !== false) {\n            if (me.element.dom) {\n                // TODO this only handles a single value; need a solution for exposing multiple values to aria.\n                // Perhaps this should go on each thumb element rather than the outer element.\n                me.element.set({\n                    'aria-valuenow': value,\n                    'aria-valuetext': value\n                });\n\n                me.moveThumb(thumb, me.calculateThumbPosition(value), Ext.isDefined(animate) ? animate !== false : me.animate);\n                me.fireEvent('change', me, value, thumb);\n            }\n        }\n        return me;\n    }", "code_tokens": ["function", "(", "index", ",", "value", ",", "animate", ",", "changeComplete", ")", "{", "var", "me", "=", "this", ",", "thumb", ",", "thumbValue", ",", "len", ",", "i", ",", "values", ";", "if", "(", "Ext", ".", "isArray", "(", "index", ")", ")", "{", "values", "=", "index", ";", "animate", "=", "value", ";", "for", "(", "i", "=", "0", ",", "len", "=", "values", ".", "length", ";", "i", "<", "len", ";", "++", "i", ")", "{", "me", ".", "setThumbValue", "(", "i", ",", "values", "[", "i", "]", ",", "animate", ")", ";", "}", "return", "me", ";", "}", "thumb", "=", "me", ".", "getThumb", "(", "index", ")", ";", "thumbValue", "=", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "thumb", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ";", "// ensures value is contstrained and snapped", "value", "=", "me", ".", "normalizeValue", "(", "value", ")", ";", "if", "(", "value", "!==", "thumbValue", "&&", "me", ".", "fireEvent", "(", "'beforechange'", ",", "me", ",", "value", ",", "thumbValue", ",", "thumb", ")", "!==", "false", ")", "{", "if", "(", "me", ".", "element", ".", "dom", ")", "{", "// TODO this only handles a single value; need a solution for exposing multiple values to aria.", "// Perhaps this should go on each thumb element rather than the outer element.", "me", ".", "element", ".", "set", "(", "{", "'aria-valuenow'", ":", "value", ",", "'aria-valuetext'", ":", "value", "}", ")", ";", "me", ".", "moveThumb", "(", "thumb", ",", "me", ".", "calculateThumbPosition", "(", "value", ")", ",", "Ext", ".", "isDefined", "(", "animate", ")", "?", "animate", "!==", "false", ":", "me", ".", "animate", ")", ";", "me", ".", "fireEvent", "(", "'change'", ",", "me", ",", "value", ",", "thumb", ")", ";", "}", "}", "return", "me", ";", "}"], "original_docstring": "\nProgrammatically sets the value of the Slider. Ensures that the value is constrained within the minValue and\nmaxValue.\n\nSetting a single value:\n// Set the second slider value, don't animate\nmySlider.setThumbValue(1, 50, false);\n\nSetting multiple values at once\n// Set 3 thumb values, animate\nmySlider.setThumbValue([20, 40, 60], true);\n\n@param {Number/Number[]} index Index of the thumb to move. Alternatively, it can be an array of values to set\nfor each thumb in the slider.\n@param {Number} value The value to set the slider to. (This will be constrained within minValue and maxValue)\n@param {Boolean} [animate=true] Turn on or off animation\n@return {Ext.slider.Multi} this\n", "docstring": {"block_comment": "Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and \nmaxValue. \nSetting a single value  \n   Set the second slider value, don t animate \nmySlider.setThumbValue 1, 50, false   \nSetting multiple values at once \n   Set 3 thumb values, animate \nmySlider.setThumbValue  20, 40, 60 , true  ", "line_comment": ["ensures value is contstrained and snapped", null, "Perhaps this should go on each thumb element rather than the outer element."]}, "docstring_tokens": ["Programmatically", "sets", "the", "value", "of", "the", "Slider", ".", "Ensures", "that", "the", "value", "is", "constrained", "within", "the", "minValue", "and", "maxValue", ".", "Setting", "a", "single", "value", "Set", "the", "second", "slider", "value", "don", "t", "animate", "mySlider", ".", "setThumbValue", "1", "50", "false", "Setting", "multiple", "values", "at", "once", "Set", "3", "thumb", "values", "animate", "mySlider", ".", "setThumbValue", "20", "40", "60", "true"], "sample_id": 140, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003899", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(index, value, animate, changeComplete) {\n        var me = this,\n            thumb, thumbValue, len, i, values;\n\n        if (Ext.isArray(index)) {\n            values = index;\n            animate = value;\n\n            for (i = 0, len = values.length; i < len; ++i) {\n                me.setThumbValue(i, values[i], animate);\n            }\n            return me;\n        }\n\n        thumb = me.getThumb(index);\n        thumbValue = me.reversePercentageValue(parseInt(thumb.dom.style[me.getThumbPositionStyle()], 10));\n\n        // ensures value is contstrained and snapped\n        value = me.normalizeValue(value);\n\n        if (value !== thumbValue && me.fireEvent('beforechange', me, value, thumbValue, thumb) !== false) {\n            if (me.element.dom) {\n                // TODO this only handles a single value; need a solution for exposing multiple values to aria.\n                // Perhaps this should go on each thumb element rather than the outer element.\n                me.element.set({\n                    'aria-valuenow': value,\n                    'aria-valuetext': value\n                });\n\n                me.moveThumb(thumb, me.calculateThumbPosition(value), Ext.isDefined(animate) ? animate !== false : me.animate);\n                me.fireEvent('change', me, value, thumb);\n            }\n        }\n        return me;\n    }", "code_tokens": ["function", "(", "index", ",", "value", ",", "animate", ",", "changeComplete", ")", "{", "var", "me", "=", "this", ",", "thumb", ",", "thumbValue", ",", "len", ",", "i", ",", "values", ";", "if", "(", "Ext", ".", "isArray", "(", "index", ")", ")", "{", "values", "=", "index", ";", "animate", "=", "value", ";", "for", "(", "i", "=", "0", ",", "len", "=", "values", ".", "length", ";", "i", "<", "len", ";", "++", "i", ")", "{", "me", ".", "setThumbValue", "(", "i", ",", "values", "[", "i", "]", ",", "animate", ")", ";", "}", "return", "me", ";", "}", "thumb", "=", "me", ".", "getThumb", "(", "index", ")", ";", "thumbValue", "=", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "thumb", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ";", "// ensures value is contstrained and snapped", "value", "=", "me", ".", "normalizeValue", "(", "value", ")", ";", "if", "(", "value", "!==", "thumbValue", "&&", "me", ".", "fireEvent", "(", "'beforechange'", ",", "me", ",", "value", ",", "thumbValue", ",", "thumb", ")", "!==", "false", ")", "{", "if", "(", "me", ".", "element", ".", "dom", ")", "{", "// TODO this only handles a single value; need a solution for exposing multiple values to aria.", "// Perhaps this should go on each thumb element rather than the outer element.", "me", ".", "element", ".", "set", "(", "{", "'aria-valuenow'", ":", "value", ",", "'aria-valuetext'", ":", "value", "}", ")", ";", "me", ".", "moveThumb", "(", "thumb", ",", "me", ".", "calculateThumbPosition", "(", "value", ")", ",", "Ext", ".", "isDefined", "(", "animate", ")", "?", "animate", "!==", "false", ":", "me", ".", "animate", ")", ";", "me", ".", "fireEvent", "(", "'change'", ",", "me", ",", "value", ",", "thumb", ")", ";", "}", "}", "return", "me", ";", "}"], "original_docstring": "\nProgrammatically sets the value of the Slider. Ensures that the value is constrained within the minValue and\nmaxValue.\n\nSetting a single value:\n// Set the second slider value, don't animate\nmySlider.setThumbValue(1, 50, false);\n\nSetting multiple values at once\n// Set 3 thumb values, animate\nmySlider.setThumbValue([20, 40, 60], true);\n\n@param {Number/Number[]} index Index of the thumb to move. Alternatively, it can be an array of values to set\nfor each thumb in the slider.\n@param {Number} value The value to set the slider to. (This will be constrained within minValue and maxValue)\n@param {Boolean} [animate=true] Turn on or off animation\n@return {Ext.slider.Multi} this\n", "docstring": {"block_comment": "Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and \nmaxValue. \nSetting a single value  \n   Set the second slider value, don t animate \nmySlider.setThumbValue 1, 50, false   \nSetting multiple values at once \n   Set 3 thumb values, animate \nmySlider.setThumbValue  20, 40, 60 , true  ", "line_comment": ["ensures value is contstrained and snapped", null, "Perhaps this should go on each thumb element rather than the outer element."]}, "docstring_tokens": ["Index", "of", "the", "thumb", "to", "move", ".", "Alternatively", "it", "can", "be", "an", "array", "of", "values", "to", "set"], "sample_id": 140, "prompt_tokens": ["<javascript>", "<param>", "index"], "comment_type": "param", "sentence_id": 1}
{"id": "21003899", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(index, value, animate, changeComplete) {\n        var me = this,\n            thumb, thumbValue, len, i, values;\n\n        if (Ext.isArray(index)) {\n            values = index;\n            animate = value;\n\n            for (i = 0, len = values.length; i < len; ++i) {\n                me.setThumbValue(i, values[i], animate);\n            }\n            return me;\n        }\n\n        thumb = me.getThumb(index);\n        thumbValue = me.reversePercentageValue(parseInt(thumb.dom.style[me.getThumbPositionStyle()], 10));\n\n        // ensures value is contstrained and snapped\n        value = me.normalizeValue(value);\n\n        if (value !== thumbValue && me.fireEvent('beforechange', me, value, thumbValue, thumb) !== false) {\n            if (me.element.dom) {\n                // TODO this only handles a single value; need a solution for exposing multiple values to aria.\n                // Perhaps this should go on each thumb element rather than the outer element.\n                me.element.set({\n                    'aria-valuenow': value,\n                    'aria-valuetext': value\n                });\n\n                me.moveThumb(thumb, me.calculateThumbPosition(value), Ext.isDefined(animate) ? animate !== false : me.animate);\n                me.fireEvent('change', me, value, thumb);\n            }\n        }\n        return me;\n    }", "code_tokens": ["function", "(", "index", ",", "value", ",", "animate", ",", "changeComplete", ")", "{", "var", "me", "=", "this", ",", "thumb", ",", "thumbValue", ",", "len", ",", "i", ",", "values", ";", "if", "(", "Ext", ".", "isArray", "(", "index", ")", ")", "{", "values", "=", "index", ";", "animate", "=", "value", ";", "for", "(", "i", "=", "0", ",", "len", "=", "values", ".", "length", ";", "i", "<", "len", ";", "++", "i", ")", "{", "me", ".", "setThumbValue", "(", "i", ",", "values", "[", "i", "]", ",", "animate", ")", ";", "}", "return", "me", ";", "}", "thumb", "=", "me", ".", "getThumb", "(", "index", ")", ";", "thumbValue", "=", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "thumb", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ";", "// ensures value is contstrained and snapped", "value", "=", "me", ".", "normalizeValue", "(", "value", ")", ";", "if", "(", "value", "!==", "thumbValue", "&&", "me", ".", "fireEvent", "(", "'beforechange'", ",", "me", ",", "value", ",", "thumbValue", ",", "thumb", ")", "!==", "false", ")", "{", "if", "(", "me", ".", "element", ".", "dom", ")", "{", "// TODO this only handles a single value; need a solution for exposing multiple values to aria.", "// Perhaps this should go on each thumb element rather than the outer element.", "me", ".", "element", ".", "set", "(", "{", "'aria-valuenow'", ":", "value", ",", "'aria-valuetext'", ":", "value", "}", ")", ";", "me", ".", "moveThumb", "(", "thumb", ",", "me", ".", "calculateThumbPosition", "(", "value", ")", ",", "Ext", ".", "isDefined", "(", "animate", ")", "?", "animate", "!==", "false", ":", "me", ".", "animate", ")", ";", "me", ".", "fireEvent", "(", "'change'", ",", "me", ",", "value", ",", "thumb", ")", ";", "}", "}", "return", "me", ";", "}"], "original_docstring": "\nProgrammatically sets the value of the Slider. Ensures that the value is constrained within the minValue and\nmaxValue.\n\nSetting a single value:\n// Set the second slider value, don't animate\nmySlider.setThumbValue(1, 50, false);\n\nSetting multiple values at once\n// Set 3 thumb values, animate\nmySlider.setThumbValue([20, 40, 60], true);\n\n@param {Number/Number[]} index Index of the thumb to move. Alternatively, it can be an array of values to set\nfor each thumb in the slider.\n@param {Number} value The value to set the slider to. (This will be constrained within minValue and maxValue)\n@param {Boolean} [animate=true] Turn on or off animation\n@return {Ext.slider.Multi} this\n", "docstring": {"block_comment": "Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and \nmaxValue. \nSetting a single value  \n   Set the second slider value, don t animate \nmySlider.setThumbValue 1, 50, false   \nSetting multiple values at once \n   Set 3 thumb values, animate \nmySlider.setThumbValue  20, 40, 60 , true  ", "line_comment": ["ensures value is contstrained and snapped", null, "Perhaps this should go on each thumb element rather than the outer element."]}, "docstring_tokens": ["The", "value", "to", "set", "the", "slider", "to", ".", "(", "This", "will", "be", "constrained", "within", "minValue", "and", "maxValue", ")"], "sample_id": 140, "prompt_tokens": ["<javascript>", "<param>", "value"], "comment_type": "param", "sentence_id": 2}
{"id": "21003899", "repo": "lucas-solutions/work-server", "path": "ext/src/slider/Widget.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(index, value, animate, changeComplete) {\n        var me = this,\n            thumb, thumbValue, len, i, values;\n\n        if (Ext.isArray(index)) {\n            values = index;\n            animate = value;\n\n            for (i = 0, len = values.length; i < len; ++i) {\n                me.setThumbValue(i, values[i], animate);\n            }\n            return me;\n        }\n\n        thumb = me.getThumb(index);\n        thumbValue = me.reversePercentageValue(parseInt(thumb.dom.style[me.getThumbPositionStyle()], 10));\n\n        // ensures value is contstrained and snapped\n        value = me.normalizeValue(value);\n\n        if (value !== thumbValue && me.fireEvent('beforechange', me, value, thumbValue, thumb) !== false) {\n            if (me.element.dom) {\n                // TODO this only handles a single value; need a solution for exposing multiple values to aria.\n                // Perhaps this should go on each thumb element rather than the outer element.\n                me.element.set({\n                    'aria-valuenow': value,\n                    'aria-valuetext': value\n                });\n\n                me.moveThumb(thumb, me.calculateThumbPosition(value), Ext.isDefined(animate) ? animate !== false : me.animate);\n                me.fireEvent('change', me, value, thumb);\n            }\n        }\n        return me;\n    }", "code_tokens": ["function", "(", "index", ",", "value", ",", "animate", ",", "changeComplete", ")", "{", "var", "me", "=", "this", ",", "thumb", ",", "thumbValue", ",", "len", ",", "i", ",", "values", ";", "if", "(", "Ext", ".", "isArray", "(", "index", ")", ")", "{", "values", "=", "index", ";", "animate", "=", "value", ";", "for", "(", "i", "=", "0", ",", "len", "=", "values", ".", "length", ";", "i", "<", "len", ";", "++", "i", ")", "{", "me", ".", "setThumbValue", "(", "i", ",", "values", "[", "i", "]", ",", "animate", ")", ";", "}", "return", "me", ";", "}", "thumb", "=", "me", ".", "getThumb", "(", "index", ")", ";", "thumbValue", "=", "me", ".", "reversePercentageValue", "(", "parseInt", "(", "thumb", ".", "dom", ".", "style", "[", "me", ".", "getThumbPositionStyle", "(", ")", "]", ",", "10", ")", ")", ";", "// ensures value is contstrained and snapped", "value", "=", "me", ".", "normalizeValue", "(", "value", ")", ";", "if", "(", "value", "!==", "thumbValue", "&&", "me", ".", "fireEvent", "(", "'beforechange'", ",", "me", ",", "value", ",", "thumbValue", ",", "thumb", ")", "!==", "false", ")", "{", "if", "(", "me", ".", "element", ".", "dom", ")", "{", "// TODO this only handles a single value; need a solution for exposing multiple values to aria.", "// Perhaps this should go on each thumb element rather than the outer element.", "me", ".", "element", ".", "set", "(", "{", "'aria-valuenow'", ":", "value", ",", "'aria-valuetext'", ":", "value", "}", ")", ";", "me", ".", "moveThumb", "(", "thumb", ",", "me", ".", "calculateThumbPosition", "(", "value", ")", ",", "Ext", ".", "isDefined", "(", "animate", ")", "?", "animate", "!==", "false", ":", "me", ".", "animate", ")", ";", "me", ".", "fireEvent", "(", "'change'", ",", "me", ",", "value", ",", "thumb", ")", ";", "}", "}", "return", "me", ";", "}"], "original_docstring": "\nProgrammatically sets the value of the Slider. Ensures that the value is constrained within the minValue and\nmaxValue.\n\nSetting a single value:\n// Set the second slider value, don't animate\nmySlider.setThumbValue(1, 50, false);\n\nSetting multiple values at once\n// Set 3 thumb values, animate\nmySlider.setThumbValue([20, 40, 60], true);\n\n@param {Number/Number[]} index Index of the thumb to move. Alternatively, it can be an array of values to set\nfor each thumb in the slider.\n@param {Number} value The value to set the slider to. (This will be constrained within minValue and maxValue)\n@param {Boolean} [animate=true] Turn on or off animation\n@return {Ext.slider.Multi} this\n", "docstring": {"block_comment": "Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and \nmaxValue. \nSetting a single value  \n   Set the second slider value, don t animate \nmySlider.setThumbValue 1, 50, false   \nSetting multiple values at once \n   Set 3 thumb values, animate \nmySlider.setThumbValue  20, 40, 60 , true  ", "line_comment": ["ensures value is contstrained and snapped", null, "Perhaps this should go on each thumb element rather than the outer element."]}, "docstring_tokens": ["Turn", "on", "or", "off", "animation"], "sample_id": 140, "prompt_tokens": ["<javascript>", "<param>", "animate"], "comment_type": "param", "sentence_id": 3}
{"id": "21003939", "repo": "nawalgupta/angular2-shop", "path": "dist/polyfills.bundle.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(value, mLen, nBytes){\n\t  var buffer = Array(nBytes)\n\t    , eLen   = nBytes * 8 - mLen - 1\n\t    , eMax   = (1 << eLen) - 1\n\t    , eBias  = eMax >> 1\n\t    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0\n\t    , i      = 0\n\t    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0\n\t    , e, m, c;\n\t  value = abs(value)\n\t  if(value != value || value === Infinity){\n\t    m = value != value ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = floor(log(value) / LN2);\n\t    if(value * (c = pow(2, -e)) < 1){\n\t      e--;\n\t      c *= 2;\n\t    }\n\t    if(e + eBias >= 1){\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * pow(2, 1 - eBias);\n\t    }\n\t    if(value * c >= 2){\n\t      e++;\n\t      c /= 2;\n\t    }\n\t    if(e + eBias >= eMax){\n\t      m = 0;\n\t      e = eMax;\n\t    } else if(e + eBias >= 1){\n\t      m = (value * c - 1) * pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * pow(2, eBias - 1) * pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\t  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n\t  e = e << mLen | m;\n\t  eLen += mLen;\n\t  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n\t  buffer[--i] |= s * 128;\n\t  return buffer;\n\t}", "code_tokens": ["function", "(", "value", ",", "mLen", ",", "nBytes", ")", "{", "var", "buffer", "=", "Array", "(", "nBytes", ")", ",", "eLen", "=", "nBytes", "*", "8", "-", "mLen", "-", "1", ",", "eMax", "=", "(", "1", "<<", "eLen", ")", "-", "1", ",", "eBias", "=", "eMax", ">>", "1", ",", "rt", "=", "mLen", "===", "23", "?", "pow", "(", "2", ",", "-", "24", ")", "-", "pow", "(", "2", ",", "-", "77", ")", ":", "0", ",", "i", "=", "0", ",", "s", "=", "value", "<", "0", "||", "value", "===", "0", "&&", "1", "/", "value", "<", "0", "?", "1", ":", "0", ",", "e", ",", "m", ",", "c", ";", "value", "=", "abs", "(", "value", ")", "if", "(", "value", "!=", "value", "||", "value", "===", "Infinity", ")", "{", "m", "=", "value", "!=", "value", "?", "1", ":", "0", ";", "e", "=", "eMax", ";", "}", "else", "{", "e", "=", "floor", "(", "log", "(", "value", ")", "/", "LN2", ")", ";", "if", "(", "value", "*", "(", "c", "=", "pow", "(", "2", ",", "-", "e", ")", ")", "<", "1", ")", "{", "e", "--", ";", "c", "*=", "2", ";", "}", "if", "(", "e", "+", "eBias", ">=", "1", ")", "{", "value", "+=", "rt", "/", "c", ";", "}", "else", "{", "value", "+=", "rt", "*", "pow", "(", "2", ",", "1", "-", "eBias", ")", ";", "}", "if", "(", "value", "*", "c", ">=", "2", ")", "{", "e", "++", ";", "c", "/=", "2", ";", "}", "if", "(", "e", "+", "eBias", ">=", "eMax", ")", "{", "m", "=", "0", ";", "e", "=", "eMax", ";", "}", "else", "if", "(", "e", "+", "eBias", ">=", "1", ")", "{", "m", "=", "(", "value", "*", "c", "-", "1", ")", "*", "pow", "(", "2", ",", "mLen", ")", ";", "e", "=", "e", "+", "eBias", ";", "}", "else", "{", "m", "=", "value", "*", "pow", "(", "2", ",", "eBias", "-", "1", ")", "*", "pow", "(", "2", ",", "mLen", ")", ";", "e", "=", "0", ";", "}", "}", "for", "(", ";", "mLen", ">=", "8", ";", "buffer", "[", "i", "++", "]", "=", "m", "&", "255", ",", "m", "/=", "256", ",", "mLen", "-=", "8", ")", ";", "e", "=", "e", "<<", "mLen", "|", "m", ";", "eLen", "+=", "mLen", ";", "for", "(", ";", "eLen", ">", "0", ";", "buffer", "[", "i", "++", "]", "=", "e", "&", "255", ",", "e", "/=", "256", ",", "eLen", "-=", "8", ")", ";", "buffer", "[", "--", "i", "]", "|=", "s", "*", "128", ";", "return", "buffer", ";", "}"], "original_docstring": "IEEE754 conversions based on https://github.com/feross/ieee754", "docstring": {"block_comment": "IEEE754 conversions based on", "line_comment": null}, "docstring_tokens": ["IEEE754", "conversions", "based", "on"], "sample_id": 141, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003945", "repo": "Steffkn/TelerikAcademy", "path": "HTML and CSS/JS/04.JS Applications/02.WebStorages/js/ramsAndSheeps.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n            // Regex-remove all non digits in the final value\n            this.value = this.value.replace(/\\D/g, \"\")\n        }", "code_tokens": ["function", "(", ")", "{", "// Regex-remove all non digits in the final value", "this", ".", "value", "=", "this", ".", "value", ".", "replace", "(", "/", "\\D", "/", "g", ",", "\"\"", ")", "}"], "original_docstring": "When non digits managed to \"sneak in\" via copy/paste", "docstring": {"block_comment": "When non digits managed to  sneak in  via copy paste", "line_comment": ["Regex remove all non digits in the final value"]}, "docstring_tokens": ["When", "non", "digits", "managed", "to", "sneak", "in", "via", "copy", "paste"], "sample_id": 142, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003946", "repo": "Steffkn/TelerikAcademy", "path": "HTML and CSS/JS/04.JS Applications/02.WebStorages/js/ramsAndSheeps.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (e) {\n            var key = e.which;\n\n            // the enter key code\n            if (key == 13) {\n                trigerClick($('#guessBtn'));\n                return false;\n            }\n            // if something else than [0-9] or BackSpace (BS == 8) is pressed, cancel the input\n            if (((key < 48 || key > 57) && (key < 96 || key > 105)) && key !== 8) {\n                return false;\n            }\n        }", "code_tokens": ["function", "(", "e", ")", "{", "var", "key", "=", "e", ".", "which", ";", "// the enter key code", "if", "(", "key", "==", "13", ")", "{", "trigerClick", "(", "$", "(", "'#guessBtn'", ")", ")", ";", "return", "false", ";", "}", "// if something else than [0-9] or BackSpace (BS == 8) is pressed, cancel the input", "if", "(", "(", "(", "key", "<", "48", "||", "key", ">", "57", ")", "&&", "(", "key", "<", "96", "||", "key", ">", "105", ")", ")", "&&", "key", "!==", "8", ")", "{", "return", "false", ";", "}", "}"], "original_docstring": "When a new character was typed in", "docstring": {"block_comment": "When a new character was typed in", "line_comment": ["the enter key code", "if something else than  0 9  or BackSpace  BS    8  is pressed, cancel the input"]}, "docstring_tokens": ["When", "a", "new", "character", "was", "typed", "in"], "sample_id": 143, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003947", "repo": "inria-muse/hostview-processing", "path": "app/lib/process_sqlite.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n          if (rows.length === 0) return callback(null) // done\n          var a = rows.shift()\n          db._db.insert('activities', a).run(function (err, res) {\n            if (err) return callback(err)\n            loop()\n          })\n        }", "code_tokens": ["function", "(", ")", "{", "if", "(", "rows", ".", "length", "===", "0", ")", "return", "callback", "(", "null", ")", "// done", "var", "a", "=", "rows", ".", "shift", "(", ")", "db", ".", "_db", ".", "insert", "(", "'activities'", ",", "a", ")", ".", "run", "(", "function", "(", "err", ",", "res", ")", "{", "if", "(", "err", ")", "return", "callback", "(", "err", ")", "loop", "(", ")", "}", ")", "}"], "original_docstring": "now add all rows", "docstring": {"block_comment": "now add all rows", "line_comment": ["done"]}, "docstring_tokens": ["now", "add", "all", "rows"], "sample_id": 144, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003948", "repo": "inria-muse/hostview-processing", "path": "app/lib/process_sqlite.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (row, col) {\n    if (!row[col] || row[col] === '' || row[col].trim() === '') { return null }\n    return row[col].trim()\n  }", "code_tokens": ["function", "(", "row", ",", "col", ")", "{", "if", "(", "!", "row", "[", "col", "]", "||", "row", "[", "col", "]", "===", "''", "||", "row", "[", "col", "]", ".", "trim", "(", ")", "===", "''", ")", "{", "return", "null", "}", "return", "row", "[", "col", "]", ".", "trim", "(", ")", "}"], "original_docstring": "another helper to convert empty strings to nulls", "docstring": {"block_comment": "another helper to convert empty strings to nulls", "line_comment": null}, "docstring_tokens": ["another", "helper", "to", "convert", "empty", "strings", "to", "nulls"], "sample_id": 145, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003949", "repo": "inria-muse/hostview-processing", "path": "app/lib/process_sqlite.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (client, sql, dsttable, dstrow, callback) {\n    var e = null\n\n    // fetch data from the sqlite\n    file.db.each(sql, function (err, row) {\n      if (e || err) {\n        // we can't abort the .each(), so just record the error\n        // -- alternative is to do .all() but .each avoids reading\n        // all the data in memory (some tables can be huge !!)\n        if (!e) debug('readloop fail: ' + dsttable, err)\n        e = e || err\n        return\n      }\n\n      // map from sqlite row to backend db row\n      var o = dstrow(row)\n\n      // track the latest data row just in case\n      if (o.logged_at) { session.ended_at = utils.datemax(session.ended_at, o.logged_at) }\n\n      // add to the backend table\n      client.insert(dsttable, o).run(function (err, res) {\n        // we can't abort the .each(), so just record the error\n        // -- alternative is to do .all() but .each avoids reading\n        // all the data in memory (some tables can be huge !!)\n        // TODO: does this really work or there's some race conditions here ?\n        if (!e && err) debug('readloop insert fail: ' + dsttable, err)\n        e = e || err\n      })\n    }, function (err) {\n      // .each() completed - pass on any error (or nothing on success)\n      e = e || err\n      debug('readloop complete: ' + dsttable, e)\n      callback(e)\n    })\n  }", "code_tokens": ["function", "(", "client", ",", "sql", ",", "dsttable", ",", "dstrow", ",", "callback", ")", "{", "var", "e", "=", "null", "// fetch data from the sqlite", "file", ".", "db", ".", "each", "(", "sql", ",", "function", "(", "err", ",", "row", ")", "{", "if", "(", "e", "||", "err", ")", "{", "// we can't abort the .each(), so just record the error", "// -- alternative is to do .all() but .each avoids reading", "// all the data in memory (some tables can be huge !!)", "if", "(", "!", "e", ")", "debug", "(", "'readloop fail: '", "+", "dsttable", ",", "err", ")", "e", "=", "e", "||", "err", "return", "}", "// map from sqlite row to backend db row", "var", "o", "=", "dstrow", "(", "row", ")", "// track the latest data row just in case", "if", "(", "o", ".", "logged_at", ")", "{", "session", ".", "ended_at", "=", "utils", ".", "datemax", "(", "session", ".", "ended_at", ",", "o", ".", "logged_at", ")", "}", "// add to the backend table", "client", ".", "insert", "(", "dsttable", ",", "o", ")", ".", "run", "(", "function", "(", "err", ",", "res", ")", "{", "// we can't abort the .each(), so just record the error", "// -- alternative is to do .all() but .each avoids reading", "// all the data in memory (some tables can be huge !!)", "// TODO: does this really work or there's some race conditions here ?", "if", "(", "!", "e", "&&", "err", ")", "debug", "(", "'readloop insert fail: '", "+", "dsttable", ",", "err", ")", "e", "=", "e", "||", "err", "}", ")", "}", ",", "function", "(", "err", ")", "{", "// .each() completed - pass on any error (or nothing on success)", "e", "=", "e", "||", "err", "debug", "(", "'readloop complete: '", "+", "dsttable", ",", "e", ")", "callback", "(", "e", ")", "}", ")", "}"], "original_docstring": "helper func to refactor out the common processing pattern (read rows from sqlite and insert to the backend fb)", "docstring": {"block_comment": "helper func to refactor out the common processing pattern  read rows from sqlite and insert to the backend fb ", "line_comment": ["fetch data from the sqlite", "we can t abort the .each  , so just record the error", "alternative is to do .all   but .each avoids reading", "all the data in memory  some tables can be huge    ", "map from sqlite row to backend db row", "track the latest data row just in case", "add to the backend table", "we can t abort the .each  , so just record the error", "alternative is to do .all   but .each avoids reading", "all the data in memory  some tables can be huge    ", null, ".each   completed   pass on any error  or nothing on success "]}, "docstring_tokens": ["helper", "func", "to", "refactor", "out", "the", "common", "processing", "pattern", "read", "rows", "from", "sqlite", "and", "insert", "to", "the", "backend", "fb"], "sample_id": 146, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003950", "repo": "Magnition/innova-partnerships", "path": "www/wordpress/wp-content/plugins/fg-joomla-to-wordpress/admin/js/fg-joomla-to-wordpress-admin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\t// Start displaying the logs\n\t\tthat.start_logger();\n\t\t$('#modify_links').attr('disabled', 'disabled'); // Disable the button\n\t\t\n\t\tvar data = $('#form_modify_links').serialize() + '&action=' + that.plugin_id + '_import&plugin_action=modify_links';\n\t\t$.ajax({\n\t\t    method: \"POST\",\n\t\t    url: ajaxurl,\n\t\t    data: data\n\t\t}).done(function(result) {\n\t\t    if (result) {\n\t\t\tthat.fatal_error = result;\n\t\t    }\n\t\t    that.stop_logger();\n\t\t    $('#modify_links').removeAttr('disabled'); // Enable the button\n\t\t    alert(objectL10n.internal_links_modified);\n\t\t});\n\t\treturn false;\n\t    }", "code_tokens": ["function", "(", ")", "{", "// Start displaying the logs", "that", ".", "start_logger", "(", ")", ";", "$", "(", "'#modify_links'", ")", ".", "attr", "(", "'disabled'", ",", "'disabled'", ")", ";", "// Disable the button", "var", "data", "=", "$", "(", "'#form_modify_links'", ")", ".", "serialize", "(", ")", "+", "'&action='", "+", "that", ".", "plugin_id", "+", "'_import&plugin_action=modify_links'", ";", "$", ".", "ajax", "(", "{", "method", ":", "\"POST\"", ",", "url", ":", "ajaxurl", ",", "data", ":", "data", "}", ")", ".", "done", "(", "function", "(", "result", ")", "{", "if", "(", "result", ")", "{", "that", ".", "fatal_error", "=", "result", ";", "}", "that", ".", "stop_logger", "(", ")", ";", "$", "(", "'#modify_links'", ")", ".", "removeAttr", "(", "'disabled'", ")", ";", "// Enable the button", "alert", "(", "objectL10n", ".", "internal_links_modified", ")", ";", "}", ")", ";", "return", "false", ";", "}"], "original_docstring": "\nModify the internal links\n\n@returns {Boolean}\n", "docstring": {"block_comment": "Modify the internal links", "line_comment": ["Start displaying the logs", "Disable the button", "Enable the button"]}, "docstring_tokens": ["Modify", "the", "internal", "links"], "sample_id": 147, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003951", "repo": "Magnition/innova-partnerships", "path": "www/wordpress/wp-content/plugins/fg-joomla-to-wordpress/admin/js/fg-joomla-to-wordpress-admin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\t$('#import').val(that.import_button_label).removeAttr('disabled');\n\t\t$('#stop-import').hide();\n\t    }", "code_tokens": ["function", "(", ")", "{", "$", "(", "'#import'", ")", ".", "val", "(", "that", ".", "import_button_label", ")", ".", "removeAttr", "(", "'disabled'", ")", ";", "$", "(", "'#stop-import'", ")", ".", "hide", "(", ")", ";", "}"], "original_docstring": "\nReactivate the import button\n\n", "docstring": {"block_comment": "Reactivate the import button", "line_comment": null}, "docstring_tokens": ["Reactivate", "the", "import", "button"], "sample_id": 148, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003952", "repo": "Magnition/innova-partnerships", "path": "www/wordpress/wp-content/plugins/fg-joomla-to-wordpress/admin/js/fg-joomla-to-wordpress-admin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\t// Start displaying the logs\n\t\tthat.start_logger();\n\t\t$('#test_ftp').attr('disabled', 'disabled'); // Disable the button\n\t\t\n\t\tvar data = $('#form_import').serialize() + '&action=' + that.plugin_id + '_import&plugin_action=test_ftp';\n\t\t$.ajax({\n\t\t    method: 'POST',\n\t\t    url: ajaxurl,\n\t\t    data: data,\n\t\t    dataType: 'json'\n\t\t}).done(function(result) {\n\t\t    that.stop_logger();\n\t\t    $('#test_ftp').removeAttr('disabled'); // Enable the button\n\t\t    if ( typeof result.message !== 'undefined' ) {\n\t\t\t$('#ftp_test_message').toggleClass('success', result.status === 'OK')\n\t\t\t.toggleClass('failure', result.status !== 'OK')\n\t\t\t.html(result.message);\n\t\t    }\n\t\t}).fail(function(result) {\n\t\t    that.stop_logger();\n\t\t    $('#test_ftp').removeAttr('disabled'); // Enable the button\n\t\t    that.fatal_error = result.responseText;\n\t\t});\n\t\treturn false;\n\t    }", "code_tokens": ["function", "(", ")", "{", "// Start displaying the logs", "that", ".", "start_logger", "(", ")", ";", "$", "(", "'#test_ftp'", ")", ".", "attr", "(", "'disabled'", ",", "'disabled'", ")", ";", "// Disable the button", "var", "data", "=", "$", "(", "'#form_import'", ")", ".", "serialize", "(", ")", "+", "'&action='", "+", "that", ".", "plugin_id", "+", "'_import&plugin_action=test_ftp'", ";", "$", ".", "ajax", "(", "{", "method", ":", "'POST'", ",", "url", ":", "ajaxurl", ",", "data", ":", "data", ",", "dataType", ":", "'json'", "}", ")", ".", "done", "(", "function", "(", "result", ")", "{", "that", ".", "stop_logger", "(", ")", ";", "$", "(", "'#test_ftp'", ")", ".", "removeAttr", "(", "'disabled'", ")", ";", "// Enable the button", "if", "(", "typeof", "result", ".", "message", "!==", "'undefined'", ")", "{", "$", "(", "'#ftp_test_message'", ")", ".", "toggleClass", "(", "'success'", ",", "result", ".", "status", "===", "'OK'", ")", ".", "toggleClass", "(", "'failure'", ",", "result", ".", "status", "!==", "'OK'", ")", ".", "html", "(", "result", ".", "message", ")", ";", "}", "}", ")", ".", "fail", "(", "function", "(", "result", ")", "{", "that", ".", "stop_logger", "(", ")", ";", "$", "(", "'#test_ftp'", ")", ".", "removeAttr", "(", "'disabled'", ")", ";", "// Enable the button", "that", ".", "fatal_error", "=", "result", ".", "responseText", ";", "}", ")", ";", "return", "false", ";", "}"], "original_docstring": "\nTest the FTP connection\n\n@returns {Boolean}\n", "docstring": {"block_comment": "Test the FTP connection", "line_comment": ["Start displaying the logs", "Disable the button", "Enable the button", "Enable the button"]}, "docstring_tokens": ["Test", "the", "FTP", "connection"], "sample_id": 149, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003953", "repo": "Magnition/innova-partnerships", "path": "www/wordpress/wp-content/plugins/fg-joomla-to-wordpress/admin/js/fg-joomla-to-wordpress-admin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\t// Start displaying the logs\n\t\tthat.start_logger();\n\t\t$('#test_database').attr('disabled', 'disabled'); // Disable the button\n\t\t\n\t\tvar data = $('#form_import').serialize() + '&action=' + that.plugin_id + '_import&plugin_action=test_database';\n\t\t$.ajax({\n\t\t    method: 'POST',\n\t\t    url: ajaxurl,\n\t\t    data: data,\n\t\t    dataType: 'json'\n\t\t}).done(function(result) {\n\t\t    that.stop_logger();\n\t\t    $('#test_database').removeAttr('disabled'); // Enable the button\n\t\t    if ( typeof result.message !== 'undefined' ) {\n\t\t\t$('#database_test_message').toggleClass('success', result.status === 'OK')\n\t\t\t.toggleClass('failure', result.status !== 'OK')\n\t\t\t.html(result.message);\n\t\t    }\n\t\t}).fail(function(result) {\n\t\t    that.stop_logger();\n\t\t    $('#test_database').removeAttr('disabled'); // Enable the button\n\t\t    that.fatal_error = result.responseText;\n\t\t});\n\t\treturn false;\n\t    }", "code_tokens": ["function", "(", ")", "{", "// Start displaying the logs", "that", ".", "start_logger", "(", ")", ";", "$", "(", "'#test_database'", ")", ".", "attr", "(", "'disabled'", ",", "'disabled'", ")", ";", "// Disable the button", "var", "data", "=", "$", "(", "'#form_import'", ")", ".", "serialize", "(", ")", "+", "'&action='", "+", "that", ".", "plugin_id", "+", "'_import&plugin_action=test_database'", ";", "$", ".", "ajax", "(", "{", "method", ":", "'POST'", ",", "url", ":", "ajaxurl", ",", "data", ":", "data", ",", "dataType", ":", "'json'", "}", ")", ".", "done", "(", "function", "(", "result", ")", "{", "that", ".", "stop_logger", "(", ")", ";", "$", "(", "'#test_database'", ")", ".", "removeAttr", "(", "'disabled'", ")", ";", "// Enable the button", "if", "(", "typeof", "result", ".", "message", "!==", "'undefined'", ")", "{", "$", "(", "'#database_test_message'", ")", ".", "toggleClass", "(", "'success'", ",", "result", ".", "status", "===", "'OK'", ")", ".", "toggleClass", "(", "'failure'", ",", "result", ".", "status", "!==", "'OK'", ")", ".", "html", "(", "result", ".", "message", ")", ";", "}", "}", ")", ".", "fail", "(", "function", "(", "result", ")", "{", "that", ".", "stop_logger", "(", ")", ";", "$", "(", "'#test_database'", ")", ".", "removeAttr", "(", "'disabled'", ")", ";", "// Enable the button", "that", ".", "fatal_error", "=", "result", ".", "responseText", ";", "}", ")", ";", "return", "false", ";", "}"], "original_docstring": "\nTest the database connection\n\n@returns {Boolean}\n", "docstring": {"block_comment": "Test the database connection", "line_comment": ["Start displaying the logs", "Disable the button", "Enable the button", "Enable the button"]}, "docstring_tokens": ["Test", "the", "database", "connection"], "sample_id": 150, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003954", "repo": "Magnition/innova-partnerships", "path": "www/wordpress/wp-content/plugins/fg-joomla-to-wordpress/admin/js/fg-joomla-to-wordpress-admin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\tvar data = 'action=' + that.plugin_id + '_import&plugin_action=update_wordpress_info';\n\t\t$.ajax({\n\t\t    method: \"POST\",\n\t\t    url: ajaxurl,\n\t\t    data: data\n\t\t}).done(function(result) {\n\t\t    $('#fgj2wp_database_info_content').html(result);\n\t\t});\n\t    }", "code_tokens": ["function", "(", ")", "{", "var", "data", "=", "'action='", "+", "that", ".", "plugin_id", "+", "'_import&plugin_action=update_wordpress_info'", ";", "$", ".", "ajax", "(", "{", "method", ":", "\"POST\"", ",", "url", ":", "ajaxurl", ",", "data", ":", "data", "}", ")", ".", "done", "(", "function", "(", "result", ")", "{", "$", "(", "'#fgj2wp_database_info_content'", ")", ".", "html", "(", "result", ")", ";", "}", ")", ";", "}"], "original_docstring": "\nUpdate WordPress database info\n", "docstring": {"block_comment": "Update WordPress database info", "line_comment": null}, "docstring_tokens": ["Update", "WordPress", "database", "info"], "sample_id": 151, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003955", "repo": "Magnition/innova-partnerships", "path": "www/wordpress/wp-content/plugins/fg-joomla-to-wordpress/admin/js/fg-joomla-to-wordpress-admin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\t\tvar confirm_message;\n\t\tvar action = $('input:radio[name=empty_action]:checked').val();\n\t\tswitch ( action ) {\n\t\t    case 'newposts':\n\t\t\tconfirm_message = objectL10n.delete_new_posts_confirmation_message;\n\t\t\tbreak;\n\t\t    case 'all':\n\t\t\tconfirm_message = objectL10n.delete_all_confirmation_message;\n\t\t\tbreak;\n\t\t    default:\n\t\t\talert(objectL10n.delete_no_answer_message);\n\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t\treturn confirm(confirm_message);\n\t    }", "code_tokens": ["function", "(", ")", "{", "var", "confirm_message", ";", "var", "action", "=", "$", "(", "'input:radio[name=empty_action]:checked'", ")", ".", "val", "(", ")", ";", "switch", "(", "action", ")", "{", "case", "'newposts'", ":", "confirm_message", "=", "objectL10n", ".", "delete_new_posts_confirmation_message", ";", "break", ";", "case", "'all'", ":", "confirm_message", "=", "objectL10n", ".", "delete_all_confirmation_message", ";", "break", ";", "default", ":", "alert", "(", "objectL10n", ".", "delete_no_answer_message", ")", ";", "return", "false", ";", "break", ";", "}", "return", "confirm", "(", "confirm_message", ")", ";", "}"], "original_docstring": "\nSecurity question before deleting WordPress content\n", "docstring": {"block_comment": "Security question before deleting WordPress content", "line_comment": null}, "docstring_tokens": ["Security", "question", "before", "deleting", "WordPress", "content"], "sample_id": 152, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003956", "repo": "Magnition/innova-partnerships", "path": "www/wordpress/wp-content/plugins/fg-joomla-to-wordpress/admin/js/fg-joomla-to-wordpress-admin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()  {\n\t\t$(\"#media_import_box\").toggle(!$(\"#skip_media\").is(':checked'));\n\t    }", "code_tokens": ["function", "(", ")", "{", "$", "(", "\"#media_import_box\"", ")", ".", "toggle", "(", "!", "$", "(", "\"#skip_media\"", ")", ".", "is", "(", "':checked'", ")", ")", ";", "}"], "original_docstring": "\nManage the behaviour of the Skip Media checkbox\n", "docstring": {"block_comment": "Manage the behaviour of the Skip Media checkbox", "line_comment": null}, "docstring_tokens": ["Manage", "the", "behaviour", "of", "the", "Skip", "Media", "checkbox"], "sample_id": 153, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003958", "repo": "Edilmo/brat-widget", "path": "js/src/util.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(a, b) {\n      // Check object identity.\n      if (a === b) return true;\n      // Different types?\n      var atype = typeof(a), btype = typeof(b);\n      if (atype != btype) return false;\n      // Basic equality test (watch out for coercions).\n      if (a == b) return true;\n      // One is falsy and the other truthy.\n      if ((!a && b) || (a && !b)) return false;\n      // If a is not an object by this point, we can't handle it.\n      if (atype !== 'object') return false;\n      // Check for different array lengths before comparing contents.\n      if (a.length && (a.length !== b.length)) return false;\n      // Nothing else worked, deep compare the contents.\n      for (var key in b) if (!(key in a)) return false;\n      // Recursive comparison of contents.\n      for (var key in a) if (!(key in b) || !isEqual(a[key], b[key])) return false;\n      return true;\n    }", "code_tokens": ["function", "(", "a", ",", "b", ")", "{", "// Check object identity.", "if", "(", "a", "===", "b", ")", "return", "true", ";", "// Different types?", "var", "atype", "=", "typeof", "(", "a", ")", ",", "btype", "=", "typeof", "(", "b", ")", ";", "if", "(", "atype", "!=", "btype", ")", "return", "false", ";", "// Basic equality test (watch out for coercions).", "if", "(", "a", "==", "b", ")", "return", "true", ";", "// One is falsy and the other truthy.", "if", "(", "(", "!", "a", "&&", "b", ")", "||", "(", "a", "&&", "!", "b", ")", ")", "return", "false", ";", "// If a is not an object by this point, we can't handle it.", "if", "(", "atype", "!==", "'object'", ")", "return", "false", ";", "// Check for different array lengths before comparing contents.", "if", "(", "a", ".", "length", "&&", "(", "a", ".", "length", "!==", "b", ".", "length", ")", ")", "return", "false", ";", "// Nothing else worked, deep compare the contents.", "for", "(", "var", "key", "in", "b", ")", "if", "(", "!", "(", "key", "in", "a", ")", ")", "return", "false", ";", "// Recursive comparison of contents.", "for", "(", "var", "key", "in", "a", ")", "if", "(", "!", "(", "key", "in", "b", ")", "||", "!", "isEqual", "(", "a", "[", "key", "]", ",", "b", "[", "key", "]", ")", ")", "return", "false", ";", "return", "true", ";", "}"], "original_docstring": "Partially stolen from: http://documentcloud.github.com/underscore/ MIT-License TODO: Mention in LICENSE.md", "docstring": {"block_comment": "Partially stolen from   MIT License TODO  Mention in LICENSE.md", "line_comment": ["Check object identity.", null, "Basic equality test  watch out for coercions .", "One is falsy and the other truthy.", "If a is not an object by this point, we can t handle it.", "Check for different array lengths before comparing contents.", "Nothing else worked, deep compare the contents.", "Recursive comparison of contents."]}, "docstring_tokens": ["Partially", "stolen", "from", "MIT", "License", "TODO", "Mention", "in", "LICENSE", ".", "md"], "sample_id": 154, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003959", "repo": "Edilmo/brat-widget", "path": "js/src/util.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(colorstr, adjust) {\n      if (!(colorstr in adjustLightnessCache)) {\n        adjustLightnessCache[colorstr] = {}\n      }\n      if (!(adjust in adjustLightnessCache[colorstr])) {\n        var rgb = strToRgb(colorstr);\n        if (rgb === undefined) {\n          // failed color string conversion; just return the input\n          adjustLightnessCache[colorstr][adjust] = colorstr;\n        } else {\n          var hsl = rgbToHsl(rgb);\n          if (adjust > 0.0) {\n            hsl[2] = 1.0 - ((1.0-hsl[2])*(1.0-adjust));\n          } else {\n            hsl[2] = (1.0+adjust)*hsl[2];\n          }\n          var lightRgb = hslToRgb(hsl);\n          adjustLightnessCache[colorstr][adjust] = rgbToStr(lightRgb);\n        }\n      }\n      return adjustLightnessCache[colorstr][adjust];\n    }", "code_tokens": ["function", "(", "colorstr", ",", "adjust", ")", "{", "if", "(", "!", "(", "colorstr", "in", "adjustLightnessCache", ")", ")", "{", "adjustLightnessCache", "[", "colorstr", "]", "=", "{", "}", "}", "if", "(", "!", "(", "adjust", "in", "adjustLightnessCache", "[", "colorstr", "]", ")", ")", "{", "var", "rgb", "=", "strToRgb", "(", "colorstr", ")", ";", "if", "(", "rgb", "===", "undefined", ")", "{", "// failed color string conversion; just return the input", "adjustLightnessCache", "[", "colorstr", "]", "[", "adjust", "]", "=", "colorstr", ";", "}", "else", "{", "var", "hsl", "=", "rgbToHsl", "(", "rgb", ")", ";", "if", "(", "adjust", ">", "0.0", ")", "{", "hsl", "[", "2", "]", "=", "1.0", "-", "(", "(", "1.0", "-", "hsl", "[", "2", "]", ")", "*", "(", "1.0", "-", "adjust", ")", ")", ";", "}", "else", "{", "hsl", "[", "2", "]", "=", "(", "1.0", "+", "adjust", ")", "*", "hsl", "[", "2", "]", ";", "}", "var", "lightRgb", "=", "hslToRgb", "(", "hsl", ")", ";", "adjustLightnessCache", "[", "colorstr", "]", "[", "adjust", "]", "=", "rgbToStr", "(", "lightRgb", ")", ";", "}", "}", "return", "adjustLightnessCache", "[", "colorstr", "]", "[", "adjust", "]", ";", "}"], "original_docstring": "given color string and -1<=adjust<=1, returns color string where lightness (in the HSL sense) is adjusted by the given amount, the larger the lighter: -1 gives black, 1 white, and 0 the given color.", "docstring": {"block_comment": "given color string and  1  adjust  1, returns color string where lightness  in the HSL sense  is adjusted by the given amount, the larger the lighter   1 gives black, 1 white, and 0 the given color.", "line_comment": ["failed color string conversion  just return the input"]}, "docstring_tokens": ["given", "color", "string", "and", "1", "adjust", "1", "returns", "color", "string", "where", "lightness", "in", "the", "HSL", "sense", "is", "adjusted", "by", "the", "given", "amount", "the", "larger", "the", "lighter", "1", "gives", "black", "1", "white", "and", "0", "the", "given", "color", "."], "sample_id": 155, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003960", "repo": "Edilmo/brat-widget", "path": "js/src/util.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(rgb) {\n      var r = rgb[0]/255, g = rgb[1]/255, b = rgb[2]/255;\n      var max = Math.max(r, g, b), min = Math.min(r, g, b);\n      var h, s, l = (max + min) / 2;\n\n      if (max == min) {\n        h = s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n          case g: h = (b - r) / d + 2; break;\n          case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n      }\n      \n      return [h, s, l];\n    }", "code_tokens": ["function", "(", "rgb", ")", "{", "var", "r", "=", "rgb", "[", "0", "]", "/", "255", ",", "g", "=", "rgb", "[", "1", "]", "/", "255", ",", "b", "=", "rgb", "[", "2", "]", "/", "255", ";", "var", "max", "=", "Math", ".", "max", "(", "r", ",", "g", ",", "b", ")", ",", "min", "=", "Math", ".", "min", "(", "r", ",", "g", ",", "b", ")", ";", "var", "h", ",", "s", ",", "l", "=", "(", "max", "+", "min", ")", "/", "2", ";", "if", "(", "max", "==", "min", ")", "{", "h", "=", "s", "=", "0", ";", "// achromatic", "}", "else", "{", "var", "d", "=", "max", "-", "min", ";", "s", "=", "l", ">", "0.5", "?", "d", "/", "(", "2", "-", "max", "-", "min", ")", ":", "d", "/", "(", "max", "+", "min", ")", ";", "switch", "(", "max", ")", "{", "case", "r", ":", "h", "=", "(", "g", "-", "b", ")", "/", "d", "+", "(", "g", "<", "b", "?", "6", ":", "0", ")", ";", "break", ";", "case", "g", ":", "h", "=", "(", "b", "-", "r", ")", "/", "d", "+", "2", ";", "break", ";", "case", "b", ":", "h", "=", "(", "r", "-", "g", ")", "/", "d", "+", "4", ";", "break", ";", "}", "h", "/=", "6", ";", "}", "return", "[", "h", ",", "s", ",", "l", "]", ";", "}"], "original_docstring": "Functions rgbToHsl and hslToRgb originally from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript implementation of functions in Wikipedia (with slight modifications) RGB to HSL color conversion", "docstring": {"block_comment": "Functions rgbToHsl and hslToRgb originally from  implementation of functions in Wikipedia  with slight modifications  RGB to HSL color conversion", "line_comment": ["achromatic"]}, "docstring_tokens": ["Functions", "rgbToHsl", "and", "hslToRgb", "originally", "from", "implementation", "of", "functions", "in", "Wikipedia", "with", "slight", "modifications", "RGB", "to", "HSL", "color", "conversion"], "sample_id": 156, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003961", "repo": "hinaloe/jqm-demo-ja", "path": "js/widgets/popup.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\tthis.window\n\t\t\t.on( this.options.closeEvents, $.proxy( this, \"_closePopup\" ) );\n\t}", "code_tokens": ["function", "(", ")", "{", "this", ".", "window", ".", "on", "(", "this", ".", "options", ".", "closeEvents", ",", "$", ".", "proxy", "(", "this", ",", "\"_closePopup\"", ")", ")", ";", "}"], "original_docstring": "any navigation event after a popup is opened should close the popup NOTE the pagebeforechange is bound to catch navigation events that don't alter the url (eg, dialogs from popups)", "docstring": {"block_comment": "any navigation event after a popup is opened should close the popup NOTE the pagebeforechange is bound to catch navigation events that don t alter the url  eg, dialogs from popups ", "line_comment": null}, "docstring_tokens": ["any", "navigation", "event", "after", "a", "popup", "is", "opened", "should", "close", "the", "popup", "NOTE", "the", "pagebeforechange", "is", "bound", "to", "catch", "navigation", "events", "that", "don", "t", "alter", "the", "url", "eg", "dialogs", "from", "popups"], "sample_id": 157, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003962", "repo": "hinaloe/jqm-demo-ja", "path": "js/widgets/popup.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( openOptions ) {\n\t\tvar offset,\n\t\t\tdst = null,\n\t\t\twindowCoordinates = getWindowCoordinates( this.window ),\n\t\t\tx = openOptions.x,\n\t\t\ty = openOptions.y,\n\t\t\tpTo = openOptions.positionTo;\n\n\t\t// Establish which element will serve as the reference\n\t\tif ( pTo && pTo !== \"origin\" ) {\n\t\t\tif ( pTo === \"window\" ) {\n\t\t\t\tx = windowCoordinates.cx / 2 + windowCoordinates.x;\n\t\t\t\ty = windowCoordinates.cy / 2 + windowCoordinates.y;\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tdst = $( pTo );\n\t\t\t\t} catch( err ) {\n\t\t\t\t\tdst = null;\n\t\t\t\t}\n\t\t\t\tif ( dst ) {\n\t\t\t\t\tdst.filter( \":visible\" );\n\t\t\t\t\tif ( dst.length === 0 ) {\n\t\t\t\t\t\tdst = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If an element was found, center over it\n\t\tif ( dst ) {\n\t\t\toffset = dst.offset();\n\t\t\tx = offset.left + dst.outerWidth() / 2;\n\t\t\ty = offset.top + dst.outerHeight() / 2;\n\t\t}\n\n\t\t// Make sure x and y are valid numbers - center over the window\n\t\tif ( $.type( x ) !== \"number\" || isNaN( x ) ) {\n\t\t\tx = windowCoordinates.cx / 2 + windowCoordinates.x;\n\t\t}\n\t\tif ( $.type( y ) !== \"number\" || isNaN( y ) ) {\n\t\t\ty = windowCoordinates.cy / 2 + windowCoordinates.y;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}", "code_tokens": ["function", "(", "openOptions", ")", "{", "var", "offset", ",", "dst", "=", "null", ",", "windowCoordinates", "=", "getWindowCoordinates", "(", "this", ".", "window", ")", ",", "x", "=", "openOptions", ".", "x", ",", "y", "=", "openOptions", ".", "y", ",", "pTo", "=", "openOptions", ".", "positionTo", ";", "// Establish which element will serve as the reference", "if", "(", "pTo", "&&", "pTo", "!==", "\"origin\"", ")", "{", "if", "(", "pTo", "===", "\"window\"", ")", "{", "x", "=", "windowCoordinates", ".", "cx", "/", "2", "+", "windowCoordinates", ".", "x", ";", "y", "=", "windowCoordinates", ".", "cy", "/", "2", "+", "windowCoordinates", ".", "y", ";", "}", "else", "{", "try", "{", "dst", "=", "$", "(", "pTo", ")", ";", "}", "catch", "(", "err", ")", "{", "dst", "=", "null", ";", "}", "if", "(", "dst", ")", "{", "dst", ".", "filter", "(", "\":visible\"", ")", ";", "if", "(", "dst", ".", "length", "===", "0", ")", "{", "dst", "=", "null", ";", "}", "}", "}", "}", "// If an element was found, center over it", "if", "(", "dst", ")", "{", "offset", "=", "dst", ".", "offset", "(", ")", ";", "x", "=", "offset", ".", "left", "+", "dst", ".", "outerWidth", "(", ")", "/", "2", ";", "y", "=", "offset", ".", "top", "+", "dst", ".", "outerHeight", "(", ")", "/", "2", ";", "}", "// Make sure x and y are valid numbers - center over the window", "if", "(", "$", ".", "type", "(", "x", ")", "!==", "\"number\"", "||", "isNaN", "(", "x", ")", ")", "{", "x", "=", "windowCoordinates", ".", "cx", "/", "2", "+", "windowCoordinates", ".", "x", ";", "}", "if", "(", "$", ".", "type", "(", "y", ")", "!==", "\"number\"", "||", "isNaN", "(", "y", ")", ")", "{", "y", "=", "windowCoordinates", ".", "cy", "/", "2", "+", "windowCoordinates", ".", "y", ";", "}", "return", "{", "x", ":", "x", ",", "y", ":", "y", "}", ";", "}"], "original_docstring": "The desired coordinates passed in will be returned untouched if no reference element can be identified via desiredPosition.positionTo. Nevertheless, this function ensures that its return value always contains valid x and y coordinates by specifying the center middle of the window if the coordinates are absent. options: { x: coordinate, y: coordinate, positionTo: string: \"origin\", \"window\", or jQuery selector", "docstring": {"block_comment": "The desired coordinates passed in will be returned untouched if no reference element can be identified via desiredPosition.positionTo. Nevertheless, this function ensures that its return value always contains valid x and y coordinates by specifying the center middle of the window if the coordinates are absent. options    x  coordinate, y  coordinate, positionTo  string   origin ,  window , or jQuery selector", "line_comment": ["Establish which element will serve as the reference", "If an element was found, center over it", "Make sure x and y are valid numbers   center over the window"]}, "docstring_tokens": ["The", "desired", "coordinates", "passed", "in", "will", "be", "returned", "untouched", "if", "no", "reference", "element", "can", "be", "identified", "via", "desiredPosition", ".", "positionTo", ".", "Nevertheless", "this", "function", "ensures", "that", "its", "return", "value", "always", "contains", "valid", "x", "and", "y", "coordinates", "by", "specifying", "the", "center", "middle", "of", "the", "window", "if", "the", "coordinates", "are", "absent", ".", "options", "x", "coordinate", "y", "coordinate", "positionTo", "string", "origin", "window", "or", "jQuery", "selector"], "sample_id": 158, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003963", "repo": "hinaloe/jqm-demo-ja", "path": "js/widgets/popup.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( desired ) {\n\t\treturn this._calculateFinalLocation( desired, this._clampPopupWidth() );\n\t}", "code_tokens": ["function", "(", "desired", ")", "{", "return", "this", ".", "_calculateFinalLocation", "(", "desired", ",", "this", ".", "_clampPopupWidth", "(", ")", ")", ";", "}"], "original_docstring": "Try and center the overlay over the given coordinates", "docstring": {"block_comment": "Try and center the overlay over the given coordinates", "line_comment": null}, "docstring_tokens": ["Try", "and", "center", "the", "overlay", "over", "the", "given", "coordinates"], "sample_id": 159, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003964", "repo": "hinaloe/jqm-demo-ja", "path": "js/widgets/popup.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( theEvent ) {\n\t\tvar target,\n\t\t\ttargetElement = theEvent.target,\n\t\t\tui = this._ui;\n\n\t\tif ( !this._isOpen ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( targetElement !== ui.container[ 0 ] ) {\n\t\t\ttarget = $( targetElement );\n\t\t\tif ( 0 === target.parents().filter( ui.container[ 0 ] ).length ) {\n\t\t\t\t$( this.document[ 0 ].activeElement ).one( \"focus\", function(/* theEvent */) {\n\t\t\t\t\ttarget.blur();\n\t\t\t\t});\n\t\t\t\tui.focusElement.focus();\n\t\t\t\ttheEvent.preventDefault();\n\t\t\t\ttheEvent.stopImmediatePropagation();\n\t\t\t\treturn false;\n\t\t\t} else if ( ui.focusElement[ 0 ] === ui.container[ 0 ] ) {\n\t\t\t\tui.focusElement = target;\n\t\t\t}\n\t\t}\n\n\t\tthis._ignoreResizeEvents();\n\t}", "code_tokens": ["function", "(", "theEvent", ")", "{", "var", "target", ",", "targetElement", "=", "theEvent", ".", "target", ",", "ui", "=", "this", ".", "_ui", ";", "if", "(", "!", "this", ".", "_isOpen", ")", "{", "return", ";", "}", "if", "(", "targetElement", "!==", "ui", ".", "container", "[", "0", "]", ")", "{", "target", "=", "$", "(", "targetElement", ")", ";", "if", "(", "0", "===", "target", ".", "parents", "(", ")", ".", "filter", "(", "ui", ".", "container", "[", "0", "]", ")", ".", "length", ")", "{", "$", "(", "this", ".", "document", "[", "0", "]", ".", "activeElement", ")", ".", "one", "(", "\"focus\"", ",", "function", "(", "/* theEvent */", ")", "{", "target", ".", "blur", "(", ")", ";", "}", ")", ";", "ui", ".", "focusElement", ".", "focus", "(", ")", ";", "theEvent", ".", "preventDefault", "(", ")", ";", "theEvent", ".", "stopImmediatePropagation", "(", ")", ";", "return", "false", ";", "}", "else", "if", "(", "ui", ".", "focusElement", "[", "0", "]", "===", "ui", ".", "container", "[", "0", "]", ")", "{", "ui", ".", "focusElement", "=", "target", ";", "}", "}", "this", ".", "_ignoreResizeEvents", "(", ")", ";", "}"], "original_docstring": "When the popup is open, attempting to focus on an element that is not a child of the popup will redirect focus to the popup", "docstring": {"block_comment": "When the popup is open, attempting to focus on an element that is not a child of the popup will redirect focus to the popup", "line_comment": ["theEvent"]}, "docstring_tokens": ["When", "the", "popup", "is", "open", "attempting", "to", "focus", "on", "an", "element", "that", "is", "not", "a", "child", "of", "the", "popup", "will", "redirect", "focus", "to", "the", "popup"], "sample_id": 160, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003965", "repo": "hinaloe/jqm-demo-ja", "path": "js/widgets/popup.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\tvar screen = this._ui.screen,\n\t\t\tpopupHeight = this._ui.container.outerHeight( true ),\n\t\t\tscreenHeight = screen.removeAttr( \"style\" ).height(),\n\n\t\t\t// Subtracting 1 here is necessary for an obscure Andrdoid 4.0 bug where\n\t\t\t// the browser hangs if the screen covers the entire document :/\n\t\t\tdocumentHeight = this.document.height() - 1;\n\n\t\tif ( screenHeight < documentHeight ) {\n\t\t\tscreen.height( documentHeight );\n\t\t} else if ( popupHeight > screenHeight ) {\n\t\t\tscreen.height( popupHeight );\n\t\t}\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "screen", "=", "this", ".", "_ui", ".", "screen", ",", "popupHeight", "=", "this", ".", "_ui", ".", "container", ".", "outerHeight", "(", "true", ")", ",", "screenHeight", "=", "screen", ".", "removeAttr", "(", "\"style\"", ")", ".", "height", "(", ")", ",", "// Subtracting 1 here is necessary for an obscure Andrdoid 4.0 bug where", "// the browser hangs if the screen covers the entire document :/", "documentHeight", "=", "this", ".", "document", ".", "height", "(", ")", "-", "1", ";", "if", "(", "screenHeight", "<", "documentHeight", ")", "{", "screen", ".", "height", "(", "documentHeight", ")", ";", "}", "else", "if", "(", "popupHeight", ">", "screenHeight", ")", "{", "screen", ".", "height", "(", "popupHeight", ")", ";", "}", "}"], "original_docstring": "Make sure the screen covers the entire document - CSS is sometimes not enough to accomplish this.", "docstring": {"block_comment": "Make sure the screen covers the entire document   CSS is sometimes not enough to accomplish this.", "line_comment": ["Subtracting 1 here is necessary for an obscure Andrdoid 4.0 bug where", "the browser hangs if the screen covers the entire document  "]}, "docstring_tokens": ["Make", "sure", "the", "screen", "covers", "the", "entire", "document", "CSS", "is", "sometimes", "not", "enough", "to", "accomplish", "this", "."], "sample_id": 161, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003969", "repo": "fevrcoding/generator-wok", "path": "app/index.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n        // Calling the super constructor is important so our generator is correctly set up\n        generators.Base.apply(this, arguments);\n\n        this.answers = {};\n\n    }", "code_tokens": ["function", "(", ")", "{", "// Calling the super constructor is important so our generator is correctly set up", "generators", ".", "Base", ".", "apply", "(", "this", ",", "arguments", ")", ";", "this", ".", "answers", "=", "{", "}", ";", "}"], "original_docstring": "The name `constructor` is important here", "docstring": {"block_comment": "The name  constructor  is important here", "line_comment": ["Calling the super constructor is important so our generator is correctly set up"]}, "docstring_tokens": ["The", "name", "constructor", "is", "important", "here"], "sample_id": 162, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003970", "repo": "emersonthis/fae", "path": "app/assets/javascripts/fae/form/inputs/_text.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    $('.js-markdown-editor:not(.mde-enabled)').each(function() {\n      var $this = $(this);\n\n      var editor = new SimpleMDE({\n        element: this,\n        autoDownloadFontAwesome: false,\n        status: false,\n        spellChecker: false,\n        hideIcons: ['image', 'side-by-side', 'fullscreen', 'preview']\n      });\n\n      // Disable tabbing within editor\n      editor.codemirror.options.extraKeys['Tab'] = false;\n      editor.codemirror.options.extraKeys['Shift-Tab'] = false;\n\n      $this.addClass('mde-enabled');\n\n      // code mirror events to hook into current form element functions\n      editor.codemirror.on('change', function(){\n        // updates the original textarea's value for JS validations\n        $this.val(editor.value());\n        // update length counter\n        Fae.form.validator.length_counter.updateCounter($this);\n      });\n      editor.codemirror.on('focus', function(){\n        $this.parent().addClass('mde-focus');\n      });\n      editor.codemirror.on('blur', function(){\n        // trigger blur on the original textarea to trigger JS validations\n        $this.blur();\n        $this.parent().removeClass('mde-focus');\n      });\n    });\n  }", "code_tokens": ["function", "(", ")", "{", "$", "(", "'.js-markdown-editor:not(.mde-enabled)'", ")", ".", "each", "(", "function", "(", ")", "{", "var", "$this", "=", "$", "(", "this", ")", ";", "var", "editor", "=", "new", "SimpleMDE", "(", "{", "element", ":", "this", ",", "autoDownloadFontAwesome", ":", "false", ",", "status", ":", "false", ",", "spellChecker", ":", "false", ",", "hideIcons", ":", "[", "'image'", ",", "'side-by-side'", ",", "'fullscreen'", ",", "'preview'", "]", "}", ")", ";", "// Disable tabbing within editor", "editor", ".", "codemirror", ".", "options", ".", "extraKeys", "[", "'Tab'", "]", "=", "false", ";", "editor", ".", "codemirror", ".", "options", ".", "extraKeys", "[", "'Shift-Tab'", "]", "=", "false", ";", "$this", ".", "addClass", "(", "'mde-enabled'", ")", ";", "// code mirror events to hook into current form element functions", "editor", ".", "codemirror", ".", "on", "(", "'change'", ",", "function", "(", ")", "{", "// updates the original textarea's value for JS validations", "$this", ".", "val", "(", "editor", ".", "value", "(", ")", ")", ";", "// update length counter", "Fae", ".", "form", ".", "validator", ".", "length_counter", ".", "updateCounter", "(", "$this", ")", ";", "}", ")", ";", "editor", ".", "codemirror", ".", "on", "(", "'focus'", ",", "function", "(", ")", "{", "$this", ".", "parent", "(", ")", ".", "addClass", "(", "'mde-focus'", ")", ";", "}", ")", ";", "editor", ".", "codemirror", ".", "on", "(", "'blur'", ",", "function", "(", ")", "{", "// trigger blur on the original textarea to trigger JS validations", "$this", ".", "blur", "(", ")", ";", "$this", ".", "parent", "(", ")", ".", "removeClass", "(", "'mde-focus'", ")", ";", "}", ")", ";", "}", ")", ";", "}"], "original_docstring": "\nFind all markdown fields and initialize them with a markdown GUI\n@has_test {features/form_helpers/fae_input_spec.rb}\n", "docstring": {"block_comment": "Find all markdown fields and initialize them with a markdown GUI", "line_comment": ["Disable tabbing within editor", "code mirror events to hook into current form element functions", "updates the original textarea s value for JS validations", "update length counter", "trigger blur on the original textarea to trigger JS validations"]}, "docstring_tokens": ["Find", "all", "markdown", "fields", "and", "initialize", "them", "with", "a", "markdown", "GUI"], "sample_id": 163, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003971", "repo": "emersonthis/fae", "path": "app/assets/javascripts/fae/form/inputs/_text.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    toolbarBuiltInButtons['bold'].className = 'icon-bold';\n    toolbarBuiltInButtons['italic'].className = 'icon-italic';\n    toolbarBuiltInButtons['heading'].className = 'icon-font';\n    toolbarBuiltInButtons['code'].className = 'icon-code';\n    toolbarBuiltInButtons['unordered-list'].className = 'icon-list-ul';\n    toolbarBuiltInButtons['ordered-list'].className = 'icon-list-ol';\n    toolbarBuiltInButtons['link'].className = 'icon-link';\n    toolbarBuiltInButtons['image'].className = 'icon-image';\n    toolbarBuiltInButtons['quote'].className = 'icon-quote';\n    toolbarBuiltInButtons['fullscreen'].className = 'icon-fullscreen no-disable no-mobile';\n    toolbarBuiltInButtons['horizontal-rule'].className = 'icon-minus';\n    toolbarBuiltInButtons['preview'].className = 'icon-eye no-disable';\n    toolbarBuiltInButtons['side-by-side'].className = 'icon-columns no-disable no-mobile';\n    toolbarBuiltInButtons['guide'].className = 'icon-question';\n\n    // Override SimpleMDE's default guide and use a homegrown modal\n    toolbarBuiltInButtons['guide'].action = Fae.modals.markdownModal;\n  }", "code_tokens": ["function", "(", ")", "{", "toolbarBuiltInButtons", "[", "'bold'", "]", ".", "className", "=", "'icon-bold'", ";", "toolbarBuiltInButtons", "[", "'italic'", "]", ".", "className", "=", "'icon-italic'", ";", "toolbarBuiltInButtons", "[", "'heading'", "]", ".", "className", "=", "'icon-font'", ";", "toolbarBuiltInButtons", "[", "'code'", "]", ".", "className", "=", "'icon-code'", ";", "toolbarBuiltInButtons", "[", "'unordered-list'", "]", ".", "className", "=", "'icon-list-ul'", ";", "toolbarBuiltInButtons", "[", "'ordered-list'", "]", ".", "className", "=", "'icon-list-ol'", ";", "toolbarBuiltInButtons", "[", "'link'", "]", ".", "className", "=", "'icon-link'", ";", "toolbarBuiltInButtons", "[", "'image'", "]", ".", "className", "=", "'icon-image'", ";", "toolbarBuiltInButtons", "[", "'quote'", "]", ".", "className", "=", "'icon-quote'", ";", "toolbarBuiltInButtons", "[", "'fullscreen'", "]", ".", "className", "=", "'icon-fullscreen no-disable no-mobile'", ";", "toolbarBuiltInButtons", "[", "'horizontal-rule'", "]", ".", "className", "=", "'icon-minus'", ";", "toolbarBuiltInButtons", "[", "'preview'", "]", ".", "className", "=", "'icon-eye no-disable'", ";", "toolbarBuiltInButtons", "[", "'side-by-side'", "]", ".", "className", "=", "'icon-columns no-disable no-mobile'", ";", "toolbarBuiltInButtons", "[", "'guide'", "]", ".", "className", "=", "'icon-question'", ";", "// Override SimpleMDE's default guide and use a homegrown modal", "toolbarBuiltInButtons", "[", "'guide'", "]", ".", "action", "=", "Fae", ".", "modals", ".", "markdownModal", ";", "}"], "original_docstring": "\nOverride SimpleMDE's preference for font-awesome icons and use a modal for the guide\n@see {@link modals.markdownModal}\n", "docstring": {"block_comment": "Override SimpleMDE s preference for font awesome icons and use a modal for the guide", "line_comment": ["Override SimpleMDE s default guide and use a homegrown modal"]}, "docstring_tokens": ["Override", "SimpleMDE", "s", "preference", "for", "font", "awesome", "icons", "and", "use", "a", "modal", "for", "the", "guide"], "sample_id": 164, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003973", "repo": "praxigento/mobi_app_generic_mage2", "path": "test/integration/src/sub/mage/admin/getUrl.js", "language": "JavaScript", "license": "mit", "func_name": "getUrl", "code": "function getUrl(path) {\n    /* shortcuts for globals */\n    var casper = global.casper;\n    var mobi = global.mobi;\n    var root = mobi.opts.navig.mage;\n\n    /* functionality */\n    casper.echo(\"  construct Magento Admin URL for path '\" + path + \"'.\", \"PARAMETER\");\n    var isAlias = path.indexOf('/') === -1;     // absolute path contains at least one '/' char\n    var result, url;\n    if (isAlias) {\n        /* compose URI based on \"route.to.page\" */\n        var route = mobi.objPath.get(root.admin, path);\n        url = route.self;\n    } else {\n        /* absolute path is used */\n        url = path\n    }\n    /* \"http://mage2.local.host.com\" + \"/admin\" + \"url\" */\n    result = root.self + root.admin.self + url;\n    casper.echo(\"  result URL: \" + result, \"PARAMETER\");\n    return result;\n}", "code_tokens": ["function", "getUrl", "(", "path", ")", "{", "/* shortcuts for globals */", "var", "casper", "=", "global", ".", "casper", ";", "var", "mobi", "=", "global", ".", "mobi", ";", "var", "root", "=", "mobi", ".", "opts", ".", "navig", ".", "mage", ";", "/* functionality */", "casper", ".", "echo", "(", "\"  construct Magento Admin URL for path '\"", "+", "path", "+", "\"'.\"", ",", "\"PARAMETER\"", ")", ";", "var", "isAlias", "=", "path", ".", "indexOf", "(", "'/'", ")", "===", "-", "1", ";", "// absolute path contains at least one '/' char", "var", "result", ",", "url", ";", "if", "(", "isAlias", ")", "{", "/* compose URI based on \"route.to.page\" */", "var", "route", "=", "mobi", ".", "objPath", ".", "get", "(", "root", ".", "admin", ",", "path", ")", ";", "url", "=", "route", ".", "self", ";", "}", "else", "{", "/* absolute path is used */", "url", "=", "path", "}", "/* \"http://mage2.local.host.com\" + \"/admin\" + \"url\" */", "result", "=", "root", ".", "self", "+", "root", ".", "admin", ".", "self", "+", "url", ";", "casper", ".", "echo", "(", "\"  result URL: \"", "+", "result", ",", "\"PARAMETER\"", ")", ";", "return", "result", ";", "}"], "original_docstring": "\nConstruct URL for Magento Admin.\n\n@param {string} path path to Magento page (absolute path started with '/', alias - w/o)\n", "docstring": {"block_comment": "Construct URL for Magento Admin.", "line_comment": ["shortcuts for globals", "functionality", "absolute path contains at least one     char", "compose URI based on  route.to.page ", "absolute path is used", "      admin     url "]}, "docstring_tokens": ["Construct", "URL", "for", "Magento", "Admin", "."], "sample_id": 165, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003973", "repo": "praxigento/mobi_app_generic_mage2", "path": "test/integration/src/sub/mage/admin/getUrl.js", "language": "JavaScript", "license": "mit", "func_name": "getUrl", "code": "function getUrl(path) {\n    /* shortcuts for globals */\n    var casper = global.casper;\n    var mobi = global.mobi;\n    var root = mobi.opts.navig.mage;\n\n    /* functionality */\n    casper.echo(\"  construct Magento Admin URL for path '\" + path + \"'.\", \"PARAMETER\");\n    var isAlias = path.indexOf('/') === -1;     // absolute path contains at least one '/' char\n    var result, url;\n    if (isAlias) {\n        /* compose URI based on \"route.to.page\" */\n        var route = mobi.objPath.get(root.admin, path);\n        url = route.self;\n    } else {\n        /* absolute path is used */\n        url = path\n    }\n    /* \"http://mage2.local.host.com\" + \"/admin\" + \"url\" */\n    result = root.self + root.admin.self + url;\n    casper.echo(\"  result URL: \" + result, \"PARAMETER\");\n    return result;\n}", "code_tokens": ["function", "getUrl", "(", "path", ")", "{", "/* shortcuts for globals */", "var", "casper", "=", "global", ".", "casper", ";", "var", "mobi", "=", "global", ".", "mobi", ";", "var", "root", "=", "mobi", ".", "opts", ".", "navig", ".", "mage", ";", "/* functionality */", "casper", ".", "echo", "(", "\"  construct Magento Admin URL for path '\"", "+", "path", "+", "\"'.\"", ",", "\"PARAMETER\"", ")", ";", "var", "isAlias", "=", "path", ".", "indexOf", "(", "'/'", ")", "===", "-", "1", ";", "// absolute path contains at least one '/' char", "var", "result", ",", "url", ";", "if", "(", "isAlias", ")", "{", "/* compose URI based on \"route.to.page\" */", "var", "route", "=", "mobi", ".", "objPath", ".", "get", "(", "root", ".", "admin", ",", "path", ")", ";", "url", "=", "route", ".", "self", ";", "}", "else", "{", "/* absolute path is used */", "url", "=", "path", "}", "/* \"http://mage2.local.host.com\" + \"/admin\" + \"url\" */", "result", "=", "root", ".", "self", "+", "root", ".", "admin", ".", "self", "+", "url", ";", "casper", ".", "echo", "(", "\"  result URL: \"", "+", "result", ",", "\"PARAMETER\"", ")", ";", "return", "result", ";", "}"], "original_docstring": "\nConstruct URL for Magento Admin.\n\n@param {string} path path to Magento page (absolute path started with '/', alias - w/o)\n", "docstring": {"block_comment": "Construct URL for Magento Admin.", "line_comment": ["shortcuts for globals", "functionality", "absolute path contains at least one     char", "compose URI based on  route.to.page ", "absolute path is used", "      admin     url "]}, "docstring_tokens": ["path", "to", "Magento", "page", "(", "absolute", "path", "started", "with", "/", "alias", "-", "w", "/", "o", ")"], "sample_id": 165, "prompt_tokens": ["<javascript>", "<param>", "path"], "comment_type": "param", "sentence_id": 1}
{"id": "21003974", "repo": "mikemimik/node-mumble", "path": "lib/User.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(data, client) {\n    this.client = client;\n    this._applyProperties(data);\n}", "code_tokens": ["function", "(", "data", ",", "client", ")", "{", "this", ".", "client", "=", "client", ";", "this", ".", "_applyProperties", "(", "data", ")", ";", "}"], "original_docstring": "\nSingle user on the server.\n", "docstring": {"block_comment": "Single user on the server.", "line_comment": null}, "docstring_tokens": ["Single", "user", "on", "the", "server", "."], "sample_id": 166, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003975", "repo": "polyma/synergy-lol-api", "path": "index.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(endpoint, returnVars, times_failed) {\n      return this.incrementOneHourCount()\n        .then((oneHour)=> {\n          return this.incrementTenSecondsCount()\n            .then((tenSeconds)=> {\n              this.requestCount.outstandingRequests += 1;\n              var options = {\n                uri: encodeURI(endpoint + '&api_key=' + this.apiKey), //Assume the ? has already been added by our endpoint\n                json: true,\n                resolveWithFullResponse: true\n              }\n              this.logger.log('Using ' + options.uri);\n              this.logger.log(this.requestCount.outstandingRequests);\n              this.logger.log(tenSeconds + ' ' + oneHour);\n              return rp(options)\n              .then(\n                function(response) {\n                  this.requestCount.outstandingRequests -= 1;\n                  if(returnVars) {\n                    if(typeof returnVars === 'string') {\n                      if(response.body[returnVars]) {\n                        return response.body[returnVars]; //Resolve promise\n                      }\n                      else {\n                        this.infoHandle(\"Couldn't locate the requested returnVar \" + returnVars + '. Returning full response.');\n                      }\n                    }\n                    else {\n                      var tmp = {};\n                      returnVars.forEach(function(item, i) {\n                        if(response[item]) {\n                          tmp[item] = response.body[item];\n                        }\n                        else {\n                          var bFailedReturnVar = true;\n                        }\n                      }.bind(this));\n                      if(!bFailedReturnVar) {\n                        return tmp;  //Resolve promise\n                      }\n                      else {\n                        this.infoHandle(\"Couldn't locate the requested returnVar \" + item + '. Returning full response.');\n                        return response.body; //Resolve Promise\n                      }\n                    }\n                  }\n                  else {\n                    this.logger.log('SUCCESSFUL RESPONSE FROM: ' + endpoint);\n                    return response.body; //Resolve promise\n                  }\n                }.bind(this),\n                //REJECTION\n                function(reason) {\n                  this.requestCount.outstandingRequests -= 1;\n                  if(reason.statusCode === 429) {\n                    this.logger.log('Rate limit reached!')\n                    //NOTE: Riot have been known to remove the header so including this to avoid breaking.\n                    if(typeof reason.response['headers']['retry-after'] !== 'undefined') {\n                      this.logger.log('Retrying after ' + reason.response['headers']['retry-after'] + 's');\n                      // this.retryRateLimitOverride(reason.response['headers']['retry-after']);\n                    }\n                    else {\n                      this.logger.log('No Retry-After header');\n                      this.logger.log(reason.response['headers']);\n                    }\n                  }\n                  if(reason.error.code == 'ENOTFOUND') {\n                    throw 'Request ' + endpoint + ' did not access a valid endpoint, please check the parameter structure of your request realm and/or platform names. NOT adding back to queue.';\n                  }\n                  if(reason.statusCode === 404) {\n                    //404 isn't an error per se, so we don't throw this.\n                    return this.notFoundHandle('Request ' + endpoint + ' REJECTED with reason: ' + reason + '. NOT adding back to queue');\n                  }\n                  if(typeof times_failed !== 'number') {\n                    times_failed = 1;\n                  }\n                  else {\n                    times_failed++;\n                  }\n                  this.infoHandle('Request ' + endpoint + ' REJECTED with reason: ' + reason + '. Adding back to queue. Failed ' + times_failed + ' times.');\n                  return this.addToQueue(cb.bind(this, endpoint, returnVars, times_failed), times_failed, endpoint);\n                }.bind(this))\n                .catch(err => {\n                  return this.errorHandle(err);\n                });\n            }); //NOTE: I'm not sure why we can't bind here but if we do it causes times_failed to not increment\n        });\n    }", "code_tokens": ["function", "(", "endpoint", ",", "returnVars", ",", "times_failed", ")", "{", "return", "this", ".", "incrementOneHourCount", "(", ")", ".", "then", "(", "(", "oneHour", ")", "=>", "{", "return", "this", ".", "incrementTenSecondsCount", "(", ")", ".", "then", "(", "(", "tenSeconds", ")", "=>", "{", "this", ".", "requestCount", ".", "outstandingRequests", "+=", "1", ";", "var", "options", "=", "{", "uri", ":", "encodeURI", "(", "endpoint", "+", "'&api_key='", "+", "this", ".", "apiKey", ")", ",", "//Assume the ? has already been added by our endpoint", "json", ":", "true", ",", "resolveWithFullResponse", ":", "true", "}", "this", ".", "logger", ".", "log", "(", "'Using '", "+", "options", ".", "uri", ")", ";", "this", ".", "logger", ".", "log", "(", "this", ".", "requestCount", ".", "outstandingRequests", ")", ";", "this", ".", "logger", ".", "log", "(", "tenSeconds", "+", "' '", "+", "oneHour", ")", ";", "return", "rp", "(", "options", ")", ".", "then", "(", "function", "(", "response", ")", "{", "this", ".", "requestCount", ".", "outstandingRequests", "-=", "1", ";", "if", "(", "returnVars", ")", "{", "if", "(", "typeof", "returnVars", "===", "'string'", ")", "{", "if", "(", "response", ".", "body", "[", "returnVars", "]", ")", "{", "return", "response", ".", "body", "[", "returnVars", "]", ";", "//Resolve promise", "}", "else", "{", "this", ".", "infoHandle", "(", "\"Couldn't locate the requested returnVar \"", "+", "returnVars", "+", "'. Returning full response.'", ")", ";", "}", "}", "else", "{", "var", "tmp", "=", "{", "}", ";", "returnVars", ".", "forEach", "(", "function", "(", "item", ",", "i", ")", "{", "if", "(", "response", "[", "item", "]", ")", "{", "tmp", "[", "item", "]", "=", "response", ".", "body", "[", "item", "]", ";", "}", "else", "{", "var", "bFailedReturnVar", "=", "true", ";", "}", "}", ".", "bind", "(", "this", ")", ")", ";", "if", "(", "!", "bFailedReturnVar", ")", "{", "return", "tmp", ";", "//Resolve promise", "}", "else", "{", "this", ".", "infoHandle", "(", "\"Couldn't locate the requested returnVar \"", "+", "item", "+", "'. Returning full response.'", ")", ";", "return", "response", ".", "body", ";", "//Resolve Promise", "}", "}", "}", "else", "{", "this", ".", "logger", ".", "log", "(", "'SUCCESSFUL RESPONSE FROM: '", "+", "endpoint", ")", ";", "return", "response", ".", "body", ";", "//Resolve promise", "}", "}", ".", "bind", "(", "this", ")", ",", "//REJECTION", "function", "(", "reason", ")", "{", "this", ".", "requestCount", ".", "outstandingRequests", "-=", "1", ";", "if", "(", "reason", ".", "statusCode", "===", "429", ")", "{", "this", ".", "logger", ".", "log", "(", "'Rate limit reached!'", ")", "//NOTE: Riot have been known to remove the header so including this to avoid breaking.", "if", "(", "typeof", "reason", ".", "response", "[", "'headers'", "]", "[", "'retry-after'", "]", "!==", "'undefined'", ")", "{", "this", ".", "logger", ".", "log", "(", "'Retrying after '", "+", "reason", ".", "response", "[", "'headers'", "]", "[", "'retry-after'", "]", "+", "'s'", ")", ";", "// this.retryRateLimitOverride(reason.response['headers']['retry-after']);", "}", "else", "{", "this", ".", "logger", ".", "log", "(", "'No Retry-After header'", ")", ";", "this", ".", "logger", ".", "log", "(", "reason", ".", "response", "[", "'headers'", "]", ")", ";", "}", "}", "if", "(", "reason", ".", "error", ".", "code", "==", "'ENOTFOUND'", ")", "{", "throw", "'Request '", "+", "endpoint", "+", "' did not access a valid endpoint, please check the parameter structure of your request realm and/or platform names. NOT adding back to queue.'", ";", "}", "if", "(", "reason", ".", "statusCode", "===", "404", ")", "{", "//404 isn't an error per se, so we don't throw this.", "return", "this", ".", "notFoundHandle", "(", "'Request '", "+", "endpoint", "+", "' REJECTED with reason: '", "+", "reason", "+", "'. NOT adding back to queue'", ")", ";", "}", "if", "(", "typeof", "times_failed", "!==", "'number'", ")", "{", "times_failed", "=", "1", ";", "}", "else", "{", "times_failed", "++", ";", "}", "this", ".", "infoHandle", "(", "'Request '", "+", "endpoint", "+", "' REJECTED with reason: '", "+", "reason", "+", "'. Adding back to queue. Failed '", "+", "times_failed", "+", "' times.'", ")", ";", "return", "this", ".", "addToQueue", "(", "cb", ".", "bind", "(", "this", ",", "endpoint", ",", "returnVars", ",", "times_failed", ")", ",", "times_failed", ",", "endpoint", ")", ";", "}", ".", "bind", "(", "this", ")", ")", ".", "catch", "(", "err", "=>", "{", "return", "this", ".", "errorHandle", "(", "err", ")", ";", "}", ")", ";", "}", ")", ";", "//NOTE: I'm not sure why we can't bind here but if we do it causes times_failed to not increment", "}", ")", ";", "}"], "original_docstring": "Add the request and set up as a promise", "docstring": {"block_comment": "Add the request and set up as a promise", "line_comment": ["Assume the   has already been added by our endpoint", "Resolve promise", "Resolve promise", "Resolve Promise", "Resolve promise", null, null, "this.retryRateLimitOverride reason.response  headers    retry after    ", "404 isn t an error per se, so we don t throw this.", null]}, "docstring_tokens": ["Add", "the", "request", "and", "set", "up", "as", "a", "promise"], "sample_id": 167, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003976", "repo": "polyma/synergy-lol-api", "path": "index.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(retry_after) {\n    //TODO: do I need to parse int here?\n    var r = parseInt(retry_after) * 1000;\n    //Always clear the 10s timeout just to be certain.\n    //Clear interval and reset after retry after is cleared\n    clearInterval(this.tenSecondsTimeout);\n    this.logger.log(this.tenSecondsTimeout);\n  }", "code_tokens": ["function", "(", "retry_after", ")", "{", "//TODO: do I need to parse int here?", "var", "r", "=", "parseInt", "(", "retry_after", ")", "*", "1000", ";", "//Always clear the 10s timeout just to be certain.", "//Clear interval and reset after retry after is cleared", "clearInterval", "(", "this", ".", "tenSecondsTimeout", ")", ";", "this", ".", "logger", ".", "log", "(", "this", ".", "tenSecondsTimeout", ")", ";", "}"], "original_docstring": "If a 429 is discovered then it sends a retry-after seconds count, test if it greater than remaining time", "docstring": {"block_comment": "If a 429 is discovered then it sends a retry after seconds count, test if it greater than remaining time", "line_comment": [null, "Always clear the 10s timeout just to be certain.", "Clear interval and reset after retry after is cleared"]}, "docstring_tokens": ["If", "a", "429", "is", "discovered", "then", "it", "sends", "a", "retry", "after", "seconds", "count", "test", "if", "it", "greater", "than", "remaining", "time"], "sample_id": 168, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003977", "repo": "maldrasen/archive", "path": "Mephidross/library/model/Improvement.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    return Data.getInterface('improvement_'+this.getCode());\n  }", "code_tokens": ["function", "(", ")", "{", "return", "Data", ".", "getInterface", "(", "'improvement_'", "+", "this", ".", "getCode", "(", ")", ")", ";", "}"], "original_docstring": "/* Get the description of the improvement from the interface data.", "docstring": {"block_comment": "Get the description of the improvement from the interface data.", "line_comment": null}, "docstring_tokens": ["Get", "the", "description", "of", "the", "improvement", "from", "the", "interface", "data", "."], "sample_id": 169, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003978", "repo": "maldrasen/archive", "path": "Mephidross/library/model/Improvement.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    var character = GameState.getCharacter();\n    if (character.getCurrency() < this.cost) {\n      return false;\n    }\n\n    var result = true;\n    $.each(this.materials, function(key, value) {\n      if (character.getItemQuantity(key) < value) {\n        result = false;\n      }\n    });\n\n    return result;\n  }", "code_tokens": ["function", "(", ")", "{", "var", "character", "=", "GameState", ".", "getCharacter", "(", ")", ";", "if", "(", "character", ".", "getCurrency", "(", ")", "<", "this", ".", "cost", ")", "{", "return", "false", ";", "}", "var", "result", "=", "true", ";", "$", ".", "each", "(", "this", ".", "materials", ",", "function", "(", "key", ",", "value", ")", "{", "if", "(", "character", ".", "getItemQuantity", "(", "key", ")", "<", "value", ")", "{", "result", "=", "false", ";", "}", "}", ")", ";", "return", "result", ";", "}"], "original_docstring": "/*\nFunction used to check to see if the character has both the currency and\nmaterials needed to build the improvement.\n", "docstring": {"block_comment": "Function used to check to see if the character has both the currency and \nmaterials needed to build the improvement.", "line_comment": null}, "docstring_tokens": ["Function", "used", "to", "check", "to", "see", "if", "the", "character", "has", "both", "the", "currency", "and", "materials", "needed", "to", "build", "the", "improvement", "."], "sample_id": 170, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003979", "repo": "maldrasen/archive", "path": "Mephidross/library/model/Improvement.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    if (this.parent && !GameState.isImprovementBuilt(this.parent)) {\n      return false;\n    }\n    return Resolver.meetsRequirements(this.toDisplay);\n  }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "parent", "&&", "!", "GameState", ".", "isImprovementBuilt", "(", "this", ".", "parent", ")", ")", "{", "return", "false", ";", "}", "return", "Resolver", ".", "meetsRequirements", "(", "this", ".", "toDisplay", ")", ";", "}"], "original_docstring": "/*\nFunction used to check to see if an improvement should be displayed in\nthe list of improvements. Improvements with parent improvements will not\nbe displayed until their parent improvements have been built.\n", "docstring": {"block_comment": "Function used to check to see if an improvement should be displayed in \nthe list of improvements. Improvements with parent improvements will not \nbe displayed until their parent improvements have been built.", "line_comment": null}, "docstring_tokens": ["Function", "used", "to", "check", "to", "see", "if", "an", "improvement", "should", "be", "displayed", "in", "the", "list", "of", "improvements", ".", "Improvements", "with", "parent", "improvements", "will", "not", "be", "displayed", "until", "their", "parent", "improvements", "have", "been", "built", "."], "sample_id": 171, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003980", "repo": "maldrasen/archive", "path": "Mephidross/library/model/Improvement.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    if (this.canDisplay() == false) { return false; }\n\n    for (var i=0; i<this.siblings.length; i++) {\n      if (GameState.isImprovementBuilt(this.siblings[i])) {\n        return false;\n      }\n    }\n\n    return Resolver.meetsRequirements(this.toBuild);\n  }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "canDisplay", "(", ")", "==", "false", ")", "{", "return", "false", ";", "}", "for", "(", "var", "i", "=", "0", ";", "i", "<", "this", ".", "siblings", ".", "length", ";", "i", "++", ")", "{", "if", "(", "GameState", ".", "isImprovementBuilt", "(", "this", ".", "siblings", "[", "i", "]", ")", ")", "{", "return", "false", ";", "}", "}", "return", "Resolver", ".", "meetsRequirements", "(", "this", ".", "toBuild", ")", ";", "}"], "original_docstring": "/*\nFunction used to check to see if the improvement can be built regardless\nof whether the character has the materials or not. If this improvement\nhas a parent location that hasn't been built then this improvement cannot\nbe built. If this improvement has any sibling improvements that have been\nbuilt then this improvement cannot be built.\n", "docstring": {"block_comment": "Function used to check to see if the improvement can be built regardless \nof whether the character has the materials or not. If this improvement \nhas a parent location that hasn t been built then this improvement cannot \nbe built. If this improvement has any sibling improvements that have been \nbuilt then this improvement cannot be built.", "line_comment": null}, "docstring_tokens": ["Function", "used", "to", "check", "to", "see", "if", "the", "improvement", "can", "be", "built", "regardless", "of", "whether", "the", "character", "has", "the", "materials", "or", "not", ".", "If", "this", "improvement", "has", "a", "parent", "location", "that", "hasn", "t", "been", "built", "then", "this", "improvement", "cannot", "be", "built", ".", "If", "this", "improvement", "has", "any", "sibling", "improvements", "that", "have", "been", "built", "then", "this", "improvement", "cannot", "be", "built", "."], "sample_id": 172, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003981", "repo": "maldrasen/archive", "path": "Mephidross/library/model/Improvement.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    if (!GameState.isImprovementBuilt(this.code)) {\n      return false;\n    }\n    for (var i=0; i<this.children.length; i++) {\n      if (GameState.isImprovementBuilt(this.children[i])) {\n        return false;\n      }\n    }\n    return true;\n  }", "code_tokens": ["function", "(", ")", "{", "if", "(", "!", "GameState", ".", "isImprovementBuilt", "(", "this", ".", "code", ")", ")", "{", "return", "false", ";", "}", "for", "(", "var", "i", "=", "0", ";", "i", "<", "this", ".", "children", ".", "length", ";", "i", "++", ")", "{", "if", "(", "GameState", ".", "isImprovementBuilt", "(", "this", ".", "children", "[", "i", "]", ")", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}"], "original_docstring": "/*\nAn improvement is active when it has been built and none of its children\nhave been built.\n", "docstring": {"block_comment": "An improvement is active when it has been built and none of its children \nhave been built.", "line_comment": null}, "docstring_tokens": ["An", "improvement", "is", "active", "when", "it", "has", "been", "built", "and", "none", "of", "its", "children", "have", "been", "built", "."], "sample_id": 173, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003982", "repo": "maldrasen/archive", "path": "Mephidross/library/model/Improvement.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    GameState.buildImprovement(this.code);\n\n    var character = GameState.getCharacter();\n    character.adjustCurrency(-this.cost);\n\n    $.each(this.materials, function(key, value) {\n      character.removeItem({ item:key, count:value });\n    });\n  }", "code_tokens": ["function", "(", ")", "{", "GameState", ".", "buildImprovement", "(", "this", ".", "code", ")", ";", "var", "character", "=", "GameState", ".", "getCharacter", "(", ")", ";", "character", ".", "adjustCurrency", "(", "-", "this", ".", "cost", ")", ";", "$", ".", "each", "(", "this", ".", "materials", ",", "function", "(", "key", ",", "value", ")", "{", "character", ".", "removeItem", "(", "{", "item", ":", "key", ",", "count", ":", "value", "}", ")", ";", "}", ")", ";", "}"], "original_docstring": "/*\nThe build function will build the improvement, adding it to the list of\nimprovements built in the GameState and removing the needed materials\nfrom the character's inventory.\n", "docstring": {"block_comment": "The build function will build the improvement, adding it to the list of \nimprovements built in the GameState and removing the needed materials \nfrom the character s inventory.", "line_comment": null}, "docstring_tokens": ["The", "build", "function", "will", "build", "the", "improvement", "adding", "it", "to", "the", "list", "of", "improvements", "built", "in", "the", "GameState", "and", "removing", "the", "needed", "materials", "from", "the", "character", "s", "inventory", "."], "sample_id": 174, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003983", "repo": "non/roy", "path": "src/compile.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n            return n.value;\n        }", "code_tokens": ["function", "(", ")", "{", "return", "n", ".", "value", ";", "}"], "original_docstring": "Print all other nodes directly.", "docstring": {"block_comment": "Print all other nodes directly.", "line_comment": null}, "docstring_tokens": ["Print", "all", "other", "nodes", "directly", "."], "sample_id": 175, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003984", "repo": "non/roy", "path": "src/compile.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n            var typeClasses = '';\n            if(n.typeClassInstance) {\n                typeClasses = n.typeClassInstance + ', ';\n            }\n            if(n.func.value == 'import') {\n                return importModule(JSON.parse(n.args[0].value), env, opts);\n            }\n            return compileNode(n.func) + \"(\" + typeClasses + _.map(n.args, compileNode).join(\", \") + \")\";\n        }", "code_tokens": ["function", "(", ")", "{", "var", "typeClasses", "=", "''", ";", "if", "(", "n", ".", "typeClassInstance", ")", "{", "typeClasses", "=", "n", ".", "typeClassInstance", "+", "', '", ";", "}", "if", "(", "n", ".", "func", ".", "value", "==", "'import'", ")", "{", "return", "importModule", "(", "JSON", ".", "parse", "(", "n", ".", "args", "[", "0", "]", ".", "value", ")", ",", "env", ",", "opts", ")", ";", "}", "return", "compileNode", "(", "n", ".", "func", ")", "+", "\"(\"", "+", "typeClasses", "+", "_", ".", "map", "(", "n", ".", "args", ",", "compileNode", ")", ".", "join", "(", "\", \"", ")", "+", "\")\"", ";", "}"], "original_docstring": "Call to JavaScript call.", "docstring": {"block_comment": "Call to JavaScript call.", "line_comment": null}, "docstring_tokens": ["Call", "to", "JavaScript", "call", "."], "sample_id": 176, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003985", "repo": "non/roy", "path": "src/compile.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n            return \"var \" + n.name + \" = \" + compileNode(n.value);\n        }", "code_tokens": ["function", "(", ")", "{", "return", "\"var \"", "+", "n", ".", "name", "+", "\" = \"", "+", "compileNode", "(", "n", ".", "value", ")", ";", "}"], "original_docstring": "Let binding to JavaScript variable.", "docstring": {"block_comment": "Let binding to JavaScript variable.", "line_comment": null}, "docstring_tokens": ["Let", "binding", "to", "JavaScript", "variable", "."], "sample_id": 177, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003986", "repo": "non/roy", "path": "src/compile.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n            var getArgs = function(a) {\n                return _.map(a, function(v) {\n                    return v.name;\n                }).join(\", \");\n            };\n            pushIndent();\n            var split = splitComments(n.body);\n            var compiledWhereDecls = _.map(n.whereDecls, compileNode);\n            var compiledNodeBody = _.map(split.body, compileNode);\n            var init = [];\n            if(compiledWhereDecls.length > 0) {\n                init.push(compiledWhereDecls.join(';\\n' + getIndent()) + ';');\n            }\n            if(compiledNodeBody.length > 1) {\n                init.push(compiledNodeBody.slice(0, compiledNodeBody.length - 1).join(';\\n' + getIndent()) + ';');\n            }\n            var lastString = compiledNodeBody[compiledNodeBody.length - 1];\n            var varEquals = \"\";\n            if(n.name) {\n                varEquals = \"var \" + n.name + \" = \";\n            }\n\n            var compiledEndComments = \"\";\n            if(split.comments.length) {\n                compiledEndComments = getIndent() + _.map(split.comments, compileNode).join(\"\\n\" + getIndent()) + \"\\n\";\n            }\n            return varEquals + \"function(\" + getArgs(n.args) + \") {\\n\" +\n                getIndent() + joinIndent(init) + \"return \" + lastString +\n                \";\\n\" + compiledEndComments + popIndent() + \"}\";\n        }", "code_tokens": ["function", "(", ")", "{", "var", "getArgs", "=", "function", "(", "a", ")", "{", "return", "_", ".", "map", "(", "a", ",", "function", "(", "v", ")", "{", "return", "v", ".", "name", ";", "}", ")", ".", "join", "(", "\", \"", ")", ";", "}", ";", "pushIndent", "(", ")", ";", "var", "split", "=", "splitComments", "(", "n", ".", "body", ")", ";", "var", "compiledWhereDecls", "=", "_", ".", "map", "(", "n", ".", "whereDecls", ",", "compileNode", ")", ";", "var", "compiledNodeBody", "=", "_", ".", "map", "(", "split", ".", "body", ",", "compileNode", ")", ";", "var", "init", "=", "[", "]", ";", "if", "(", "compiledWhereDecls", ".", "length", ">", "0", ")", "{", "init", ".", "push", "(", "compiledWhereDecls", ".", "join", "(", "';\\n'", "+", "getIndent", "(", ")", ")", "+", "';'", ")", ";", "}", "if", "(", "compiledNodeBody", ".", "length", ">", "1", ")", "{", "init", ".", "push", "(", "compiledNodeBody", ".", "slice", "(", "0", ",", "compiledNodeBody", ".", "length", "-", "1", ")", ".", "join", "(", "';\\n'", "+", "getIndent", "(", ")", ")", "+", "';'", ")", ";", "}", "var", "lastString", "=", "compiledNodeBody", "[", "compiledNodeBody", ".", "length", "-", "1", "]", ";", "var", "varEquals", "=", "\"\"", ";", "if", "(", "n", ".", "name", ")", "{", "varEquals", "=", "\"var \"", "+", "n", ".", "name", "+", "\" = \"", ";", "}", "var", "compiledEndComments", "=", "\"\"", ";", "if", "(", "split", ".", "comments", ".", "length", ")", "{", "compiledEndComments", "=", "getIndent", "(", ")", "+", "_", ".", "map", "(", "split", ".", "comments", ",", "compileNode", ")", ".", "join", "(", "\"\\n\"", "+", "getIndent", "(", ")", ")", "+", "\"\\n\"", ";", "}", "return", "varEquals", "+", "\"function(\"", "+", "getArgs", "(", "n", ".", "args", ")", "+", "\") {\\n\"", "+", "getIndent", "(", ")", "+", "joinIndent", "(", "init", ")", "+", "\"return \"", "+", "lastString", "+", "\";\\n\"", "+", "compiledEndComments", "+", "popIndent", "(", ")", "+", "\"}\"", ";", "}"], "original_docstring": "Function definition to JavaScript function.", "docstring": {"block_comment": "Function definition to JavaScript function.", "line_comment": null}, "docstring_tokens": ["Function", "definition", "to", "JavaScript", "function", "."], "sample_id": 178, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003987", "repo": "non/roy", "path": "src/compile.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(body) {\n    return _.reduceRight(body, function(accum, node) {\n        if(!accum.body.length && node instanceof nodes.Comment) {\n            accum.comments.unshift(node);\n            return accum;\n        }\n        accum.body.unshift(node);\n        return accum;\n    }, {\n        body: [],\n        comments: []\n    });\n}", "code_tokens": ["function", "(", "body", ")", "{", "return", "_", ".", "reduceRight", "(", "body", ",", "function", "(", "accum", ",", "node", ")", "{", "if", "(", "!", "accum", ".", "body", ".", "length", "&&", "node", "instanceof", "nodes", ".", "Comment", ")", "{", "accum", ".", "comments", ".", "unshift", "(", "node", ")", ";", "return", "accum", ";", "}", "accum", ".", "body", ".", "unshift", "(", "node", ")", ";", "return", "accum", ";", "}", ",", "{", "body", ":", "[", "]", ",", "comments", ":", "[", "]", "}", ")", ";", "}"], "original_docstring": "Separate end comments from other expressions", "docstring": {"block_comment": "Separate end comments from other expressions", "line_comment": null}, "docstring_tokens": ["Separate", "end", "comments", "from", "other", "expressions"], "sample_id": 179, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003988", "repo": "CI-WATER/tmaps", "path": "tmc-1.2.1-linux/timemachine-viewer/js/org/gigapan/postmessage.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(e) {\n      var msg = {};\n      try {\n        msg = JSON.parse(e.data);\n      } catch (ex) {\n        console.warn(\"postMessage data parsing failed: \", ex);\n        return;\n      }\n      if (!msg.type) {\n        console.warn(\"postMessage message type required.\");\n        return;\n      }\n      var listeners = pm.data(\"listeners.postMessage\") || {};\n      var fns = listeners[msg.type] || [];\n      for (var i = 0, len = fns.length; i < len; i++) {\n        var obj = fns[i];\n        if (obj.origin && obj.origin !== '*' && e.origin !== obj.origin) {\n          console.warn(\"postMessage message origin mismatch: \", e.origin, obj.origin);\n          continue;\n        }\n        // Run handler\n        try {\n          obj.fn(msg.data);\n        } catch (ex) {\n          throw ex;\n        }\n      }\n    }", "code_tokens": ["function", "(", "e", ")", "{", "var", "msg", "=", "{", "}", ";", "try", "{", "msg", "=", "JSON", ".", "parse", "(", "e", ".", "data", ")", ";", "}", "catch", "(", "ex", ")", "{", "console", ".", "warn", "(", "\"postMessage data parsing failed: \"", ",", "ex", ")", ";", "return", ";", "}", "if", "(", "!", "msg", ".", "type", ")", "{", "console", ".", "warn", "(", "\"postMessage message type required.\"", ")", ";", "return", ";", "}", "var", "listeners", "=", "pm", ".", "data", "(", "\"listeners.postMessage\"", ")", "||", "{", "}", ";", "var", "fns", "=", "listeners", "[", "msg", ".", "type", "]", "||", "[", "]", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "fns", ".", "length", ";", "i", "<", "len", ";", "i", "++", ")", "{", "var", "obj", "=", "fns", "[", "i", "]", ";", "if", "(", "obj", ".", "origin", "&&", "obj", ".", "origin", "!==", "'*'", "&&", "e", ".", "origin", "!==", "obj", ".", "origin", ")", "{", "console", ".", "warn", "(", "\"postMessage message origin mismatch: \"", ",", "e", ".", "origin", ",", "obj", ".", "origin", ")", ";", "continue", ";", "}", "// Run handler", "try", "{", "obj", ".", "fn", "(", "msg", ".", "data", ")", ";", "}", "catch", "(", "ex", ")", "{", "throw", "ex", ";", "}", "}", "}"], "original_docstring": "Run the handler, if one exists, based on the type defined in the postMessage.", "docstring": {"block_comment": "Run the handler, if one exists, based on the type defined in the postMessage.", "line_comment": ["Run handler"]}, "docstring_tokens": ["Run", "the", "handler", "if", "one", "exists", "based", "on", "the", "type", "defined", "in", "the", "postMessage", "."], "sample_id": 180, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003989", "repo": "CI-WATER/tmaps", "path": "tmc-1.2.1-linux/timemachine-viewer/js/org/gigapan/postmessage.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(type, fn) {\n      var listeners = pm.data(\"listeners.postMessage\");\n      if (listeners) {\n        if (type) {\n          if (fn) {\n            // Remove specific listener\n            var fns = listeners[type];\n            if (fns) {\n              var newListeners = [];\n              for (var i = 0, len = fns.length; i < len; i++) {\n                var obj = fns[i];\n                if (obj.fn !== fn) {\n                  newListeners.push(obj);\n                }\n              }\n              listeners[type] = newListeners;\n            }\n          } else {\n            // Remove all listeners by type\n            delete listeners[type];\n          }\n        } else {\n          // Unbind all listeners of all types\n          for (var i in listeners) {\n            delete listeners[i];\n          }\n        }\n      }\n    }", "code_tokens": ["function", "(", "type", ",", "fn", ")", "{", "var", "listeners", "=", "pm", ".", "data", "(", "\"listeners.postMessage\"", ")", ";", "if", "(", "listeners", ")", "{", "if", "(", "type", ")", "{", "if", "(", "fn", ")", "{", "// Remove specific listener", "var", "fns", "=", "listeners", "[", "type", "]", ";", "if", "(", "fns", ")", "{", "var", "newListeners", "=", "[", "]", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "fns", ".", "length", ";", "i", "<", "len", ";", "i", "++", ")", "{", "var", "obj", "=", "fns", "[", "i", "]", ";", "if", "(", "obj", ".", "fn", "!==", "fn", ")", "{", "newListeners", ".", "push", "(", "obj", ")", ";", "}", "}", "listeners", "[", "type", "]", "=", "newListeners", ";", "}", "}", "else", "{", "// Remove all listeners by type", "delete", "listeners", "[", "type", "]", ";", "}", "}", "else", "{", "// Unbind all listeners of all types", "for", "(", "var", "i", "in", "listeners", ")", "{", "delete", "listeners", "[", "i", "]", ";", "}", "}", "}", "}"], "original_docstring": "Unbind postMessage listeners.", "docstring": {"block_comment": "Unbind postMessage listeners.", "line_comment": ["Remove specific listener", "Remove all listeners by type", "Unbind all listeners of all types"]}, "docstring_tokens": ["Unbind", "postMessage", "listeners", "."], "sample_id": 181, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003990", "repo": "CI-WATER/tmaps", "path": "tmc-1.2.1-linux/timemachine-viewer/js/org/gigapan/postmessage.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(type, fn) {\n      if (!pm.data(\"listening.postMessage\")) {\n        if (window.addEventListener) {\n          window.addEventListener(\"message\", pm._dispatch, false);\n        }\n        // Make sure we create only one receiving postMessage listener.\n        pm.data(\"listening.postMessage\", true);\n      }\n      // Keep track of listeners and their handlers.\n      var listeners = pm.data(\"listeners.postMessage\");\n      if (!listeners) {\n        listeners = {};\n        pm.data(\"listeners.postMessage\", listeners);\n      }\n      var fns = listeners[type];\n      if (!fns) {\n        fns = [];\n        listeners[type] = fns;\n      }\n      fns.push({fn: fn, origin: pm._origin});\n    }", "code_tokens": ["function", "(", "type", ",", "fn", ")", "{", "if", "(", "!", "pm", ".", "data", "(", "\"listening.postMessage\"", ")", ")", "{", "if", "(", "window", ".", "addEventListener", ")", "{", "window", ".", "addEventListener", "(", "\"message\"", ",", "pm", ".", "_dispatch", ",", "false", ")", ";", "}", "// Make sure we create only one receiving postMessage listener.", "pm", ".", "data", "(", "\"listening.postMessage\"", ",", "true", ")", ";", "}", "// Keep track of listeners and their handlers.", "var", "listeners", "=", "pm", ".", "data", "(", "\"listeners.postMessage\"", ")", ";", "if", "(", "!", "listeners", ")", "{", "listeners", "=", "{", "}", ";", "pm", ".", "data", "(", "\"listeners.postMessage\"", ",", "listeners", ")", ";", "}", "var", "fns", "=", "listeners", "[", "type", "]", ";", "if", "(", "!", "fns", ")", "{", "fns", "=", "[", "]", ";", "listeners", "[", "type", "]", "=", "fns", ";", "}", "fns", ".", "push", "(", "{", "fn", ":", "fn", ",", "origin", ":", "pm", ".", "_origin", "}", ")", ";", "}"], "original_docstring": "Listen to incoming postMessages.", "docstring": {"block_comment": "Listen to incoming postMessages.", "line_comment": ["Make sure we create only one receiving postMessage listener.", "Keep track of listeners and their handlers."]}, "docstring_tokens": ["Listen", "to", "incoming", "postMessages", "."], "sample_id": 182, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003991", "repo": "CI-WATER/tmaps", "path": "tmc-1.2.1-linux/timemachine-viewer/js/org/gigapan/postmessage.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(key, value) {\n      if (value === undefined) {\n        return pm._data[key];\n      }\n      pm._data[key] = value;\n      return value;\n    }", "code_tokens": ["function", "(", "key", ",", "value", ")", "{", "if", "(", "value", "===", "undefined", ")", "{", "return", "pm", ".", "_data", "[", "key", "]", ";", "}", "pm", ".", "_data", "[", "key", "]", "=", "value", ";", "return", "value", ";", "}"], "original_docstring": "Internal storage (keep track of listeners, etc).", "docstring": {"block_comment": "Internal storage  keep track of listeners, etc .", "line_comment": null}, "docstring_tokens": ["Internal", "storage", "keep", "track", "of", "listeners", "etc", "."], "sample_id": 183, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003992", "repo": "UmarFBajwa/JS", "path": "practice.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (limiter) {\n\treturn function (limiter, item) {\n\t\treturn item > limiter;\n\t}.bind(this, limiter);\n}", "code_tokens": ["function", "(", "limiter", ")", "{", "return", "function", "(", "limiter", ",", "item", ")", "{", "return", "item", ">", "limiter", ";", "}", ".", "bind", "(", "this", ",", "limiter", ")", ";", "}"], "original_docstring": "Lecture 51: Functional Programming /*\n-Utilizes first class functions.\n-You functions should not mutate data at lower levels.\n", "docstring": {"block_comment": "Lecture 51  Functional Programming    \n Utilizes first class functions. \n You functions should not mutate data at lower levels.", "line_comment": null}, "docstring_tokens": ["Lecture", "51", "Functional", "Programming", "Utilizes", "first", "class", "functions", ".", "You", "functions", "should", "not", "mutate", "data", "at", "lower", "levels", "."], "sample_id": 184, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003993", "repo": "UmarFBajwa/JS", "path": "practice.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(name) {\n\tconsole.log('Hello' + name);\n}", "code_tokens": ["function", "(", "name", ")", "{", "console", ".", "log", "(", "'Hello'", "+", "name", ")", ";", "}"], "original_docstring": "Function Expression (sort of Object Literal, not in memoryspace)", "docstring": {"block_comment": "Function Expression  sort of Object Literal, not in memoryspace ", "line_comment": null}, "docstring_tokens": ["Function", "Expression", "sort", "of", "Object", "Literal", "not", "in", "memoryspace"], "sample_id": 185, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003994", "repo": "htonkovac/ieee-raspored", "path": "node_modules/googleapis/apis/datastore/v1beta1.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            options || (options = {});\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:import').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: self\n            };\n            return apirequest_1.default(parameters, callback);\n        }", "code_tokens": ["function", "(", "params", ",", "options", ",", "callback", ")", "{", "if", "(", "typeof", "options", "===", "'function'", ")", "{", "callback", "=", "options", ";", "options", "=", "{", "}", ";", "}", "options", "||", "(", "options", "=", "{", "}", ")", ";", "const", "rootUrl", "=", "options", ".", "rootUrl", "||", "'https://datastore.googleapis.com/'", ";", "const", "parameters", "=", "{", "options", ":", "Object", ".", "assign", "(", "{", "url", ":", "(", "rootUrl", "+", "'/v1beta1/projects/{projectId}:import'", ")", ".", "replace", "(", "/", "([^:]\\/)\\/+", "/", "g", ",", "'$1'", ")", ",", "method", ":", "'POST'", "}", ",", "options", ")", ",", "params", ":", "params", ",", "requiredParams", ":", "[", "'projectId'", "]", ",", "pathParams", ":", "[", "'projectId'", "]", ",", "context", ":", "self", "}", ";", "return", "apirequest_1", ".", "default", "(", "parameters", ",", "callback", ")", ";", "}"], "original_docstring": "\ndatastore.projects.import\n\n@desc Imports entities into Google Cloud Datastore. Existing entities with the same key are overwritten. The import occurs in the background and its progress can be monitored and managed via the Operation resource that is created. If an ImportEntities operation is cancelled, it is possible that a subset of the data has already been imported to Cloud Datastore.\n\n@alias datastore.projects.import\n@memberOf! datastore(v1beta1)\n\n@param {object} params Parameters for request\n@param {string} params.projectId Project ID against which to make the request.\n@param {datastore(v1beta1).GoogleDatastoreAdminV1beta1ImportEntitiesRequest} params.resource Request body data\n@param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n@param {callback} callback The callback that handles the response.\n@return {object} Request object\n", "docstring": {"block_comment": "datastore.projects.import", "line_comment": null}, "docstring_tokens": ["datastore", ".", "projects", ".", "import"], "sample_id": 186, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003994", "repo": "htonkovac/ieee-raspored", "path": "node_modules/googleapis/apis/datastore/v1beta1.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            options || (options = {});\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:import').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: self\n            };\n            return apirequest_1.default(parameters, callback);\n        }", "code_tokens": ["function", "(", "params", ",", "options", ",", "callback", ")", "{", "if", "(", "typeof", "options", "===", "'function'", ")", "{", "callback", "=", "options", ";", "options", "=", "{", "}", ";", "}", "options", "||", "(", "options", "=", "{", "}", ")", ";", "const", "rootUrl", "=", "options", ".", "rootUrl", "||", "'https://datastore.googleapis.com/'", ";", "const", "parameters", "=", "{", "options", ":", "Object", ".", "assign", "(", "{", "url", ":", "(", "rootUrl", "+", "'/v1beta1/projects/{projectId}:import'", ")", ".", "replace", "(", "/", "([^:]\\/)\\/+", "/", "g", ",", "'$1'", ")", ",", "method", ":", "'POST'", "}", ",", "options", ")", ",", "params", ":", "params", ",", "requiredParams", ":", "[", "'projectId'", "]", ",", "pathParams", ":", "[", "'projectId'", "]", ",", "context", ":", "self", "}", ";", "return", "apirequest_1", ".", "default", "(", "parameters", ",", "callback", ")", ";", "}"], "original_docstring": "\ndatastore.projects.import\n\n@desc Imports entities into Google Cloud Datastore. Existing entities with the same key are overwritten. The import occurs in the background and its progress can be monitored and managed via the Operation resource that is created. If an ImportEntities operation is cancelled, it is possible that a subset of the data has already been imported to Cloud Datastore.\n\n@alias datastore.projects.import\n@memberOf! datastore(v1beta1)\n\n@param {object} params Parameters for request\n@param {string} params.projectId Project ID against which to make the request.\n@param {datastore(v1beta1).GoogleDatastoreAdminV1beta1ImportEntitiesRequest} params.resource Request body data\n@param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n@param {callback} callback The callback that handles the response.\n@return {object} Request object\n", "docstring": {"block_comment": "datastore.projects.import", "line_comment": null}, "docstring_tokens": ["Parameters", "for", "request"], "sample_id": 186, "prompt_tokens": ["<javascript>", "<param>", "params"], "comment_type": "param", "sentence_id": 1}
{"id": "21003994", "repo": "htonkovac/ieee-raspored", "path": "node_modules/googleapis/apis/datastore/v1beta1.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            options || (options = {});\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:import').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: self\n            };\n            return apirequest_1.default(parameters, callback);\n        }", "code_tokens": ["function", "(", "params", ",", "options", ",", "callback", ")", "{", "if", "(", "typeof", "options", "===", "'function'", ")", "{", "callback", "=", "options", ";", "options", "=", "{", "}", ";", "}", "options", "||", "(", "options", "=", "{", "}", ")", ";", "const", "rootUrl", "=", "options", ".", "rootUrl", "||", "'https://datastore.googleapis.com/'", ";", "const", "parameters", "=", "{", "options", ":", "Object", ".", "assign", "(", "{", "url", ":", "(", "rootUrl", "+", "'/v1beta1/projects/{projectId}:import'", ")", ".", "replace", "(", "/", "([^:]\\/)\\/+", "/", "g", ",", "'$1'", ")", ",", "method", ":", "'POST'", "}", ",", "options", ")", ",", "params", ":", "params", ",", "requiredParams", ":", "[", "'projectId'", "]", ",", "pathParams", ":", "[", "'projectId'", "]", ",", "context", ":", "self", "}", ";", "return", "apirequest_1", ".", "default", "(", "parameters", ",", "callback", ")", ";", "}"], "original_docstring": "\ndatastore.projects.import\n\n@desc Imports entities into Google Cloud Datastore. Existing entities with the same key are overwritten. The import occurs in the background and its progress can be monitored and managed via the Operation resource that is created. If an ImportEntities operation is cancelled, it is possible that a subset of the data has already been imported to Cloud Datastore.\n\n@alias datastore.projects.import\n@memberOf! datastore(v1beta1)\n\n@param {object} params Parameters for request\n@param {string} params.projectId Project ID against which to make the request.\n@param {datastore(v1beta1).GoogleDatastoreAdminV1beta1ImportEntitiesRequest} params.resource Request body data\n@param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n@param {callback} callback The callback that handles the response.\n@return {object} Request object\n", "docstring": {"block_comment": "datastore.projects.import", "line_comment": null}, "docstring_tokens": ["Optionally", "override", "request", "options", "such", "as", "url", "method", "and", "encoding", "."], "sample_id": 186, "prompt_tokens": ["<javascript>", "<param>", "options"], "comment_type": "param", "sentence_id": 2}
{"id": "21003994", "repo": "htonkovac/ieee-raspored", "path": "node_modules/googleapis/apis/datastore/v1beta1.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            options || (options = {});\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:import').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: self\n            };\n            return apirequest_1.default(parameters, callback);\n        }", "code_tokens": ["function", "(", "params", ",", "options", ",", "callback", ")", "{", "if", "(", "typeof", "options", "===", "'function'", ")", "{", "callback", "=", "options", ";", "options", "=", "{", "}", ";", "}", "options", "||", "(", "options", "=", "{", "}", ")", ";", "const", "rootUrl", "=", "options", ".", "rootUrl", "||", "'https://datastore.googleapis.com/'", ";", "const", "parameters", "=", "{", "options", ":", "Object", ".", "assign", "(", "{", "url", ":", "(", "rootUrl", "+", "'/v1beta1/projects/{projectId}:import'", ")", ".", "replace", "(", "/", "([^:]\\/)\\/+", "/", "g", ",", "'$1'", ")", ",", "method", ":", "'POST'", "}", ",", "options", ")", ",", "params", ":", "params", ",", "requiredParams", ":", "[", "'projectId'", "]", ",", "pathParams", ":", "[", "'projectId'", "]", ",", "context", ":", "self", "}", ";", "return", "apirequest_1", ".", "default", "(", "parameters", ",", "callback", ")", ";", "}"], "original_docstring": "\ndatastore.projects.import\n\n@desc Imports entities into Google Cloud Datastore. Existing entities with the same key are overwritten. The import occurs in the background and its progress can be monitored and managed via the Operation resource that is created. If an ImportEntities operation is cancelled, it is possible that a subset of the data has already been imported to Cloud Datastore.\n\n@alias datastore.projects.import\n@memberOf! datastore(v1beta1)\n\n@param {object} params Parameters for request\n@param {string} params.projectId Project ID against which to make the request.\n@param {datastore(v1beta1).GoogleDatastoreAdminV1beta1ImportEntitiesRequest} params.resource Request body data\n@param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n@param {callback} callback The callback that handles the response.\n@return {object} Request object\n", "docstring": {"block_comment": "datastore.projects.import", "line_comment": null}, "docstring_tokens": ["The", "callback", "that", "handles", "the", "response", "."], "sample_id": 186, "prompt_tokens": ["<javascript>", "<param>", "callback"], "comment_type": "param", "sentence_id": 3}
{"id": "21003995", "repo": "htonkovac/ieee-raspored", "path": "node_modules/googleapis/apis/datastore/v1beta1.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            options || (options = {});\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:export').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: self\n            };\n            return apirequest_1.default(parameters, callback);\n        }", "code_tokens": ["function", "(", "params", ",", "options", ",", "callback", ")", "{", "if", "(", "typeof", "options", "===", "'function'", ")", "{", "callback", "=", "options", ";", "options", "=", "{", "}", ";", "}", "options", "||", "(", "options", "=", "{", "}", ")", ";", "const", "rootUrl", "=", "options", ".", "rootUrl", "||", "'https://datastore.googleapis.com/'", ";", "const", "parameters", "=", "{", "options", ":", "Object", ".", "assign", "(", "{", "url", ":", "(", "rootUrl", "+", "'/v1beta1/projects/{projectId}:export'", ")", ".", "replace", "(", "/", "([^:]\\/)\\/+", "/", "g", ",", "'$1'", ")", ",", "method", ":", "'POST'", "}", ",", "options", ")", ",", "params", ":", "params", ",", "requiredParams", ":", "[", "'projectId'", "]", ",", "pathParams", ":", "[", "'projectId'", "]", ",", "context", ":", "self", "}", ";", "return", "apirequest_1", ".", "default", "(", "parameters", ",", "callback", ")", ";", "}"], "original_docstring": "\ndatastore.projects.export\n\n@desc Exports a copy of all or a subset of entities from Google Cloud Datastore to another storage system, such as Google Cloud Storage. Recent updates to entities may not be reflected in the export. The export occurs in the background and its progress can be monitored and managed via the Operation resource that is created. The output of an export may only be used once the associated operation is done. If an export operation is cancelled before completion it may leave partial data behind in Google Cloud Storage.\n\n@alias datastore.projects.export\n@memberOf! datastore(v1beta1)\n\n@param {object} params Parameters for request\n@param {string} params.projectId Project ID against which to make the request.\n@param {datastore(v1beta1).GoogleDatastoreAdminV1beta1ExportEntitiesRequest} params.resource Request body data\n@param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n@param {callback} callback The callback that handles the response.\n@return {object} Request object\n", "docstring": {"block_comment": "datastore.projects.export", "line_comment": null}, "docstring_tokens": ["datastore", ".", "projects", ".", "export"], "sample_id": 187, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003995", "repo": "htonkovac/ieee-raspored", "path": "node_modules/googleapis/apis/datastore/v1beta1.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            options || (options = {});\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:export').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: self\n            };\n            return apirequest_1.default(parameters, callback);\n        }", "code_tokens": ["function", "(", "params", ",", "options", ",", "callback", ")", "{", "if", "(", "typeof", "options", "===", "'function'", ")", "{", "callback", "=", "options", ";", "options", "=", "{", "}", ";", "}", "options", "||", "(", "options", "=", "{", "}", ")", ";", "const", "rootUrl", "=", "options", ".", "rootUrl", "||", "'https://datastore.googleapis.com/'", ";", "const", "parameters", "=", "{", "options", ":", "Object", ".", "assign", "(", "{", "url", ":", "(", "rootUrl", "+", "'/v1beta1/projects/{projectId}:export'", ")", ".", "replace", "(", "/", "([^:]\\/)\\/+", "/", "g", ",", "'$1'", ")", ",", "method", ":", "'POST'", "}", ",", "options", ")", ",", "params", ":", "params", ",", "requiredParams", ":", "[", "'projectId'", "]", ",", "pathParams", ":", "[", "'projectId'", "]", ",", "context", ":", "self", "}", ";", "return", "apirequest_1", ".", "default", "(", "parameters", ",", "callback", ")", ";", "}"], "original_docstring": "\ndatastore.projects.export\n\n@desc Exports a copy of all or a subset of entities from Google Cloud Datastore to another storage system, such as Google Cloud Storage. Recent updates to entities may not be reflected in the export. The export occurs in the background and its progress can be monitored and managed via the Operation resource that is created. The output of an export may only be used once the associated operation is done. If an export operation is cancelled before completion it may leave partial data behind in Google Cloud Storage.\n\n@alias datastore.projects.export\n@memberOf! datastore(v1beta1)\n\n@param {object} params Parameters for request\n@param {string} params.projectId Project ID against which to make the request.\n@param {datastore(v1beta1).GoogleDatastoreAdminV1beta1ExportEntitiesRequest} params.resource Request body data\n@param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n@param {callback} callback The callback that handles the response.\n@return {object} Request object\n", "docstring": {"block_comment": "datastore.projects.export", "line_comment": null}, "docstring_tokens": ["Parameters", "for", "request"], "sample_id": 187, "prompt_tokens": ["<javascript>", "<param>", "params"], "comment_type": "param", "sentence_id": 1}
{"id": "21003995", "repo": "htonkovac/ieee-raspored", "path": "node_modules/googleapis/apis/datastore/v1beta1.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            options || (options = {});\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:export').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: self\n            };\n            return apirequest_1.default(parameters, callback);\n        }", "code_tokens": ["function", "(", "params", ",", "options", ",", "callback", ")", "{", "if", "(", "typeof", "options", "===", "'function'", ")", "{", "callback", "=", "options", ";", "options", "=", "{", "}", ";", "}", "options", "||", "(", "options", "=", "{", "}", ")", ";", "const", "rootUrl", "=", "options", ".", "rootUrl", "||", "'https://datastore.googleapis.com/'", ";", "const", "parameters", "=", "{", "options", ":", "Object", ".", "assign", "(", "{", "url", ":", "(", "rootUrl", "+", "'/v1beta1/projects/{projectId}:export'", ")", ".", "replace", "(", "/", "([^:]\\/)\\/+", "/", "g", ",", "'$1'", ")", ",", "method", ":", "'POST'", "}", ",", "options", ")", ",", "params", ":", "params", ",", "requiredParams", ":", "[", "'projectId'", "]", ",", "pathParams", ":", "[", "'projectId'", "]", ",", "context", ":", "self", "}", ";", "return", "apirequest_1", ".", "default", "(", "parameters", ",", "callback", ")", ";", "}"], "original_docstring": "\ndatastore.projects.export\n\n@desc Exports a copy of all or a subset of entities from Google Cloud Datastore to another storage system, such as Google Cloud Storage. Recent updates to entities may not be reflected in the export. The export occurs in the background and its progress can be monitored and managed via the Operation resource that is created. The output of an export may only be used once the associated operation is done. If an export operation is cancelled before completion it may leave partial data behind in Google Cloud Storage.\n\n@alias datastore.projects.export\n@memberOf! datastore(v1beta1)\n\n@param {object} params Parameters for request\n@param {string} params.projectId Project ID against which to make the request.\n@param {datastore(v1beta1).GoogleDatastoreAdminV1beta1ExportEntitiesRequest} params.resource Request body data\n@param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n@param {callback} callback The callback that handles the response.\n@return {object} Request object\n", "docstring": {"block_comment": "datastore.projects.export", "line_comment": null}, "docstring_tokens": ["Optionally", "override", "request", "options", "such", "as", "url", "method", "and", "encoding", "."], "sample_id": 187, "prompt_tokens": ["<javascript>", "<param>", "options"], "comment_type": "param", "sentence_id": 2}
{"id": "21003995", "repo": "htonkovac/ieee-raspored", "path": "node_modules/googleapis/apis/datastore/v1beta1.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            options || (options = {});\n            const rootUrl = options.rootUrl || 'https://datastore.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/projects/{projectId}:export').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['projectId'],\n                pathParams: ['projectId'],\n                context: self\n            };\n            return apirequest_1.default(parameters, callback);\n        }", "code_tokens": ["function", "(", "params", ",", "options", ",", "callback", ")", "{", "if", "(", "typeof", "options", "===", "'function'", ")", "{", "callback", "=", "options", ";", "options", "=", "{", "}", ";", "}", "options", "||", "(", "options", "=", "{", "}", ")", ";", "const", "rootUrl", "=", "options", ".", "rootUrl", "||", "'https://datastore.googleapis.com/'", ";", "const", "parameters", "=", "{", "options", ":", "Object", ".", "assign", "(", "{", "url", ":", "(", "rootUrl", "+", "'/v1beta1/projects/{projectId}:export'", ")", ".", "replace", "(", "/", "([^:]\\/)\\/+", "/", "g", ",", "'$1'", ")", ",", "method", ":", "'POST'", "}", ",", "options", ")", ",", "params", ":", "params", ",", "requiredParams", ":", "[", "'projectId'", "]", ",", "pathParams", ":", "[", "'projectId'", "]", ",", "context", ":", "self", "}", ";", "return", "apirequest_1", ".", "default", "(", "parameters", ",", "callback", ")", ";", "}"], "original_docstring": "\ndatastore.projects.export\n\n@desc Exports a copy of all or a subset of entities from Google Cloud Datastore to another storage system, such as Google Cloud Storage. Recent updates to entities may not be reflected in the export. The export occurs in the background and its progress can be monitored and managed via the Operation resource that is created. The output of an export may only be used once the associated operation is done. If an export operation is cancelled before completion it may leave partial data behind in Google Cloud Storage.\n\n@alias datastore.projects.export\n@memberOf! datastore(v1beta1)\n\n@param {object} params Parameters for request\n@param {string} params.projectId Project ID against which to make the request.\n@param {datastore(v1beta1).GoogleDatastoreAdminV1beta1ExportEntitiesRequest} params.resource Request body data\n@param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n@param {callback} callback The callback that handles the response.\n@return {object} Request object\n", "docstring": {"block_comment": "datastore.projects.export", "line_comment": null}, "docstring_tokens": ["The", "callback", "that", "handles", "the", "response", "."], "sample_id": 187, "prompt_tokens": ["<javascript>", "<param>", "callback"], "comment_type": "param", "sentence_id": 3}
{"id": "21003996", "repo": "jonashartmann/arkanoid", "path": "app/scripts/scene/editor.js", "language": "JavaScript", "license": "mit", "func_name": "addBrickToSet", "code": "function addBrickToSet (brick) {\n            brickSet[brick._brickID] = {\n                w: brick.w,\n                h: brick.h,\n                x: brick.x,\n                y: brick.y\n            };\n            console.log('Added brick', brickSet[brick._brickID]);\n        }", "code_tokens": ["function", "addBrickToSet", "(", "brick", ")", "{", "brickSet", "[", "brick", ".", "_brickID", "]", "=", "{", "w", ":", "brick", ".", "w", ",", "h", ":", "brick", ".", "h", ",", "x", ":", "brick", ".", "x", ",", "y", ":", "brick", ".", "y", "}", ";", "console", ".", "log", "(", "'Added brick'", ",", "brickSet", "[", "brick", ".", "_brickID", "]", ")", ";", "}"], "original_docstring": "Adds brick to level by its ID It will overwrite any info already saved with this ID", "docstring": {"block_comment": "Adds brick to level by its ID It will overwrite any info already saved with this ID", "line_comment": null}, "docstring_tokens": ["Adds", "brick", "to", "level", "by", "its", "ID", "It", "will", "overwrite", "any", "info", "already", "saved", "with", "this", "ID"], "sample_id": 188, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003997", "repo": "openT2T/onboarding", "path": "org.OpenT2T.Onboarding.LightifyHub/node/hub.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(answers) {\n        var deferred = q.defer();\n\n        console.log(\"[Lightify] connect\");\n\n        if (!answers.deviceSerialNumber && !answers.username && ! answers.password) {\n            logError(\"Invalid input\");\n            setImmediate(function () { deferred.reject(new Error(\"Invalid input\")); });\n        }\n        else {   \n            internal.username = answers.username;\n            internal.password = answers.password;\n            internal.deviceSerialNumber = answers.deviceSerialNumber;\n            \n            this.authorize().then(function (data) { \n                deferred.resolve(data);\n            }, \n            function (error) {\n                logError(error);\n                deferred.reject(error); \n            });\n        }\n\n        return deferred.promise;\n    }", "code_tokens": ["function", "(", "answers", ")", "{", "var", "deferred", "=", "q", ".", "defer", "(", ")", ";", "console", ".", "log", "(", "\"[Lightify] connect\"", ")", ";", "if", "(", "!", "answers", ".", "deviceSerialNumber", "&&", "!", "answers", ".", "username", "&&", "!", "answers", ".", "password", ")", "{", "logError", "(", "\"Invalid input\"", ")", ";", "setImmediate", "(", "function", "(", ")", "{", "deferred", ".", "reject", "(", "new", "Error", "(", "\"Invalid input\"", ")", ")", ";", "}", ")", ";", "}", "else", "{", "internal", ".", "username", "=", "answers", ".", "username", ";", "internal", ".", "password", "=", "answers", ".", "password", ";", "internal", ".", "deviceSerialNumber", "=", "answers", ".", "deviceSerialNumber", ";", "this", ".", "authorize", "(", ")", ".", "then", "(", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "data", ")", ";", "}", ",", "function", "(", "error", ")", "{", "logError", "(", "error", ")", ";", "deferred", ".", "reject", "(", "error", ")", ";", "}", ")", ";", "}", "return", "deferred", ".", "promise", ";", "}"], "original_docstring": "connects to the hub based on the answers provided", "docstring": {"block_comment": "connects to the hub based on the answers provided", "line_comment": null}, "docstring_tokens": ["connects", "to", "the", "hub", "based", "on", "the", "answers", "provided"], "sample_id": 189, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003998", "repo": "openT2T/onboarding", "path": "org.OpenT2T.Onboarding.LightifyHub/node/hub.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        // get initial set of authorization info, including account server\n        return internal.getSecurityToken().then((data) => {\n            // get the list of devices\n            return internal.getDevices().then((devices) => {\n                this.securityToken = data.securityToken;\n                this.devices = devices;\n                this.deviceSerialNumber = internal.deviceSerialNumber;\n                return devices;\n            })\n        });\n    }", "code_tokens": ["function", "(", ")", "{", "// get initial set of authorization info, including account server", "return", "internal", ".", "getSecurityToken", "(", ")", ".", "then", "(", "(", "data", ")", "=>", "{", "// get the list of devices", "return", "internal", ".", "getDevices", "(", ")", ".", "then", "(", "(", "devices", ")", "=>", "{", "this", ".", "securityToken", "=", "data", ".", "securityToken", ";", "this", ".", "devices", "=", "devices", ";", "this", ".", "deviceSerialNumber", "=", "internal", ".", "deviceSerialNumber", ";", "return", "devices", ";", "}", ")", "}", ")", ";", "}"], "original_docstring": "authorizes to the server based on the properties saved in the object", "docstring": {"block_comment": "authorizes to the server based on the properties saved in the object", "line_comment": ["get initial set of authorization info, including account server", "get the list of devices"]}, "docstring_tokens": ["authorizes", "to", "the", "server", "based", "on", "the", "properties", "saved", "in", "the", "object"], "sample_id": 190, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21003999", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        if (this.sprite.fixedToCamera && this.boundsSprite.fixedToCamera)\n        {\n            if (this.sprite.cameraOffset.x < this.boundsSprite.camerOffset.x)\n            {\n                this.sprite.cameraOffset.x = this.boundsSprite.camerOffset.x;\n            }\n            else if ((this.sprite.cameraOffset.x + this.sprite.width) > (this.boundsSprite.camerOffset.x + this.boundsSprite.width))\n            {\n                this.sprite.cameraOffset.x = (this.boundsSprite.camerOffset.x + this.boundsSprite.width) - this.sprite.width;\n            }\n\n            if (this.sprite.cameraOffset.y < this.boundsSprite.camerOffset.y)\n            {\n                this.sprite.cameraOffset.y = this.boundsSprite.camerOffset.y;\n            }\n            else if ((this.sprite.cameraOffset.y + this.sprite.height) > (this.boundsSprite.camerOffset.y + this.boundsSprite.height))\n            {\n                this.sprite.cameraOffset.y = (this.boundsSprite.camerOffset.y + this.boundsSprite.height) - this.sprite.height;\n            }\n        }\n        else\n        {\n            if (this.sprite.x < this.boundsSprite.x)\n            {\n                this.sprite.x = this.boundsSprite.x;\n            }\n            else if ((this.sprite.x + this.sprite.width) > (this.boundsSprite.x + this.boundsSprite.width))\n            {\n                this.sprite.x = (this.boundsSprite.x + this.boundsSprite.width) - this.sprite.width;\n            }\n\n            if (this.sprite.y < this.boundsSprite.y)\n            {\n                this.sprite.y = this.boundsSprite.y;\n            }\n            else if ((this.sprite.y + this.sprite.height) > (this.boundsSprite.y + this.boundsSprite.height))\n            {\n                this.sprite.y = (this.boundsSprite.y + this.boundsSprite.height) - this.sprite.height;\n            }\n        }\n\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "sprite", ".", "fixedToCamera", "&&", "this", ".", "boundsSprite", ".", "fixedToCamera", ")", "{", "if", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "<", "this", ".", "boundsSprite", ".", "camerOffset", ".", "x", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "=", "this", ".", "boundsSprite", ".", "camerOffset", ".", "x", ";", "}", "else", "if", "(", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "+", "this", ".", "sprite", ".", "width", ")", ">", "(", "this", ".", "boundsSprite", ".", "camerOffset", ".", "x", "+", "this", ".", "boundsSprite", ".", "width", ")", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "=", "(", "this", ".", "boundsSprite", ".", "camerOffset", ".", "x", "+", "this", ".", "boundsSprite", ".", "width", ")", "-", "this", ".", "sprite", ".", "width", ";", "}", "if", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "<", "this", ".", "boundsSprite", ".", "camerOffset", ".", "y", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "=", "this", ".", "boundsSprite", ".", "camerOffset", ".", "y", ";", "}", "else", "if", "(", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "+", "this", ".", "sprite", ".", "height", ")", ">", "(", "this", ".", "boundsSprite", ".", "camerOffset", ".", "y", "+", "this", ".", "boundsSprite", ".", "height", ")", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "=", "(", "this", ".", "boundsSprite", ".", "camerOffset", ".", "y", "+", "this", ".", "boundsSprite", ".", "height", ")", "-", "this", ".", "sprite", ".", "height", ";", "}", "}", "else", "{", "if", "(", "this", ".", "sprite", ".", "x", "<", "this", ".", "boundsSprite", ".", "x", ")", "{", "this", ".", "sprite", ".", "x", "=", "this", ".", "boundsSprite", ".", "x", ";", "}", "else", "if", "(", "(", "this", ".", "sprite", ".", "x", "+", "this", ".", "sprite", ".", "width", ")", ">", "(", "this", ".", "boundsSprite", ".", "x", "+", "this", ".", "boundsSprite", ".", "width", ")", ")", "{", "this", ".", "sprite", ".", "x", "=", "(", "this", ".", "boundsSprite", ".", "x", "+", "this", ".", "boundsSprite", ".", "width", ")", "-", "this", ".", "sprite", ".", "width", ";", "}", "if", "(", "this", ".", "sprite", ".", "y", "<", "this", ".", "boundsSprite", ".", "y", ")", "{", "this", ".", "sprite", ".", "y", "=", "this", ".", "boundsSprite", ".", "y", ";", "}", "else", "if", "(", "(", "this", ".", "sprite", ".", "y", "+", "this", ".", "sprite", ".", "height", ")", ">", "(", "this", ".", "boundsSprite", ".", "y", "+", "this", ".", "boundsSprite", ".", "height", ")", ")", "{", "this", ".", "sprite", ".", "y", "=", "(", "this", ".", "boundsSprite", ".", "y", "+", "this", ".", "boundsSprite", ".", "height", ")", "-", "this", ".", "sprite", ".", "height", ";", "}", "}", "}"], "original_docstring": "\nParent Sprite Bounds check for the sprite drag.\n@method Phaser.InputHandler#checkBoundsSprite\n", "docstring": {"block_comment": "Parent Sprite Bounds check for the sprite drag.", "line_comment": null}, "docstring_tokens": ["Parent", "Sprite", "Bounds", "check", "for", "the", "sprite", "drag", "."], "sample_id": 191, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004000", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        if (this.sprite.fixedToCamera)\n        {\n            if (this.sprite.cameraOffset.x < this.boundsRect.left)\n            {\n                this.sprite.cameraOffset.x = this.boundsRect.cameraOffset.x;\n            }\n            else if ((this.sprite.cameraOffset.x + this.sprite.width) > this.boundsRect.right)\n            {\n                this.sprite.cameraOffset.x = this.boundsRect.right - this.sprite.width;\n            }\n\n            if (this.sprite.cameraOffset.y < this.boundsRect.top)\n            {\n                this.sprite.cameraOffset.y = this.boundsRect.top;\n            }\n            else if ((this.sprite.cameraOffset.y + this.sprite.height) > this.boundsRect.bottom)\n            {\n                this.sprite.cameraOffset.y = this.boundsRect.bottom - this.sprite.height;\n            }\n        }\n        else\n        {\n            if (this.sprite.x < this.boundsRect.left)\n            {\n                this.sprite.x = this.boundsRect.x;\n            }\n            else if ((this.sprite.x + this.sprite.width) > this.boundsRect.right)\n            {\n                this.sprite.x = this.boundsRect.right - this.sprite.width;\n            }\n\n            if (this.sprite.y < this.boundsRect.top)\n            {\n                this.sprite.y = this.boundsRect.top;\n            }\n            else if ((this.sprite.y + this.sprite.height) > this.boundsRect.bottom)\n            {\n                this.sprite.y = this.boundsRect.bottom - this.sprite.height;\n            }\n        }\n\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "sprite", ".", "fixedToCamera", ")", "{", "if", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "<", "this", ".", "boundsRect", ".", "left", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "=", "this", ".", "boundsRect", ".", "cameraOffset", ".", "x", ";", "}", "else", "if", "(", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "+", "this", ".", "sprite", ".", "width", ")", ">", "this", ".", "boundsRect", ".", "right", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "=", "this", ".", "boundsRect", ".", "right", "-", "this", ".", "sprite", ".", "width", ";", "}", "if", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "<", "this", ".", "boundsRect", ".", "top", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "=", "this", ".", "boundsRect", ".", "top", ";", "}", "else", "if", "(", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "+", "this", ".", "sprite", ".", "height", ")", ">", "this", ".", "boundsRect", ".", "bottom", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "=", "this", ".", "boundsRect", ".", "bottom", "-", "this", ".", "sprite", ".", "height", ";", "}", "}", "else", "{", "if", "(", "this", ".", "sprite", ".", "x", "<", "this", ".", "boundsRect", ".", "left", ")", "{", "this", ".", "sprite", ".", "x", "=", "this", ".", "boundsRect", ".", "x", ";", "}", "else", "if", "(", "(", "this", ".", "sprite", ".", "x", "+", "this", ".", "sprite", ".", "width", ")", ">", "this", ".", "boundsRect", ".", "right", ")", "{", "this", ".", "sprite", ".", "x", "=", "this", ".", "boundsRect", ".", "right", "-", "this", ".", "sprite", ".", "width", ";", "}", "if", "(", "this", ".", "sprite", ".", "y", "<", "this", ".", "boundsRect", ".", "top", ")", "{", "this", ".", "sprite", ".", "y", "=", "this", ".", "boundsRect", ".", "top", ";", "}", "else", "if", "(", "(", "this", ".", "sprite", ".", "y", "+", "this", ".", "sprite", ".", "height", ")", ">", "this", ".", "boundsRect", ".", "bottom", ")", "{", "this", ".", "sprite", ".", "y", "=", "this", ".", "boundsRect", ".", "bottom", "-", "this", ".", "sprite", ".", "height", ";", "}", "}", "}"], "original_docstring": "\nBounds Rect check for the sprite drag\n@method Phaser.InputHandler#checkBoundsRect\n", "docstring": {"block_comment": "Bounds Rect check for the sprite drag", "line_comment": null}, "docstring_tokens": ["Bounds", "Rect", "check", "for", "the", "sprite", "drag"], "sample_id": 192, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004001", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        this.snapOnDrag = false;\n        this.snapOnRelease = false;\n\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "snapOnDrag", "=", "false", ";", "this", ".", "snapOnRelease", "=", "false", ";", "}"], "original_docstring": "\nStops the sprite from snapping to a grid during drag or release.\n@method Phaser.InputHandler#disableSnap\n", "docstring": {"block_comment": "Stops the sprite from snapping to a grid during drag or release.", "line_comment": null}, "docstring_tokens": ["Stops", "the", "sprite", "from", "snapping", "to", "a", "grid", "during", "drag", "or", "release", "."], "sample_id": 193, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004002", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (snapX, snapY, onDrag, onRelease, snapOffsetX, snapOffsetY) {\n\n        if (typeof onDrag == 'undefined') { onDrag = true; }\n        if (typeof onRelease == 'undefined') { onRelease = false; }\n        if (typeof snapOffsetX == 'undefined') { snapOffsetX = 0; }\n        if (typeof snapOffsetY == 'undefined') { snapOffsetY = 0; }\n\n        this.snapX = snapX;\n        this.snapY = snapY;\n        this.snapOffsetX = snapOffsetX;\n        this.snapOffsetY = snapOffsetY;\n        this.snapOnDrag = onDrag;\n        this.snapOnRelease = onRelease;\n\n    }", "code_tokens": ["function", "(", "snapX", ",", "snapY", ",", "onDrag", ",", "onRelease", ",", "snapOffsetX", ",", "snapOffsetY", ")", "{", "if", "(", "typeof", "onDrag", "==", "'undefined'", ")", "{", "onDrag", "=", "true", ";", "}", "if", "(", "typeof", "onRelease", "==", "'undefined'", ")", "{", "onRelease", "=", "false", ";", "}", "if", "(", "typeof", "snapOffsetX", "==", "'undefined'", ")", "{", "snapOffsetX", "=", "0", ";", "}", "if", "(", "typeof", "snapOffsetY", "==", "'undefined'", ")", "{", "snapOffsetY", "=", "0", ";", "}", "this", ".", "snapX", "=", "snapX", ";", "this", ".", "snapY", "=", "snapY", ";", "this", ".", "snapOffsetX", "=", "snapOffsetX", ";", "this", ".", "snapOffsetY", "=", "snapOffsetY", ";", "this", ".", "snapOnDrag", "=", "onDrag", ";", "this", ".", "snapOnRelease", "=", "onRelease", ";", "}"], "original_docstring": "\nMake this Sprite snap to the given grid either during drag or when it's released.\nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.\n@method Phaser.InputHandler#enableSnap\n@param {number} snapX - The width of the grid cell to snap to.\n@param {number} snapY - The height of the grid cell to snap to.\n@param {boolean} [onDrag=true] - If true the sprite will snap to the grid while being dragged.\n@param {boolean} [onRelease=false] - If true the sprite will snap to the grid when released.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n", "docstring": {"block_comment": "Make this Sprite snap to the given grid either during drag or when it s released. \nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.", "line_comment": null}, "docstring_tokens": ["Make", "this", "Sprite", "snap", "to", "the", "given", "grid", "either", "during", "drag", "or", "when", "it", "s", "released", ".", "For", "example", "16x16", "as", "the", "snapX", "and", "snapY", "would", "make", "the", "sprite", "snap", "to", "every", "16", "pixels", "."], "sample_id": 194, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004002", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (snapX, snapY, onDrag, onRelease, snapOffsetX, snapOffsetY) {\n\n        if (typeof onDrag == 'undefined') { onDrag = true; }\n        if (typeof onRelease == 'undefined') { onRelease = false; }\n        if (typeof snapOffsetX == 'undefined') { snapOffsetX = 0; }\n        if (typeof snapOffsetY == 'undefined') { snapOffsetY = 0; }\n\n        this.snapX = snapX;\n        this.snapY = snapY;\n        this.snapOffsetX = snapOffsetX;\n        this.snapOffsetY = snapOffsetY;\n        this.snapOnDrag = onDrag;\n        this.snapOnRelease = onRelease;\n\n    }", "code_tokens": ["function", "(", "snapX", ",", "snapY", ",", "onDrag", ",", "onRelease", ",", "snapOffsetX", ",", "snapOffsetY", ")", "{", "if", "(", "typeof", "onDrag", "==", "'undefined'", ")", "{", "onDrag", "=", "true", ";", "}", "if", "(", "typeof", "onRelease", "==", "'undefined'", ")", "{", "onRelease", "=", "false", ";", "}", "if", "(", "typeof", "snapOffsetX", "==", "'undefined'", ")", "{", "snapOffsetX", "=", "0", ";", "}", "if", "(", "typeof", "snapOffsetY", "==", "'undefined'", ")", "{", "snapOffsetY", "=", "0", ";", "}", "this", ".", "snapX", "=", "snapX", ";", "this", ".", "snapY", "=", "snapY", ";", "this", ".", "snapOffsetX", "=", "snapOffsetX", ";", "this", ".", "snapOffsetY", "=", "snapOffsetY", ";", "this", ".", "snapOnDrag", "=", "onDrag", ";", "this", ".", "snapOnRelease", "=", "onRelease", ";", "}"], "original_docstring": "\nMake this Sprite snap to the given grid either during drag or when it's released.\nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.\n@method Phaser.InputHandler#enableSnap\n@param {number} snapX - The width of the grid cell to snap to.\n@param {number} snapY - The height of the grid cell to snap to.\n@param {boolean} [onDrag=true] - If true the sprite will snap to the grid while being dragged.\n@param {boolean} [onRelease=false] - If true the sprite will snap to the grid when released.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n", "docstring": {"block_comment": "Make this Sprite snap to the given grid either during drag or when it s released. \nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.", "line_comment": null}, "docstring_tokens": ["-", "The", "width", "of", "the", "grid", "cell", "to", "snap", "to", "."], "sample_id": 194, "prompt_tokens": ["<javascript>", "<param>", "snapX"], "comment_type": "param", "sentence_id": 1}
{"id": "21004002", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (snapX, snapY, onDrag, onRelease, snapOffsetX, snapOffsetY) {\n\n        if (typeof onDrag == 'undefined') { onDrag = true; }\n        if (typeof onRelease == 'undefined') { onRelease = false; }\n        if (typeof snapOffsetX == 'undefined') { snapOffsetX = 0; }\n        if (typeof snapOffsetY == 'undefined') { snapOffsetY = 0; }\n\n        this.snapX = snapX;\n        this.snapY = snapY;\n        this.snapOffsetX = snapOffsetX;\n        this.snapOffsetY = snapOffsetY;\n        this.snapOnDrag = onDrag;\n        this.snapOnRelease = onRelease;\n\n    }", "code_tokens": ["function", "(", "snapX", ",", "snapY", ",", "onDrag", ",", "onRelease", ",", "snapOffsetX", ",", "snapOffsetY", ")", "{", "if", "(", "typeof", "onDrag", "==", "'undefined'", ")", "{", "onDrag", "=", "true", ";", "}", "if", "(", "typeof", "onRelease", "==", "'undefined'", ")", "{", "onRelease", "=", "false", ";", "}", "if", "(", "typeof", "snapOffsetX", "==", "'undefined'", ")", "{", "snapOffsetX", "=", "0", ";", "}", "if", "(", "typeof", "snapOffsetY", "==", "'undefined'", ")", "{", "snapOffsetY", "=", "0", ";", "}", "this", ".", "snapX", "=", "snapX", ";", "this", ".", "snapY", "=", "snapY", ";", "this", ".", "snapOffsetX", "=", "snapOffsetX", ";", "this", ".", "snapOffsetY", "=", "snapOffsetY", ";", "this", ".", "snapOnDrag", "=", "onDrag", ";", "this", ".", "snapOnRelease", "=", "onRelease", ";", "}"], "original_docstring": "\nMake this Sprite snap to the given grid either during drag or when it's released.\nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.\n@method Phaser.InputHandler#enableSnap\n@param {number} snapX - The width of the grid cell to snap to.\n@param {number} snapY - The height of the grid cell to snap to.\n@param {boolean} [onDrag=true] - If true the sprite will snap to the grid while being dragged.\n@param {boolean} [onRelease=false] - If true the sprite will snap to the grid when released.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n", "docstring": {"block_comment": "Make this Sprite snap to the given grid either during drag or when it s released. \nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.", "line_comment": null}, "docstring_tokens": ["-", "The", "height", "of", "the", "grid", "cell", "to", "snap", "to", "."], "sample_id": 194, "prompt_tokens": ["<javascript>", "<param>", "snapY"], "comment_type": "param", "sentence_id": 2}
{"id": "21004002", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (snapX, snapY, onDrag, onRelease, snapOffsetX, snapOffsetY) {\n\n        if (typeof onDrag == 'undefined') { onDrag = true; }\n        if (typeof onRelease == 'undefined') { onRelease = false; }\n        if (typeof snapOffsetX == 'undefined') { snapOffsetX = 0; }\n        if (typeof snapOffsetY == 'undefined') { snapOffsetY = 0; }\n\n        this.snapX = snapX;\n        this.snapY = snapY;\n        this.snapOffsetX = snapOffsetX;\n        this.snapOffsetY = snapOffsetY;\n        this.snapOnDrag = onDrag;\n        this.snapOnRelease = onRelease;\n\n    }", "code_tokens": ["function", "(", "snapX", ",", "snapY", ",", "onDrag", ",", "onRelease", ",", "snapOffsetX", ",", "snapOffsetY", ")", "{", "if", "(", "typeof", "onDrag", "==", "'undefined'", ")", "{", "onDrag", "=", "true", ";", "}", "if", "(", "typeof", "onRelease", "==", "'undefined'", ")", "{", "onRelease", "=", "false", ";", "}", "if", "(", "typeof", "snapOffsetX", "==", "'undefined'", ")", "{", "snapOffsetX", "=", "0", ";", "}", "if", "(", "typeof", "snapOffsetY", "==", "'undefined'", ")", "{", "snapOffsetY", "=", "0", ";", "}", "this", ".", "snapX", "=", "snapX", ";", "this", ".", "snapY", "=", "snapY", ";", "this", ".", "snapOffsetX", "=", "snapOffsetX", ";", "this", ".", "snapOffsetY", "=", "snapOffsetY", ";", "this", ".", "snapOnDrag", "=", "onDrag", ";", "this", ".", "snapOnRelease", "=", "onRelease", ";", "}"], "original_docstring": "\nMake this Sprite snap to the given grid either during drag or when it's released.\nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.\n@method Phaser.InputHandler#enableSnap\n@param {number} snapX - The width of the grid cell to snap to.\n@param {number} snapY - The height of the grid cell to snap to.\n@param {boolean} [onDrag=true] - If true the sprite will snap to the grid while being dragged.\n@param {boolean} [onRelease=false] - If true the sprite will snap to the grid when released.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n", "docstring": {"block_comment": "Make this Sprite snap to the given grid either during drag or when it s released. \nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.", "line_comment": null}, "docstring_tokens": ["-", "If", "true", "the", "sprite", "will", "snap", "to", "the", "grid", "while", "being", "dragged", "."], "sample_id": 194, "prompt_tokens": ["<javascript>", "<param>", "onDrag"], "comment_type": "param", "sentence_id": 3}
{"id": "21004002", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (snapX, snapY, onDrag, onRelease, snapOffsetX, snapOffsetY) {\n\n        if (typeof onDrag == 'undefined') { onDrag = true; }\n        if (typeof onRelease == 'undefined') { onRelease = false; }\n        if (typeof snapOffsetX == 'undefined') { snapOffsetX = 0; }\n        if (typeof snapOffsetY == 'undefined') { snapOffsetY = 0; }\n\n        this.snapX = snapX;\n        this.snapY = snapY;\n        this.snapOffsetX = snapOffsetX;\n        this.snapOffsetY = snapOffsetY;\n        this.snapOnDrag = onDrag;\n        this.snapOnRelease = onRelease;\n\n    }", "code_tokens": ["function", "(", "snapX", ",", "snapY", ",", "onDrag", ",", "onRelease", ",", "snapOffsetX", ",", "snapOffsetY", ")", "{", "if", "(", "typeof", "onDrag", "==", "'undefined'", ")", "{", "onDrag", "=", "true", ";", "}", "if", "(", "typeof", "onRelease", "==", "'undefined'", ")", "{", "onRelease", "=", "false", ";", "}", "if", "(", "typeof", "snapOffsetX", "==", "'undefined'", ")", "{", "snapOffsetX", "=", "0", ";", "}", "if", "(", "typeof", "snapOffsetY", "==", "'undefined'", ")", "{", "snapOffsetY", "=", "0", ";", "}", "this", ".", "snapX", "=", "snapX", ";", "this", ".", "snapY", "=", "snapY", ";", "this", ".", "snapOffsetX", "=", "snapOffsetX", ";", "this", ".", "snapOffsetY", "=", "snapOffsetY", ";", "this", ".", "snapOnDrag", "=", "onDrag", ";", "this", ".", "snapOnRelease", "=", "onRelease", ";", "}"], "original_docstring": "\nMake this Sprite snap to the given grid either during drag or when it's released.\nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.\n@method Phaser.InputHandler#enableSnap\n@param {number} snapX - The width of the grid cell to snap to.\n@param {number} snapY - The height of the grid cell to snap to.\n@param {boolean} [onDrag=true] - If true the sprite will snap to the grid while being dragged.\n@param {boolean} [onRelease=false] - If true the sprite will snap to the grid when released.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n", "docstring": {"block_comment": "Make this Sprite snap to the given grid either during drag or when it s released. \nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.", "line_comment": null}, "docstring_tokens": ["-", "If", "true", "the", "sprite", "will", "snap", "to", "the", "grid", "when", "released", "."], "sample_id": 194, "prompt_tokens": ["<javascript>", "<param>", "onRelease"], "comment_type": "param", "sentence_id": 4}
{"id": "21004002", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (snapX, snapY, onDrag, onRelease, snapOffsetX, snapOffsetY) {\n\n        if (typeof onDrag == 'undefined') { onDrag = true; }\n        if (typeof onRelease == 'undefined') { onRelease = false; }\n        if (typeof snapOffsetX == 'undefined') { snapOffsetX = 0; }\n        if (typeof snapOffsetY == 'undefined') { snapOffsetY = 0; }\n\n        this.snapX = snapX;\n        this.snapY = snapY;\n        this.snapOffsetX = snapOffsetX;\n        this.snapOffsetY = snapOffsetY;\n        this.snapOnDrag = onDrag;\n        this.snapOnRelease = onRelease;\n\n    }", "code_tokens": ["function", "(", "snapX", ",", "snapY", ",", "onDrag", ",", "onRelease", ",", "snapOffsetX", ",", "snapOffsetY", ")", "{", "if", "(", "typeof", "onDrag", "==", "'undefined'", ")", "{", "onDrag", "=", "true", ";", "}", "if", "(", "typeof", "onRelease", "==", "'undefined'", ")", "{", "onRelease", "=", "false", ";", "}", "if", "(", "typeof", "snapOffsetX", "==", "'undefined'", ")", "{", "snapOffsetX", "=", "0", ";", "}", "if", "(", "typeof", "snapOffsetY", "==", "'undefined'", ")", "{", "snapOffsetY", "=", "0", ";", "}", "this", ".", "snapX", "=", "snapX", ";", "this", ".", "snapY", "=", "snapY", ";", "this", ".", "snapOffsetX", "=", "snapOffsetX", ";", "this", ".", "snapOffsetY", "=", "snapOffsetY", ";", "this", ".", "snapOnDrag", "=", "onDrag", ";", "this", ".", "snapOnRelease", "=", "onRelease", ";", "}"], "original_docstring": "\nMake this Sprite snap to the given grid either during drag or when it's released.\nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.\n@method Phaser.InputHandler#enableSnap\n@param {number} snapX - The width of the grid cell to snap to.\n@param {number} snapY - The height of the grid cell to snap to.\n@param {boolean} [onDrag=true] - If true the sprite will snap to the grid while being dragged.\n@param {boolean} [onRelease=false] - If true the sprite will snap to the grid when released.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n@param {number} [snapOffsetX=0] - Used to offset the top-left starting point of the snap grid.\n", "docstring": {"block_comment": "Make this Sprite snap to the given grid either during drag or when it s released. \nFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.", "line_comment": null}, "docstring_tokens": ["-", "Used", "to", "offset", "the", "top", "-", "left", "starting", "point", "of", "the", "snap", "grid", "."], "sample_id": 194, "prompt_tokens": ["<javascript>", "<param>", "snapOffsetX"], "comment_type": "param", "sentence_id": 5}
{"id": "21004003", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (allowHorizontal, allowVertical) {\n\n        if (typeof allowHorizontal == 'undefined') { allowHorizontal = true; }\n        if (typeof allowVertical == 'undefined') { allowVertical = true; }\n\n        this.allowHorizontalDrag = allowHorizontal;\n        this.allowVerticalDrag = allowVertical;\n\n    }", "code_tokens": ["function", "(", "allowHorizontal", ",", "allowVertical", ")", "{", "if", "(", "typeof", "allowHorizontal", "==", "'undefined'", ")", "{", "allowHorizontal", "=", "true", ";", "}", "if", "(", "typeof", "allowVertical", "==", "'undefined'", ")", "{", "allowVertical", "=", "true", ";", "}", "this", ".", "allowHorizontalDrag", "=", "allowHorizontal", ";", "this", ".", "allowVerticalDrag", "=", "allowVertical", ";", "}"], "original_docstring": "\nRestricts this sprite to drag movement only on the given axis. Note: If both are set to false the sprite will never move!\n@method Phaser.InputHandler#setDragLock\n@param {boolean} [allowHorizontal=true] - To enable the sprite to be dragged horizontally set to true, otherwise false.\n@param {boolean} [allowVertical=true] - To enable the sprite to be dragged vertically set to true, otherwise false.\n", "docstring": {"block_comment": "Restricts this sprite to drag movement only on the given axis. Note  If both are set to false the sprite will never move ", "line_comment": null}, "docstring_tokens": ["Restricts", "this", "sprite", "to", "drag", "movement", "only", "on", "the", "given", "axis", ".", "Note", "If", "both", "are", "set", "to", "false", "the", "sprite", "will", "never", "move"], "sample_id": 195, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004003", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (allowHorizontal, allowVertical) {\n\n        if (typeof allowHorizontal == 'undefined') { allowHorizontal = true; }\n        if (typeof allowVertical == 'undefined') { allowVertical = true; }\n\n        this.allowHorizontalDrag = allowHorizontal;\n        this.allowVerticalDrag = allowVertical;\n\n    }", "code_tokens": ["function", "(", "allowHorizontal", ",", "allowVertical", ")", "{", "if", "(", "typeof", "allowHorizontal", "==", "'undefined'", ")", "{", "allowHorizontal", "=", "true", ";", "}", "if", "(", "typeof", "allowVertical", "==", "'undefined'", ")", "{", "allowVertical", "=", "true", ";", "}", "this", ".", "allowHorizontalDrag", "=", "allowHorizontal", ";", "this", ".", "allowVerticalDrag", "=", "allowVertical", ";", "}"], "original_docstring": "\nRestricts this sprite to drag movement only on the given axis. Note: If both are set to false the sprite will never move!\n@method Phaser.InputHandler#setDragLock\n@param {boolean} [allowHorizontal=true] - To enable the sprite to be dragged horizontally set to true, otherwise false.\n@param {boolean} [allowVertical=true] - To enable the sprite to be dragged vertically set to true, otherwise false.\n", "docstring": {"block_comment": "Restricts this sprite to drag movement only on the given axis. Note  If both are set to false the sprite will never move ", "line_comment": null}, "docstring_tokens": ["-", "To", "enable", "the", "sprite", "to", "be", "dragged", "horizontally", "set", "to", "true", "otherwise", "false", "."], "sample_id": 195, "prompt_tokens": ["<javascript>", "<param>", "allowHorizontal"], "comment_type": "param", "sentence_id": 1}
{"id": "21004003", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (allowHorizontal, allowVertical) {\n\n        if (typeof allowHorizontal == 'undefined') { allowHorizontal = true; }\n        if (typeof allowVertical == 'undefined') { allowVertical = true; }\n\n        this.allowHorizontalDrag = allowHorizontal;\n        this.allowVerticalDrag = allowVertical;\n\n    }", "code_tokens": ["function", "(", "allowHorizontal", ",", "allowVertical", ")", "{", "if", "(", "typeof", "allowHorizontal", "==", "'undefined'", ")", "{", "allowHorizontal", "=", "true", ";", "}", "if", "(", "typeof", "allowVertical", "==", "'undefined'", ")", "{", "allowVertical", "=", "true", ";", "}", "this", ".", "allowHorizontalDrag", "=", "allowHorizontal", ";", "this", ".", "allowVerticalDrag", "=", "allowVertical", ";", "}"], "original_docstring": "\nRestricts this sprite to drag movement only on the given axis. Note: If both are set to false the sprite will never move!\n@method Phaser.InputHandler#setDragLock\n@param {boolean} [allowHorizontal=true] - To enable the sprite to be dragged horizontally set to true, otherwise false.\n@param {boolean} [allowVertical=true] - To enable the sprite to be dragged vertically set to true, otherwise false.\n", "docstring": {"block_comment": "Restricts this sprite to drag movement only on the given axis. Note  If both are set to false the sprite will never move ", "line_comment": null}, "docstring_tokens": ["-", "To", "enable", "the", "sprite", "to", "be", "dragged", "vertically", "set", "to", "true", "otherwise", "false", "."], "sample_id": 195, "prompt_tokens": ["<javascript>", "<param>", "allowVertical"], "comment_type": "param", "sentence_id": 2}
{"id": "21004004", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        this.isDragged = false;\n        this._draggedPointerID = -1;\n        this._pointerData[pointer.id].isDragged = false;\n\n        if (this.snapOnRelease)\n        {\n            if (this.sprite.fixedToCamera)\n            {\n                this.sprite.cameraOffset.x = Math.round((this.sprite.cameraOffset.x - (this.snapOffsetX % this.snapX)) / this.snapX) * this.snapX + (this.snapOffsetX % this.snapX);\n                this.sprite.cameraOffset.y = Math.round((this.sprite.cameraOffset.y - (this.snapOffsetY % this.snapY)) / this.snapY) * this.snapY + (this.snapOffsetY % this.snapY);\n            }\n            else\n            {\n                this.sprite.x = Math.round((this.sprite.x - (this.snapOffsetX % this.snapX)) / this.snapX) * this.snapX + (this.snapOffsetX % this.snapX);\n                this.sprite.y = Math.round((this.sprite.y - (this.snapOffsetY % this.snapY)) / this.snapY) * this.snapY + (this.snapOffsetY % this.snapY);\n            }\n        }\n\n        this.sprite.events.onDragStop.dispatch(this.sprite, pointer);\n\n        if (this.checkPointerOver(pointer) === false)\n        {\n            this._pointerOutHandler(pointer);\n        }\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "this", ".", "isDragged", "=", "false", ";", "this", ".", "_draggedPointerID", "=", "-", "1", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isDragged", "=", "false", ";", "if", "(", "this", ".", "snapOnRelease", ")", "{", "if", "(", "this", ".", "sprite", ".", "fixedToCamera", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "=", "Math", ".", "round", "(", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "-", "(", "this", ".", "snapOffsetX", "%", "this", ".", "snapX", ")", ")", "/", "this", ".", "snapX", ")", "*", "this", ".", "snapX", "+", "(", "this", ".", "snapOffsetX", "%", "this", ".", "snapX", ")", ";", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "=", "Math", ".", "round", "(", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "-", "(", "this", ".", "snapOffsetY", "%", "this", ".", "snapY", ")", ")", "/", "this", ".", "snapY", ")", "*", "this", ".", "snapY", "+", "(", "this", ".", "snapOffsetY", "%", "this", ".", "snapY", ")", ";", "}", "else", "{", "this", ".", "sprite", ".", "x", "=", "Math", ".", "round", "(", "(", "this", ".", "sprite", ".", "x", "-", "(", "this", ".", "snapOffsetX", "%", "this", ".", "snapX", ")", ")", "/", "this", ".", "snapX", ")", "*", "this", ".", "snapX", "+", "(", "this", ".", "snapOffsetX", "%", "this", ".", "snapX", ")", ";", "this", ".", "sprite", ".", "y", "=", "Math", ".", "round", "(", "(", "this", ".", "sprite", ".", "y", "-", "(", "this", ".", "snapOffsetY", "%", "this", ".", "snapY", ")", ")", "/", "this", ".", "snapY", ")", "*", "this", ".", "snapY", "+", "(", "this", ".", "snapOffsetY", "%", "this", ".", "snapY", ")", ";", "}", "}", "this", ".", "sprite", ".", "events", ".", "onDragStop", ".", "dispatch", "(", "this", ".", "sprite", ",", "pointer", ")", ";", "if", "(", "this", ".", "checkPointerOver", "(", "pointer", ")", "===", "false", ")", "{", "this", ".", "_pointerOutHandler", "(", "pointer", ")", ";", "}", "}"], "original_docstring": "\nCalled by Pointer when drag is stopped on this Sprite. Should not usually be called directly.\n@method Phaser.InputHandler#stopDrag\n@param {Phaser.Pointer} pointer\n", "docstring": {"block_comment": "Called by Pointer when drag is stopped on this Sprite. Should not usually be called directly.", "line_comment": null}, "docstring_tokens": ["Called", "by", "Pointer", "when", "drag", "is", "stopped", "on", "this", "Sprite", ".", "Should", "not", "usually", "be", "called", "directly", "."], "sample_id": 196, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004005", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        this.isDragged = true;\n        this._draggedPointerID = pointer.id;\n        this._pointerData[pointer.id].isDragged = true;\n\n        if (this.sprite.fixedToCamera)\n        {\n            if (this.dragFromCenter)\n            {\n                this.sprite.centerOn(pointer.x, pointer.y);\n                this._dragPoint.setTo(this.sprite.cameraOffset.x - pointer.x, this.sprite.cameraOffset.y - pointer.y);\n            }\n            else\n            {\n                this._dragPoint.setTo(this.sprite.cameraOffset.x - pointer.x, this.sprite.cameraOffset.y - pointer.y);\n            }\n        }\n        else\n        {\n            if (this.dragFromCenter)\n            {\n                var bounds = this.sprite.getBounds();\n                this.sprite.x = pointer.x + (this.sprite.x - bounds.centerX);\n                this.sprite.y = pointer.y + (this.sprite.y - bounds.centerY);\n                this._dragPoint.setTo(this.sprite.x - pointer.x, this.sprite.y - pointer.y);\n            }\n            else\n            {\n                this._dragPoint.setTo(this.sprite.x - pointer.x, this.sprite.y - pointer.y);\n            }\n        }\n\n        this.updateDrag(pointer);\n\n        if (this.bringToTop)\n        {\n            this.sprite.bringToTop();\n        }\n\n        this.sprite.events.onDragStart.dispatch(this.sprite, pointer);\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "this", ".", "isDragged", "=", "true", ";", "this", ".", "_draggedPointerID", "=", "pointer", ".", "id", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isDragged", "=", "true", ";", "if", "(", "this", ".", "sprite", ".", "fixedToCamera", ")", "{", "if", "(", "this", ".", "dragFromCenter", ")", "{", "this", ".", "sprite", ".", "centerOn", "(", "pointer", ".", "x", ",", "pointer", ".", "y", ")", ";", "this", ".", "_dragPoint", ".", "setTo", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "-", "pointer", ".", "x", ",", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "-", "pointer", ".", "y", ")", ";", "}", "else", "{", "this", ".", "_dragPoint", ".", "setTo", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "-", "pointer", ".", "x", ",", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "-", "pointer", ".", "y", ")", ";", "}", "}", "else", "{", "if", "(", "this", ".", "dragFromCenter", ")", "{", "var", "bounds", "=", "this", ".", "sprite", ".", "getBounds", "(", ")", ";", "this", ".", "sprite", ".", "x", "=", "pointer", ".", "x", "+", "(", "this", ".", "sprite", ".", "x", "-", "bounds", ".", "centerX", ")", ";", "this", ".", "sprite", ".", "y", "=", "pointer", ".", "y", "+", "(", "this", ".", "sprite", ".", "y", "-", "bounds", ".", "centerY", ")", ";", "this", ".", "_dragPoint", ".", "setTo", "(", "this", ".", "sprite", ".", "x", "-", "pointer", ".", "x", ",", "this", ".", "sprite", ".", "y", "-", "pointer", ".", "y", ")", ";", "}", "else", "{", "this", ".", "_dragPoint", ".", "setTo", "(", "this", ".", "sprite", ".", "x", "-", "pointer", ".", "x", ",", "this", ".", "sprite", ".", "y", "-", "pointer", ".", "y", ")", ";", "}", "}", "this", ".", "updateDrag", "(", "pointer", ")", ";", "if", "(", "this", ".", "bringToTop", ")", "{", "this", ".", "sprite", ".", "bringToTop", "(", ")", ";", "}", "this", ".", "sprite", ".", "events", ".", "onDragStart", ".", "dispatch", "(", "this", ".", "sprite", ",", "pointer", ")", ";", "}"], "original_docstring": "\nCalled by Pointer when drag starts on this Sprite. Should not usually be called directly.\n@method Phaser.InputHandler#startDrag\n@param {Phaser.Pointer} pointer\n", "docstring": {"block_comment": "Called by Pointer when drag starts on this Sprite. Should not usually be called directly.", "line_comment": null}, "docstring_tokens": ["Called", "by", "Pointer", "when", "drag", "starts", "on", "this", "Sprite", ".", "Should", "not", "usually", "be", "called", "directly", "."], "sample_id": 197, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004006", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        if (this._pointerData)\n        {\n            for (var i = 0; i < 10; i++)\n            {\n                this._pointerData[i].isDragged = false;\n            }\n        }\n\n        this.draggable = false;\n        this.isDragged = false;\n        this._draggedPointerID = -1;\n\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "_pointerData", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "this", ".", "_pointerData", "[", "i", "]", ".", "isDragged", "=", "false", ";", "}", "}", "this", ".", "draggable", "=", "false", ";", "this", ".", "isDragged", "=", "false", ";", "this", ".", "_draggedPointerID", "=", "-", "1", ";", "}"], "original_docstring": "\nStops this sprite from being able to be dragged. If it is currently the target of an active drag it will be stopped immediately. Also disables any set callbacks.\n@method Phaser.InputHandler#disableDrag\n", "docstring": {"block_comment": "Stops this sprite from being able to be dragged. If it is currently the target of an active drag it will be stopped immediately. Also disables any set callbacks.", "line_comment": null}, "docstring_tokens": ["Stops", "this", "sprite", "from", "being", "able", "to", "be", "dragged", ".", "If", "it", "is", "currently", "the", "target", "of", "an", "active", "drag", "it", "will", "be", "stopped", "immediately", ".", "Also", "disables", "any", "set", "callbacks", "."], "sample_id": 198, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004007", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (lockCenter, bringToTop, pixelPerfect, alphaThreshold, boundsRect, boundsSprite) {\n\n        if (typeof lockCenter == 'undefined') { lockCenter = false; }\n        if (typeof bringToTop == 'undefined') { bringToTop = false; }\n        if (typeof pixelPerfect == 'undefined') { pixelPerfect = false; }\n        if (typeof alphaThreshold == 'undefined') { alphaThreshold = 255; }\n        if (typeof boundsRect == 'undefined') { boundsRect = null; }\n        if (typeof boundsSprite == 'undefined') { boundsSprite = null; }\n\n        this._dragPoint = new Phaser.Point();\n        this.draggable = true;\n        this.bringToTop = bringToTop;\n        this.dragOffset = new Phaser.Point();\n        this.dragFromCenter = lockCenter;\n\n        this.pixelPerfect = pixelPerfect;\n        this.pixelPerfectAlpha = alphaThreshold;\n\n        if (boundsRect)\n        {\n            this.boundsRect = boundsRect;\n        }\n\n        if (boundsSprite)\n        {\n            this.boundsSprite = boundsSprite;\n        }\n\n    }", "code_tokens": ["function", "(", "lockCenter", ",", "bringToTop", ",", "pixelPerfect", ",", "alphaThreshold", ",", "boundsRect", ",", "boundsSprite", ")", "{", "if", "(", "typeof", "lockCenter", "==", "'undefined'", ")", "{", "lockCenter", "=", "false", ";", "}", "if", "(", "typeof", "bringToTop", "==", "'undefined'", ")", "{", "bringToTop", "=", "false", ";", "}", "if", "(", "typeof", "pixelPerfect", "==", "'undefined'", ")", "{", "pixelPerfect", "=", "false", ";", "}", "if", "(", "typeof", "alphaThreshold", "==", "'undefined'", ")", "{", "alphaThreshold", "=", "255", ";", "}", "if", "(", "typeof", "boundsRect", "==", "'undefined'", ")", "{", "boundsRect", "=", "null", ";", "}", "if", "(", "typeof", "boundsSprite", "==", "'undefined'", ")", "{", "boundsSprite", "=", "null", ";", "}", "this", ".", "_dragPoint", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "draggable", "=", "true", ";", "this", ".", "bringToTop", "=", "bringToTop", ";", "this", ".", "dragOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "dragFromCenter", "=", "lockCenter", ";", "this", ".", "pixelPerfect", "=", "pixelPerfect", ";", "this", ".", "pixelPerfectAlpha", "=", "alphaThreshold", ";", "if", "(", "boundsRect", ")", "{", "this", ".", "boundsRect", "=", "boundsRect", ";", "}", "if", "(", "boundsSprite", ")", "{", "this", ".", "boundsSprite", "=", "boundsSprite", ";", "}", "}"], "original_docstring": "\nMake this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback\n@method Phaser.InputHandler#enableDrag\n@param {boolean} [lockCenter=false] - If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.\n@param {boolean} [bringToTop=false] - If true the Sprite will be bought to the top of the rendering list in its current Group.\n@param {boolean} [pixelPerfect=false] - If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.\n@param {boolean} [alphaThreshold=255] - If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.\n@param {Phaser.Rectangle} [boundsRect=null] - If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.\n@param {Phaser.Sprite} [boundsSprite=null] - If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.\n", "docstring": {"block_comment": "Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback", "line_comment": null}, "docstring_tokens": ["Make", "this", "Sprite", "draggable", "by", "the", "mouse", ".", "You", "can", "also", "optionally", "set", "mouseStartDragCallback", "and", "mouseStopDragCallback"], "sample_id": 199, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004007", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (lockCenter, bringToTop, pixelPerfect, alphaThreshold, boundsRect, boundsSprite) {\n\n        if (typeof lockCenter == 'undefined') { lockCenter = false; }\n        if (typeof bringToTop == 'undefined') { bringToTop = false; }\n        if (typeof pixelPerfect == 'undefined') { pixelPerfect = false; }\n        if (typeof alphaThreshold == 'undefined') { alphaThreshold = 255; }\n        if (typeof boundsRect == 'undefined') { boundsRect = null; }\n        if (typeof boundsSprite == 'undefined') { boundsSprite = null; }\n\n        this._dragPoint = new Phaser.Point();\n        this.draggable = true;\n        this.bringToTop = bringToTop;\n        this.dragOffset = new Phaser.Point();\n        this.dragFromCenter = lockCenter;\n\n        this.pixelPerfect = pixelPerfect;\n        this.pixelPerfectAlpha = alphaThreshold;\n\n        if (boundsRect)\n        {\n            this.boundsRect = boundsRect;\n        }\n\n        if (boundsSprite)\n        {\n            this.boundsSprite = boundsSprite;\n        }\n\n    }", "code_tokens": ["function", "(", "lockCenter", ",", "bringToTop", ",", "pixelPerfect", ",", "alphaThreshold", ",", "boundsRect", ",", "boundsSprite", ")", "{", "if", "(", "typeof", "lockCenter", "==", "'undefined'", ")", "{", "lockCenter", "=", "false", ";", "}", "if", "(", "typeof", "bringToTop", "==", "'undefined'", ")", "{", "bringToTop", "=", "false", ";", "}", "if", "(", "typeof", "pixelPerfect", "==", "'undefined'", ")", "{", "pixelPerfect", "=", "false", ";", "}", "if", "(", "typeof", "alphaThreshold", "==", "'undefined'", ")", "{", "alphaThreshold", "=", "255", ";", "}", "if", "(", "typeof", "boundsRect", "==", "'undefined'", ")", "{", "boundsRect", "=", "null", ";", "}", "if", "(", "typeof", "boundsSprite", "==", "'undefined'", ")", "{", "boundsSprite", "=", "null", ";", "}", "this", ".", "_dragPoint", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "draggable", "=", "true", ";", "this", ".", "bringToTop", "=", "bringToTop", ";", "this", ".", "dragOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "dragFromCenter", "=", "lockCenter", ";", "this", ".", "pixelPerfect", "=", "pixelPerfect", ";", "this", ".", "pixelPerfectAlpha", "=", "alphaThreshold", ";", "if", "(", "boundsRect", ")", "{", "this", ".", "boundsRect", "=", "boundsRect", ";", "}", "if", "(", "boundsSprite", ")", "{", "this", ".", "boundsSprite", "=", "boundsSprite", ";", "}", "}"], "original_docstring": "\nMake this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback\n@method Phaser.InputHandler#enableDrag\n@param {boolean} [lockCenter=false] - If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.\n@param {boolean} [bringToTop=false] - If true the Sprite will be bought to the top of the rendering list in its current Group.\n@param {boolean} [pixelPerfect=false] - If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.\n@param {boolean} [alphaThreshold=255] - If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.\n@param {Phaser.Rectangle} [boundsRect=null] - If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.\n@param {Phaser.Sprite} [boundsSprite=null] - If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.\n", "docstring": {"block_comment": "Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback", "line_comment": null}, "docstring_tokens": ["-", "If", "false", "the", "Sprite", "will", "drag", "from", "where", "you", "click", "it", "minus", "the", "dragOffset", ".", "If", "true", "it", "will", "center", "itself", "to", "the", "tip", "of", "the", "mouse", "pointer", "."], "sample_id": 199, "prompt_tokens": ["<javascript>", "<param>", "lockCenter"], "comment_type": "param", "sentence_id": 1}
{"id": "21004007", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (lockCenter, bringToTop, pixelPerfect, alphaThreshold, boundsRect, boundsSprite) {\n\n        if (typeof lockCenter == 'undefined') { lockCenter = false; }\n        if (typeof bringToTop == 'undefined') { bringToTop = false; }\n        if (typeof pixelPerfect == 'undefined') { pixelPerfect = false; }\n        if (typeof alphaThreshold == 'undefined') { alphaThreshold = 255; }\n        if (typeof boundsRect == 'undefined') { boundsRect = null; }\n        if (typeof boundsSprite == 'undefined') { boundsSprite = null; }\n\n        this._dragPoint = new Phaser.Point();\n        this.draggable = true;\n        this.bringToTop = bringToTop;\n        this.dragOffset = new Phaser.Point();\n        this.dragFromCenter = lockCenter;\n\n        this.pixelPerfect = pixelPerfect;\n        this.pixelPerfectAlpha = alphaThreshold;\n\n        if (boundsRect)\n        {\n            this.boundsRect = boundsRect;\n        }\n\n        if (boundsSprite)\n        {\n            this.boundsSprite = boundsSprite;\n        }\n\n    }", "code_tokens": ["function", "(", "lockCenter", ",", "bringToTop", ",", "pixelPerfect", ",", "alphaThreshold", ",", "boundsRect", ",", "boundsSprite", ")", "{", "if", "(", "typeof", "lockCenter", "==", "'undefined'", ")", "{", "lockCenter", "=", "false", ";", "}", "if", "(", "typeof", "bringToTop", "==", "'undefined'", ")", "{", "bringToTop", "=", "false", ";", "}", "if", "(", "typeof", "pixelPerfect", "==", "'undefined'", ")", "{", "pixelPerfect", "=", "false", ";", "}", "if", "(", "typeof", "alphaThreshold", "==", "'undefined'", ")", "{", "alphaThreshold", "=", "255", ";", "}", "if", "(", "typeof", "boundsRect", "==", "'undefined'", ")", "{", "boundsRect", "=", "null", ";", "}", "if", "(", "typeof", "boundsSprite", "==", "'undefined'", ")", "{", "boundsSprite", "=", "null", ";", "}", "this", ".", "_dragPoint", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "draggable", "=", "true", ";", "this", ".", "bringToTop", "=", "bringToTop", ";", "this", ".", "dragOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "dragFromCenter", "=", "lockCenter", ";", "this", ".", "pixelPerfect", "=", "pixelPerfect", ";", "this", ".", "pixelPerfectAlpha", "=", "alphaThreshold", ";", "if", "(", "boundsRect", ")", "{", "this", ".", "boundsRect", "=", "boundsRect", ";", "}", "if", "(", "boundsSprite", ")", "{", "this", ".", "boundsSprite", "=", "boundsSprite", ";", "}", "}"], "original_docstring": "\nMake this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback\n@method Phaser.InputHandler#enableDrag\n@param {boolean} [lockCenter=false] - If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.\n@param {boolean} [bringToTop=false] - If true the Sprite will be bought to the top of the rendering list in its current Group.\n@param {boolean} [pixelPerfect=false] - If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.\n@param {boolean} [alphaThreshold=255] - If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.\n@param {Phaser.Rectangle} [boundsRect=null] - If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.\n@param {Phaser.Sprite} [boundsSprite=null] - If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.\n", "docstring": {"block_comment": "Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback", "line_comment": null}, "docstring_tokens": ["-", "If", "true", "the", "Sprite", "will", "be", "bought", "to", "the", "top", "of", "the", "rendering", "list", "in", "its", "current", "Group", "."], "sample_id": 199, "prompt_tokens": ["<javascript>", "<param>", "bringToTop"], "comment_type": "param", "sentence_id": 2}
{"id": "21004007", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (lockCenter, bringToTop, pixelPerfect, alphaThreshold, boundsRect, boundsSprite) {\n\n        if (typeof lockCenter == 'undefined') { lockCenter = false; }\n        if (typeof bringToTop == 'undefined') { bringToTop = false; }\n        if (typeof pixelPerfect == 'undefined') { pixelPerfect = false; }\n        if (typeof alphaThreshold == 'undefined') { alphaThreshold = 255; }\n        if (typeof boundsRect == 'undefined') { boundsRect = null; }\n        if (typeof boundsSprite == 'undefined') { boundsSprite = null; }\n\n        this._dragPoint = new Phaser.Point();\n        this.draggable = true;\n        this.bringToTop = bringToTop;\n        this.dragOffset = new Phaser.Point();\n        this.dragFromCenter = lockCenter;\n\n        this.pixelPerfect = pixelPerfect;\n        this.pixelPerfectAlpha = alphaThreshold;\n\n        if (boundsRect)\n        {\n            this.boundsRect = boundsRect;\n        }\n\n        if (boundsSprite)\n        {\n            this.boundsSprite = boundsSprite;\n        }\n\n    }", "code_tokens": ["function", "(", "lockCenter", ",", "bringToTop", ",", "pixelPerfect", ",", "alphaThreshold", ",", "boundsRect", ",", "boundsSprite", ")", "{", "if", "(", "typeof", "lockCenter", "==", "'undefined'", ")", "{", "lockCenter", "=", "false", ";", "}", "if", "(", "typeof", "bringToTop", "==", "'undefined'", ")", "{", "bringToTop", "=", "false", ";", "}", "if", "(", "typeof", "pixelPerfect", "==", "'undefined'", ")", "{", "pixelPerfect", "=", "false", ";", "}", "if", "(", "typeof", "alphaThreshold", "==", "'undefined'", ")", "{", "alphaThreshold", "=", "255", ";", "}", "if", "(", "typeof", "boundsRect", "==", "'undefined'", ")", "{", "boundsRect", "=", "null", ";", "}", "if", "(", "typeof", "boundsSprite", "==", "'undefined'", ")", "{", "boundsSprite", "=", "null", ";", "}", "this", ".", "_dragPoint", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "draggable", "=", "true", ";", "this", ".", "bringToTop", "=", "bringToTop", ";", "this", ".", "dragOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "dragFromCenter", "=", "lockCenter", ";", "this", ".", "pixelPerfect", "=", "pixelPerfect", ";", "this", ".", "pixelPerfectAlpha", "=", "alphaThreshold", ";", "if", "(", "boundsRect", ")", "{", "this", ".", "boundsRect", "=", "boundsRect", ";", "}", "if", "(", "boundsSprite", ")", "{", "this", ".", "boundsSprite", "=", "boundsSprite", ";", "}", "}"], "original_docstring": "\nMake this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback\n@method Phaser.InputHandler#enableDrag\n@param {boolean} [lockCenter=false] - If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.\n@param {boolean} [bringToTop=false] - If true the Sprite will be bought to the top of the rendering list in its current Group.\n@param {boolean} [pixelPerfect=false] - If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.\n@param {boolean} [alphaThreshold=255] - If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.\n@param {Phaser.Rectangle} [boundsRect=null] - If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.\n@param {Phaser.Sprite} [boundsSprite=null] - If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.\n", "docstring": {"block_comment": "Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback", "line_comment": null}, "docstring_tokens": ["-", "If", "true", "it", "will", "use", "a", "pixel", "perfect", "test", "to", "see", "if", "you", "clicked", "the", "Sprite", ".", "False", "uses", "the", "bounding", "box", "."], "sample_id": 199, "prompt_tokens": ["<javascript>", "<param>", "pixelPerfect"], "comment_type": "param", "sentence_id": 3}
{"id": "21004007", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (lockCenter, bringToTop, pixelPerfect, alphaThreshold, boundsRect, boundsSprite) {\n\n        if (typeof lockCenter == 'undefined') { lockCenter = false; }\n        if (typeof bringToTop == 'undefined') { bringToTop = false; }\n        if (typeof pixelPerfect == 'undefined') { pixelPerfect = false; }\n        if (typeof alphaThreshold == 'undefined') { alphaThreshold = 255; }\n        if (typeof boundsRect == 'undefined') { boundsRect = null; }\n        if (typeof boundsSprite == 'undefined') { boundsSprite = null; }\n\n        this._dragPoint = new Phaser.Point();\n        this.draggable = true;\n        this.bringToTop = bringToTop;\n        this.dragOffset = new Phaser.Point();\n        this.dragFromCenter = lockCenter;\n\n        this.pixelPerfect = pixelPerfect;\n        this.pixelPerfectAlpha = alphaThreshold;\n\n        if (boundsRect)\n        {\n            this.boundsRect = boundsRect;\n        }\n\n        if (boundsSprite)\n        {\n            this.boundsSprite = boundsSprite;\n        }\n\n    }", "code_tokens": ["function", "(", "lockCenter", ",", "bringToTop", ",", "pixelPerfect", ",", "alphaThreshold", ",", "boundsRect", ",", "boundsSprite", ")", "{", "if", "(", "typeof", "lockCenter", "==", "'undefined'", ")", "{", "lockCenter", "=", "false", ";", "}", "if", "(", "typeof", "bringToTop", "==", "'undefined'", ")", "{", "bringToTop", "=", "false", ";", "}", "if", "(", "typeof", "pixelPerfect", "==", "'undefined'", ")", "{", "pixelPerfect", "=", "false", ";", "}", "if", "(", "typeof", "alphaThreshold", "==", "'undefined'", ")", "{", "alphaThreshold", "=", "255", ";", "}", "if", "(", "typeof", "boundsRect", "==", "'undefined'", ")", "{", "boundsRect", "=", "null", ";", "}", "if", "(", "typeof", "boundsSprite", "==", "'undefined'", ")", "{", "boundsSprite", "=", "null", ";", "}", "this", ".", "_dragPoint", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "draggable", "=", "true", ";", "this", ".", "bringToTop", "=", "bringToTop", ";", "this", ".", "dragOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "dragFromCenter", "=", "lockCenter", ";", "this", ".", "pixelPerfect", "=", "pixelPerfect", ";", "this", ".", "pixelPerfectAlpha", "=", "alphaThreshold", ";", "if", "(", "boundsRect", ")", "{", "this", ".", "boundsRect", "=", "boundsRect", ";", "}", "if", "(", "boundsSprite", ")", "{", "this", ".", "boundsSprite", "=", "boundsSprite", ";", "}", "}"], "original_docstring": "\nMake this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback\n@method Phaser.InputHandler#enableDrag\n@param {boolean} [lockCenter=false] - If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.\n@param {boolean} [bringToTop=false] - If true the Sprite will be bought to the top of the rendering list in its current Group.\n@param {boolean} [pixelPerfect=false] - If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.\n@param {boolean} [alphaThreshold=255] - If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.\n@param {Phaser.Rectangle} [boundsRect=null] - If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.\n@param {Phaser.Sprite} [boundsSprite=null] - If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.\n", "docstring": {"block_comment": "Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback", "line_comment": null}, "docstring_tokens": ["-", "If", "using", "pixel", "perfect", "collision", "this", "specifies", "the", "alpha", "level", "from", "0", "to", "255", "above", "which", "a", "collision", "is", "processed", "."], "sample_id": 199, "prompt_tokens": ["<javascript>", "<param>", "alphaThreshold"], "comment_type": "param", "sentence_id": 4}
{"id": "21004007", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (lockCenter, bringToTop, pixelPerfect, alphaThreshold, boundsRect, boundsSprite) {\n\n        if (typeof lockCenter == 'undefined') { lockCenter = false; }\n        if (typeof bringToTop == 'undefined') { bringToTop = false; }\n        if (typeof pixelPerfect == 'undefined') { pixelPerfect = false; }\n        if (typeof alphaThreshold == 'undefined') { alphaThreshold = 255; }\n        if (typeof boundsRect == 'undefined') { boundsRect = null; }\n        if (typeof boundsSprite == 'undefined') { boundsSprite = null; }\n\n        this._dragPoint = new Phaser.Point();\n        this.draggable = true;\n        this.bringToTop = bringToTop;\n        this.dragOffset = new Phaser.Point();\n        this.dragFromCenter = lockCenter;\n\n        this.pixelPerfect = pixelPerfect;\n        this.pixelPerfectAlpha = alphaThreshold;\n\n        if (boundsRect)\n        {\n            this.boundsRect = boundsRect;\n        }\n\n        if (boundsSprite)\n        {\n            this.boundsSprite = boundsSprite;\n        }\n\n    }", "code_tokens": ["function", "(", "lockCenter", ",", "bringToTop", ",", "pixelPerfect", ",", "alphaThreshold", ",", "boundsRect", ",", "boundsSprite", ")", "{", "if", "(", "typeof", "lockCenter", "==", "'undefined'", ")", "{", "lockCenter", "=", "false", ";", "}", "if", "(", "typeof", "bringToTop", "==", "'undefined'", ")", "{", "bringToTop", "=", "false", ";", "}", "if", "(", "typeof", "pixelPerfect", "==", "'undefined'", ")", "{", "pixelPerfect", "=", "false", ";", "}", "if", "(", "typeof", "alphaThreshold", "==", "'undefined'", ")", "{", "alphaThreshold", "=", "255", ";", "}", "if", "(", "typeof", "boundsRect", "==", "'undefined'", ")", "{", "boundsRect", "=", "null", ";", "}", "if", "(", "typeof", "boundsSprite", "==", "'undefined'", ")", "{", "boundsSprite", "=", "null", ";", "}", "this", ".", "_dragPoint", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "draggable", "=", "true", ";", "this", ".", "bringToTop", "=", "bringToTop", ";", "this", ".", "dragOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "dragFromCenter", "=", "lockCenter", ";", "this", ".", "pixelPerfect", "=", "pixelPerfect", ";", "this", ".", "pixelPerfectAlpha", "=", "alphaThreshold", ";", "if", "(", "boundsRect", ")", "{", "this", ".", "boundsRect", "=", "boundsRect", ";", "}", "if", "(", "boundsSprite", ")", "{", "this", ".", "boundsSprite", "=", "boundsSprite", ";", "}", "}"], "original_docstring": "\nMake this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback\n@method Phaser.InputHandler#enableDrag\n@param {boolean} [lockCenter=false] - If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.\n@param {boolean} [bringToTop=false] - If true the Sprite will be bought to the top of the rendering list in its current Group.\n@param {boolean} [pixelPerfect=false] - If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.\n@param {boolean} [alphaThreshold=255] - If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.\n@param {Phaser.Rectangle} [boundsRect=null] - If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.\n@param {Phaser.Sprite} [boundsSprite=null] - If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.\n", "docstring": {"block_comment": "Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback", "line_comment": null}, "docstring_tokens": ["-", "If", "you", "want", "to", "restrict", "the", "drag", "of", "this", "sprite", "to", "a", "specific", "Rectangle", "pass", "the", "Phaser", ".", "Rectangle", "here", "otherwise", "it", "s", "free", "to", "drag", "anywhere", "."], "sample_id": 199, "prompt_tokens": ["<javascript>", "<param>", "boundsRect"], "comment_type": "param", "sentence_id": 5}
{"id": "21004007", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (lockCenter, bringToTop, pixelPerfect, alphaThreshold, boundsRect, boundsSprite) {\n\n        if (typeof lockCenter == 'undefined') { lockCenter = false; }\n        if (typeof bringToTop == 'undefined') { bringToTop = false; }\n        if (typeof pixelPerfect == 'undefined') { pixelPerfect = false; }\n        if (typeof alphaThreshold == 'undefined') { alphaThreshold = 255; }\n        if (typeof boundsRect == 'undefined') { boundsRect = null; }\n        if (typeof boundsSprite == 'undefined') { boundsSprite = null; }\n\n        this._dragPoint = new Phaser.Point();\n        this.draggable = true;\n        this.bringToTop = bringToTop;\n        this.dragOffset = new Phaser.Point();\n        this.dragFromCenter = lockCenter;\n\n        this.pixelPerfect = pixelPerfect;\n        this.pixelPerfectAlpha = alphaThreshold;\n\n        if (boundsRect)\n        {\n            this.boundsRect = boundsRect;\n        }\n\n        if (boundsSprite)\n        {\n            this.boundsSprite = boundsSprite;\n        }\n\n    }", "code_tokens": ["function", "(", "lockCenter", ",", "bringToTop", ",", "pixelPerfect", ",", "alphaThreshold", ",", "boundsRect", ",", "boundsSprite", ")", "{", "if", "(", "typeof", "lockCenter", "==", "'undefined'", ")", "{", "lockCenter", "=", "false", ";", "}", "if", "(", "typeof", "bringToTop", "==", "'undefined'", ")", "{", "bringToTop", "=", "false", ";", "}", "if", "(", "typeof", "pixelPerfect", "==", "'undefined'", ")", "{", "pixelPerfect", "=", "false", ";", "}", "if", "(", "typeof", "alphaThreshold", "==", "'undefined'", ")", "{", "alphaThreshold", "=", "255", ";", "}", "if", "(", "typeof", "boundsRect", "==", "'undefined'", ")", "{", "boundsRect", "=", "null", ";", "}", "if", "(", "typeof", "boundsSprite", "==", "'undefined'", ")", "{", "boundsSprite", "=", "null", ";", "}", "this", ".", "_dragPoint", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "draggable", "=", "true", ";", "this", ".", "bringToTop", "=", "bringToTop", ";", "this", ".", "dragOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "dragFromCenter", "=", "lockCenter", ";", "this", ".", "pixelPerfect", "=", "pixelPerfect", ";", "this", ".", "pixelPerfectAlpha", "=", "alphaThreshold", ";", "if", "(", "boundsRect", ")", "{", "this", ".", "boundsRect", "=", "boundsRect", ";", "}", "if", "(", "boundsSprite", ")", "{", "this", ".", "boundsSprite", "=", "boundsSprite", ";", "}", "}"], "original_docstring": "\nMake this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback\n@method Phaser.InputHandler#enableDrag\n@param {boolean} [lockCenter=false] - If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.\n@param {boolean} [bringToTop=false] - If true the Sprite will be bought to the top of the rendering list in its current Group.\n@param {boolean} [pixelPerfect=false] - If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.\n@param {boolean} [alphaThreshold=255] - If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.\n@param {Phaser.Rectangle} [boundsRect=null] - If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.\n@param {Phaser.Sprite} [boundsSprite=null] - If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.\n", "docstring": {"block_comment": "Make this Sprite draggable by the mouse. You can also optionally set mouseStartDragCallback and mouseStopDragCallback", "line_comment": null}, "docstring_tokens": ["-", "If", "you", "want", "to", "restrict", "the", "drag", "of", "this", "sprite", "to", "within", "the", "bounding", "box", "of", "another", "sprite", "pass", "it", "here", "."], "sample_id": 199, "prompt_tokens": ["<javascript>", "<param>", "boundsSprite"], "comment_type": "param", "sentence_id": 6}
{"id": "21004008", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        if (this._pointerData[pointer].isDown)\n        {\n            return this.game.time.now - this._pointerData[pointer].timeDown;\n        }\n\n        return -1;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "if", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isDown", ")", "{", "return", "this", ".", "game", ".", "time", ".", "now", "-", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeDown", ";", "}", "return", "-", "1", ";", "}"], "original_docstring": "\nIf the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.\n@method Phaser.InputHandler#downDuration\n@param {Phaser.Pointer} pointer\n@return {number} The number of milliseconds the pointer has been pressed down on the Sprite, or -1 if not over.\n", "docstring": {"block_comment": "If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.", "line_comment": null}, "docstring_tokens": ["If", "the", "pointer", "is", "currently", "over", "this", "Sprite", "this", "returns", "how", "long", "it", "has", "been", "there", "for", "in", "milliseconds", "."], "sample_id": 200, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004008", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        if (this._pointerData[pointer].isDown)\n        {\n            return this.game.time.now - this._pointerData[pointer].timeDown;\n        }\n\n        return -1;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "if", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isDown", ")", "{", "return", "this", ".", "game", ".", "time", ".", "now", "-", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeDown", ";", "}", "return", "-", "1", ";", "}"], "original_docstring": "\nIf the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.\n@method Phaser.InputHandler#downDuration\n@param {Phaser.Pointer} pointer\n@return {number} The number of milliseconds the pointer has been pressed down on the Sprite, or -1 if not over.\n", "docstring": {"block_comment": "If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.", "line_comment": null}, "docstring_tokens": ["The", "number", "of", "milliseconds", "the", "pointer", "has", "been", "pressed", "down", "on", "the", "Sprite", "or", "-", "1", "if", "not", "over", "."], "sample_id": 200, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004009", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        if (this._pointerData[pointer].isOver)\n        {\n            return this.game.time.now - this._pointerData[pointer].timeOver;\n        }\n\n        return -1;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "if", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isOver", ")", "{", "return", "this", ".", "game", ".", "time", ".", "now", "-", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeOver", ";", "}", "return", "-", "1", ";", "}"], "original_docstring": "\nIf the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.\n@method Phaser.InputHandler#overDuration\n@param {Phaser.Pointer} pointer\n@return {number} The number of milliseconds the pointer has been over the Sprite, or -1 if not over.\n", "docstring": {"block_comment": "If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.", "line_comment": null}, "docstring_tokens": ["If", "the", "pointer", "is", "currently", "over", "this", "Sprite", "this", "returns", "how", "long", "it", "has", "been", "there", "for", "in", "milliseconds", "."], "sample_id": 201, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004009", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        if (this._pointerData[pointer].isOver)\n        {\n            return this.game.time.now - this._pointerData[pointer].timeOver;\n        }\n\n        return -1;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "if", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isOver", ")", "{", "return", "this", ".", "game", ".", "time", ".", "now", "-", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeOver", ";", "}", "return", "-", "1", ";", "}"], "original_docstring": "\nIf the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.\n@method Phaser.InputHandler#overDuration\n@param {Phaser.Pointer} pointer\n@return {number} The number of milliseconds the pointer has been over the Sprite, or -1 if not over.\n", "docstring": {"block_comment": "If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.", "line_comment": null}, "docstring_tokens": ["The", "number", "of", "milliseconds", "the", "pointer", "has", "been", "over", "the", "Sprite", "or", "-", "1", "if", "not", "over", "."], "sample_id": 201, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004010", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer, delay) {\n\n        pointer = pointer || 0;\n        delay = delay || 500;\n\n        return (this._pointerData[pointer].isUp && (this.game.time.now - this._pointerData[pointer].timeUp < delay));\n\n    }", "code_tokens": ["function", "(", "pointer", ",", "delay", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "delay", "=", "delay", "||", "500", ";", "return", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isUp", "&&", "(", "this", ".", "game", ".", "time", ".", "now", "-", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeUp", "<", "delay", ")", ")", ";", "}"], "original_docstring": "\nReturns true if the pointer was touching this Sprite, but has been released within the specified delay time (defaults to 500ms, half a second)\n@method Phaser.InputHandler#justReleased\n@param {Phaser.Pointer} pointer\n@param {number} delay - The time below which the pointer is considered as just out.\n@return {boolean}\n", "docstring": {"block_comment": "Returns true if the pointer was touching this Sprite, but has been released within the specified delay time  defaults to 500ms, half a second ", "line_comment": null}, "docstring_tokens": ["Returns", "true", "if", "the", "pointer", "was", "touching", "this", "Sprite", "but", "has", "been", "released", "within", "the", "specified", "delay", "time", "defaults", "to", "500ms", "half", "a", "second"], "sample_id": 202, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004010", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer, delay) {\n\n        pointer = pointer || 0;\n        delay = delay || 500;\n\n        return (this._pointerData[pointer].isUp && (this.game.time.now - this._pointerData[pointer].timeUp < delay));\n\n    }", "code_tokens": ["function", "(", "pointer", ",", "delay", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "delay", "=", "delay", "||", "500", ";", "return", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isUp", "&&", "(", "this", ".", "game", ".", "time", ".", "now", "-", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeUp", "<", "delay", ")", ")", ";", "}"], "original_docstring": "\nReturns true if the pointer was touching this Sprite, but has been released within the specified delay time (defaults to 500ms, half a second)\n@method Phaser.InputHandler#justReleased\n@param {Phaser.Pointer} pointer\n@param {number} delay - The time below which the pointer is considered as just out.\n@return {boolean}\n", "docstring": {"block_comment": "Returns true if the pointer was touching this Sprite, but has been released within the specified delay time  defaults to 500ms, half a second ", "line_comment": null}, "docstring_tokens": ["-", "The", "time", "below", "which", "the", "pointer", "is", "considered", "as", "just", "out", "."], "sample_id": 202, "prompt_tokens": ["<javascript>", "<param>", "delay"], "comment_type": "param", "sentence_id": 1}
{"id": "21004011", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer, delay) {\n\n        pointer = pointer || 0;\n        delay = delay || 500;\n\n        return (this._pointerData[pointer].isDown && this.downDuration(pointer) < delay);\n\n    }", "code_tokens": ["function", "(", "pointer", ",", "delay", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "delay", "=", "delay", "||", "500", ";", "return", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isDown", "&&", "this", ".", "downDuration", "(", "pointer", ")", "<", "delay", ")", ";", "}"], "original_docstring": "\nReturns true if the pointer has touched or clicked on the Sprite within the specified delay time (defaults to 500ms, half a second)\n@method Phaser.InputHandler#justPressed\n@param {Phaser.Pointer} pointer\n@param {number} delay - The time below which the pointer is considered as just over.\n@return {boolean}\n", "docstring": {"block_comment": "Returns true if the pointer has touched or clicked on the Sprite within the specified delay time  defaults to 500ms, half a second ", "line_comment": null}, "docstring_tokens": ["Returns", "true", "if", "the", "pointer", "has", "touched", "or", "clicked", "on", "the", "Sprite", "within", "the", "specified", "delay", "time", "defaults", "to", "500ms", "half", "a", "second"], "sample_id": 203, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004011", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer, delay) {\n\n        pointer = pointer || 0;\n        delay = delay || 500;\n\n        return (this._pointerData[pointer].isDown && this.downDuration(pointer) < delay);\n\n    }", "code_tokens": ["function", "(", "pointer", ",", "delay", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "delay", "=", "delay", "||", "500", ";", "return", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isDown", "&&", "this", ".", "downDuration", "(", "pointer", ")", "<", "delay", ")", ";", "}"], "original_docstring": "\nReturns true if the pointer has touched or clicked on the Sprite within the specified delay time (defaults to 500ms, half a second)\n@method Phaser.InputHandler#justPressed\n@param {Phaser.Pointer} pointer\n@param {number} delay - The time below which the pointer is considered as just over.\n@return {boolean}\n", "docstring": {"block_comment": "Returns true if the pointer has touched or clicked on the Sprite within the specified delay time  defaults to 500ms, half a second ", "line_comment": null}, "docstring_tokens": ["-", "The", "time", "below", "which", "the", "pointer", "is", "considered", "as", "just", "over", "."], "sample_id": 203, "prompt_tokens": ["<javascript>", "<param>", "delay"], "comment_type": "param", "sentence_id": 1}
{"id": "21004012", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer, delay) {\n\n        pointer = pointer || 0;\n        delay = delay || 500;\n\n        return (this._pointerData[pointer].isOut && (this.game.time.now - this._pointerData[pointer].timeOut < delay));\n\n    }", "code_tokens": ["function", "(", "pointer", ",", "delay", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "delay", "=", "delay", "||", "500", ";", "return", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isOut", "&&", "(", "this", ".", "game", ".", "time", ".", "now", "-", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeOut", "<", "delay", ")", ")", ";", "}"], "original_docstring": "\nReturns true if the pointer has left the Sprite within the specified delay time (defaults to 500ms, half a second)\n@method Phaser.InputHandler#justOut\n@param {Phaser.Pointer} pointer\n@param {number} delay - The time below which the pointer is considered as just out.\n@return {boolean}\n", "docstring": {"block_comment": "Returns true if the pointer has left the Sprite within the specified delay time  defaults to 500ms, half a second ", "line_comment": null}, "docstring_tokens": ["Returns", "true", "if", "the", "pointer", "has", "left", "the", "Sprite", "within", "the", "specified", "delay", "time", "defaults", "to", "500ms", "half", "a", "second"], "sample_id": 204, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004012", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer, delay) {\n\n        pointer = pointer || 0;\n        delay = delay || 500;\n\n        return (this._pointerData[pointer].isOut && (this.game.time.now - this._pointerData[pointer].timeOut < delay));\n\n    }", "code_tokens": ["function", "(", "pointer", ",", "delay", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "delay", "=", "delay", "||", "500", ";", "return", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isOut", "&&", "(", "this", ".", "game", ".", "time", ".", "now", "-", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeOut", "<", "delay", ")", ")", ";", "}"], "original_docstring": "\nReturns true if the pointer has left the Sprite within the specified delay time (defaults to 500ms, half a second)\n@method Phaser.InputHandler#justOut\n@param {Phaser.Pointer} pointer\n@param {number} delay - The time below which the pointer is considered as just out.\n@return {boolean}\n", "docstring": {"block_comment": "Returns true if the pointer has left the Sprite within the specified delay time  defaults to 500ms, half a second ", "line_comment": null}, "docstring_tokens": ["-", "The", "time", "below", "which", "the", "pointer", "is", "considered", "as", "just", "out", "."], "sample_id": 204, "prompt_tokens": ["<javascript>", "<param>", "delay"], "comment_type": "param", "sentence_id": 1}
{"id": "21004013", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer, delay) {\n\n        pointer = pointer || 0;\n        delay = delay || 500;\n\n        return (this._pointerData[pointer].isOver && this.overDuration(pointer) < delay);\n\n    }", "code_tokens": ["function", "(", "pointer", ",", "delay", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "delay", "=", "delay", "||", "500", ";", "return", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isOver", "&&", "this", ".", "overDuration", "(", "pointer", ")", "<", "delay", ")", ";", "}"], "original_docstring": "\nReturns true if the pointer has entered the Sprite within the specified delay time (defaults to 500ms, half a second)\n@method Phaser.InputHandler#justOver\n@param {Phaser.Pointer} pointer\n@param {number} delay - The time below which the pointer is considered as just over.\n@return {boolean}\n", "docstring": {"block_comment": "Returns true if the pointer has entered the Sprite within the specified delay time  defaults to 500ms, half a second ", "line_comment": null}, "docstring_tokens": ["Returns", "true", "if", "the", "pointer", "has", "entered", "the", "Sprite", "within", "the", "specified", "delay", "time", "defaults", "to", "500ms", "half", "a", "second"], "sample_id": 205, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004013", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer, delay) {\n\n        pointer = pointer || 0;\n        delay = delay || 500;\n\n        return (this._pointerData[pointer].isOver && this.overDuration(pointer) < delay);\n\n    }", "code_tokens": ["function", "(", "pointer", ",", "delay", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "delay", "=", "delay", "||", "500", ";", "return", "(", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isOver", "&&", "this", ".", "overDuration", "(", "pointer", ")", "<", "delay", ")", ";", "}"], "original_docstring": "\nReturns true if the pointer has entered the Sprite within the specified delay time (defaults to 500ms, half a second)\n@method Phaser.InputHandler#justOver\n@param {Phaser.Pointer} pointer\n@param {number} delay - The time below which the pointer is considered as just over.\n@return {boolean}\n", "docstring": {"block_comment": "Returns true if the pointer has entered the Sprite within the specified delay time  defaults to 500ms, half a second ", "line_comment": null}, "docstring_tokens": ["-", "The", "time", "below", "which", "the", "pointer", "is", "considered", "as", "just", "over", "."], "sample_id": 205, "prompt_tokens": ["<javascript>", "<param>", "delay"], "comment_type": "param", "sentence_id": 1}
{"id": "21004014", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        if (pointer.isUp)\n        {\n            this.stopDrag(pointer);\n            return false;\n        }\n\n        if (this.sprite.fixedToCamera)\n        {\n            if (this.allowHorizontalDrag)\n            {\n                this.sprite.cameraOffset.x = pointer.x + this._dragPoint.x + this.dragOffset.x;\n            }\n\n            if (this.allowVerticalDrag)\n            {\n                this.sprite.cameraOffset.y = pointer.y + this._dragPoint.y + this.dragOffset.y;\n            }\n\n            if (this.boundsRect)\n            {\n                this.checkBoundsRect();\n            }\n\n            if (this.boundsSprite)\n            {\n                this.checkBoundsSprite();\n            }\n\n            if (this.snapOnDrag)\n            {\n                this.sprite.cameraOffset.x = Math.round((this.sprite.cameraOffset.x - (this.snapOffsetX % this.snapX)) / this.snapX) * this.snapX + (this.snapOffsetX % this.snapX);\n                this.sprite.cameraOffset.y = Math.round((this.sprite.cameraOffset.y - (this.snapOffsetY % this.snapY)) / this.snapY) * this.snapY + (this.snapOffsetY % this.snapY);\n            }\n        }\n        else\n        {\n            if (this.allowHorizontalDrag)\n            {\n                this.sprite.x = pointer.x + this._dragPoint.x + this.dragOffset.x;\n            }\n\n            if (this.allowVerticalDrag)\n            {\n                this.sprite.y = pointer.y + this._dragPoint.y + this.dragOffset.y;\n            }\n\n            if (this.boundsRect)\n            {\n                this.checkBoundsRect();\n            }\n\n            if (this.boundsSprite)\n            {\n                this.checkBoundsSprite();\n            }\n\n            if (this.snapOnDrag)\n            {\n                this.sprite.x = Math.round((this.sprite.x - (this.snapOffsetX % this.snapX)) / this.snapX) * this.snapX + (this.snapOffsetX % this.snapX);\n                this.sprite.y = Math.round((this.sprite.y - (this.snapOffsetY % this.snapY)) / this.snapY) * this.snapY + (this.snapOffsetY % this.snapY);\n            }\n        }\n\n        return true;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "if", "(", "pointer", ".", "isUp", ")", "{", "this", ".", "stopDrag", "(", "pointer", ")", ";", "return", "false", ";", "}", "if", "(", "this", ".", "sprite", ".", "fixedToCamera", ")", "{", "if", "(", "this", ".", "allowHorizontalDrag", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "=", "pointer", ".", "x", "+", "this", ".", "_dragPoint", ".", "x", "+", "this", ".", "dragOffset", ".", "x", ";", "}", "if", "(", "this", ".", "allowVerticalDrag", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "=", "pointer", ".", "y", "+", "this", ".", "_dragPoint", ".", "y", "+", "this", ".", "dragOffset", ".", "y", ";", "}", "if", "(", "this", ".", "boundsRect", ")", "{", "this", ".", "checkBoundsRect", "(", ")", ";", "}", "if", "(", "this", ".", "boundsSprite", ")", "{", "this", ".", "checkBoundsSprite", "(", ")", ";", "}", "if", "(", "this", ".", "snapOnDrag", ")", "{", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "=", "Math", ".", "round", "(", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "x", "-", "(", "this", ".", "snapOffsetX", "%", "this", ".", "snapX", ")", ")", "/", "this", ".", "snapX", ")", "*", "this", ".", "snapX", "+", "(", "this", ".", "snapOffsetX", "%", "this", ".", "snapX", ")", ";", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "=", "Math", ".", "round", "(", "(", "this", ".", "sprite", ".", "cameraOffset", ".", "y", "-", "(", "this", ".", "snapOffsetY", "%", "this", ".", "snapY", ")", ")", "/", "this", ".", "snapY", ")", "*", "this", ".", "snapY", "+", "(", "this", ".", "snapOffsetY", "%", "this", ".", "snapY", ")", ";", "}", "}", "else", "{", "if", "(", "this", ".", "allowHorizontalDrag", ")", "{", "this", ".", "sprite", ".", "x", "=", "pointer", ".", "x", "+", "this", ".", "_dragPoint", ".", "x", "+", "this", ".", "dragOffset", ".", "x", ";", "}", "if", "(", "this", ".", "allowVerticalDrag", ")", "{", "this", ".", "sprite", ".", "y", "=", "pointer", ".", "y", "+", "this", ".", "_dragPoint", ".", "y", "+", "this", ".", "dragOffset", ".", "y", ";", "}", "if", "(", "this", ".", "boundsRect", ")", "{", "this", ".", "checkBoundsRect", "(", ")", ";", "}", "if", "(", "this", ".", "boundsSprite", ")", "{", "this", ".", "checkBoundsSprite", "(", ")", ";", "}", "if", "(", "this", ".", "snapOnDrag", ")", "{", "this", ".", "sprite", ".", "x", "=", "Math", ".", "round", "(", "(", "this", ".", "sprite", ".", "x", "-", "(", "this", ".", "snapOffsetX", "%", "this", ".", "snapX", ")", ")", "/", "this", ".", "snapX", ")", "*", "this", ".", "snapX", "+", "(", "this", ".", "snapOffsetX", "%", "this", ".", "snapX", ")", ";", "this", ".", "sprite", ".", "y", "=", "Math", ".", "round", "(", "(", "this", ".", "sprite", ".", "y", "-", "(", "this", ".", "snapOffsetY", "%", "this", ".", "snapY", ")", ")", "/", "this", ".", "snapY", ")", "*", "this", ".", "snapY", "+", "(", "this", ".", "snapOffsetY", "%", "this", ".", "snapY", ")", ";", "}", "}", "return", "true", ";", "}"], "original_docstring": "\nUpdates the Pointer drag on this Sprite.\n@method Phaser.InputHandler#updateDrag\n@param {Phaser.Pointer} pointer\n@return {boolean}\n", "docstring": {"block_comment": "Updates the Pointer drag on this Sprite.", "line_comment": null}, "docstring_tokens": ["Updates", "the", "Pointer", "drag", "on", "this", "Sprite", "."], "sample_id": 206, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004015", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        if (this.sprite === null)\n        {\n            //  Abort. We've been destroyed.\n            return;\n        }\n\n        //  If was previously touched by this Pointer, check if still is AND still over this item\n        if (this._pointerData[pointer.id].isDown && pointer.isUp)\n        {\n            this._pointerData[pointer.id].isDown = false;\n            this._pointerData[pointer.id].isUp = true;\n            this._pointerData[pointer.id].timeUp = this.game.time.now;\n            this._pointerData[pointer.id].downDuration = this._pointerData[pointer.id].timeUp - this._pointerData[pointer.id].timeDown;\n\n            //  Only release the InputUp signal if the pointer is still over this sprite\n            if (this.checkPointerOver(pointer))\n            {\n                //  Release the inputUp signal and provide optional parameter if pointer is still over the sprite or not\n                if (this.sprite && this.sprite.events)\n                {\n                    this.sprite.events.onInputUp.dispatch(this.sprite, pointer, true);\n                }\n            }\n            else\n            {\n                //  Release the inputUp signal and provide optional parameter if pointer is still over the sprite or not\n                if (this.sprite && this.sprite.events)\n                {\n                    this.sprite.events.onInputUp.dispatch(this.sprite, pointer, false);\n                }\n\n                //  Pointer outside the sprite? Reset the cursor\n                if (this.useHandCursor)\n                {\n                    this.game.canvas.style.cursor = \"default\";\n                    this._setHandCursor = false;\n                }\n            }\n\n            //  Stop drag\n            if (this.draggable && this.isDragged && this._draggedPointerID == pointer.id)\n            {\n                this.stopDrag(pointer);\n            }\n        }\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "if", "(", "this", ".", "sprite", "===", "null", ")", "{", "//  Abort. We've been destroyed.", "return", ";", "}", "//  If was previously touched by this Pointer, check if still is AND still over this item", "if", "(", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isDown", "&&", "pointer", ".", "isUp", ")", "{", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isDown", "=", "false", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isUp", "=", "true", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "timeUp", "=", "this", ".", "game", ".", "time", ".", "now", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "downDuration", "=", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "timeUp", "-", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "timeDown", ";", "//  Only release the InputUp signal if the pointer is still over this sprite", "if", "(", "this", ".", "checkPointerOver", "(", "pointer", ")", ")", "{", "//  Release the inputUp signal and provide optional parameter if pointer is still over the sprite or not", "if", "(", "this", ".", "sprite", "&&", "this", ".", "sprite", ".", "events", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputUp", ".", "dispatch", "(", "this", ".", "sprite", ",", "pointer", ",", "true", ")", ";", "}", "}", "else", "{", "//  Release the inputUp signal and provide optional parameter if pointer is still over the sprite or not", "if", "(", "this", ".", "sprite", "&&", "this", ".", "sprite", ".", "events", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputUp", ".", "dispatch", "(", "this", ".", "sprite", ",", "pointer", ",", "false", ")", ";", "}", "//  Pointer outside the sprite? Reset the cursor", "if", "(", "this", ".", "useHandCursor", ")", "{", "this", ".", "game", ".", "canvas", ".", "style", ".", "cursor", "=", "\"default\"", ";", "this", ".", "_setHandCursor", "=", "false", ";", "}", "}", "//  Stop drag", "if", "(", "this", ".", "draggable", "&&", "this", ".", "isDragged", "&&", "this", ".", "_draggedPointerID", "==", "pointer", ".", "id", ")", "{", "this", ".", "stopDrag", "(", "pointer", ")", ";", "}", "}", "}"], "original_docstring": "\nInternal method handling the pointer released event.\n@method Phaser.InputHandler#_releasedHandler\n@private\n@param {Phaser.Pointer} pointer\n", "docstring": {"block_comment": "Internal method handling the pointer released event.", "line_comment": ["Abort. We ve been destroyed.", "If was previously touched by this Pointer, check if still is AND still over this item", "Only release the InputUp signal if the pointer is still over this sprite", "Release the inputUp signal and provide optional parameter if pointer is still over the sprite or not", "Release the inputUp signal and provide optional parameter if pointer is still over the sprite or not", "Pointer outside the sprite  Reset the cursor", "Stop drag"]}, "docstring_tokens": ["Internal", "method", "handling", "the", "pointer", "released", "event", "."], "sample_id": 207, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004016", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        if (this.sprite === null)\n        {\n            //  Abort. We've been destroyed.\n            return;\n        }\n\n        if (this._pointerData[pointer.id].isDown === false && this._pointerData[pointer.id].isOver === true)\n        {\n            if (this.pixelPerfectClick && !this.checkPixel(null, null, pointer))\n            {\n                return;\n            }\n\n            this._pointerData[pointer.id].isDown = true;\n            this._pointerData[pointer.id].isUp = false;\n            this._pointerData[pointer.id].timeDown = this.game.time.now;\n    \n            if (this.sprite && this.sprite.events)\n            {\n                this.sprite.events.onInputDown.dispatch(this.sprite, pointer);\n            }\n\n            //  Start drag\n            if (this.draggable && this.isDragged === false)\n            {\n                this.startDrag(pointer);\n            }\n\n            if (this.bringToTop)\n            {\n                this.sprite.bringToTop();\n            }\n        }\n\n        //  Consume the event?\n        return this.consumePointerEvent;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "if", "(", "this", ".", "sprite", "===", "null", ")", "{", "//  Abort. We've been destroyed.", "return", ";", "}", "if", "(", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isDown", "===", "false", "&&", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isOver", "===", "true", ")", "{", "if", "(", "this", ".", "pixelPerfectClick", "&&", "!", "this", ".", "checkPixel", "(", "null", ",", "null", ",", "pointer", ")", ")", "{", "return", ";", "}", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isDown", "=", "true", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isUp", "=", "false", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "timeDown", "=", "this", ".", "game", ".", "time", ".", "now", ";", "if", "(", "this", ".", "sprite", "&&", "this", ".", "sprite", ".", "events", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputDown", ".", "dispatch", "(", "this", ".", "sprite", ",", "pointer", ")", ";", "}", "//  Start drag", "if", "(", "this", ".", "draggable", "&&", "this", ".", "isDragged", "===", "false", ")", "{", "this", ".", "startDrag", "(", "pointer", ")", ";", "}", "if", "(", "this", ".", "bringToTop", ")", "{", "this", ".", "sprite", ".", "bringToTop", "(", ")", ";", "}", "}", "//  Consume the event?", "return", "this", ".", "consumePointerEvent", ";", "}"], "original_docstring": "\nInternal method handling the touched event.\n@method Phaser.InputHandler#_touchedHandler\n@private\n@param {Phaser.Pointer} pointer\n", "docstring": {"block_comment": "Internal method handling the touched event.", "line_comment": ["Abort. We ve been destroyed.", "Start drag", null]}, "docstring_tokens": ["Internal", "method", "handling", "the", "touched", "event", "."], "sample_id": 208, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004017", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        if (this.sprite === null)\n        {\n            //  Abort. We've been destroyed.\n            return;\n        }\n\n        this._pointerData[pointer.id].isOver = false;\n        this._pointerData[pointer.id].isOut = true;\n        this._pointerData[pointer.id].timeOut = this.game.time.now;\n\n        if (this.useHandCursor && this._pointerData[pointer.id].isDragged === false)\n        {\n            this.game.canvas.style.cursor = \"default\";\n            this._setHandCursor = false;\n        }\n\n        if (this.sprite && this.sprite.events)\n        {\n            this.sprite.events.onInputOut.dispatch(this.sprite, pointer);\n        }\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "if", "(", "this", ".", "sprite", "===", "null", ")", "{", "//  Abort. We've been destroyed.", "return", ";", "}", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isOver", "=", "false", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isOut", "=", "true", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "timeOut", "=", "this", ".", "game", ".", "time", ".", "now", ";", "if", "(", "this", ".", "useHandCursor", "&&", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isDragged", "===", "false", ")", "{", "this", ".", "game", ".", "canvas", ".", "style", ".", "cursor", "=", "\"default\"", ";", "this", ".", "_setHandCursor", "=", "false", ";", "}", "if", "(", "this", ".", "sprite", "&&", "this", ".", "sprite", ".", "events", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputOut", ".", "dispatch", "(", "this", ".", "sprite", ",", "pointer", ")", ";", "}", "}"], "original_docstring": "\nInternal method handling the pointer out event.\n@method Phaser.InputHandler#_pointerOutHandler\n@private\n@param {Phaser.Pointer} pointer\n", "docstring": {"block_comment": "Internal method handling the pointer out event.", "line_comment": ["Abort. We ve been destroyed."]}, "docstring_tokens": ["Internal", "method", "handling", "the", "pointer", "out", "event", "."], "sample_id": 209, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004018", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        if (this.sprite === null)\n        {\n            //  Abort. We've been destroyed.\n            return;\n        }\n\n        if (this._pointerData[pointer.id].isOver === false)\n        {\n            this._pointerData[pointer.id].isOver = true;\n            this._pointerData[pointer.id].isOut = false;\n            this._pointerData[pointer.id].timeOver = this.game.time.now;\n            this._pointerData[pointer.id].x = pointer.x - this.sprite.x;\n            this._pointerData[pointer.id].y = pointer.y - this.sprite.y;\n\n            if (this.useHandCursor && this._pointerData[pointer.id].isDragged === false)\n            {\n                this.game.canvas.style.cursor = \"pointer\";\n                this._setHandCursor = true;\n            }\n\n            if (this.sprite && this.sprite.events)\n            {\n                this.sprite.events.onInputOver.dispatch(this.sprite, pointer);\n            }\n        }\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "if", "(", "this", ".", "sprite", "===", "null", ")", "{", "//  Abort. We've been destroyed.", "return", ";", "}", "if", "(", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isOver", "===", "false", ")", "{", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isOver", "=", "true", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isOut", "=", "false", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "timeOver", "=", "this", ".", "game", ".", "time", ".", "now", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "x", "=", "pointer", ".", "x", "-", "this", ".", "sprite", ".", "x", ";", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "y", "=", "pointer", ".", "y", "-", "this", ".", "sprite", ".", "y", ";", "if", "(", "this", ".", "useHandCursor", "&&", "this", ".", "_pointerData", "[", "pointer", ".", "id", "]", ".", "isDragged", "===", "false", ")", "{", "this", ".", "game", ".", "canvas", ".", "style", ".", "cursor", "=", "\"pointer\"", ";", "this", ".", "_setHandCursor", "=", "true", ";", "}", "if", "(", "this", ".", "sprite", "&&", "this", ".", "sprite", ".", "events", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputOver", ".", "dispatch", "(", "this", ".", "sprite", ",", "pointer", ")", ";", "}", "}", "}"], "original_docstring": "\nInternal method handling the pointer over event.\n@method Phaser.InputHandler#_pointerOverHandler\n@private\n@param {Phaser.Pointer} pointer\n", "docstring": {"block_comment": "Internal method handling the pointer over event.", "line_comment": ["Abort. We ve been destroyed."]}, "docstring_tokens": ["Internal", "method", "handling", "the", "pointer", "over", "event", "."], "sample_id": 210, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004019", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (x, y, pointer) {\n\n        //  Grab a pixel from our image into the hitCanvas and then test it\n        if (this.sprite.texture.baseTexture.source)\n        {\n            this.game.input.hitContext.clearRect(0, 0, 1, 1);\n\n            if (x === null && y === null)\n            {\n                //  Use the pointer parameter\n                this.game.input.getLocalPosition(this.sprite, pointer, this._tempPoint);\n\n                var x = this._tempPoint.x;\n                var y = this._tempPoint.y;\n            }\n\n            if (this.sprite.anchor.x !== 0)\n            {\n                x -= -this.sprite.texture.frame.width * this.sprite.anchor.x;\n            }\n\n            if (this.sprite.anchor.y !== 0)\n            {\n                y -= -this.sprite.texture.frame.height * this.sprite.anchor.y;\n            }\n\n            x += this.sprite.texture.frame.x;\n            y += this.sprite.texture.frame.y;\n\n            this.game.input.hitContext.drawImage(this.sprite.texture.baseTexture.source, x, y, 1, 1, 0, 0, 1, 1);\n\n            var rgb = this.game.input.hitContext.getImageData(0, 0, 1, 1);\n\n            if (rgb.data[3] >= this.pixelPerfectAlpha)\n            {\n                return true;\n            }\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "x", ",", "y", ",", "pointer", ")", "{", "//  Grab a pixel from our image into the hitCanvas and then test it", "if", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ")", "{", "this", ".", "game", ".", "input", ".", "hitContext", ".", "clearRect", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "x", "===", "null", "&&", "y", "===", "null", ")", "{", "//  Use the pointer parameter", "this", ".", "game", ".", "input", ".", "getLocalPosition", "(", "this", ".", "sprite", ",", "pointer", ",", "this", ".", "_tempPoint", ")", ";", "var", "x", "=", "this", ".", "_tempPoint", ".", "x", ";", "var", "y", "=", "this", ".", "_tempPoint", ".", "y", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "x", "!==", "0", ")", "{", "x", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "width", "*", "this", ".", "sprite", ".", "anchor", ".", "x", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "y", "!==", "0", ")", "{", "y", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "height", "*", "this", ".", "sprite", ".", "anchor", ".", "y", ";", "}", "x", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "x", ";", "y", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "y", ";", "this", ".", "game", ".", "input", ".", "hitContext", ".", "drawImage", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ",", "x", ",", "y", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ")", ";", "var", "rgb", "=", "this", ".", "game", ".", "input", ".", "hitContext", ".", "getImageData", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "rgb", ".", "data", "[", "3", "]", ">=", "this", ".", "pixelPerfectAlpha", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "\nRuns a pixel perfect check against the given x/y coordinates of the Sprite this InputHandler is bound to.\nIt compares the alpha value of the pixel and if >= InputHandler.pixelPerfectAlpha it returns true.\n@method Phaser.InputHandler#checkPixel\n@param {number} x - The x coordinate to check.\n@param {number} y - The y coordinate to check.\n@param {Phaser.Pointer} [pointer] - The pointer to get the x/y coordinate from if not passed as the first two parameters.\n@return {boolean} true if there is the alpha of the pixel is >= InputHandler.pixelPerfectAlpha\n", "docstring": {"block_comment": "Runs a pixel perfect check against the given x y coordinates of the Sprite this InputHandler is bound to. \nIt compares the alpha value of the pixel and if    InputHandler.pixelPerfectAlpha it returns true.", "line_comment": ["Grab a pixel from our image into the hitCanvas and then test it", "Use the pointer parameter"]}, "docstring_tokens": ["Runs", "a", "pixel", "perfect", "check", "against", "the", "given", "x", "y", "coordinates", "of", "the", "Sprite", "this", "InputHandler", "is", "bound", "to", ".", "It", "compares", "the", "alpha", "value", "of", "the", "pixel", "and", "if", "InputHandler", ".", "pixelPerfectAlpha", "it", "returns", "true", "."], "sample_id": 211, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004019", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (x, y, pointer) {\n\n        //  Grab a pixel from our image into the hitCanvas and then test it\n        if (this.sprite.texture.baseTexture.source)\n        {\n            this.game.input.hitContext.clearRect(0, 0, 1, 1);\n\n            if (x === null && y === null)\n            {\n                //  Use the pointer parameter\n                this.game.input.getLocalPosition(this.sprite, pointer, this._tempPoint);\n\n                var x = this._tempPoint.x;\n                var y = this._tempPoint.y;\n            }\n\n            if (this.sprite.anchor.x !== 0)\n            {\n                x -= -this.sprite.texture.frame.width * this.sprite.anchor.x;\n            }\n\n            if (this.sprite.anchor.y !== 0)\n            {\n                y -= -this.sprite.texture.frame.height * this.sprite.anchor.y;\n            }\n\n            x += this.sprite.texture.frame.x;\n            y += this.sprite.texture.frame.y;\n\n            this.game.input.hitContext.drawImage(this.sprite.texture.baseTexture.source, x, y, 1, 1, 0, 0, 1, 1);\n\n            var rgb = this.game.input.hitContext.getImageData(0, 0, 1, 1);\n\n            if (rgb.data[3] >= this.pixelPerfectAlpha)\n            {\n                return true;\n            }\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "x", ",", "y", ",", "pointer", ")", "{", "//  Grab a pixel from our image into the hitCanvas and then test it", "if", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ")", "{", "this", ".", "game", ".", "input", ".", "hitContext", ".", "clearRect", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "x", "===", "null", "&&", "y", "===", "null", ")", "{", "//  Use the pointer parameter", "this", ".", "game", ".", "input", ".", "getLocalPosition", "(", "this", ".", "sprite", ",", "pointer", ",", "this", ".", "_tempPoint", ")", ";", "var", "x", "=", "this", ".", "_tempPoint", ".", "x", ";", "var", "y", "=", "this", ".", "_tempPoint", ".", "y", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "x", "!==", "0", ")", "{", "x", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "width", "*", "this", ".", "sprite", ".", "anchor", ".", "x", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "y", "!==", "0", ")", "{", "y", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "height", "*", "this", ".", "sprite", ".", "anchor", ".", "y", ";", "}", "x", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "x", ";", "y", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "y", ";", "this", ".", "game", ".", "input", ".", "hitContext", ".", "drawImage", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ",", "x", ",", "y", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ")", ";", "var", "rgb", "=", "this", ".", "game", ".", "input", ".", "hitContext", ".", "getImageData", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "rgb", ".", "data", "[", "3", "]", ">=", "this", ".", "pixelPerfectAlpha", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "\nRuns a pixel perfect check against the given x/y coordinates of the Sprite this InputHandler is bound to.\nIt compares the alpha value of the pixel and if >= InputHandler.pixelPerfectAlpha it returns true.\n@method Phaser.InputHandler#checkPixel\n@param {number} x - The x coordinate to check.\n@param {number} y - The y coordinate to check.\n@param {Phaser.Pointer} [pointer] - The pointer to get the x/y coordinate from if not passed as the first two parameters.\n@return {boolean} true if there is the alpha of the pixel is >= InputHandler.pixelPerfectAlpha\n", "docstring": {"block_comment": "Runs a pixel perfect check against the given x y coordinates of the Sprite this InputHandler is bound to. \nIt compares the alpha value of the pixel and if    InputHandler.pixelPerfectAlpha it returns true.", "line_comment": ["Grab a pixel from our image into the hitCanvas and then test it", "Use the pointer parameter"]}, "docstring_tokens": ["-", "The", "x", "coordinate", "to", "check", "."], "sample_id": 211, "prompt_tokens": ["<javascript>", "<param>", "x"], "comment_type": "param", "sentence_id": 1}
{"id": "21004019", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (x, y, pointer) {\n\n        //  Grab a pixel from our image into the hitCanvas and then test it\n        if (this.sprite.texture.baseTexture.source)\n        {\n            this.game.input.hitContext.clearRect(0, 0, 1, 1);\n\n            if (x === null && y === null)\n            {\n                //  Use the pointer parameter\n                this.game.input.getLocalPosition(this.sprite, pointer, this._tempPoint);\n\n                var x = this._tempPoint.x;\n                var y = this._tempPoint.y;\n            }\n\n            if (this.sprite.anchor.x !== 0)\n            {\n                x -= -this.sprite.texture.frame.width * this.sprite.anchor.x;\n            }\n\n            if (this.sprite.anchor.y !== 0)\n            {\n                y -= -this.sprite.texture.frame.height * this.sprite.anchor.y;\n            }\n\n            x += this.sprite.texture.frame.x;\n            y += this.sprite.texture.frame.y;\n\n            this.game.input.hitContext.drawImage(this.sprite.texture.baseTexture.source, x, y, 1, 1, 0, 0, 1, 1);\n\n            var rgb = this.game.input.hitContext.getImageData(0, 0, 1, 1);\n\n            if (rgb.data[3] >= this.pixelPerfectAlpha)\n            {\n                return true;\n            }\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "x", ",", "y", ",", "pointer", ")", "{", "//  Grab a pixel from our image into the hitCanvas and then test it", "if", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ")", "{", "this", ".", "game", ".", "input", ".", "hitContext", ".", "clearRect", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "x", "===", "null", "&&", "y", "===", "null", ")", "{", "//  Use the pointer parameter", "this", ".", "game", ".", "input", ".", "getLocalPosition", "(", "this", ".", "sprite", ",", "pointer", ",", "this", ".", "_tempPoint", ")", ";", "var", "x", "=", "this", ".", "_tempPoint", ".", "x", ";", "var", "y", "=", "this", ".", "_tempPoint", ".", "y", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "x", "!==", "0", ")", "{", "x", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "width", "*", "this", ".", "sprite", ".", "anchor", ".", "x", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "y", "!==", "0", ")", "{", "y", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "height", "*", "this", ".", "sprite", ".", "anchor", ".", "y", ";", "}", "x", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "x", ";", "y", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "y", ";", "this", ".", "game", ".", "input", ".", "hitContext", ".", "drawImage", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ",", "x", ",", "y", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ")", ";", "var", "rgb", "=", "this", ".", "game", ".", "input", ".", "hitContext", ".", "getImageData", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "rgb", ".", "data", "[", "3", "]", ">=", "this", ".", "pixelPerfectAlpha", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "\nRuns a pixel perfect check against the given x/y coordinates of the Sprite this InputHandler is bound to.\nIt compares the alpha value of the pixel and if >= InputHandler.pixelPerfectAlpha it returns true.\n@method Phaser.InputHandler#checkPixel\n@param {number} x - The x coordinate to check.\n@param {number} y - The y coordinate to check.\n@param {Phaser.Pointer} [pointer] - The pointer to get the x/y coordinate from if not passed as the first two parameters.\n@return {boolean} true if there is the alpha of the pixel is >= InputHandler.pixelPerfectAlpha\n", "docstring": {"block_comment": "Runs a pixel perfect check against the given x y coordinates of the Sprite this InputHandler is bound to. \nIt compares the alpha value of the pixel and if    InputHandler.pixelPerfectAlpha it returns true.", "line_comment": ["Grab a pixel from our image into the hitCanvas and then test it", "Use the pointer parameter"]}, "docstring_tokens": ["-", "The", "y", "coordinate", "to", "check", "."], "sample_id": 211, "prompt_tokens": ["<javascript>", "<param>", "y"], "comment_type": "param", "sentence_id": 2}
{"id": "21004019", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (x, y, pointer) {\n\n        //  Grab a pixel from our image into the hitCanvas and then test it\n        if (this.sprite.texture.baseTexture.source)\n        {\n            this.game.input.hitContext.clearRect(0, 0, 1, 1);\n\n            if (x === null && y === null)\n            {\n                //  Use the pointer parameter\n                this.game.input.getLocalPosition(this.sprite, pointer, this._tempPoint);\n\n                var x = this._tempPoint.x;\n                var y = this._tempPoint.y;\n            }\n\n            if (this.sprite.anchor.x !== 0)\n            {\n                x -= -this.sprite.texture.frame.width * this.sprite.anchor.x;\n            }\n\n            if (this.sprite.anchor.y !== 0)\n            {\n                y -= -this.sprite.texture.frame.height * this.sprite.anchor.y;\n            }\n\n            x += this.sprite.texture.frame.x;\n            y += this.sprite.texture.frame.y;\n\n            this.game.input.hitContext.drawImage(this.sprite.texture.baseTexture.source, x, y, 1, 1, 0, 0, 1, 1);\n\n            var rgb = this.game.input.hitContext.getImageData(0, 0, 1, 1);\n\n            if (rgb.data[3] >= this.pixelPerfectAlpha)\n            {\n                return true;\n            }\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "x", ",", "y", ",", "pointer", ")", "{", "//  Grab a pixel from our image into the hitCanvas and then test it", "if", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ")", "{", "this", ".", "game", ".", "input", ".", "hitContext", ".", "clearRect", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "x", "===", "null", "&&", "y", "===", "null", ")", "{", "//  Use the pointer parameter", "this", ".", "game", ".", "input", ".", "getLocalPosition", "(", "this", ".", "sprite", ",", "pointer", ",", "this", ".", "_tempPoint", ")", ";", "var", "x", "=", "this", ".", "_tempPoint", ".", "x", ";", "var", "y", "=", "this", ".", "_tempPoint", ".", "y", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "x", "!==", "0", ")", "{", "x", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "width", "*", "this", ".", "sprite", ".", "anchor", ".", "x", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "y", "!==", "0", ")", "{", "y", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "height", "*", "this", ".", "sprite", ".", "anchor", ".", "y", ";", "}", "x", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "x", ";", "y", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "y", ";", "this", ".", "game", ".", "input", ".", "hitContext", ".", "drawImage", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ",", "x", ",", "y", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ")", ";", "var", "rgb", "=", "this", ".", "game", ".", "input", ".", "hitContext", ".", "getImageData", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "rgb", ".", "data", "[", "3", "]", ">=", "this", ".", "pixelPerfectAlpha", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "\nRuns a pixel perfect check against the given x/y coordinates of the Sprite this InputHandler is bound to.\nIt compares the alpha value of the pixel and if >= InputHandler.pixelPerfectAlpha it returns true.\n@method Phaser.InputHandler#checkPixel\n@param {number} x - The x coordinate to check.\n@param {number} y - The y coordinate to check.\n@param {Phaser.Pointer} [pointer] - The pointer to get the x/y coordinate from if not passed as the first two parameters.\n@return {boolean} true if there is the alpha of the pixel is >= InputHandler.pixelPerfectAlpha\n", "docstring": {"block_comment": "Runs a pixel perfect check against the given x y coordinates of the Sprite this InputHandler is bound to. \nIt compares the alpha value of the pixel and if    InputHandler.pixelPerfectAlpha it returns true.", "line_comment": ["Grab a pixel from our image into the hitCanvas and then test it", "Use the pointer parameter"]}, "docstring_tokens": ["-", "The", "pointer", "to", "get", "the", "x", "/", "y", "coordinate", "from", "if", "not", "passed", "as", "the", "first", "two", "parameters", "."], "sample_id": 211, "prompt_tokens": ["<javascript>", "<param>", "pointer"], "comment_type": "param", "sentence_id": 3}
{"id": "21004019", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (x, y, pointer) {\n\n        //  Grab a pixel from our image into the hitCanvas and then test it\n        if (this.sprite.texture.baseTexture.source)\n        {\n            this.game.input.hitContext.clearRect(0, 0, 1, 1);\n\n            if (x === null && y === null)\n            {\n                //  Use the pointer parameter\n                this.game.input.getLocalPosition(this.sprite, pointer, this._tempPoint);\n\n                var x = this._tempPoint.x;\n                var y = this._tempPoint.y;\n            }\n\n            if (this.sprite.anchor.x !== 0)\n            {\n                x -= -this.sprite.texture.frame.width * this.sprite.anchor.x;\n            }\n\n            if (this.sprite.anchor.y !== 0)\n            {\n                y -= -this.sprite.texture.frame.height * this.sprite.anchor.y;\n            }\n\n            x += this.sprite.texture.frame.x;\n            y += this.sprite.texture.frame.y;\n\n            this.game.input.hitContext.drawImage(this.sprite.texture.baseTexture.source, x, y, 1, 1, 0, 0, 1, 1);\n\n            var rgb = this.game.input.hitContext.getImageData(0, 0, 1, 1);\n\n            if (rgb.data[3] >= this.pixelPerfectAlpha)\n            {\n                return true;\n            }\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "x", ",", "y", ",", "pointer", ")", "{", "//  Grab a pixel from our image into the hitCanvas and then test it", "if", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ")", "{", "this", ".", "game", ".", "input", ".", "hitContext", ".", "clearRect", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "x", "===", "null", "&&", "y", "===", "null", ")", "{", "//  Use the pointer parameter", "this", ".", "game", ".", "input", ".", "getLocalPosition", "(", "this", ".", "sprite", ",", "pointer", ",", "this", ".", "_tempPoint", ")", ";", "var", "x", "=", "this", ".", "_tempPoint", ".", "x", ";", "var", "y", "=", "this", ".", "_tempPoint", ".", "y", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "x", "!==", "0", ")", "{", "x", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "width", "*", "this", ".", "sprite", ".", "anchor", ".", "x", ";", "}", "if", "(", "this", ".", "sprite", ".", "anchor", ".", "y", "!==", "0", ")", "{", "y", "-=", "-", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "height", "*", "this", ".", "sprite", ".", "anchor", ".", "y", ";", "}", "x", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "x", ";", "y", "+=", "this", ".", "sprite", ".", "texture", ".", "frame", ".", "y", ";", "this", ".", "game", ".", "input", ".", "hitContext", ".", "drawImage", "(", "this", ".", "sprite", ".", "texture", ".", "baseTexture", ".", "source", ",", "x", ",", "y", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ")", ";", "var", "rgb", "=", "this", ".", "game", ".", "input", ".", "hitContext", ".", "getImageData", "(", "0", ",", "0", ",", "1", ",", "1", ")", ";", "if", "(", "rgb", ".", "data", "[", "3", "]", ">=", "this", ".", "pixelPerfectAlpha", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "\nRuns a pixel perfect check against the given x/y coordinates of the Sprite this InputHandler is bound to.\nIt compares the alpha value of the pixel and if >= InputHandler.pixelPerfectAlpha it returns true.\n@method Phaser.InputHandler#checkPixel\n@param {number} x - The x coordinate to check.\n@param {number} y - The y coordinate to check.\n@param {Phaser.Pointer} [pointer] - The pointer to get the x/y coordinate from if not passed as the first two parameters.\n@return {boolean} true if there is the alpha of the pixel is >= InputHandler.pixelPerfectAlpha\n", "docstring": {"block_comment": "Runs a pixel perfect check against the given x y coordinates of the Sprite this InputHandler is bound to. \nIt compares the alpha value of the pixel and if    InputHandler.pixelPerfectAlpha it returns true.", "line_comment": ["Grab a pixel from our image into the hitCanvas and then test it", "Use the pointer parameter"]}, "docstring_tokens": ["true", "if", "there", "is", "the", "alpha", "of", "the", "pixel", "is", ">", "=", "InputHandler", ".", "pixelPerfectAlpha"], "sample_id": 211, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 4}
{"id": "21004020", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        if (!this.enabled || !this.sprite || !this.sprite.parent || !this.sprite.visible || !this.sprite.parent.visible)\n        {\n            return false;\n        }\n\n        //  Need to pass it a temp point, in case we need it again for the pixel check\n        if (this.game.input.hitTest(this.sprite, pointer, this._tempPoint))\n        {\n            if (this.pixelPerfectOver)\n            {\n                return this.checkPixel(this._tempPoint.x, this._tempPoint.y);\n            }\n            else\n            {\n                return true;\n            }\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "if", "(", "!", "this", ".", "enabled", "||", "!", "this", ".", "sprite", "||", "!", "this", ".", "sprite", ".", "parent", "||", "!", "this", ".", "sprite", ".", "visible", "||", "!", "this", ".", "sprite", ".", "parent", ".", "visible", ")", "{", "return", "false", ";", "}", "//  Need to pass it a temp point, in case we need it again for the pixel check", "if", "(", "this", ".", "game", ".", "input", ".", "hitTest", "(", "this", ".", "sprite", ",", "pointer", ",", "this", ".", "_tempPoint", ")", ")", "{", "if", "(", "this", ".", "pixelPerfectOver", ")", "{", "return", "this", ".", "checkPixel", "(", "this", ".", "_tempPoint", ".", "x", ",", "this", ".", "_tempPoint", ".", "y", ")", ";", "}", "else", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "\nChecks if the given pointer is over this Sprite.\n@method Phaser.InputHandler#checkPointerOver\n@param {Phaser.Pointer} pointer\n@return {boolean}\n", "docstring": {"block_comment": "Checks if the given pointer is over this Sprite.", "line_comment": ["Need to pass it a temp point, in case we need it again for the pixel check"]}, "docstring_tokens": ["Checks", "if", "the", "given", "pointer", "is", "over", "this", "Sprite", "."], "sample_id": 212, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004021", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        if (!this.enabled || !this.sprite || !this.sprite.parent || !this.sprite.visible || !this.sprite.parent.visible)\n        {\n            return false;\n        }\n\n        //  Need to pass it a temp point, in case we need it again for the pixel check\n        if (this.game.input.hitTest(this.sprite, pointer, this._tempPoint))\n        {\n            if (this.pixelPerfectClick)\n            {\n                return this.checkPixel(this._tempPoint.x, this._tempPoint.y);\n            }\n            else\n            {\n                return true;\n            }\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "if", "(", "!", "this", ".", "enabled", "||", "!", "this", ".", "sprite", "||", "!", "this", ".", "sprite", ".", "parent", "||", "!", "this", ".", "sprite", ".", "visible", "||", "!", "this", ".", "sprite", ".", "parent", ".", "visible", ")", "{", "return", "false", ";", "}", "//  Need to pass it a temp point, in case we need it again for the pixel check", "if", "(", "this", ".", "game", ".", "input", ".", "hitTest", "(", "this", ".", "sprite", ",", "pointer", ",", "this", ".", "_tempPoint", ")", ")", "{", "if", "(", "this", ".", "pixelPerfectClick", ")", "{", "return", "this", ".", "checkPixel", "(", "this", ".", "_tempPoint", ".", "x", ",", "this", ".", "_tempPoint", ".", "y", ")", ";", "}", "else", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "\nChecks if the given pointer is over this Sprite and can click it.\n@method Phaser.InputHandler#checkPointerDown\n@param {Phaser.Pointer} pointer\n@return {boolean} True if the pointer is down, otherwise false.\n", "docstring": {"block_comment": "Checks if the given pointer is over this Sprite and can click it.", "line_comment": ["Need to pass it a temp point, in case we need it again for the pixel check"]}, "docstring_tokens": ["Checks", "if", "the", "given", "pointer", "is", "over", "this", "Sprite", "and", "can", "click", "it", "."], "sample_id": 213, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004021", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        if (!this.enabled || !this.sprite || !this.sprite.parent || !this.sprite.visible || !this.sprite.parent.visible)\n        {\n            return false;\n        }\n\n        //  Need to pass it a temp point, in case we need it again for the pixel check\n        if (this.game.input.hitTest(this.sprite, pointer, this._tempPoint))\n        {\n            if (this.pixelPerfectClick)\n            {\n                return this.checkPixel(this._tempPoint.x, this._tempPoint.y);\n            }\n            else\n            {\n                return true;\n            }\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "if", "(", "!", "this", ".", "enabled", "||", "!", "this", ".", "sprite", "||", "!", "this", ".", "sprite", ".", "parent", "||", "!", "this", ".", "sprite", ".", "visible", "||", "!", "this", ".", "sprite", ".", "parent", ".", "visible", ")", "{", "return", "false", ";", "}", "//  Need to pass it a temp point, in case we need it again for the pixel check", "if", "(", "this", ".", "game", ".", "input", ".", "hitTest", "(", "this", ".", "sprite", ",", "pointer", ",", "this", ".", "_tempPoint", ")", ")", "{", "if", "(", "this", ".", "pixelPerfectClick", ")", "{", "return", "this", ".", "checkPixel", "(", "this", ".", "_tempPoint", ".", "x", ",", "this", ".", "_tempPoint", ".", "y", ")", ";", "}", "else", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "\nChecks if the given pointer is over this Sprite and can click it.\n@method Phaser.InputHandler#checkPointerDown\n@param {Phaser.Pointer} pointer\n@return {boolean} True if the pointer is down, otherwise false.\n", "docstring": {"block_comment": "Checks if the given pointer is over this Sprite and can click it.", "line_comment": ["Need to pass it a temp point, in case we need it again for the pixel check"]}, "docstring_tokens": ["True", "if", "the", "pointer", "is", "down", "otherwise", "false", "."], "sample_id": 213, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004022", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        return this._pointerData[pointer].timeOut;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "return", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeOut", ";", "}"], "original_docstring": "\nA timestamp representing when the Pointer left the touchscreen.\n@method Phaser.InputHandler#pointerTimeOut\n@param {Phaser.Pointer} pointer\n@return {number}\n", "docstring": {"block_comment": "A timestamp representing when the Pointer left the touchscreen.", "line_comment": null}, "docstring_tokens": ["A", "timestamp", "representing", "when", "the", "Pointer", "left", "the", "touchscreen", "."], "sample_id": 214, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004023", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        return this._pointerData[pointer].timeOver;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "return", "this", ".", "_pointerData", "[", "pointer", "]", ".", "timeOver", ";", "}"], "original_docstring": "\nA timestamp representing when the Pointer first touched the touchscreen.\n@method Phaser.InputHandler#pointerTimeOver\n@param {Phaser.Pointer} pointer\n@return {number}\n", "docstring": {"block_comment": "A timestamp representing when the Pointer first touched the touchscreen.", "line_comment": null}, "docstring_tokens": ["A", "timestamp", "representing", "when", "the", "Pointer", "first", "touched", "the", "touchscreen", "."], "sample_id": 215, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004026", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        return this._pointerData[pointer].isUp;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "return", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isUp", ";", "}"], "original_docstring": "\nIf the Pointer is not touching the touchscreen, or the mouse button is up, isUp is set to true\n@method Phaser.InputHandler#pointerUp\n@param {Phaser.Pointer} pointer\n@return {boolean}\n", "docstring": {"block_comment": "If the Pointer is not touching the touchscreen, or the mouse button is up, isUp is set to true", "line_comment": null}, "docstring_tokens": ["If", "the", "Pointer", "is", "not", "touching", "the", "touchscreen", "or", "the", "mouse", "button", "is", "up", "isUp", "is", "set", "to", "true"], "sample_id": 216, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004027", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        return this._pointerData[pointer].isDown;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "return", "this", ".", "_pointerData", "[", "pointer", "]", ".", "isDown", ";", "}"], "original_docstring": "\nIf the Pointer is touching the touchscreen, or the mouse button is held down, isDown is set to true.\n@method Phaser.InputHandler#pointerDown\n@param {Phaser.Pointer} pointer\n@return {boolean}\n", "docstring": {"block_comment": "If the Pointer is touching the touchscreen, or the mouse button is held down, isDown is set to true.", "line_comment": null}, "docstring_tokens": ["If", "the", "Pointer", "is", "touching", "the", "touchscreen", "or", "the", "mouse", "button", "is", "held", "down", "isDown", "is", "set", "to", "true", "."], "sample_id": 217, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004028", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        return this._pointerData[pointer].y;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "return", "this", ".", "_pointerData", "[", "pointer", "]", ".", "y", ";", "}"], "original_docstring": "\nThe y coordinate of the Input pointer, relative to the top-left of the parent Sprite\nThis value is only set when the pointer is over this Sprite.\n@method Phaser.InputHandler#pointerY\n@param {Phaser.Pointer} pointer\n@return {number} The y coordinate of the Input pointer.\n", "docstring": {"block_comment": "The y coordinate of the Input pointer, relative to the top left of the parent Sprite \nThis value is only set when the pointer is over this Sprite.", "line_comment": null}, "docstring_tokens": ["The", "y", "coordinate", "of", "the", "Input", "pointer", "relative", "to", "the", "top", "left", "of", "the", "parent", "Sprite", "This", "value", "is", "only", "set", "when", "the", "pointer", "is", "over", "this", "Sprite", "."], "sample_id": 218, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004028", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        return this._pointerData[pointer].y;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "return", "this", ".", "_pointerData", "[", "pointer", "]", ".", "y", ";", "}"], "original_docstring": "\nThe y coordinate of the Input pointer, relative to the top-left of the parent Sprite\nThis value is only set when the pointer is over this Sprite.\n@method Phaser.InputHandler#pointerY\n@param {Phaser.Pointer} pointer\n@return {number} The y coordinate of the Input pointer.\n", "docstring": {"block_comment": "The y coordinate of the Input pointer, relative to the top left of the parent Sprite \nThis value is only set when the pointer is over this Sprite.", "line_comment": null}, "docstring_tokens": ["The", "y", "coordinate", "of", "the", "Input", "pointer", "."], "sample_id": 218, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004029", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        return this._pointerData[pointer].x;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "return", "this", ".", "_pointerData", "[", "pointer", "]", ".", "x", ";", "}"], "original_docstring": "\nThe x coordinate of the Input pointer, relative to the top-left of the parent Sprite.\nThis value is only set when the pointer is over this Sprite.\n@method Phaser.InputHandler#pointerX\n@param {Phaser.Pointer} pointer\n@return {number} The x coordinate of the Input pointer.\n", "docstring": {"block_comment": "The x coordinate of the Input pointer, relative to the top left of the parent Sprite. \nThis value is only set when the pointer is over this Sprite.", "line_comment": null}, "docstring_tokens": ["The", "x", "coordinate", "of", "the", "Input", "pointer", "relative", "to", "the", "top", "left", "of", "the", "parent", "Sprite", ".", "This", "value", "is", "only", "set", "when", "the", "pointer", "is", "over", "this", "Sprite", "."], "sample_id": 219, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004029", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (pointer) {\n\n        pointer = pointer || 0;\n\n        return this._pointerData[pointer].x;\n\n    }", "code_tokens": ["function", "(", "pointer", ")", "{", "pointer", "=", "pointer", "||", "0", ";", "return", "this", ".", "_pointerData", "[", "pointer", "]", ".", "x", ";", "}"], "original_docstring": "\nThe x coordinate of the Input pointer, relative to the top-left of the parent Sprite.\nThis value is only set when the pointer is over this Sprite.\n@method Phaser.InputHandler#pointerX\n@param {Phaser.Pointer} pointer\n@return {number} The x coordinate of the Input pointer.\n", "docstring": {"block_comment": "The x coordinate of the Input pointer, relative to the top left of the parent Sprite. \nThis value is only set when the pointer is over this Sprite.", "line_comment": null}, "docstring_tokens": ["The", "x", "coordinate", "of", "the", "Input", "pointer", "."], "sample_id": 219, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004030", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (highestID, highestRenderID) {\n\n        if (this.sprite.scale.x === 0 || this.sprite.scale.y === 0)\n        {\n            return false;\n        }\n\n        if (this.pixelPerfectClick || this.pixelPerfectOver)\n        {\n            return true;\n        }\n\n        if (this.priorityID > highestID || (this.priorityID === highestID && this.sprite._cache[3] < highestRenderID))\n        {\n            return true;\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "highestID", ",", "highestRenderID", ")", "{", "if", "(", "this", ".", "sprite", ".", "scale", ".", "x", "===", "0", "||", "this", ".", "sprite", ".", "scale", ".", "y", "===", "0", ")", "{", "return", "false", ";", "}", "if", "(", "this", ".", "pixelPerfectClick", "||", "this", ".", "pixelPerfectOver", ")", "{", "return", "true", ";", "}", "if", "(", "this", ".", "priorityID", ">", "highestID", "||", "(", "this", ".", "priorityID", "===", "highestID", "&&", "this", ".", "sprite", ".", "_cache", "[", "3", "]", "<", "highestRenderID", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}"], "original_docstring": "\nChecks if the object this InputHandler is bound to is valid for consideration in the Pointer move event.\nThis is called by Phaser.Pointer and shouldn't typically be called directly.\n\n@method Phaser.InputHandler#validForInput\n@protected\n@param {number} highestID - The highest ID currently processed by the Pointer.\n@param {number} highestRenderID - The highest Render Order ID currently processed by the Pointer.\n@return {boolean} True if the object this InputHandler is bound to should be considered as valid for input detection.\n", "docstring": {"block_comment": "Checks if the object this InputHandler is bound to is valid for consideration in the Pointer move event. \nThis is called by Phaser.Pointer and shouldn t typically be called directly.", "line_comment": null}, "docstring_tokens": ["Checks", "if", "the", "object", "this", "InputHandler", "is", "bound", "to", "is", "valid", "for", "consideration", "in", "the", "Pointer", "move", "event", ".", "This", "is", "called", "by", "Phaser", ".", "Pointer", "and", "shouldn", "t", "typically", "be", "called", "directly", "."], "sample_id": 220, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004030", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (highestID, highestRenderID) {\n\n        if (this.sprite.scale.x === 0 || this.sprite.scale.y === 0)\n        {\n            return false;\n        }\n\n        if (this.pixelPerfectClick || this.pixelPerfectOver)\n        {\n            return true;\n        }\n\n        if (this.priorityID > highestID || (this.priorityID === highestID && this.sprite._cache[3] < highestRenderID))\n        {\n            return true;\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "highestID", ",", "highestRenderID", ")", "{", "if", "(", "this", ".", "sprite", ".", "scale", ".", "x", "===", "0", "||", "this", ".", "sprite", ".", "scale", ".", "y", "===", "0", ")", "{", "return", "false", ";", "}", "if", "(", "this", ".", "pixelPerfectClick", "||", "this", ".", "pixelPerfectOver", ")", "{", "return", "true", ";", "}", "if", "(", "this", ".", "priorityID", ">", "highestID", "||", "(", "this", ".", "priorityID", "===", "highestID", "&&", "this", ".", "sprite", ".", "_cache", "[", "3", "]", "<", "highestRenderID", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}"], "original_docstring": "\nChecks if the object this InputHandler is bound to is valid for consideration in the Pointer move event.\nThis is called by Phaser.Pointer and shouldn't typically be called directly.\n\n@method Phaser.InputHandler#validForInput\n@protected\n@param {number} highestID - The highest ID currently processed by the Pointer.\n@param {number} highestRenderID - The highest Render Order ID currently processed by the Pointer.\n@return {boolean} True if the object this InputHandler is bound to should be considered as valid for input detection.\n", "docstring": {"block_comment": "Checks if the object this InputHandler is bound to is valid for consideration in the Pointer move event. \nThis is called by Phaser.Pointer and shouldn t typically be called directly.", "line_comment": null}, "docstring_tokens": ["-", "The", "highest", "ID", "currently", "processed", "by", "the", "Pointer", "."], "sample_id": 220, "prompt_tokens": ["<javascript>", "<param>", "highestID"], "comment_type": "param", "sentence_id": 1}
{"id": "21004030", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (highestID, highestRenderID) {\n\n        if (this.sprite.scale.x === 0 || this.sprite.scale.y === 0)\n        {\n            return false;\n        }\n\n        if (this.pixelPerfectClick || this.pixelPerfectOver)\n        {\n            return true;\n        }\n\n        if (this.priorityID > highestID || (this.priorityID === highestID && this.sprite._cache[3] < highestRenderID))\n        {\n            return true;\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "highestID", ",", "highestRenderID", ")", "{", "if", "(", "this", ".", "sprite", ".", "scale", ".", "x", "===", "0", "||", "this", ".", "sprite", ".", "scale", ".", "y", "===", "0", ")", "{", "return", "false", ";", "}", "if", "(", "this", ".", "pixelPerfectClick", "||", "this", ".", "pixelPerfectOver", ")", "{", "return", "true", ";", "}", "if", "(", "this", ".", "priorityID", ">", "highestID", "||", "(", "this", ".", "priorityID", "===", "highestID", "&&", "this", ".", "sprite", ".", "_cache", "[", "3", "]", "<", "highestRenderID", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}"], "original_docstring": "\nChecks if the object this InputHandler is bound to is valid for consideration in the Pointer move event.\nThis is called by Phaser.Pointer and shouldn't typically be called directly.\n\n@method Phaser.InputHandler#validForInput\n@protected\n@param {number} highestID - The highest ID currently processed by the Pointer.\n@param {number} highestRenderID - The highest Render Order ID currently processed by the Pointer.\n@return {boolean} True if the object this InputHandler is bound to should be considered as valid for input detection.\n", "docstring": {"block_comment": "Checks if the object this InputHandler is bound to is valid for consideration in the Pointer move event. \nThis is called by Phaser.Pointer and shouldn t typically be called directly.", "line_comment": null}, "docstring_tokens": ["-", "The", "highest", "Render", "Order", "ID", "currently", "processed", "by", "the", "Pointer", "."], "sample_id": 220, "prompt_tokens": ["<javascript>", "<param>", "highestRenderID"], "comment_type": "param", "sentence_id": 2}
{"id": "21004030", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (highestID, highestRenderID) {\n\n        if (this.sprite.scale.x === 0 || this.sprite.scale.y === 0)\n        {\n            return false;\n        }\n\n        if (this.pixelPerfectClick || this.pixelPerfectOver)\n        {\n            return true;\n        }\n\n        if (this.priorityID > highestID || (this.priorityID === highestID && this.sprite._cache[3] < highestRenderID))\n        {\n            return true;\n        }\n\n        return false;\n\n    }", "code_tokens": ["function", "(", "highestID", ",", "highestRenderID", ")", "{", "if", "(", "this", ".", "sprite", ".", "scale", ".", "x", "===", "0", "||", "this", ".", "sprite", ".", "scale", ".", "y", "===", "0", ")", "{", "return", "false", ";", "}", "if", "(", "this", ".", "pixelPerfectClick", "||", "this", ".", "pixelPerfectOver", ")", "{", "return", "true", ";", "}", "if", "(", "this", ".", "priorityID", ">", "highestID", "||", "(", "this", ".", "priorityID", "===", "highestID", "&&", "this", ".", "sprite", ".", "_cache", "[", "3", "]", "<", "highestRenderID", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}"], "original_docstring": "\nChecks if the object this InputHandler is bound to is valid for consideration in the Pointer move event.\nThis is called by Phaser.Pointer and shouldn't typically be called directly.\n\n@method Phaser.InputHandler#validForInput\n@protected\n@param {number} highestID - The highest ID currently processed by the Pointer.\n@param {number} highestRenderID - The highest Render Order ID currently processed by the Pointer.\n@return {boolean} True if the object this InputHandler is bound to should be considered as valid for input detection.\n", "docstring": {"block_comment": "Checks if the object this InputHandler is bound to is valid for consideration in the Pointer move event. \nThis is called by Phaser.Pointer and shouldn t typically be called directly.", "line_comment": null}, "docstring_tokens": ["True", "if", "the", "object", "this", "InputHandler", "is", "bound", "to", "should", "be", "considered", "as", "valid", "for", "input", "detection", "."], "sample_id": 220, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 3}
{"id": "21004031", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        if (this.sprite)\n        {\n            if (this._setHandCursor)\n            {\n                this.game.canvas.style.cursor = \"default\";\n                this._setHandCursor = false;\n            }\n\n            this.enabled = false;\n\n            this.game.input.interactiveItems.remove(this);\n\n            this._pointerData.length = 0;\n            this.boundsRect = null;\n            this.boundsSprite = null;\n            this.sprite = null;\n        }\n\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "sprite", ")", "{", "if", "(", "this", ".", "_setHandCursor", ")", "{", "this", ".", "game", ".", "canvas", ".", "style", ".", "cursor", "=", "\"default\"", ";", "this", ".", "_setHandCursor", "=", "false", ";", "}", "this", ".", "enabled", "=", "false", ";", "this", ".", "game", ".", "input", ".", "interactiveItems", ".", "remove", "(", "this", ")", ";", "this", ".", "_pointerData", ".", "length", "=", "0", ";", "this", ".", "boundsRect", "=", "null", ";", "this", ".", "boundsSprite", "=", "null", ";", "this", ".", "sprite", "=", "null", ";", "}", "}"], "original_docstring": "\nClean up memory.\n@method Phaser.InputHandler#destroy\n", "docstring": {"block_comment": "Clean up memory.", "line_comment": null}, "docstring_tokens": ["Clean", "up", "memory", "."], "sample_id": 221, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004032", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        //  Turning off\n        if (this.enabled === false)\n        {\n            return;\n        }\n        else\n        {\n            //  De-register, etc\n            this.enabled = false;\n            this.game.input.interactiveItems.remove(this);\n        }\n\n    }", "code_tokens": ["function", "(", ")", "{", "//  Turning off", "if", "(", "this", ".", "enabled", "===", "false", ")", "{", "return", ";", "}", "else", "{", "//  De-register, etc", "this", ".", "enabled", "=", "false", ";", "this", ".", "game", ".", "input", ".", "interactiveItems", ".", "remove", "(", "this", ")", ";", "}", "}"], "original_docstring": "\nStops the Input Handler from running.\n@method Phaser.InputHandler#stop\n", "docstring": {"block_comment": "Stops the Input Handler from running.", "line_comment": ["Turning off", "De register, etc"]}, "docstring_tokens": ["Stops", "the", "Input", "Handler", "from", "running", "."], "sample_id": 222, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004033", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        this.enabled = false;\n\n        for (var i = 0; i < 10; i++)\n        {\n            this._pointerData[i] = {\n                id: i,\n                x: 0,\n                y: 0,\n                isDown: false,\n                isUp: false,\n                isOver: false,\n                isOut: false,\n                timeOver: 0,\n                timeOut: 0,\n                timeDown: 0,\n                timeUp: 0,\n                downDuration: 0,\n                isDragged: false\n            };\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "enabled", "=", "false", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "this", ".", "_pointerData", "[", "i", "]", "=", "{", "id", ":", "i", ",", "x", ":", "0", ",", "y", ":", "0", ",", "isDown", ":", "false", ",", "isUp", ":", "false", ",", "isOver", ":", "false", ",", "isOut", ":", "false", ",", "timeOver", ":", "0", ",", "timeOut", ":", "0", ",", "timeDown", ":", "0", ",", "timeUp", ":", "0", ",", "downDuration", ":", "0", ",", "isDragged", ":", "false", "}", ";", "}", "}"], "original_docstring": "\nResets the Input Handler and disables it.\n@method Phaser.InputHandler#reset\n", "docstring": {"block_comment": "Resets the Input Handler and disables it.", "line_comment": null}, "docstring_tokens": ["Resets", "the", "Input", "Handler", "and", "disables", "it", "."], "sample_id": 223, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004034", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        if (this.enabled)\n        {\n            this._wasEnabled = true;\n            this.stop();\n        }\n        else\n        {\n            this._wasEnabled = false;\n        }\n\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "enabled", ")", "{", "this", ".", "_wasEnabled", "=", "true", ";", "this", ".", "stop", "(", ")", ";", "}", "else", "{", "this", ".", "_wasEnabled", "=", "false", ";", "}", "}"], "original_docstring": "\nHandles when the parent Sprite is removed from a Group.\n\n@method Phaser.InputHandler#removedFromGroup\n@private\n", "docstring": {"block_comment": "Handles when the parent Sprite is removed from a Group.", "line_comment": null}, "docstring_tokens": ["Handles", "when", "the", "parent", "Sprite", "is", "removed", "from", "a", "Group", "."], "sample_id": 224, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004035", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n        if (this._wasEnabled && !this.enabled)\n        {\n            this.start();\n        }\n\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "_wasEnabled", "&&", "!", "this", ".", "enabled", ")", "{", "this", ".", "start", "(", ")", ";", "}", "}"], "original_docstring": "\nHandles when the parent Sprite is added to a new Group.\n\n@method Phaser.InputHandler#addedToGroup\n@private\n", "docstring": {"block_comment": "Handles when the parent Sprite is added to a new Group.", "line_comment": null}, "docstring_tokens": ["Handles", "when", "the", "parent", "Sprite", "is", "added", "to", "a", "new", "Group", "."], "sample_id": 225, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004036", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (priority, useHandCursor) {\n\n        priority = priority || 0;\n        if (typeof useHandCursor === 'undefined') { useHandCursor = false; }\n\n        //  Turning on\n        if (this.enabled === false)\n        {\n            //  Register, etc\n            this.game.input.interactiveItems.add(this);\n            this.useHandCursor = useHandCursor;\n            this.priorityID = priority;\n\n            for (var i = 0; i < 10; i++)\n            {\n                this._pointerData[i] = {\n                    id: i,\n                    x: 0,\n                    y: 0,\n                    isDown: false,\n                    isUp: false,\n                    isOver: false,\n                    isOut: false,\n                    timeOver: 0,\n                    timeOut: 0,\n                    timeDown: 0,\n                    timeUp: 0,\n                    downDuration: 0,\n                    isDragged: false\n                };\n            }\n\n            this.snapOffset = new Phaser.Point();\n            this.enabled = true;\n            this._wasEnabled = true;\n\n            //  Create the signals the Input component will emit\n            if (this.sprite.events && this.sprite.events.onInputOver === null)\n            {\n                this.sprite.events.onInputOver = new Phaser.Signal();\n                this.sprite.events.onInputOut = new Phaser.Signal();\n                this.sprite.events.onInputDown = new Phaser.Signal();\n                this.sprite.events.onInputUp = new Phaser.Signal();\n                this.sprite.events.onDragStart = new Phaser.Signal();\n                this.sprite.events.onDragStop = new Phaser.Signal();\n            }\n        }\n\n        this.sprite.events.onAddedToGroup.add(this.addedToGroup, this);\n        this.sprite.events.onRemovedFromGroup.add(this.removedFromGroup, this);\n\n        return this.sprite;\n\n    }", "code_tokens": ["function", "(", "priority", ",", "useHandCursor", ")", "{", "priority", "=", "priority", "||", "0", ";", "if", "(", "typeof", "useHandCursor", "===", "'undefined'", ")", "{", "useHandCursor", "=", "false", ";", "}", "//  Turning on", "if", "(", "this", ".", "enabled", "===", "false", ")", "{", "//  Register, etc", "this", ".", "game", ".", "input", ".", "interactiveItems", ".", "add", "(", "this", ")", ";", "this", ".", "useHandCursor", "=", "useHandCursor", ";", "this", ".", "priorityID", "=", "priority", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "this", ".", "_pointerData", "[", "i", "]", "=", "{", "id", ":", "i", ",", "x", ":", "0", ",", "y", ":", "0", ",", "isDown", ":", "false", ",", "isUp", ":", "false", ",", "isOver", ":", "false", ",", "isOut", ":", "false", ",", "timeOver", ":", "0", ",", "timeOut", ":", "0", ",", "timeDown", ":", "0", ",", "timeUp", ":", "0", ",", "downDuration", ":", "0", ",", "isDragged", ":", "false", "}", ";", "}", "this", ".", "snapOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "enabled", "=", "true", ";", "this", ".", "_wasEnabled", "=", "true", ";", "//  Create the signals the Input component will emit", "if", "(", "this", ".", "sprite", ".", "events", "&&", "this", ".", "sprite", ".", "events", ".", "onInputOver", "===", "null", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputOver", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputOut", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputDown", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputUp", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onDragStart", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onDragStop", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "}", "}", "this", ".", "sprite", ".", "events", ".", "onAddedToGroup", ".", "add", "(", "this", ".", "addedToGroup", ",", "this", ")", ";", "this", ".", "sprite", ".", "events", ".", "onRemovedFromGroup", ".", "add", "(", "this", ".", "removedFromGroup", ",", "this", ")", ";", "return", "this", ".", "sprite", ";", "}"], "original_docstring": "\nStarts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.\n@method Phaser.InputHandler#start\n@param {number} priority - Higher priority sprites take click priority over low-priority sprites when they are stacked on-top of each other.\n@param {boolean} useHandCursor - If true the Sprite will show the hand cursor on mouse-over (doesn't apply to mobile browsers)\n@return {Phaser.Sprite} The Sprite object to which the Input Handler is bound.\n", "docstring": {"block_comment": "Starts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.", "line_comment": ["Turning on", "Register, etc", "Create the signals the Input component will emit"]}, "docstring_tokens": ["Starts", "the", "Input", "Handler", "running", ".", "This", "is", "called", "automatically", "when", "you", "enable", "input", "on", "a", "Sprite", "or", "can", "be", "called", "directly", "if", "you", "need", "to", "set", "a", "specific", "priority", "."], "sample_id": 226, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004036", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (priority, useHandCursor) {\n\n        priority = priority || 0;\n        if (typeof useHandCursor === 'undefined') { useHandCursor = false; }\n\n        //  Turning on\n        if (this.enabled === false)\n        {\n            //  Register, etc\n            this.game.input.interactiveItems.add(this);\n            this.useHandCursor = useHandCursor;\n            this.priorityID = priority;\n\n            for (var i = 0; i < 10; i++)\n            {\n                this._pointerData[i] = {\n                    id: i,\n                    x: 0,\n                    y: 0,\n                    isDown: false,\n                    isUp: false,\n                    isOver: false,\n                    isOut: false,\n                    timeOver: 0,\n                    timeOut: 0,\n                    timeDown: 0,\n                    timeUp: 0,\n                    downDuration: 0,\n                    isDragged: false\n                };\n            }\n\n            this.snapOffset = new Phaser.Point();\n            this.enabled = true;\n            this._wasEnabled = true;\n\n            //  Create the signals the Input component will emit\n            if (this.sprite.events && this.sprite.events.onInputOver === null)\n            {\n                this.sprite.events.onInputOver = new Phaser.Signal();\n                this.sprite.events.onInputOut = new Phaser.Signal();\n                this.sprite.events.onInputDown = new Phaser.Signal();\n                this.sprite.events.onInputUp = new Phaser.Signal();\n                this.sprite.events.onDragStart = new Phaser.Signal();\n                this.sprite.events.onDragStop = new Phaser.Signal();\n            }\n        }\n\n        this.sprite.events.onAddedToGroup.add(this.addedToGroup, this);\n        this.sprite.events.onRemovedFromGroup.add(this.removedFromGroup, this);\n\n        return this.sprite;\n\n    }", "code_tokens": ["function", "(", "priority", ",", "useHandCursor", ")", "{", "priority", "=", "priority", "||", "0", ";", "if", "(", "typeof", "useHandCursor", "===", "'undefined'", ")", "{", "useHandCursor", "=", "false", ";", "}", "//  Turning on", "if", "(", "this", ".", "enabled", "===", "false", ")", "{", "//  Register, etc", "this", ".", "game", ".", "input", ".", "interactiveItems", ".", "add", "(", "this", ")", ";", "this", ".", "useHandCursor", "=", "useHandCursor", ";", "this", ".", "priorityID", "=", "priority", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "this", ".", "_pointerData", "[", "i", "]", "=", "{", "id", ":", "i", ",", "x", ":", "0", ",", "y", ":", "0", ",", "isDown", ":", "false", ",", "isUp", ":", "false", ",", "isOver", ":", "false", ",", "isOut", ":", "false", ",", "timeOver", ":", "0", ",", "timeOut", ":", "0", ",", "timeDown", ":", "0", ",", "timeUp", ":", "0", ",", "downDuration", ":", "0", ",", "isDragged", ":", "false", "}", ";", "}", "this", ".", "snapOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "enabled", "=", "true", ";", "this", ".", "_wasEnabled", "=", "true", ";", "//  Create the signals the Input component will emit", "if", "(", "this", ".", "sprite", ".", "events", "&&", "this", ".", "sprite", ".", "events", ".", "onInputOver", "===", "null", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputOver", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputOut", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputDown", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputUp", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onDragStart", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onDragStop", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "}", "}", "this", ".", "sprite", ".", "events", ".", "onAddedToGroup", ".", "add", "(", "this", ".", "addedToGroup", ",", "this", ")", ";", "this", ".", "sprite", ".", "events", ".", "onRemovedFromGroup", ".", "add", "(", "this", ".", "removedFromGroup", ",", "this", ")", ";", "return", "this", ".", "sprite", ";", "}"], "original_docstring": "\nStarts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.\n@method Phaser.InputHandler#start\n@param {number} priority - Higher priority sprites take click priority over low-priority sprites when they are stacked on-top of each other.\n@param {boolean} useHandCursor - If true the Sprite will show the hand cursor on mouse-over (doesn't apply to mobile browsers)\n@return {Phaser.Sprite} The Sprite object to which the Input Handler is bound.\n", "docstring": {"block_comment": "Starts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.", "line_comment": ["Turning on", "Register, etc", "Create the signals the Input component will emit"]}, "docstring_tokens": ["-", "Higher", "priority", "sprites", "take", "click", "priority", "over", "low", "-", "priority", "sprites", "when", "they", "are", "stacked", "on", "-", "top", "of", "each", "other", "."], "sample_id": 226, "prompt_tokens": ["<javascript>", "<param>", "priority"], "comment_type": "param", "sentence_id": 1}
{"id": "21004036", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (priority, useHandCursor) {\n\n        priority = priority || 0;\n        if (typeof useHandCursor === 'undefined') { useHandCursor = false; }\n\n        //  Turning on\n        if (this.enabled === false)\n        {\n            //  Register, etc\n            this.game.input.interactiveItems.add(this);\n            this.useHandCursor = useHandCursor;\n            this.priorityID = priority;\n\n            for (var i = 0; i < 10; i++)\n            {\n                this._pointerData[i] = {\n                    id: i,\n                    x: 0,\n                    y: 0,\n                    isDown: false,\n                    isUp: false,\n                    isOver: false,\n                    isOut: false,\n                    timeOver: 0,\n                    timeOut: 0,\n                    timeDown: 0,\n                    timeUp: 0,\n                    downDuration: 0,\n                    isDragged: false\n                };\n            }\n\n            this.snapOffset = new Phaser.Point();\n            this.enabled = true;\n            this._wasEnabled = true;\n\n            //  Create the signals the Input component will emit\n            if (this.sprite.events && this.sprite.events.onInputOver === null)\n            {\n                this.sprite.events.onInputOver = new Phaser.Signal();\n                this.sprite.events.onInputOut = new Phaser.Signal();\n                this.sprite.events.onInputDown = new Phaser.Signal();\n                this.sprite.events.onInputUp = new Phaser.Signal();\n                this.sprite.events.onDragStart = new Phaser.Signal();\n                this.sprite.events.onDragStop = new Phaser.Signal();\n            }\n        }\n\n        this.sprite.events.onAddedToGroup.add(this.addedToGroup, this);\n        this.sprite.events.onRemovedFromGroup.add(this.removedFromGroup, this);\n\n        return this.sprite;\n\n    }", "code_tokens": ["function", "(", "priority", ",", "useHandCursor", ")", "{", "priority", "=", "priority", "||", "0", ";", "if", "(", "typeof", "useHandCursor", "===", "'undefined'", ")", "{", "useHandCursor", "=", "false", ";", "}", "//  Turning on", "if", "(", "this", ".", "enabled", "===", "false", ")", "{", "//  Register, etc", "this", ".", "game", ".", "input", ".", "interactiveItems", ".", "add", "(", "this", ")", ";", "this", ".", "useHandCursor", "=", "useHandCursor", ";", "this", ".", "priorityID", "=", "priority", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "this", ".", "_pointerData", "[", "i", "]", "=", "{", "id", ":", "i", ",", "x", ":", "0", ",", "y", ":", "0", ",", "isDown", ":", "false", ",", "isUp", ":", "false", ",", "isOver", ":", "false", ",", "isOut", ":", "false", ",", "timeOver", ":", "0", ",", "timeOut", ":", "0", ",", "timeDown", ":", "0", ",", "timeUp", ":", "0", ",", "downDuration", ":", "0", ",", "isDragged", ":", "false", "}", ";", "}", "this", ".", "snapOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "enabled", "=", "true", ";", "this", ".", "_wasEnabled", "=", "true", ";", "//  Create the signals the Input component will emit", "if", "(", "this", ".", "sprite", ".", "events", "&&", "this", ".", "sprite", ".", "events", ".", "onInputOver", "===", "null", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputOver", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputOut", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputDown", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputUp", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onDragStart", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onDragStop", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "}", "}", "this", ".", "sprite", ".", "events", ".", "onAddedToGroup", ".", "add", "(", "this", ".", "addedToGroup", ",", "this", ")", ";", "this", ".", "sprite", ".", "events", ".", "onRemovedFromGroup", ".", "add", "(", "this", ".", "removedFromGroup", ",", "this", ")", ";", "return", "this", ".", "sprite", ";", "}"], "original_docstring": "\nStarts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.\n@method Phaser.InputHandler#start\n@param {number} priority - Higher priority sprites take click priority over low-priority sprites when they are stacked on-top of each other.\n@param {boolean} useHandCursor - If true the Sprite will show the hand cursor on mouse-over (doesn't apply to mobile browsers)\n@return {Phaser.Sprite} The Sprite object to which the Input Handler is bound.\n", "docstring": {"block_comment": "Starts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.", "line_comment": ["Turning on", "Register, etc", "Create the signals the Input component will emit"]}, "docstring_tokens": ["-", "If", "true", "the", "Sprite", "will", "show", "the", "hand", "cursor", "on", "mouse", "-", "over", "(", "doesn", "t", "apply", "to", "mobile", "browsers", ")"], "sample_id": 226, "prompt_tokens": ["<javascript>", "<param>", "useHandCursor"], "comment_type": "param", "sentence_id": 2}
{"id": "21004036", "repo": "BoldBigflank/attbee", "path": "src/input/InputHandler.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (priority, useHandCursor) {\n\n        priority = priority || 0;\n        if (typeof useHandCursor === 'undefined') { useHandCursor = false; }\n\n        //  Turning on\n        if (this.enabled === false)\n        {\n            //  Register, etc\n            this.game.input.interactiveItems.add(this);\n            this.useHandCursor = useHandCursor;\n            this.priorityID = priority;\n\n            for (var i = 0; i < 10; i++)\n            {\n                this._pointerData[i] = {\n                    id: i,\n                    x: 0,\n                    y: 0,\n                    isDown: false,\n                    isUp: false,\n                    isOver: false,\n                    isOut: false,\n                    timeOver: 0,\n                    timeOut: 0,\n                    timeDown: 0,\n                    timeUp: 0,\n                    downDuration: 0,\n                    isDragged: false\n                };\n            }\n\n            this.snapOffset = new Phaser.Point();\n            this.enabled = true;\n            this._wasEnabled = true;\n\n            //  Create the signals the Input component will emit\n            if (this.sprite.events && this.sprite.events.onInputOver === null)\n            {\n                this.sprite.events.onInputOver = new Phaser.Signal();\n                this.sprite.events.onInputOut = new Phaser.Signal();\n                this.sprite.events.onInputDown = new Phaser.Signal();\n                this.sprite.events.onInputUp = new Phaser.Signal();\n                this.sprite.events.onDragStart = new Phaser.Signal();\n                this.sprite.events.onDragStop = new Phaser.Signal();\n            }\n        }\n\n        this.sprite.events.onAddedToGroup.add(this.addedToGroup, this);\n        this.sprite.events.onRemovedFromGroup.add(this.removedFromGroup, this);\n\n        return this.sprite;\n\n    }", "code_tokens": ["function", "(", "priority", ",", "useHandCursor", ")", "{", "priority", "=", "priority", "||", "0", ";", "if", "(", "typeof", "useHandCursor", "===", "'undefined'", ")", "{", "useHandCursor", "=", "false", ";", "}", "//  Turning on", "if", "(", "this", ".", "enabled", "===", "false", ")", "{", "//  Register, etc", "this", ".", "game", ".", "input", ".", "interactiveItems", ".", "add", "(", "this", ")", ";", "this", ".", "useHandCursor", "=", "useHandCursor", ";", "this", ".", "priorityID", "=", "priority", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "this", ".", "_pointerData", "[", "i", "]", "=", "{", "id", ":", "i", ",", "x", ":", "0", ",", "y", ":", "0", ",", "isDown", ":", "false", ",", "isUp", ":", "false", ",", "isOver", ":", "false", ",", "isOut", ":", "false", ",", "timeOver", ":", "0", ",", "timeOut", ":", "0", ",", "timeDown", ":", "0", ",", "timeUp", ":", "0", ",", "downDuration", ":", "0", ",", "isDragged", ":", "false", "}", ";", "}", "this", ".", "snapOffset", "=", "new", "Phaser", ".", "Point", "(", ")", ";", "this", ".", "enabled", "=", "true", ";", "this", ".", "_wasEnabled", "=", "true", ";", "//  Create the signals the Input component will emit", "if", "(", "this", ".", "sprite", ".", "events", "&&", "this", ".", "sprite", ".", "events", ".", "onInputOver", "===", "null", ")", "{", "this", ".", "sprite", ".", "events", ".", "onInputOver", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputOut", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputDown", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onInputUp", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onDragStart", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "this", ".", "sprite", ".", "events", ".", "onDragStop", "=", "new", "Phaser", ".", "Signal", "(", ")", ";", "}", "}", "this", ".", "sprite", ".", "events", ".", "onAddedToGroup", ".", "add", "(", "this", ".", "addedToGroup", ",", "this", ")", ";", "this", ".", "sprite", ".", "events", ".", "onRemovedFromGroup", ".", "add", "(", "this", ".", "removedFromGroup", ",", "this", ")", ";", "return", "this", ".", "sprite", ";", "}"], "original_docstring": "\nStarts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.\n@method Phaser.InputHandler#start\n@param {number} priority - Higher priority sprites take click priority over low-priority sprites when they are stacked on-top of each other.\n@param {boolean} useHandCursor - If true the Sprite will show the hand cursor on mouse-over (doesn't apply to mobile browsers)\n@return {Phaser.Sprite} The Sprite object to which the Input Handler is bound.\n", "docstring": {"block_comment": "Starts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.", "line_comment": ["Turning on", "Register, etc", "Create the signals the Input component will emit"]}, "docstring_tokens": ["The", "Sprite", "object", "to", "which", "the", "Input", "Handler", "is", "bound", "."], "sample_id": 226, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 3}
{"id": "21004037", "repo": "millerman86/CouponProject", "path": "node_modules/react-router/Link.js", "language": "JavaScript", "license": "mit", "func_name": "createLocationDescriptor", "code": "function createLocationDescriptor(to) {\n  return (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object' ? to : { pathname: to };\n}", "code_tokens": ["function", "createLocationDescriptor", "(", "to", ")", "{", "return", "(", "typeof", "to", "===", "'undefined'", "?", "'undefined'", ":", "_typeof", "(", "to", ")", ")", "===", "'object'", "?", "to", ":", "{", "pathname", ":", "to", "}", ";", "}"], "original_docstring": "we should probably use LocationUtils.createLocationDescriptor", "docstring": {"block_comment": "we should probably use LocationUtils.createLocationDescriptor", "line_comment": null}, "docstring_tokens": ["we", "should", "probably", "use", "LocationUtils", ".", "createLocationDescriptor"], "sample_id": 227, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004038", "repo": "andela-ogaruba/AndelaAPI", "path": "app/models/user.server.model.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(password) {\n    return (this.provider !== 'local' || (password && password.length > 6));\n}", "code_tokens": ["function", "(", "password", ")", "{", "return", "(", "this", ".", "provider", "!==", "'local'", "||", "(", "password", "&&", "password", ".", "length", ">", "6", ")", ")", ";", "}"], "original_docstring": "\nA Validation function for local strategy password\n", "docstring": {"block_comment": "A Validation function for local strategy password", "line_comment": null}, "docstring_tokens": ["A", "Validation", "function", "for", "local", "strategy", "password"], "sample_id": 228, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004039", "repo": "andela-ogaruba/AndelaAPI", "path": "app/models/user.server.model.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(property) {\n    return ((this.provider !== 'local' && !this.updated) || property.length);\n}", "code_tokens": ["function", "(", "property", ")", "{", "return", "(", "(", "this", ".", "provider", "!==", "'local'", "&&", "!", "this", ".", "updated", ")", "||", "property", ".", "length", ")", ";", "}"], "original_docstring": "\nA Validation function for local strategy properties\n", "docstring": {"block_comment": "A Validation function for local strategy properties", "line_comment": null}, "docstring_tokens": ["A", "Validation", "function", "for", "local", "strategy", "properties"], "sample_id": 229, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004040", "repo": "dazzl-tv/janus-gateway", "path": "html/canvas.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\n\t\t\t\t\t\t// Attach to EchoTest plugin\n\t\t\t\t\t\tjanus.attach(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplugin: \"janus.plugin.echotest\",\n\t\t\t\t\t\t\t\topaqueId: opaqueId,\n\t\t\t\t\t\t\t\tsuccess: function(pluginHandle) {\n\t\t\t\t\t\t\t\t\t$('#details').remove();\n\t\t\t\t\t\t\t\t\techotest = pluginHandle;\n\t\t\t\t\t\t\t\t\tJanus.log(\"Plugin attached! (\" + echotest.getPlugin() + \", id=\" + echotest.getId() + \")\");\n\t\t\t\t\t\t\t\t\t// We're connected to the plugin, create and populate the canvas element\n\t\t\t\t\t\t\t\t\tcreateCanvas();\n\t\t\t\t\t\t\t\t\t$('#start').removeAttr('disabled').html(\"Stop\")\n\t\t\t\t\t\t\t\t\t\t.click(function() {\n\t\t\t\t\t\t\t\t\t\t\t$(this).attr('disabled', true);\n\t\t\t\t\t\t\t\t\t\t\tif(bitrateTimer)\n\t\t\t\t\t\t\t\t\t\t\t\tclearInterval(bitrateTimer);\n\t\t\t\t\t\t\t\t\t\t\tbitrateTimer = null;\n\t\t\t\t\t\t\t\t\t\t\tjanus.destroy();\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: function(error) {\n\t\t\t\t\t\t\t\t\tconsole.error(\"  -- Error attaching plugin...\", error);\n\t\t\t\t\t\t\t\t\tbootbox.alert(\"Error attaching plugin... \" + error);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tconsentDialog: function(on) {\n\t\t\t\t\t\t\t\t\tJanus.debug(\"Consent dialog should be \" + (on ? \"on\" : \"off\") + \" now\");\n\t\t\t\t\t\t\t\t\tif(on) {\n\t\t\t\t\t\t\t\t\t\t// Darken screen and show hint\n\t\t\t\t\t\t\t\t\t\t$.blockUI({\n\t\t\t\t\t\t\t\t\t\t\tmessage: '<div><img src=\"up_arrow.png\"/></div>',\n\t\t\t\t\t\t\t\t\t\t\tcss: {\n\t\t\t\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '15px',\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#aaa',\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '10px',\n\t\t\t\t\t\t\t\t\t\t\t\tleft: (navigator.mozGetUserMedia ? '-100px' : '300px')\n\t\t\t\t\t\t\t\t\t\t\t} });\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Restore screen\n\t\t\t\t\t\t\t\t\t\t$.unblockUI();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ticeState: function(state) {\n\t\t\t\t\t\t\t\t\tJanus.log(\"ICE state changed to \" + state);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmediaState: function(medium, on) {\n\t\t\t\t\t\t\t\t\tJanus.log(\"Janus \" + (on ? \"started\" : \"stopped\") + \" receiving our \" + medium);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\twebrtcState: function(on) {\n\t\t\t\t\t\t\t\t\tJanus.log(\"Janus says our WebRTC PeerConnection is \" + (on ? \"up\" : \"down\") + \" now\");\n\t\t\t\t\t\t\t\t\t$(\"#videoleft\").parent().unblock();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tslowLink: function(uplink, lost) {\n\t\t\t\t\t\t\t\t\tJanus.warn(\"Janus reports problems \" + (uplink ? \"sending\" : \"receiving\") +\n\t\t\t\t\t\t\t\t\t\t\" packets on this PeerConnection (\" + lost + \" lost packets)\");\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonmessage: function(msg, jsep) {\n\t\t\t\t\t\t\t\t\tJanus.debug(\" ::: Got a message :::\", msg);\n\t\t\t\t\t\t\t\t\tif(jsep) {\n\t\t\t\t\t\t\t\t\t\tJanus.debug(\"Handling SDP as well...\", jsep);\n\t\t\t\t\t\t\t\t\t\techotest.handleRemoteJsep({ jsep: jsep });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar result = msg[\"result\"];\n\t\t\t\t\t\t\t\t\tif(result) {\n\t\t\t\t\t\t\t\t\t\tif(result === \"done\") {\n\t\t\t\t\t\t\t\t\t\t\t// The plugin closed the echo test\n\t\t\t\t\t\t\t\t\t\t\tbootbox.alert(\"The Echo Test is over\");\n\t\t\t\t\t\t\t\t\t\t\tif(spinner)\n\t\t\t\t\t\t\t\t\t\t\t\tspinner.stop();\n\t\t\t\t\t\t\t\t\t\t\tspinner = null;\n\t\t\t\t\t\t\t\t\t\t\t$('#myvideo').remove();\n\t\t\t\t\t\t\t\t\t\t\t$('#waitingvideo').remove();\n\t\t\t\t\t\t\t\t\t\t\t$('#peervideo').remove();\n\t\t\t\t\t\t\t\t\t\t\t$('#toggleaudio').attr('disabled', true);\n\t\t\t\t\t\t\t\t\t\t\t$('#togglevideo').attr('disabled', true);\n\t\t\t\t\t\t\t\t\t\t\t$('#bitrate').attr('disabled', true);\n\t\t\t\t\t\t\t\t\t\t\t$('#curbitrate').hide();\n\t\t\t\t\t\t\t\t\t\t\t$('#curres').hide();\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// Any loss?\n\t\t\t\t\t\t\t\t\t\tvar status = result[\"status\"];\n\t\t\t\t\t\t\t\t\t\tif(status === \"slow_link\") {\n\t\t\t\t\t\t\t\t\t\t\ttoastr.warning(\"Janus apparently missed many packets we sent, maybe we should reduce the bitrate\", \"Packet loss?\", {timeOut: 2000});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Is simulcast in place?\n\t\t\t\t\t\t\t\t\tvar substream = msg[\"substream\"];\n\t\t\t\t\t\t\t\t\tvar temporal = msg[\"temporal\"];\n\t\t\t\t\t\t\t\t\tif((substream !== null && substream !== undefined) || (temporal !== null && temporal !== undefined)) {\n\t\t\t\t\t\t\t\t\t\tif(!simulcastStarted) {\n\t\t\t\t\t\t\t\t\t\t\tsimulcastStarted = true;\n\t\t\t\t\t\t\t\t\t\t\taddSimulcastButtons(msg[\"videocodec\"] === \"vp8\" || msg[\"videocodec\"] === \"h264\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// We just received notice that there's been a switch, update the buttons\n\t\t\t\t\t\t\t\t\t\tupdateSimulcastButtons(substream, temporal);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonlocalstream: function(stream) {\n\t\t\t\t\t\t\t\t\t// We ignore the stream we got here, we're using the canvas to render it\n\t\t\t\t\t\t\t\t\tif(echotest.webrtcStuff.pc.iceConnectionState !== \"completed\" &&\n\t\t\t\t\t\t\t\t\t\t\techotest.webrtcStuff.pc.iceConnectionState !== \"connected\") {\n\t\t\t\t\t\t\t\t\t\t$(\"#videoleft\").parent().block({\n\t\t\t\t\t\t\t\t\t\t\tmessage: '<b>Publishing...</b>',\n\t\t\t\t\t\t\t\t\t\t\tcss: {\n\t\t\t\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonremotestream: function(stream) {\n\t\t\t\t\t\t\t\t\tJanus.debug(\" ::: Got a remote stream :::\", stream);\n\t\t\t\t\t\t\t\t\tvar addButtons = false;\n\t\t\t\t\t\t\t\t\tif($('#peervideo').length === 0) {\n\t\t\t\t\t\t\t\t\t\taddButtons = true;\n\t\t\t\t\t\t\t\t\t\t$('#videos').removeClass('hide').show();\n\t\t\t\t\t\t\t\t\t\t$('#videoright').append('<video class=\"rounded centered hide\" id=\"peervideo\" width=\"100%\" height=\"100%\" autoplay playsinline/>');\n\t\t\t\t\t\t\t\t\t\t// Show the video, hide the spinner and show the resolution when we get a playing event\n\t\t\t\t\t\t\t\t\t\t$(\"#peervideo\").bind(\"playing\", function () {\n\t\t\t\t\t\t\t\t\t\t\t$('#waitingvideo').remove();\n\t\t\t\t\t\t\t\t\t\t\tif(this.videoWidth)\n\t\t\t\t\t\t\t\t\t\t\t\t$('#peervideo').removeClass('hide').show();\n\t\t\t\t\t\t\t\t\t\t\tif(spinner)\n\t\t\t\t\t\t\t\t\t\t\t\tspinner.stop();\n\t\t\t\t\t\t\t\t\t\t\tspinner = null;\n\t\t\t\t\t\t\t\t\t\t\tvar width = this.videoWidth;\n\t\t\t\t\t\t\t\t\t\t\tvar height = this.videoHeight;\n\t\t\t\t\t\t\t\t\t\t\t$('#curres').removeClass('hide').text(width+'x'+height).show();\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tJanus.attachMediaStream($('#peervideo').get(0), stream);\n\t\t\t\t\t\t\t\t\tvar videoTracks = stream.getVideoTracks();\n\t\t\t\t\t\t\t\t\tif(!videoTracks || videoTracks.length === 0) {\n\t\t\t\t\t\t\t\t\t\t// No remote video\n\t\t\t\t\t\t\t\t\t\t$('#peervideo').hide();\n\t\t\t\t\t\t\t\t\t\tif($('#videoright .no-video-container').length === 0) {\n\t\t\t\t\t\t\t\t\t\t\t$('#videoright').append(\n\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"no-video-container\">' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<i class=\"fa fa-video-camera fa-5 no-video-icon\"></i>' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<span class=\"no-video-text\">No remote video available</span>' +\n\t\t\t\t\t\t\t\t\t\t\t\t'</div>');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$('#videoright .no-video-container').remove();\n\t\t\t\t\t\t\t\t\t\t$('#peervideo').removeClass('hide').show();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(!addButtons)\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t// Enable audio/video buttons and bitrate limiter\n\t\t\t\t\t\t\t\t\taudioenabled = true;\n\t\t\t\t\t\t\t\t\tvideoenabled = true;\n\t\t\t\t\t\t\t\t\t$('#toggleaudio').click(\n\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\taudioenabled = !audioenabled;\n\t\t\t\t\t\t\t\t\t\t\tif(audioenabled)\n\t\t\t\t\t\t\t\t\t\t\t\t$('#toggleaudio').html(\"Disable audio\").removeClass(\"btn-success\").addClass(\"btn-danger\");\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t$('#toggleaudio').html(\"Enable audio\").removeClass(\"btn-danger\").addClass(\"btn-success\");\n\t\t\t\t\t\t\t\t\t\t\techotest.send({ message: { audio: audioenabled }});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t$('#togglevideo').click(\n\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\tvideoenabled = !videoenabled;\n\t\t\t\t\t\t\t\t\t\t\tif(videoenabled)\n\t\t\t\t\t\t\t\t\t\t\t\t$('#togglevideo').html(\"Disable video\").removeClass(\"btn-success\").addClass(\"btn-danger\");\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t$('#togglevideo').html(\"Enable video\").removeClass(\"btn-danger\").addClass(\"btn-success\");\n\t\t\t\t\t\t\t\t\t\t\techotest.send({ message: { video: videoenabled }});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t$('#toggleaudio').parent().removeClass('hide').show();\n\t\t\t\t\t\t\t\t\t$('#bitrate a').click(function() {\n\t\t\t\t\t\t\t\t\t\tvar id = $(this).attr(\"id\");\n\t\t\t\t\t\t\t\t\t\tvar bitrate = parseInt(id)*1000;\n\t\t\t\t\t\t\t\t\t\tif(bitrate === 0) {\n\t\t\t\t\t\t\t\t\t\t\tJanus.log(\"Not limiting bandwidth via REMB\");\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tJanus.log(\"Capping bandwidth to \" + bitrate + \" via REMB\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$('#bitrateset').html($(this).html() + '<span class=\"caret\"></span>').parent().removeClass('open');\n\t\t\t\t\t\t\t\t\t\techotest.send({ message: { bitrate: bitrate }});\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"chrome\" || Janus.webRTCAdapter.browserDetails.browser === \"firefox\" ||\n\t\t\t\t\t\t\t\t\t\t\tJanus.webRTCAdapter.browserDetails.browser === \"safari\") {\n\t\t\t\t\t\t\t\t\t\t$('#curbitrate').removeClass('hide').show();\n\t\t\t\t\t\t\t\t\t\tbitrateTimer = setInterval(function() {\n\t\t\t\t\t\t\t\t\t\t\t// Display updated bitrate, if supported\n\t\t\t\t\t\t\t\t\t\t\tvar bitrate = echotest.getBitrate();\n\t\t\t\t\t\t\t\t\t\t\t$('#curbitrate').text(bitrate);\n\t\t\t\t\t\t\t\t\t\t\t// Check if the resolution changed too\n\t\t\t\t\t\t\t\t\t\t\tvar width = $(\"#peervideo\").get(0).videoWidth;\n\t\t\t\t\t\t\t\t\t\t\tvar height = $(\"#peervideo\").get(0).videoHeight;\n\t\t\t\t\t\t\t\t\t\t\tif(width > 0 && height > 0)\n\t\t\t\t\t\t\t\t\t\t\t\t$('#curres').removeClass('hide').text(width+'x'+height).show();\n\t\t\t\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\toncleanup: function() {\n\t\t\t\t\t\t\t\t\tJanus.log(\" ::: Got a cleanup notification :::\");\n\t\t\t\t\t\t\t\t\tif(spinner)\n\t\t\t\t\t\t\t\t\t\tspinner.stop();\n\t\t\t\t\t\t\t\t\tspinner = null;\n\t\t\t\t\t\t\t\t\tif(bitrateTimer)\n\t\t\t\t\t\t\t\t\t\tclearInterval(bitrateTimer);\n\t\t\t\t\t\t\t\t\tbitrateTimer = null;\n\t\t\t\t\t\t\t\t\t$('#myvideo').remove();\n\t\t\t\t\t\t\t\t\t$('#waitingvideo').remove();\n\t\t\t\t\t\t\t\t\t$(\"#videoleft\").parent().unblock();\n\t\t\t\t\t\t\t\t\t$('#peervideo').remove();\n\t\t\t\t\t\t\t\t\t$('#toggleaudio').attr('disabled', true);\n\t\t\t\t\t\t\t\t\t$('#togglevideo').attr('disabled', true);\n\t\t\t\t\t\t\t\t\t$('#bitrate').attr('disabled', true);\n\t\t\t\t\t\t\t\t\t$('#curbitrate').hide();\n\t\t\t\t\t\t\t\t\t$('#curres').hide();\n\t\t\t\t\t\t\t\t\tsimulcastStarted = false;\n\t\t\t\t\t\t\t\t\t$('#simulcast').remove();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}", "code_tokens": ["function", "(", ")", "{", "// Attach to EchoTest plugin", "janus", ".", "attach", "(", "{", "plugin", ":", "\"janus.plugin.echotest\"", ",", "opaqueId", ":", "opaqueId", ",", "success", ":", "function", "(", "pluginHandle", ")", "{", "$", "(", "'#details'", ")", ".", "remove", "(", ")", ";", "echotest", "=", "pluginHandle", ";", "Janus", ".", "log", "(", "\"Plugin attached! (\"", "+", "echotest", ".", "getPlugin", "(", ")", "+", "\", id=\"", "+", "echotest", ".", "getId", "(", ")", "+", "\")\"", ")", ";", "// We're connected to the plugin, create and populate the canvas element", "createCanvas", "(", ")", ";", "$", "(", "'#start'", ")", ".", "removeAttr", "(", "'disabled'", ")", ".", "html", "(", "\"Stop\"", ")", ".", "click", "(", "function", "(", ")", "{", "$", "(", "this", ")", ".", "attr", "(", "'disabled'", ",", "true", ")", ";", "if", "(", "bitrateTimer", ")", "clearInterval", "(", "bitrateTimer", ")", ";", "bitrateTimer", "=", "null", ";", "janus", ".", "destroy", "(", ")", ";", "}", ")", ";", "}", ",", "error", ":", "function", "(", "error", ")", "{", "console", ".", "error", "(", "\"  -- Error attaching plugin...\"", ",", "error", ")", ";", "bootbox", ".", "alert", "(", "\"Error attaching plugin... \"", "+", "error", ")", ";", "}", ",", "consentDialog", ":", "function", "(", "on", ")", "{", "Janus", ".", "debug", "(", "\"Consent dialog should be \"", "+", "(", "on", "?", "\"on\"", ":", "\"off\"", ")", "+", "\" now\"", ")", ";", "if", "(", "on", ")", "{", "// Darken screen and show hint", "$", ".", "blockUI", "(", "{", "message", ":", "'<div><img src=\"up_arrow.png\"/></div>'", ",", "css", ":", "{", "border", ":", "'none'", ",", "padding", ":", "'15px'", ",", "backgroundColor", ":", "'transparent'", ",", "color", ":", "'#aaa'", ",", "top", ":", "'10px'", ",", "left", ":", "(", "navigator", ".", "mozGetUserMedia", "?", "'-100px'", ":", "'300px'", ")", "}", "}", ")", ";", "}", "else", "{", "// Restore screen", "$", ".", "unblockUI", "(", ")", ";", "}", "}", ",", "iceState", ":", "function", "(", "state", ")", "{", "Janus", ".", "log", "(", "\"ICE state changed to \"", "+", "state", ")", ";", "}", ",", "mediaState", ":", "function", "(", "medium", ",", "on", ")", "{", "Janus", ".", "log", "(", "\"Janus \"", "+", "(", "on", "?", "\"started\"", ":", "\"stopped\"", ")", "+", "\" receiving our \"", "+", "medium", ")", ";", "}", ",", "webrtcState", ":", "function", "(", "on", ")", "{", "Janus", ".", "log", "(", "\"Janus says our WebRTC PeerConnection is \"", "+", "(", "on", "?", "\"up\"", ":", "\"down\"", ")", "+", "\" now\"", ")", ";", "$", "(", "\"#videoleft\"", ")", ".", "parent", "(", ")", ".", "unblock", "(", ")", ";", "}", ",", "slowLink", ":", "function", "(", "uplink", ",", "lost", ")", "{", "Janus", ".", "warn", "(", "\"Janus reports problems \"", "+", "(", "uplink", "?", "\"sending\"", ":", "\"receiving\"", ")", "+", "\" packets on this PeerConnection (\"", "+", "lost", "+", "\" lost packets)\"", ")", ";", "}", ",", "onmessage", ":", "function", "(", "msg", ",", "jsep", ")", "{", "Janus", ".", "debug", "(", "\" ::: Got a message :::\"", ",", "msg", ")", ";", "if", "(", "jsep", ")", "{", "Janus", ".", "debug", "(", "\"Handling SDP as well...\"", ",", "jsep", ")", ";", "echotest", ".", "handleRemoteJsep", "(", "{", "jsep", ":", "jsep", "}", ")", ";", "}", "var", "result", "=", "msg", "[", "\"result\"", "]", ";", "if", "(", "result", ")", "{", "if", "(", "result", "===", "\"done\"", ")", "{", "// The plugin closed the echo test", "bootbox", ".", "alert", "(", "\"The Echo Test is over\"", ")", ";", "if", "(", "spinner", ")", "spinner", ".", "stop", "(", ")", ";", "spinner", "=", "null", ";", "$", "(", "'#myvideo'", ")", ".", "remove", "(", ")", ";", "$", "(", "'#waitingvideo'", ")", ".", "remove", "(", ")", ";", "$", "(", "'#peervideo'", ")", ".", "remove", "(", ")", ";", "$", "(", "'#toggleaudio'", ")", ".", "attr", "(", "'disabled'", ",", "true", ")", ";", "$", "(", "'#togglevideo'", ")", ".", "attr", "(", "'disabled'", ",", "true", ")", ";", "$", "(", "'#bitrate'", ")", ".", "attr", "(", "'disabled'", ",", "true", ")", ";", "$", "(", "'#curbitrate'", ")", ".", "hide", "(", ")", ";", "$", "(", "'#curres'", ")", ".", "hide", "(", ")", ";", "return", ";", "}", "// Any loss?", "var", "status", "=", "result", "[", "\"status\"", "]", ";", "if", "(", "status", "===", "\"slow_link\"", ")", "{", "toastr", ".", "warning", "(", "\"Janus apparently missed many packets we sent, maybe we should reduce the bitrate\"", ",", "\"Packet loss?\"", ",", "{", "timeOut", ":", "2000", "}", ")", ";", "}", "}", "// Is simulcast in place?", "var", "substream", "=", "msg", "[", "\"substream\"", "]", ";", "var", "temporal", "=", "msg", "[", "\"temporal\"", "]", ";", "if", "(", "(", "substream", "!==", "null", "&&", "substream", "!==", "undefined", ")", "||", "(", "temporal", "!==", "null", "&&", "temporal", "!==", "undefined", ")", ")", "{", "if", "(", "!", "simulcastStarted", ")", "{", "simulcastStarted", "=", "true", ";", "addSimulcastButtons", "(", "msg", "[", "\"videocodec\"", "]", "===", "\"vp8\"", "||", "msg", "[", "\"videocodec\"", "]", "===", "\"h264\"", ")", ";", "}", "// We just received notice that there's been a switch, update the buttons", "updateSimulcastButtons", "(", "substream", ",", "temporal", ")", ";", "}", "}", ",", "onlocalstream", ":", "function", "(", "stream", ")", "{", "// We ignore the stream we got here, we're using the canvas to render it", "if", "(", "echotest", ".", "webrtcStuff", ".", "pc", ".", "iceConnectionState", "!==", "\"completed\"", "&&", "echotest", ".", "webrtcStuff", ".", "pc", ".", "iceConnectionState", "!==", "\"connected\"", ")", "{", "$", "(", "\"#videoleft\"", ")", ".", "parent", "(", ")", ".", "block", "(", "{", "message", ":", "'<b>Publishing...</b>'", ",", "css", ":", "{", "border", ":", "'none'", ",", "backgroundColor", ":", "'transparent'", ",", "color", ":", "'white'", "}", "}", ")", ";", "}", "}", ",", "onremotestream", ":", "function", "(", "stream", ")", "{", "Janus", ".", "debug", "(", "\" ::: Got a remote stream :::\"", ",", "stream", ")", ";", "var", "addButtons", "=", "false", ";", "if", "(", "$", "(", "'#peervideo'", ")", ".", "length", "===", "0", ")", "{", "addButtons", "=", "true", ";", "$", "(", "'#videos'", ")", ".", "removeClass", "(", "'hide'", ")", ".", "show", "(", ")", ";", "$", "(", "'#videoright'", ")", ".", "append", "(", "'<video class=\"rounded centered hide\" id=\"peervideo\" width=\"100%\" height=\"100%\" autoplay playsinline/>'", ")", ";", "// Show the video, hide the spinner and show the resolution when we get a playing event", "$", "(", "\"#peervideo\"", ")", ".", "bind", "(", "\"playing\"", ",", "function", "(", ")", "{", "$", "(", "'#waitingvideo'", ")", ".", "remove", "(", ")", ";", "if", "(", "this", ".", "videoWidth", ")", "$", "(", "'#peervideo'", ")", ".", "removeClass", "(", "'hide'", ")", ".", "show", "(", ")", ";", "if", "(", "spinner", ")", "spinner", ".", "stop", "(", ")", ";", "spinner", "=", "null", ";", "var", "width", "=", "this", ".", "videoWidth", ";", "var", "height", "=", "this", ".", "videoHeight", ";", "$", "(", "'#curres'", ")", ".", "removeClass", "(", "'hide'", ")", ".", "text", "(", "width", "+", "'x'", "+", "height", ")", ".", "show", "(", ")", ";", "}", ")", ";", "}", "Janus", ".", "attachMediaStream", "(", "$", "(", "'#peervideo'", ")", ".", "get", "(", "0", ")", ",", "stream", ")", ";", "var", "videoTracks", "=", "stream", ".", "getVideoTracks", "(", ")", ";", "if", "(", "!", "videoTracks", "||", "videoTracks", ".", "length", "===", "0", ")", "{", "// No remote video", "$", "(", "'#peervideo'", ")", ".", "hide", "(", ")", ";", "if", "(", "$", "(", "'#videoright .no-video-container'", ")", ".", "length", "===", "0", ")", "{", "$", "(", "'#videoright'", ")", ".", "append", "(", "'<div class=\"no-video-container\">'", "+", "'<i class=\"fa fa-video-camera fa-5 no-video-icon\"></i>'", "+", "'<span class=\"no-video-text\">No remote video available</span>'", "+", "'</div>'", ")", ";", "}", "}", "else", "{", "$", "(", "'#videoright .no-video-container'", ")", ".", "remove", "(", ")", ";", "$", "(", "'#peervideo'", ")", ".", "removeClass", "(", "'hide'", ")", ".", "show", "(", ")", ";", "}", "if", "(", "!", "addButtons", ")", "return", ";", "// Enable audio/video buttons and bitrate limiter", "audioenabled", "=", "true", ";", "videoenabled", "=", "true", ";", "$", "(", "'#toggleaudio'", ")", ".", "click", "(", "function", "(", ")", "{", "audioenabled", "=", "!", "audioenabled", ";", "if", "(", "audioenabled", ")", "$", "(", "'#toggleaudio'", ")", ".", "html", "(", "\"Disable audio\"", ")", ".", "removeClass", "(", "\"btn-success\"", ")", ".", "addClass", "(", "\"btn-danger\"", ")", ";", "else", "$", "(", "'#toggleaudio'", ")", ".", "html", "(", "\"Enable audio\"", ")", ".", "removeClass", "(", "\"btn-danger\"", ")", ".", "addClass", "(", "\"btn-success\"", ")", ";", "echotest", ".", "send", "(", "{", "message", ":", "{", "audio", ":", "audioenabled", "}", "}", ")", ";", "}", ")", ";", "$", "(", "'#togglevideo'", ")", ".", "click", "(", "function", "(", ")", "{", "videoenabled", "=", "!", "videoenabled", ";", "if", "(", "videoenabled", ")", "$", "(", "'#togglevideo'", ")", ".", "html", "(", "\"Disable video\"", ")", ".", "removeClass", "(", "\"btn-success\"", ")", ".", "addClass", "(", "\"btn-danger\"", ")", ";", "else", "$", "(", "'#togglevideo'", ")", ".", "html", "(", "\"Enable video\"", ")", ".", "removeClass", "(", "\"btn-danger\"", ")", ".", "addClass", "(", "\"btn-success\"", ")", ";", "echotest", ".", "send", "(", "{", "message", ":", "{", "video", ":", "videoenabled", "}", "}", ")", ";", "}", ")", ";", "$", "(", "'#toggleaudio'", ")", ".", "parent", "(", ")", ".", "removeClass", "(", "'hide'", ")", ".", "show", "(", ")", ";", "$", "(", "'#bitrate a'", ")", ".", "click", "(", "function", "(", ")", "{", "var", "id", "=", "$", "(", "this", ")", ".", "attr", "(", "\"id\"", ")", ";", "var", "bitrate", "=", "parseInt", "(", "id", ")", "*", "1000", ";", "if", "(", "bitrate", "===", "0", ")", "{", "Janus", ".", "log", "(", "\"Not limiting bandwidth via REMB\"", ")", ";", "}", "else", "{", "Janus", ".", "log", "(", "\"Capping bandwidth to \"", "+", "bitrate", "+", "\" via REMB\"", ")", ";", "}", "$", "(", "'#bitrateset'", ")", ".", "html", "(", "$", "(", "this", ")", ".", "html", "(", ")", "+", "'<span class=\"caret\"></span>'", ")", ".", "parent", "(", ")", ".", "removeClass", "(", "'open'", ")", ";", "echotest", ".", "send", "(", "{", "message", ":", "{", "bitrate", ":", "bitrate", "}", "}", ")", ";", "return", "false", ";", "}", ")", ";", "if", "(", "Janus", ".", "webRTCAdapter", ".", "browserDetails", ".", "browser", "===", "\"chrome\"", "||", "Janus", ".", "webRTCAdapter", ".", "browserDetails", ".", "browser", "===", "\"firefox\"", "||", "Janus", ".", "webRTCAdapter", ".", "browserDetails", ".", "browser", "===", "\"safari\"", ")", "{", "$", "(", "'#curbitrate'", ")", ".", "removeClass", "(", "'hide'", ")", ".", "show", "(", ")", ";", "bitrateTimer", "=", "setInterval", "(", "function", "(", ")", "{", "// Display updated bitrate, if supported", "var", "bitrate", "=", "echotest", ".", "getBitrate", "(", ")", ";", "$", "(", "'#curbitrate'", ")", ".", "text", "(", "bitrate", ")", ";", "// Check if the resolution changed too", "var", "width", "=", "$", "(", "\"#peervideo\"", ")", ".", "get", "(", "0", ")", ".", "videoWidth", ";", "var", "height", "=", "$", "(", "\"#peervideo\"", ")", ".", "get", "(", "0", ")", ".", "videoHeight", ";", "if", "(", "width", ">", "0", "&&", "height", ">", "0", ")", "$", "(", "'#curres'", ")", ".", "removeClass", "(", "'hide'", ")", ".", "text", "(", "width", "+", "'x'", "+", "height", ")", ".", "show", "(", ")", ";", "}", ",", "1000", ")", ";", "}", "}", ",", "oncleanup", ":", "function", "(", ")", "{", "Janus", ".", "log", "(", "\" ::: Got a cleanup notification :::\"", ")", ";", "if", "(", "spinner", ")", "spinner", ".", "stop", "(", ")", ";", "spinner", "=", "null", ";", "if", "(", "bitrateTimer", ")", "clearInterval", "(", "bitrateTimer", ")", ";", "bitrateTimer", "=", "null", ";", "$", "(", "'#myvideo'", ")", ".", "remove", "(", ")", ";", "$", "(", "'#waitingvideo'", ")", ".", "remove", "(", ")", ";", "$", "(", "\"#videoleft\"", ")", ".", "parent", "(", ")", ".", "unblock", "(", ")", ";", "$", "(", "'#peervideo'", ")", ".", "remove", "(", ")", ";", "$", "(", "'#toggleaudio'", ")", ".", "attr", "(", "'disabled'", ",", "true", ")", ";", "$", "(", "'#togglevideo'", ")", ".", "attr", "(", "'disabled'", ",", "true", ")", ";", "$", "(", "'#bitrate'", ")", ".", "attr", "(", "'disabled'", ",", "true", ")", ";", "$", "(", "'#curbitrate'", ")", ".", "hide", "(", ")", ";", "$", "(", "'#curres'", ")", ".", "hide", "(", ")", ";", "simulcastStarted", "=", "false", ";", "$", "(", "'#simulcast'", ")", ".", "remove", "(", ")", ";", "}", "}", ")", ";", "}"], "original_docstring": "No \"iceServers\" is provided, meaning janus.js will use a default STUN server Here are some examples of how an iceServers field may look like to support TURN iceServers: [{urls: \"turn:yourturnserver.com:3478\", username: \"janususer\", credential: \"januspwd\"}], iceServers: [{urls: \"turn:yourturnserver.com:443?transport=tcp\", username: \"janususer\", credential: \"januspwd\"}], iceServers: [{urls: \"turns:yourturnserver.com:443?transport=tcp\", username: \"janususer\", credential: \"januspwd\"}], Should the Janus API require authentication, you can specify either the API secret or user token here too token: \"mytoken\", or apisecret: \"serversecret\",", "docstring": {"block_comment": "No  iceServers  is provided, meaning janus.js will use a default STUN server Here are some examples of how an iceServers field may look like to support TURN iceServers    urls   turn yourturnserver.com 3478 , username   janususer , credential   januspwd   , iceServers    urls   turn yourturnserver.com 443 transport tcp , username   janususer , credential   januspwd   , iceServers    urls   turns yourturnserver.com 443 transport tcp , username   janususer , credential   januspwd   , Should the Janus API require authentication, you can specify either the API secret or user token here too token   mytoken , or apisecret   serversecret ,", "line_comment": ["Attach to EchoTest plugin", "We re connected to the plugin, create and populate the canvas element", "Darken screen and show hint", "Restore screen", "The plugin closed the echo test", null, null, "We just received notice that there s been a switch, update the buttons", "We ignore the stream we got here, we re using the canvas to render it", "Show the video, hide the spinner and show the resolution when we get a playing event", "No remote video", "Enable audio video buttons and bitrate limiter", "Display updated bitrate, if supported", "Check if the resolution changed too"]}, "docstring_tokens": ["No", "iceServers", "is", "provided", "meaning", "janus", ".", "js", "will", "use", "a", "default", "STUN", "server", "Here", "are", "some", "examples", "of", "how", "an", "iceServers", "field", "may", "look", "like", "to", "support", "TURN", "iceServers", "urls", "turn", "yourturnserver", ".", "com", "3478", "username", "janususer", "credential", "januspwd", "iceServers", "urls", "turn", "yourturnserver", ".", "com", "443", "transport", "tcp", "username", "janususer", "credential", "januspwd", "iceServers", "urls", "turns", "yourturnserver", ".", "com", "443", "transport", "tcp", "username", "janususer", "credential", "januspwd", "Should", "the", "Janus", "API", "require", "authentication", "you", "can", "specify", "either", "the", "API", "secret", "or", "user", "token", "here", "too", "token", "mytoken", "or", "apisecret", "serversecret"], "sample_id": 230, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004041", "repo": "daveschaefer/Perspectives", "path": "plugin/chrome/content/report.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\n\t\tif(Pers_report.strbundle == null) {\n\t\t\tPers_report.strbundle = document.getElementById(\"report_strings\");\n\t\t}\n\t\ttry {\n\t\t\tvar show_full = document.getElementById(\"show_full\").checked;\n\t\t\tdocument.getElementById(\"full-text\").hidden = !show_full;\n\t\t\tdocument.getElementById(\"full-text-label\").hidden = !show_full;\n\t\t\tvar label = Pers_report.strbundle.getString(\"FullReportText\");\n\t\t\tif(document.getElementById(\"full-radio\").selectedIndex) {\n\t\t\t\tlabel = Pers_report.strbundle.getString(\"PrivateReportText\");\n\t\t\t}\n\t\t\tif(show_full) {\n\t\t\t\tdocument.getElementById(\"full-text-label\").value = label;\n\t\t\t\tvar txt = Pers_util.pretty_print_json(this.get_report_json());\n\t\t\t\tdocument.getElementById(\"full-text\").value = txt;\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tvar text = \"\";\n\t\t\tif (Perspectives.strbundle != null) {\n\t\t\t\ttext = Perspectives.strbundle.getString(\"unableToMakeReport\") + \" - \";\n\t\t\t}\n\t\t\tPers_util.pers_alert(text + e);\n\t\t}\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "Pers_report", ".", "strbundle", "==", "null", ")", "{", "Pers_report", ".", "strbundle", "=", "document", ".", "getElementById", "(", "\"report_strings\"", ")", ";", "}", "try", "{", "var", "show_full", "=", "document", ".", "getElementById", "(", "\"show_full\"", ")", ".", "checked", ";", "document", ".", "getElementById", "(", "\"full-text\"", ")", ".", "hidden", "=", "!", "show_full", ";", "document", ".", "getElementById", "(", "\"full-text-label\"", ")", ".", "hidden", "=", "!", "show_full", ";", "var", "label", "=", "Pers_report", ".", "strbundle", ".", "getString", "(", "\"FullReportText\"", ")", ";", "if", "(", "document", ".", "getElementById", "(", "\"full-radio\"", ")", ".", "selectedIndex", ")", "{", "label", "=", "Pers_report", ".", "strbundle", ".", "getString", "(", "\"PrivateReportText\"", ")", ";", "}", "if", "(", "show_full", ")", "{", "document", ".", "getElementById", "(", "\"full-text-label\"", ")", ".", "value", "=", "label", ";", "var", "txt", "=", "Pers_util", ".", "pretty_print_json", "(", "this", ".", "get_report_json", "(", ")", ")", ";", "document", ".", "getElementById", "(", "\"full-text\"", ")", ".", "value", "=", "txt", ";", "}", "}", "catch", "(", "e", ")", "{", "var", "text", "=", "\"\"", ";", "if", "(", "Perspectives", ".", "strbundle", "!=", "null", ")", "{", "text", "=", "Perspectives", ".", "strbundle", ".", "getString", "(", "\"unableToMakeReport\"", ")", "+", "\" - \"", ";", "}", "Pers_util", ".", "pers_alert", "(", "text", "+", "e", ")", ";", "}", "}"], "original_docstring": "this function is called by the 'report attack' window once it is opened or when one of the controls was toggled.", "docstring": {"block_comment": "this function is called by the  report attack  window once it is opened or when one of the controls was toggled.", "line_comment": null}, "docstring_tokens": ["this", "function", "is", "called", "by", "the", "report", "attack", "window", "once", "it", "is", "opened", "or", "when", "one", "of", "the", "controls", "was", "toggled", "."], "sample_id": 231, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004042", "repo": "daveschaefer/Perspectives", "path": "plugin/chrome/content/report.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(hostname) {\n        var cls = Components.classes['@mozilla.org/network/dns-service;1'];\n        var iface = Components.interfaces.nsIDNSService;\n        var dns = cls.getService(iface);\n        var ips = Array();\n        var nsrecord = dns.resolve(hostname, true);\n\n        while (nsrecord && nsrecord.hasMore()) {\n            ips[ips.length] = nsrecord.getNextAddrAsString();\n        }\n\n        return ips;\n    }", "code_tokens": ["function", "(", "hostname", ")", "{", "var", "cls", "=", "Components", ".", "classes", "[", "'@mozilla.org/network/dns-service;1'", "]", ";", "var", "iface", "=", "Components", ".", "interfaces", ".", "nsIDNSService", ";", "var", "dns", "=", "cls", ".", "getService", "(", "iface", ")", ";", "var", "ips", "=", "Array", "(", ")", ";", "var", "nsrecord", "=", "dns", ".", "resolve", "(", "hostname", ",", "true", ")", ";", "while", "(", "nsrecord", "&&", "nsrecord", ".", "hasMore", "(", ")", ")", "{", "ips", "[", "ips", ".", "length", "]", "=", "nsrecord", ".", "getNextAddrAsString", "(", ")", ";", "}", "return", "ips", ";", "}"], "original_docstring": "An attack may have happened due to an DNS attack.  Thus, it is useful to gather this data.", "docstring": {"block_comment": "An attack may have happened due to an DNS attack.  Thus, it is useful to gather this data.", "line_comment": null}, "docstring_tokens": ["An", "attack", "may", "have", "happened", "due", "to", "an", "DNS", "attack", ".", "Thus", "it", "is", "useful", "to", "gather", "this", "data", "."], "sample_id": 232, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004043", "repo": "Rise-Vision/widget-image", "path": "test/integration/js/storage-messaging-folder.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function( done ) {\n    if ( ready ) {\n      done();\n    } else {\n      setTimeout( function() {\n        check( done )\n      }, 1000 );\n    }\n  }", "code_tokens": ["function", "(", "done", ")", "{", "if", "(", "ready", ")", "{", "done", "(", ")", ";", "}", "else", "{", "setTimeout", "(", "function", "(", ")", "{", "check", "(", "done", ")", "}", ",", "1000", ")", ";", "}", "}"], "original_docstring": "/* global suiteSetup, suiteTeardown, suite, test, assert, RiseVision, sinon /* eslint-disable func-names", "docstring": {"block_comment": "global suiteSetup, suiteTeardown, suite, test, assert, RiseVision, sinon    eslint disable func names", "line_comment": null}, "docstring_tokens": ["global", "suiteSetup", "suiteTeardown", "suite", "test", "assert", "RiseVision", "sinon", "eslint", "disable", "func", "names"], "sample_id": 233, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004044", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(o) {\r\n\t\to = o || {};\r\n\t\tvar $input = this,\r\n\t\ttmp_args = arguments;\r\n\r\n\t\tif (typeof(o) == 'string'){\r\n\t\t\tif(o == 'getDate') \r\n\t\t\t\treturn $.fn.datepicker.apply($(this[0]), tmp_args);\r\n\t\t\telse \r\n\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\tvar $t = $(this);\r\n\t\t\t\t\t$t.datepicker.apply($t, tmp_args);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn this.each(function() {\r\n\t\t\t\tvar $t = $(this);\r\n\t\t\t\t$t.datepicker($.timepicker._newInst($t, o)._defaults);\r\n\t\t\t});\r\n\t}", "code_tokens": ["function", "(", "o", ")", "{", "o", "=", "o", "||", "{", "}", ";", "var", "$input", "=", "this", ",", "tmp_args", "=", "arguments", ";", "if", "(", "typeof", "(", "o", ")", "==", "'string'", ")", "{", "if", "(", "o", "==", "'getDate'", ")", "return", "$", ".", "fn", ".", "datepicker", ".", "apply", "(", "$", "(", "this", "[", "0", "]", ")", ",", "tmp_args", ")", ";", "else", "return", "this", ".", "each", "(", "function", "(", ")", "{", "var", "$t", "=", "$", "(", "this", ")", ";", "$t", ".", "datepicker", ".", "apply", "(", "$t", ",", "tmp_args", ")", ";", "}", ")", ";", "}", "else", "return", "this", ".", "each", "(", "function", "(", ")", "{", "var", "$t", "=", "$", "(", "this", ")", ";", "$t", ".", "datepicker", "(", "$", ".", "timepicker", ".", "_newInst", "(", "$t", ",", "o", ")", ".", "_defaults", ")", ";", "}", ")", ";", "}"], "original_docstring": "######################################################################## extend timepicker to datepicker ########################################################################", "docstring": {"block_comment": "                                                                         extend timepicker to datepicker                                                                         ", "line_comment": null}, "docstring_tokens": ["extend", "timepicker", "to", "datepicker"], "sample_id": 234, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004045", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(o) {\r\n\t\to = o || {};\r\n\t\tvar tmp_args = arguments;\r\n\r\n\t\tif (typeof o == 'object') tmp_args[0] = $.extend(o, { timeOnly: true });\r\n\r\n\t\treturn $(this).each(function() {\r\n\t\t\t$.fn.datetimepicker.apply($(this), tmp_args);\r\n\t\t});\r\n\t}", "code_tokens": ["function", "(", "o", ")", "{", "o", "=", "o", "||", "{", "}", ";", "var", "tmp_args", "=", "arguments", ";", "if", "(", "typeof", "o", "==", "'object'", ")", "tmp_args", "[", "0", "]", "=", "$", ".", "extend", "(", "o", ",", "{", "timeOnly", ":", "true", "}", ")", ";", "return", "$", "(", "this", ")", ".", "each", "(", "function", "(", ")", "{", "$", ".", "fn", ".", "datetimepicker", ".", "apply", "(", "$", "(", "this", ")", ",", "tmp_args", ")", ";", "}", ")", ";", "}"], "original_docstring": "######################################################################## shorthand just to use timepicker.. ########################################################################", "docstring": {"block_comment": "                                                                         shorthand just to use timepicker..                                                                         ", "line_comment": null}, "docstring_tokens": ["shorthand", "just", "to", "use", "timepicker", ".."], "sample_id": 235, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004046", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(dp_inst) {\r\n\t\tdp_inst = this.inst || dp_inst,\r\n\t\t\tdt = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay),\r\n\t\t\tdateFmt = $.datepicker._get(dp_inst, 'dateFormat'),\r\n\t\t\tformatCfg = $.datepicker._getFormatConfig(dp_inst),\r\n\t\t\ttimeAvailable = dt !== null && this.timeDefined;\r\n\t\tthis.formattedDate = $.datepicker.formatDate(dateFmt, (dt === null ? new Date() : dt), formatCfg);\r\n\t\tvar formattedDateTime = this.formattedDate;\r\n\t\tif (dp_inst.lastVal !== undefined && (dp_inst.lastVal.length > 0 && this.$input.val().length === 0))\r\n\t\t\treturn;\r\n\r\n\t\tif (this._defaults.timeOnly === true) {\r\n\t\t\tformattedDateTime = this.formattedTime;\r\n\t\t} else if (this._defaults.timeOnly !== true && (this._defaults.alwaysSetTime || timeAvailable)) {\r\n\t\t\tformattedDateTime += this._defaults.separator + this.formattedTime + this._defaults.timeSuffix;\r\n\t\t}\r\n\r\n\t\tthis.formattedDateTime = formattedDateTime;\r\n\r\n\t\tif(!this._defaults.showTimepicker) {\r\n\t\t\tthis.$input.val(this.formattedDate);\r\n\t\t} else if (this.$altInput && this._defaults.altFieldTimeOnly === true) {\r\n\t\t\tthis.$altInput.val(this.formattedTime);\r\n\t\t\tthis.$input.val(this.formattedDate);\r\n\t\t} else if(this.$altInput) {\r\n\t\t\tthis.$altInput.val(formattedDateTime);\r\n\t\t\tthis.$input.val(formattedDateTime);\r\n\t\t} else {\r\n\t\t\tthis.$input.val(formattedDateTime);\r\n\t\t}\r\n\t\t\r\n\t\tthis.$input.trigger(\"change\");\r\n\t}", "code_tokens": ["function", "(", "dp_inst", ")", "{", "dp_inst", "=", "this", ".", "inst", "||", "dp_inst", ",", "dt", "=", "new", "Date", "(", "dp_inst", ".", "selectedYear", ",", "dp_inst", ".", "selectedMonth", ",", "dp_inst", ".", "selectedDay", ")", ",", "dateFmt", "=", "$", ".", "datepicker", ".", "_get", "(", "dp_inst", ",", "'dateFormat'", ")", ",", "formatCfg", "=", "$", ".", "datepicker", ".", "_getFormatConfig", "(", "dp_inst", ")", ",", "timeAvailable", "=", "dt", "!==", "null", "&&", "this", ".", "timeDefined", ";", "this", ".", "formattedDate", "=", "$", ".", "datepicker", ".", "formatDate", "(", "dateFmt", ",", "(", "dt", "===", "null", "?", "new", "Date", "(", ")", ":", "dt", ")", ",", "formatCfg", ")", ";", "var", "formattedDateTime", "=", "this", ".", "formattedDate", ";", "if", "(", "dp_inst", ".", "lastVal", "!==", "undefined", "&&", "(", "dp_inst", ".", "lastVal", ".", "length", ">", "0", "&&", "this", ".", "$input", ".", "val", "(", ")", ".", "length", "===", "0", ")", ")", "return", ";", "if", "(", "this", ".", "_defaults", ".", "timeOnly", "===", "true", ")", "{", "formattedDateTime", "=", "this", ".", "formattedTime", ";", "}", "else", "if", "(", "this", ".", "_defaults", ".", "timeOnly", "!==", "true", "&&", "(", "this", ".", "_defaults", ".", "alwaysSetTime", "||", "timeAvailable", ")", ")", "{", "formattedDateTime", "+=", "this", ".", "_defaults", ".", "separator", "+", "this", ".", "formattedTime", "+", "this", ".", "_defaults", ".", "timeSuffix", ";", "}", "this", ".", "formattedDateTime", "=", "formattedDateTime", ";", "if", "(", "!", "this", ".", "_defaults", ".", "showTimepicker", ")", "{", "this", ".", "$input", ".", "val", "(", "this", ".", "formattedDate", ")", ";", "}", "else", "if", "(", "this", ".", "$altInput", "&&", "this", ".", "_defaults", ".", "altFieldTimeOnly", "===", "true", ")", "{", "this", ".", "$altInput", ".", "val", "(", "this", ".", "formattedTime", ")", ";", "this", ".", "$input", ".", "val", "(", "this", ".", "formattedDate", ")", ";", "}", "else", "if", "(", "this", ".", "$altInput", ")", "{", "this", ".", "$altInput", ".", "val", "(", "formattedDateTime", ")", ";", "this", ".", "$input", ".", "val", "(", "formattedDateTime", ")", ";", "}", "else", "{", "this", ".", "$input", ".", "val", "(", "formattedDateTime", ")", ";", "}", "this", ".", "$input", ".", "trigger", "(", "\"change\"", ")", ";", "}"], "original_docstring": "######################################################################## update our input with the new date time.. ########################################################################", "docstring": {"block_comment": "                                                                         update our input with the new date time..                                                                         ", "line_comment": null}, "docstring_tokens": ["update", "our", "input", "with", "the", "new", "date", "time", ".."], "sample_id": 236, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004047", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(time, format, ampm) {\r\n\t\tif (ampm == undefined) ampm = this._defaults.ampm;\r\n\t\ttime = time || { hour: this.hour, minute: this.minute, second: this.second, ampm: this.ampm, timezone: this.timezone };\r\n\t\tvar tmptime = format || this._defaults.timeFormat.toString();\r\n\r\n\t\tif (ampm) {\r\n\t\t\tvar hour12 = ((time.ampm == 'AM') ? (time.hour) : (time.hour % 12));\r\n\t\t\thour12 = (Number(hour12) === 0) ? 12 : hour12;\r\n\t\t\ttmptime = tmptime.toString()\r\n\t\t\t\t.replace(/hh/g, ((hour12 < 10) ? '0' : '') + hour12)\r\n\t\t\t\t.replace(/h/g, hour12)\r\n\t\t\t\t.replace(/mm/g, ((time.minute < 10) ? '0' : '') + time.minute)\r\n\t\t\t\t.replace(/m/g, time.minute)\r\n\t\t\t\t.replace(/ss/g, ((time.second < 10) ? '0' : '') + time.second)\r\n\t\t\t\t.replace(/s/g, time.second)\r\n\t\t\t\t.replace(/TT/g, time.ampm.toUpperCase())\r\n\t\t\t\t.replace(/Tt/g, time.ampm.toUpperCase())\r\n\t\t\t\t.replace(/tT/g, time.ampm.toLowerCase())\r\n\t\t\t\t.replace(/tt/g, time.ampm.toLowerCase())\r\n\t\t\t\t.replace(/T/g, time.ampm.charAt(0).toUpperCase())\r\n\t\t\t\t.replace(/t/g, time.ampm.charAt(0).toLowerCase())\r\n\t\t\t\t.replace(/z/g, time.timezone);\r\n\t\t} else {\r\n\t\t\ttmptime = tmptime.toString()\r\n\t\t\t\t.replace(/hh/g, ((time.hour < 10) ? '0' : '') + time.hour)\r\n\t\t\t\t.replace(/h/g, time.hour)\r\n\t\t\t\t.replace(/mm/g, ((time.minute < 10) ? '0' : '') + time.minute)\r\n\t\t\t\t.replace(/m/g, time.minute)\r\n\t\t\t\t.replace(/ss/g, ((time.second < 10) ? '0' : '') + time.second)\r\n\t\t\t\t.replace(/s/g, time.second)\r\n\t\t\t\t.replace(/z/g, time.timezone);\r\n\t\t\ttmptime = $.trim(tmptime.replace(/t/gi, ''));\r\n\t\t}\r\n\r\n\t\tif (arguments.length) return tmptime;\r\n\t\telse this.formattedTime = tmptime;\r\n\t}", "code_tokens": ["function", "(", "time", ",", "format", ",", "ampm", ")", "{", "if", "(", "ampm", "==", "undefined", ")", "ampm", "=", "this", ".", "_defaults", ".", "ampm", ";", "time", "=", "time", "||", "{", "hour", ":", "this", ".", "hour", ",", "minute", ":", "this", ".", "minute", ",", "second", ":", "this", ".", "second", ",", "ampm", ":", "this", ".", "ampm", ",", "timezone", ":", "this", ".", "timezone", "}", ";", "var", "tmptime", "=", "format", "||", "this", ".", "_defaults", ".", "timeFormat", ".", "toString", "(", ")", ";", "if", "(", "ampm", ")", "{", "var", "hour12", "=", "(", "(", "time", ".", "ampm", "==", "'AM'", ")", "?", "(", "time", ".", "hour", ")", ":", "(", "time", ".", "hour", "%", "12", ")", ")", ";", "hour12", "=", "(", "Number", "(", "hour12", ")", "===", "0", ")", "?", "12", ":", "hour12", ";", "tmptime", "=", "tmptime", ".", "toString", "(", ")", ".", "replace", "(", "/", "hh", "/", "g", ",", "(", "(", "hour12", "<", "10", ")", "?", "'0'", ":", "''", ")", "+", "hour12", ")", ".", "replace", "(", "/", "h", "/", "g", ",", "hour12", ")", ".", "replace", "(", "/", "mm", "/", "g", ",", "(", "(", "time", ".", "minute", "<", "10", ")", "?", "'0'", ":", "''", ")", "+", "time", ".", "minute", ")", ".", "replace", "(", "/", "m", "/", "g", ",", "time", ".", "minute", ")", ".", "replace", "(", "/", "ss", "/", "g", ",", "(", "(", "time", ".", "second", "<", "10", ")", "?", "'0'", ":", "''", ")", "+", "time", ".", "second", ")", ".", "replace", "(", "/", "s", "/", "g", ",", "time", ".", "second", ")", ".", "replace", "(", "/", "TT", "/", "g", ",", "time", ".", "ampm", ".", "toUpperCase", "(", ")", ")", ".", "replace", "(", "/", "Tt", "/", "g", ",", "time", ".", "ampm", ".", "toUpperCase", "(", ")", ")", ".", "replace", "(", "/", "tT", "/", "g", ",", "time", ".", "ampm", ".", "toLowerCase", "(", ")", ")", ".", "replace", "(", "/", "tt", "/", "g", ",", "time", ".", "ampm", ".", "toLowerCase", "(", ")", ")", ".", "replace", "(", "/", "T", "/", "g", ",", "time", ".", "ampm", ".", "charAt", "(", "0", ")", ".", "toUpperCase", "(", ")", ")", ".", "replace", "(", "/", "t", "/", "g", ",", "time", ".", "ampm", ".", "charAt", "(", "0", ")", ".", "toLowerCase", "(", ")", ")", ".", "replace", "(", "/", "z", "/", "g", ",", "time", ".", "timezone", ")", ";", "}", "else", "{", "tmptime", "=", "tmptime", ".", "toString", "(", ")", ".", "replace", "(", "/", "hh", "/", "g", ",", "(", "(", "time", ".", "hour", "<", "10", ")", "?", "'0'", ":", "''", ")", "+", "time", ".", "hour", ")", ".", "replace", "(", "/", "h", "/", "g", ",", "time", ".", "hour", ")", ".", "replace", "(", "/", "mm", "/", "g", ",", "(", "(", "time", ".", "minute", "<", "10", ")", "?", "'0'", ":", "''", ")", "+", "time", ".", "minute", ")", ".", "replace", "(", "/", "m", "/", "g", ",", "time", ".", "minute", ")", ".", "replace", "(", "/", "ss", "/", "g", ",", "(", "(", "time", ".", "second", "<", "10", ")", "?", "'0'", ":", "''", ")", "+", "time", ".", "second", ")", ".", "replace", "(", "/", "s", "/", "g", ",", "time", ".", "second", ")", ".", "replace", "(", "/", "z", "/", "g", ",", "time", ".", "timezone", ")", ";", "tmptime", "=", "$", ".", "trim", "(", "tmptime", ".", "replace", "(", "/", "t", "/", "gi", ",", "''", ")", ")", ";", "}", "if", "(", "arguments", ".", "length", ")", "return", "tmptime", ";", "else", "this", ".", "formattedTime", "=", "tmptime", ";", "}"], "original_docstring": "######################################################################## format the time all pretty... ########################################################################", "docstring": {"block_comment": "                                                                         format the time all pretty...                                                                         ", "line_comment": null}, "docstring_tokens": ["format", "the", "time", "all", "pretty", "..."], "sample_id": 237, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004048", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\r\n\t\tvar onSelect = this._defaults['onSelect'];\r\n\t\tvar inputEl = this.$input ? this.$input[0] : null;\r\n\t\tif (onSelect && inputEl) {\r\n\t\t\tonSelect.apply(inputEl, [this.formattedDateTime, this]);\r\n\t\t}\r\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "onSelect", "=", "this", ".", "_defaults", "[", "'onSelect'", "]", ";", "var", "inputEl", "=", "this", ".", "$input", "?", "this", ".", "$input", "[", "0", "]", ":", "null", ";", "if", "(", "onSelect", "&&", "inputEl", ")", "{", "onSelect", ".", "apply", "(", "inputEl", ",", "[", "this", ".", "formattedDateTime", ",", "this", "]", ")", ";", "}", "}"], "original_docstring": "######################################################################## call custom onSelect. bind to sliders slidestop, and grid click. ########################################################################", "docstring": {"block_comment": "                                                                         call custom onSelect. bind to sliders slidestop, and grid click.                                                                         ", "line_comment": null}, "docstring_tokens": ["call", "custom", "onSelect", ".", "bind", "to", "sliders", "slidestop", "and", "grid", "click", "."], "sample_id": 238, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004049", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\r\n\t\tvar hour   = (this.hour_slider) ? this.hour_slider.slider('value') : false,\r\n\t\t\tminute = (this.minute_slider) ? this.minute_slider.slider('value') : false,\r\n\t\t\tsecond = (this.second_slider) ? this.second_slider.slider('value') : false,\r\n\t\t\ttimezone = (this.timezone_select) ? this.timezone_select.val() : false;\r\n\r\n\t\tif (typeof(hour) == 'object') hour = false;\r\n\t\tif (typeof(minute) == 'object') minute = false;\r\n\t\tif (typeof(second) == 'object') second = false;\r\n\t\tif (typeof(timezone) == 'object') timezone = false;\r\n\r\n\t\tif (hour !== false) hour = parseInt(hour,10);\r\n\t\tif (minute !== false) minute = parseInt(minute,10);\r\n\t\tif (second !== false) second = parseInt(second,10);\r\n\r\n\t\tvar ampm = (hour < 12) ? 'AM' : 'PM';\r\n\r\n\t\t// If the update was done in the input field, the input field should not be updated.\r\n\t\t// If the update was done using the sliders, update the input field.\r\n\t\tvar hasChanged = (hour != this.hour || minute != this.minute || second != this.second || (this.ampm.length > 0 && this.ampm != ampm) || timezone != this.timezone);\r\n\t\t\r\n\t\tif (hasChanged) {\r\n\r\n\t\t\tif (hour !== false)this.hour = hour;\r\n\t\t\tif (minute !== false) this.minute = minute;\r\n\t\t\tif (second !== false) this.second = second;\r\n\t\t\tif (timezone !== false) this.timezone = timezone;\r\n\t\t\t\r\n\t\t\tif (!this.inst) this.inst = $.datepicker._getInst(this.$input[0]);\r\n\t\t\t\r\n\t\t\tthis._limitMinMaxDateTime(this.inst, true);\r\n\t\t}\r\n\t\tif (this._defaults.ampm) this.ampm = ampm;\r\n\t\t\r\n\t\tthis._formatTime();\r\n\t\tif (this.$timeObj) this.$timeObj.text(this.formattedTime + this._defaults.timeSuffix);\r\n\t\tthis.timeDefined = true;\r\n\t\tif (hasChanged) this._updateDateTime();\r\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "hour", "=", "(", "this", ".", "hour_slider", ")", "?", "this", ".", "hour_slider", ".", "slider", "(", "'value'", ")", ":", "false", ",", "minute", "=", "(", "this", ".", "minute_slider", ")", "?", "this", ".", "minute_slider", ".", "slider", "(", "'value'", ")", ":", "false", ",", "second", "=", "(", "this", ".", "second_slider", ")", "?", "this", ".", "second_slider", ".", "slider", "(", "'value'", ")", ":", "false", ",", "timezone", "=", "(", "this", ".", "timezone_select", ")", "?", "this", ".", "timezone_select", ".", "val", "(", ")", ":", "false", ";", "if", "(", "typeof", "(", "hour", ")", "==", "'object'", ")", "hour", "=", "false", ";", "if", "(", "typeof", "(", "minute", ")", "==", "'object'", ")", "minute", "=", "false", ";", "if", "(", "typeof", "(", "second", ")", "==", "'object'", ")", "second", "=", "false", ";", "if", "(", "typeof", "(", "timezone", ")", "==", "'object'", ")", "timezone", "=", "false", ";", "if", "(", "hour", "!==", "false", ")", "hour", "=", "parseInt", "(", "hour", ",", "10", ")", ";", "if", "(", "minute", "!==", "false", ")", "minute", "=", "parseInt", "(", "minute", ",", "10", ")", ";", "if", "(", "second", "!==", "false", ")", "second", "=", "parseInt", "(", "second", ",", "10", ")", ";", "var", "ampm", "=", "(", "hour", "<", "12", ")", "?", "'AM'", ":", "'PM'", ";", "// If the update was done in the input field, the input field should not be updated.\r", "// If the update was done using the sliders, update the input field.\r", "var", "hasChanged", "=", "(", "hour", "!=", "this", ".", "hour", "||", "minute", "!=", "this", ".", "minute", "||", "second", "!=", "this", ".", "second", "||", "(", "this", ".", "ampm", ".", "length", ">", "0", "&&", "this", ".", "ampm", "!=", "ampm", ")", "||", "timezone", "!=", "this", ".", "timezone", ")", ";", "if", "(", "hasChanged", ")", "{", "if", "(", "hour", "!==", "false", ")", "this", ".", "hour", "=", "hour", ";", "if", "(", "minute", "!==", "false", ")", "this", ".", "minute", "=", "minute", ";", "if", "(", "second", "!==", "false", ")", "this", ".", "second", "=", "second", ";", "if", "(", "timezone", "!==", "false", ")", "this", ".", "timezone", "=", "timezone", ";", "if", "(", "!", "this", ".", "inst", ")", "this", ".", "inst", "=", "$", ".", "datepicker", ".", "_getInst", "(", "this", ".", "$input", "[", "0", "]", ")", ";", "this", ".", "_limitMinMaxDateTime", "(", "this", ".", "inst", ",", "true", ")", ";", "}", "if", "(", "this", ".", "_defaults", ".", "ampm", ")", "this", ".", "ampm", "=", "ampm", ";", "this", ".", "_formatTime", "(", ")", ";", "if", "(", "this", ".", "$timeObj", ")", "this", ".", "$timeObj", ".", "text", "(", "this", ".", "formattedTime", "+", "this", ".", "_defaults", ".", "timeSuffix", ")", ";", "this", ".", "timeDefined", "=", "true", ";", "if", "(", "hasChanged", ")", "this", ".", "_updateDateTime", "(", ")", ";", "}"], "original_docstring": "######################################################################## when a slider moves, set the internal time... on time change is also called when the time is updated in the text field ########################################################################", "docstring": {"block_comment": "                                                                         when a slider moves, set the internal time... on time change is also called when the time is updated in the text field                                                                         ", "line_comment": ["If the update was done in the input field, the input field should not be updated.", "If the update was done using the sliders, update the input field."]}, "docstring_tokens": ["when", "a", "slider", "moves", "set", "the", "internal", "time", "...", "on", "time", "change", "is", "also", "called", "when", "the", "time", "is", "updated", "in", "the", "text", "field"], "sample_id": 239, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004050", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(dp_inst, adjustSliders){\r\n\t\tvar o = this._defaults,\r\n\t\t\tdp_date = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay);\r\n\r\n\t\tif(!this._defaults.showTimepicker) return; // No time so nothing to check here\r\n\r\n\t\tif($.datepicker._get(dp_inst, 'minDateTime') !== null && dp_date){\r\n\t\t\tvar minDateTime = $.datepicker._get(dp_inst, 'minDateTime'),\r\n\t\t\t\tminDateTimeDate = new Date(minDateTime.getFullYear(), minDateTime.getMonth(), minDateTime.getDate(), 0, 0, 0, 0);\r\n\r\n\t\t\tif(this.hourMinOriginal === null || this.minuteMinOriginal === null || this.secondMinOriginal === null){\r\n\t\t\t\tthis.hourMinOriginal = o.hourMin;\r\n\t\t\t\tthis.minuteMinOriginal = o.minuteMin;\r\n\t\t\t\tthis.secondMinOriginal = o.secondMin;\r\n\t\t\t}\r\n\r\n\t\t\tif(dp_inst.settings.timeOnly || minDateTimeDate.getTime() == dp_date.getTime()) {\r\n\t\t\t\tthis._defaults.hourMin = minDateTime.getHours();\r\n\t\t\t\tif (this.hour <= this._defaults.hourMin) {\r\n\t\t\t\t\tthis.hour = this._defaults.hourMin;\r\n\t\t\t\t\tthis._defaults.minuteMin = minDateTime.getMinutes();\r\n\t\t\t\t\tif (this.minute <= this._defaults.minuteMin) {\r\n\t\t\t\t\t\tthis.minute = this._defaults.minuteMin;\r\n\t\t\t\t\t\tthis._defaults.secondMin = minDateTime.getSeconds();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(this.second < this._defaults.secondMin) this.second = this._defaults.secondMin;\r\n\t\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\r\n\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis._defaults.hourMin = this.hourMinOriginal;\r\n\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\r\n\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif($.datepicker._get(dp_inst, 'maxDateTime') !== null && dp_date){\r\n\t\t\tvar maxDateTime = $.datepicker._get(dp_inst, 'maxDateTime'),\r\n\t\t\t\tmaxDateTimeDate = new Date(maxDateTime.getFullYear(), maxDateTime.getMonth(), maxDateTime.getDate(), 0, 0, 0, 0);\r\n\t\r\n\t\t\tif(this.hourMaxOriginal === null || this.minuteMaxOriginal === null || this.secondMaxOriginal === null){\r\n\t\t\t\tthis.hourMaxOriginal = o.hourMax;\r\n\t\t\t\tthis.minuteMaxOriginal = o.minuteMax;\r\n\t\t\t\tthis.secondMaxOriginal = o.secondMax;\r\n\t\t\t}\r\n\r\n\t\t\tif(dp_inst.settings.timeOnly || maxDateTimeDate.getTime() == dp_date.getTime()){\r\n\t\t\t\tthis._defaults.hourMax = maxDateTime.getHours();\r\n\t\t\t\tif (this.hour >= this._defaults.hourMax) {\r\n\t\t\t\t\tthis.hour = this._defaults.hourMax;\r\n\t\t\t\t\tthis._defaults.minuteMax = maxDateTime.getMinutes();\r\n\t\t\t\t\tif (this.minute >= this._defaults.minuteMax) {\r\n\t\t\t\t\t\tthis.minute = this._defaults.minuteMax;\r\n\t\t\t\t\t\tthis._defaults.secondMax = maxDateTime.getSeconds();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(this.second > this._defaults.secondMax) this.second = this._defaults.secondMax;\r\n\t\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\r\n\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis._defaults.hourMax = this.hourMaxOriginal;\r\n\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\r\n\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(adjustSliders !== undefined && adjustSliders === true){\r\n\t\t\tvar hourMax = (this._defaults.hourMax - (this._defaults.hourMax % this._defaults.stepHour)).toFixed(0),\r\n\t\t\t\tminMax  = (this._defaults.minuteMax - (this._defaults.minuteMax % this._defaults.stepMinute)).toFixed(0),\r\n\t\t\t\tsecMax  = (this._defaults.secondMax - (this._defaults.secondMax % this._defaults.stepSecond)).toFixed(0);\r\n\r\n\t\t\tif(this.hour_slider)\r\n\t\t\t\tthis.hour_slider.slider(\"option\", { min: this._defaults.hourMin, max: hourMax }).slider('value', this.hour);\r\n\t\t\tif(this.minute_slider)\r\n\t\t\t\tthis.minute_slider.slider(\"option\", { min: this._defaults.minuteMin, max: minMax }).slider('value', this.minute);\r\n\t\t\tif(this.second_slider)\r\n\t\t\t\tthis.second_slider.slider(\"option\", { min: this._defaults.secondMin, max: secMax }).slider('value', this.second);\r\n\t\t}\r\n\r\n\t}", "code_tokens": ["function", "(", "dp_inst", ",", "adjustSliders", ")", "{", "var", "o", "=", "this", ".", "_defaults", ",", "dp_date", "=", "new", "Date", "(", "dp_inst", ".", "selectedYear", ",", "dp_inst", ".", "selectedMonth", ",", "dp_inst", ".", "selectedDay", ")", ";", "if", "(", "!", "this", ".", "_defaults", ".", "showTimepicker", ")", "return", ";", "// No time so nothing to check here\r", "if", "(", "$", ".", "datepicker", ".", "_get", "(", "dp_inst", ",", "'minDateTime'", ")", "!==", "null", "&&", "dp_date", ")", "{", "var", "minDateTime", "=", "$", ".", "datepicker", ".", "_get", "(", "dp_inst", ",", "'minDateTime'", ")", ",", "minDateTimeDate", "=", "new", "Date", "(", "minDateTime", ".", "getFullYear", "(", ")", ",", "minDateTime", ".", "getMonth", "(", ")", ",", "minDateTime", ".", "getDate", "(", ")", ",", "0", ",", "0", ",", "0", ",", "0", ")", ";", "if", "(", "this", ".", "hourMinOriginal", "===", "null", "||", "this", ".", "minuteMinOriginal", "===", "null", "||", "this", ".", "secondMinOriginal", "===", "null", ")", "{", "this", ".", "hourMinOriginal", "=", "o", ".", "hourMin", ";", "this", ".", "minuteMinOriginal", "=", "o", ".", "minuteMin", ";", "this", ".", "secondMinOriginal", "=", "o", ".", "secondMin", ";", "}", "if", "(", "dp_inst", ".", "settings", ".", "timeOnly", "||", "minDateTimeDate", ".", "getTime", "(", ")", "==", "dp_date", ".", "getTime", "(", ")", ")", "{", "this", ".", "_defaults", ".", "hourMin", "=", "minDateTime", ".", "getHours", "(", ")", ";", "if", "(", "this", ".", "hour", "<=", "this", ".", "_defaults", ".", "hourMin", ")", "{", "this", ".", "hour", "=", "this", ".", "_defaults", ".", "hourMin", ";", "this", ".", "_defaults", ".", "minuteMin", "=", "minDateTime", ".", "getMinutes", "(", ")", ";", "if", "(", "this", ".", "minute", "<=", "this", ".", "_defaults", ".", "minuteMin", ")", "{", "this", ".", "minute", "=", "this", ".", "_defaults", ".", "minuteMin", ";", "this", ".", "_defaults", ".", "secondMin", "=", "minDateTime", ".", "getSeconds", "(", ")", ";", "}", "else", "{", "if", "(", "this", ".", "second", "<", "this", ".", "_defaults", ".", "secondMin", ")", "this", ".", "second", "=", "this", ".", "_defaults", ".", "secondMin", ";", "this", ".", "_defaults", ".", "secondMin", "=", "this", ".", "secondMinOriginal", ";", "}", "}", "else", "{", "this", ".", "_defaults", ".", "minuteMin", "=", "this", ".", "minuteMinOriginal", ";", "this", ".", "_defaults", ".", "secondMin", "=", "this", ".", "secondMinOriginal", ";", "}", "}", "else", "{", "this", ".", "_defaults", ".", "hourMin", "=", "this", ".", "hourMinOriginal", ";", "this", ".", "_defaults", ".", "minuteMin", "=", "this", ".", "minuteMinOriginal", ";", "this", ".", "_defaults", ".", "secondMin", "=", "this", ".", "secondMinOriginal", ";", "}", "}", "if", "(", "$", ".", "datepicker", ".", "_get", "(", "dp_inst", ",", "'maxDateTime'", ")", "!==", "null", "&&", "dp_date", ")", "{", "var", "maxDateTime", "=", "$", ".", "datepicker", ".", "_get", "(", "dp_inst", ",", "'maxDateTime'", ")", ",", "maxDateTimeDate", "=", "new", "Date", "(", "maxDateTime", ".", "getFullYear", "(", ")", ",", "maxDateTime", ".", "getMonth", "(", ")", ",", "maxDateTime", ".", "getDate", "(", ")", ",", "0", ",", "0", ",", "0", ",", "0", ")", ";", "if", "(", "this", ".", "hourMaxOriginal", "===", "null", "||", "this", ".", "minuteMaxOriginal", "===", "null", "||", "this", ".", "secondMaxOriginal", "===", "null", ")", "{", "this", ".", "hourMaxOriginal", "=", "o", ".", "hourMax", ";", "this", ".", "minuteMaxOriginal", "=", "o", ".", "minuteMax", ";", "this", ".", "secondMaxOriginal", "=", "o", ".", "secondMax", ";", "}", "if", "(", "dp_inst", ".", "settings", ".", "timeOnly", "||", "maxDateTimeDate", ".", "getTime", "(", ")", "==", "dp_date", ".", "getTime", "(", ")", ")", "{", "this", ".", "_defaults", ".", "hourMax", "=", "maxDateTime", ".", "getHours", "(", ")", ";", "if", "(", "this", ".", "hour", ">=", "this", ".", "_defaults", ".", "hourMax", ")", "{", "this", ".", "hour", "=", "this", ".", "_defaults", ".", "hourMax", ";", "this", ".", "_defaults", ".", "minuteMax", "=", "maxDateTime", ".", "getMinutes", "(", ")", ";", "if", "(", "this", ".", "minute", ">=", "this", ".", "_defaults", ".", "minuteMax", ")", "{", "this", ".", "minute", "=", "this", ".", "_defaults", ".", "minuteMax", ";", "this", ".", "_defaults", ".", "secondMax", "=", "maxDateTime", ".", "getSeconds", "(", ")", ";", "}", "else", "{", "if", "(", "this", ".", "second", ">", "this", ".", "_defaults", ".", "secondMax", ")", "this", ".", "second", "=", "this", ".", "_defaults", ".", "secondMax", ";", "this", ".", "_defaults", ".", "secondMax", "=", "this", ".", "secondMaxOriginal", ";", "}", "}", "else", "{", "this", ".", "_defaults", ".", "minuteMax", "=", "this", ".", "minuteMaxOriginal", ";", "this", ".", "_defaults", ".", "secondMax", "=", "this", ".", "secondMaxOriginal", ";", "}", "}", "else", "{", "this", ".", "_defaults", ".", "hourMax", "=", "this", ".", "hourMaxOriginal", ";", "this", ".", "_defaults", ".", "minuteMax", "=", "this", ".", "minuteMaxOriginal", ";", "this", ".", "_defaults", ".", "secondMax", "=", "this", ".", "secondMaxOriginal", ";", "}", "}", "if", "(", "adjustSliders", "!==", "undefined", "&&", "adjustSliders", "===", "true", ")", "{", "var", "hourMax", "=", "(", "this", ".", "_defaults", ".", "hourMax", "-", "(", "this", ".", "_defaults", ".", "hourMax", "%", "this", ".", "_defaults", ".", "stepHour", ")", ")", ".", "toFixed", "(", "0", ")", ",", "minMax", "=", "(", "this", ".", "_defaults", ".", "minuteMax", "-", "(", "this", ".", "_defaults", ".", "minuteMax", "%", "this", ".", "_defaults", ".", "stepMinute", ")", ")", ".", "toFixed", "(", "0", ")", ",", "secMax", "=", "(", "this", ".", "_defaults", ".", "secondMax", "-", "(", "this", ".", "_defaults", ".", "secondMax", "%", "this", ".", "_defaults", ".", "stepSecond", ")", ")", ".", "toFixed", "(", "0", ")", ";", "if", "(", "this", ".", "hour_slider", ")", "this", ".", "hour_slider", ".", "slider", "(", "\"option\"", ",", "{", "min", ":", "this", ".", "_defaults", ".", "hourMin", ",", "max", ":", "hourMax", "}", ")", ".", "slider", "(", "'value'", ",", "this", ".", "hour", ")", ";", "if", "(", "this", ".", "minute_slider", ")", "this", ".", "minute_slider", ".", "slider", "(", "\"option\"", ",", "{", "min", ":", "this", ".", "_defaults", ".", "minuteMin", ",", "max", ":", "minMax", "}", ")", ".", "slider", "(", "'value'", ",", "this", ".", "minute", ")", ";", "if", "(", "this", ".", "second_slider", ")", "this", ".", "second_slider", ".", "slider", "(", "\"option\"", ",", "{", "min", ":", "this", ".", "_defaults", ".", "secondMin", ",", "max", ":", "secMax", "}", ")", ".", "slider", "(", "'value'", ",", "this", ".", "second", ")", ";", "}", "}"], "original_docstring": "######################################################################## This function tries to limit the ability to go outside the min/max date range ########################################################################", "docstring": {"block_comment": "                                                                         This function tries to limit the ability to go outside the min max date range                                                                         ", "line_comment": ["No time so nothing to check here"]}, "docstring_tokens": ["This", "function", "tries", "to", "limit", "the", "ability", "to", "go", "outside", "the", "min", "max", "date", "range"], "sample_id": 240, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004051", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\r\n\t\tvar $dp = this.inst.dpDiv,\r\n\t\t\to = this._defaults,\r\n\t\t\ttp_inst = this,\r\n\t\t\t// Added by Peter Medeiros:\r\n\t\t\t// - Figure out what the hour/minute/second max should be based on the step values.\r\n\t\t\t// - Example: if stepMinute is 15, then minMax is 45.\r\n\t\t\thourMax = (o.hourMax - (o.hourMax % o.stepHour)).toFixed(0),\r\n\t\t\tminMax  = (o.minuteMax - (o.minuteMax % o.stepMinute)).toFixed(0),\r\n\t\t\tsecMax  = (o.secondMax - (o.secondMax % o.stepSecond)).toFixed(0),\r\n\t\t\tdp_id = this.inst.id.toString().replace(/([^A-Za-z0-9_])/g, '');\r\n\r\n\t\t// Prevent displaying twice\r\n\t\t//if ($dp.find(\"div#ui-timepicker-div-\"+ dp_id).length === 0) {\r\n\t\tif ($dp.find(\"div#ui-timepicker-div-\"+ dp_id).length === 0 && o.showTimepicker) {\r\n\t\t\tvar noDisplay = ' style=\"display:none;\"',\r\n\t\t\t\thtml =\t'<div class=\"ui-timepicker-div\" id=\"ui-timepicker-div-' + dp_id + '\"><dl>' +\r\n\t\t\t\t\t\t'<dt class=\"ui_tpicker_time_label\" id=\"ui_tpicker_time_label_' + dp_id + '\"' +\r\n\t\t\t\t\t\t((o.showTime) ? '' : noDisplay) + '>' + o.timeText + '</dt>' +\r\n\t\t\t\t\t\t'<dd class=\"ui_tpicker_time\" id=\"ui_tpicker_time_' + dp_id + '\"' +\r\n\t\t\t\t\t\t((o.showTime) ? '' : noDisplay) + '></dd>' +\r\n\t\t\t\t\t\t'<dt class=\"ui_tpicker_hour_label\" id=\"ui_tpicker_hour_label_' + dp_id + '\"' +\r\n\t\t\t\t\t\t((o.showHour) ? '' : noDisplay) + '>' + o.hourText + '</dt>',\r\n\t\t\t\thourGridSize = 0,\r\n\t\t\t\tminuteGridSize = 0,\r\n\t\t\t\tsecondGridSize = 0,\r\n\t\t\t\tsize;\r\n \r\n\t\t\tif (o.showHour && o.hourGrid > 0) {\r\n\t\t\t\thtml += '<dd class=\"ui_tpicker_hour\">' +\r\n\t\t\t\t\t\t'<div id=\"ui_tpicker_hour_' + dp_id + '\"' + ((o.showHour)   ? '' : noDisplay) + '></div>' +\r\n\t\t\t\t\t\t'<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>';\r\n\r\n\t\t\t\tfor (var h = o.hourMin; h <= hourMax; h += o.hourGrid) {\r\n\t\t\t\t\thourGridSize++;\r\n\t\t\t\t\tvar tmph = (o.ampm && h > 12) ? h-12 : h;\r\n\t\t\t\t\tif (tmph < 10) tmph = '0' + tmph;\r\n\t\t\t\t\tif (o.ampm) {\r\n\t\t\t\t\t\tif (h == 0) tmph = 12 +'a';\r\n\t\t\t\t\t\telse if (h < 12) tmph += 'a';\r\n\t\t\t\t\t\telse tmph += 'p';\r\n\t\t\t\t\t}\r\n\t\t\t\t\thtml += '<td>' + tmph + '</td>';\r\n\t\t\t\t}\r\n\r\n\t\t\t\thtml += '</tr></table></div>' +\r\n\t\t\t\t\t\t'</dd>';\r\n\t\t\t} else html += '<dd class=\"ui_tpicker_hour\" id=\"ui_tpicker_hour_' + dp_id + '\"' +\r\n\t\t\t\t\t\t\t((o.showHour) ? '' : noDisplay) + '></dd>';\r\n\r\n\t\t\thtml += '<dt class=\"ui_tpicker_minute_label\" id=\"ui_tpicker_minute_label_' + dp_id + '\"' +\r\n\t\t\t\t\t((o.showMinute) ? '' : noDisplay) + '>' + o.minuteText + '</dt>';\r\n\r\n\t\t\tif (o.showMinute && o.minuteGrid > 0) {\r\n\t\t\t\thtml += '<dd class=\"ui_tpicker_minute ui_tpicker_minute_' + o.minuteGrid + '\">' +\r\n\t\t\t\t\t\t'<div id=\"ui_tpicker_minute_' + dp_id + '\"' +\r\n\t\t\t\t\t\t((o.showMinute) ? '' : noDisplay) + '></div>' +\r\n\t\t\t\t\t\t'<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>';\r\n\r\n\t\t\t\tfor (var m = o.minuteMin; m <= minMax; m += o.minuteGrid) {\r\n\t\t\t\t\tminuteGridSize++;\r\n\t\t\t\t\thtml += '<td>' + ((m < 10) ? '0' : '') + m + '</td>';\r\n\t\t\t\t}\r\n\r\n\t\t\t\thtml += '</tr></table></div>' +\r\n\t\t\t\t\t\t'</dd>';\r\n\t\t\t} else html += '<dd class=\"ui_tpicker_minute\" id=\"ui_tpicker_minute_' + dp_id + '\"' +\r\n\t\t\t\t\t\t\t((o.showMinute) ? '' : noDisplay) + '></dd>';\r\n\r\n\t\t\thtml += '<dt class=\"ui_tpicker_second_label\" id=\"ui_tpicker_second_label_' + dp_id + '\"' +\r\n\t\t\t\t\t((o.showSecond) ? '' : noDisplay) + '>' + o.secondText + '</dt>';\r\n\r\n\t\t\tif (o.showSecond && o.secondGrid > 0) {\r\n\t\t\t\thtml += '<dd class=\"ui_tpicker_second ui_tpicker_second_' + o.secondGrid + '\">' +\r\n\t\t\t\t\t\t'<div id=\"ui_tpicker_second_' + dp_id + '\"' +\r\n\t\t\t\t\t\t((o.showSecond) ? '' : noDisplay) + '></div>' +\r\n\t\t\t\t\t\t'<div style=\"padding-left: 1px\"><table><tr>';\r\n\r\n\t\t\t\tfor (var s = o.secondMin; s <= secMax; s += o.secondGrid) {\r\n\t\t\t\t\tsecondGridSize++;\r\n\t\t\t\t\thtml += '<td>' + ((s < 10) ? '0' : '') + s + '</td>';\r\n\t\t\t\t}\r\n\r\n\t\t\t\thtml += '</tr></table></div>' +\r\n\t\t\t\t\t\t'</dd>';\r\n\t\t\t} else html += '<dd class=\"ui_tpicker_second\" id=\"ui_tpicker_second_' + dp_id + '\"'\t+\r\n\t\t\t\t\t\t\t((o.showSecond) ? '' : noDisplay) + '></dd>';\r\n\t\t\t\t\t\t\t\r\n\t\t\thtml += '<dt class=\"ui_tpicker_timezone_label\" id=\"ui_tpicker_timezone_label_' + dp_id + '\"' +\r\n\t\t\t\t\t((o.showTimezone) ? '' : noDisplay) + '>' + o.timezoneText + '</dt>';\r\n\t\t\thtml += '<dd class=\"ui_tpicker_timezone\" id=\"ui_tpicker_timezone_' + dp_id + '\"'\t+\r\n\t\t\t\t\t\t\t((o.showTimezone) ? '' : noDisplay) + '></dd>';\r\n\r\n\t\t\thtml += '</dl></div>';\r\n\t\t\t$tp = $(html);\r\n\r\n\t\t\t\t// if we only want time picker...\r\n\t\t\tif (o.timeOnly === true) {\r\n\t\t\t\t$tp.prepend(\r\n\t\t\t\t\t'<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\">' +\r\n\t\t\t\t\t\t'<div class=\"ui-datepicker-title\">' + o.timeOnlyTitle + '</div>' +\r\n\t\t\t\t\t'</div>');\r\n\t\t\t\t$dp.find('.ui-datepicker-header, .ui-datepicker-calendar').hide();\r\n\t\t\t}\r\n\r\n\t\t\tthis.hour_slider = $tp.find('#ui_tpicker_hour_'+ dp_id).slider({\r\n\t\t\t\torientation: \"horizontal\",\r\n\t\t\t\tvalue: this.hour,\r\n\t\t\t\tmin: o.hourMin,\r\n\t\t\t\tmax: hourMax,\r\n\t\t\t\tstep: o.stepHour,\r\n\t\t\t\tslide: function(event, ui) {\r\n\t\t\t\t\ttp_inst.hour_slider.slider( \"option\", \"value\", ui.value);\r\n\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Updated by Peter Medeiros:\r\n\t\t\t// - Pass in Event and UI instance into slide function\r\n\t\t\tthis.minute_slider = $tp.find('#ui_tpicker_minute_'+ dp_id).slider({\r\n\t\t\t\torientation: \"horizontal\",\r\n\t\t\t\tvalue: this.minute,\r\n\t\t\t\tmin: o.minuteMin,\r\n\t\t\t\tmax: minMax,\r\n\t\t\t\tstep: o.stepMinute,\r\n\t\t\t\tslide: function(event, ui) {\r\n\t\t\t\t\t// update the global minute slider instance value with the current slider value\r\n\t\t\t\t\ttp_inst.minute_slider.slider( \"option\", \"value\", ui.value);\r\n\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.second_slider = $tp.find('#ui_tpicker_second_'+ dp_id).slider({\r\n\t\t\t\torientation: \"horizontal\",\r\n\t\t\t\tvalue: this.second,\r\n\t\t\t\tmin: o.secondMin,\r\n\t\t\t\tmax: secMax,\r\n\t\t\t\tstep: o.stepSecond,\r\n\t\t\t\tslide: function(event, ui) {\r\n\t\t\t\t\ttp_inst.second_slider.slider( \"option\", \"value\", ui.value);\r\n\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.timezone_select = $tp.find('#ui_tpicker_timezone_'+ dp_id).append('<select></select>').find(\"select\");\r\n\t\t\t$.fn.append.apply(this.timezone_select,\r\n\t\t\t\t$.map(o.timezoneList, function(val, idx) {\r\n\t\t\t\t\treturn $(\"<option />\")\r\n\t\t\t\t\t\t.val(typeof val == \"object\" ? val.value : val)\r\n\t\t\t\t\t\t.text(typeof val == \"object\" ? val.label : val);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tthis.timezone_select.val((typeof this.timezone != \"undefined\" && this.timezone != null && this.timezone != \"\") ? this.timezone : o.timezone);\r\n\t\t\tthis.timezone_select.change(function() {\r\n\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t});\r\n\r\n\t\t\t// Add grid functionality\r\n\t\t\tif (o.showHour && o.hourGrid > 0) {\r\n\t\t\t\tsize = 100 * hourGridSize * o.hourGrid / (hourMax - o.hourMin);\r\n\r\n\t\t\t\t$tp.find(\".ui_tpicker_hour table\").css({\r\n\t\t\t\t\twidth: size + \"%\",\r\n\t\t\t\t\tmarginLeft: (size / (-2 * hourGridSize)) + \"%\",\r\n\t\t\t\t\tborderCollapse: 'collapse'\r\n\t\t\t\t}).find(\"td\").each( function(index) {\r\n\t\t\t\t\t$(this).click(function() {\r\n\t\t\t\t\t\tvar h = $(this).html();\r\n\t\t\t\t\t\tif(o.ampm)\t{\r\n\t\t\t\t\t\t\tvar ap = h.substring(2).toLowerCase(),\r\n\t\t\t\t\t\t\t\taph = parseInt(h.substring(0,2), 10);\r\n\t\t\t\t\t\t\tif (ap == 'a') {\r\n\t\t\t\t\t\t\t\tif (aph == 12) h = 0;\r\n\t\t\t\t\t\t\t\telse h = aph;\r\n\t\t\t\t\t\t\t} else if (aph == 12) h = 12;\r\n\t\t\t\t\t\t\telse h = aph + 12;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttp_inst.hour_slider.slider(\"option\", \"value\", h);\r\n\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t}).css({\r\n\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\twidth: (100 / hourGridSize) + '%',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (o.showMinute && o.minuteGrid > 0) {\r\n\t\t\t\tsize = 100 * minuteGridSize * o.minuteGrid / (minMax - o.minuteMin);\r\n\t\t\t\t$tp.find(\".ui_tpicker_minute table\").css({\r\n\t\t\t\t\twidth: size + \"%\",\r\n\t\t\t\t\tmarginLeft: (size / (-2 * minuteGridSize)) + \"%\",\r\n\t\t\t\t\tborderCollapse: 'collapse'\r\n\t\t\t\t}).find(\"td\").each(function(index) {\r\n\t\t\t\t\t$(this).click(function() {\r\n\t\t\t\t\t\ttp_inst.minute_slider.slider(\"option\", \"value\", $(this).html());\r\n\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t}).css({\r\n\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\twidth: (100 / minuteGridSize) + '%',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (o.showSecond && o.secondGrid > 0) {\r\n\t\t\t\t$tp.find(\".ui_tpicker_second table\").css({\r\n\t\t\t\t\twidth: size + \"%\",\r\n\t\t\t\t\tmarginLeft: (size / (-2 * secondGridSize)) + \"%\",\r\n\t\t\t\t\tborderCollapse: 'collapse'\r\n\t\t\t\t}).find(\"td\").each(function(index) {\r\n\t\t\t\t\t$(this).click(function() {\r\n\t\t\t\t\t\ttp_inst.second_slider.slider(\"option\", \"value\", $(this).html());\r\n\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t}).css({\r\n\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\twidth: (100 / secondGridSize) + '%',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar $buttonPanel = $dp.find('.ui-datepicker-buttonpane');\r\n\t\t\tif ($buttonPanel.length) $buttonPanel.before($tp);\r\n\t\t\telse $dp.append($tp);\r\n\r\n\t\t\tthis.$timeObj = $tp.find('#ui_tpicker_time_'+ dp_id);\r\n\r\n\t\t\tif (this.inst !== null) {\r\n\t\t\t\tvar timeDefined = this.timeDefined;\r\n\t\t\t\tthis._onTimeChange();\r\n\t\t\t\tthis.timeDefined = timeDefined;\r\n\t\t\t}\r\n\r\n\t\t\t//Emulate datepicker onSelect behavior. Call on slidestop.\r\n\t\t\tvar onSelectDelegate = function() {\r\n\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t};\r\n\t\t\tthis.hour_slider.bind('slidestop',onSelectDelegate);\r\n\t\t\tthis.minute_slider.bind('slidestop',onSelectDelegate);\r\n\t\t\tthis.second_slider.bind('slidestop',onSelectDelegate);\r\n\t\t}\r\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "$dp", "=", "this", ".", "inst", ".", "dpDiv", ",", "o", "=", "this", ".", "_defaults", ",", "tp_inst", "=", "this", ",", "// Added by Peter Medeiros:\r", "// - Figure out what the hour/minute/second max should be based on the step values.\r", "// - Example: if stepMinute is 15, then minMax is 45.\r", "hourMax", "=", "(", "o", ".", "hourMax", "-", "(", "o", ".", "hourMax", "%", "o", ".", "stepHour", ")", ")", ".", "toFixed", "(", "0", ")", ",", "minMax", "=", "(", "o", ".", "minuteMax", "-", "(", "o", ".", "minuteMax", "%", "o", ".", "stepMinute", ")", ")", ".", "toFixed", "(", "0", ")", ",", "secMax", "=", "(", "o", ".", "secondMax", "-", "(", "o", ".", "secondMax", "%", "o", ".", "stepSecond", ")", ")", ".", "toFixed", "(", "0", ")", ",", "dp_id", "=", "this", ".", "inst", ".", "id", ".", "toString", "(", ")", ".", "replace", "(", "/", "([^A-Za-z0-9_])", "/", "g", ",", "''", ")", ";", "// Prevent displaying twice\r", "//if ($dp.find(\"div#ui-timepicker-div-\"+ dp_id).length === 0) {\r", "if", "(", "$dp", ".", "find", "(", "\"div#ui-timepicker-div-\"", "+", "dp_id", ")", ".", "length", "===", "0", "&&", "o", ".", "showTimepicker", ")", "{", "var", "noDisplay", "=", "' style=\"display:none;\"'", ",", "html", "=", "'<div class=\"ui-timepicker-div\" id=\"ui-timepicker-div-'", "+", "dp_id", "+", "'\"><dl>'", "+", "'<dt class=\"ui_tpicker_time_label\" id=\"ui_tpicker_time_label_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showTime", ")", "?", "''", ":", "noDisplay", ")", "+", "'>'", "+", "o", ".", "timeText", "+", "'</dt>'", "+", "'<dd class=\"ui_tpicker_time\" id=\"ui_tpicker_time_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showTime", ")", "?", "''", ":", "noDisplay", ")", "+", "'></dd>'", "+", "'<dt class=\"ui_tpicker_hour_label\" id=\"ui_tpicker_hour_label_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showHour", ")", "?", "''", ":", "noDisplay", ")", "+", "'>'", "+", "o", ".", "hourText", "+", "'</dt>'", ",", "hourGridSize", "=", "0", ",", "minuteGridSize", "=", "0", ",", "secondGridSize", "=", "0", ",", "size", ";", "if", "(", "o", ".", "showHour", "&&", "o", ".", "hourGrid", ">", "0", ")", "{", "html", "+=", "'<dd class=\"ui_tpicker_hour\">'", "+", "'<div id=\"ui_tpicker_hour_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showHour", ")", "?", "''", ":", "noDisplay", ")", "+", "'></div>'", "+", "'<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>'", ";", "for", "(", "var", "h", "=", "o", ".", "hourMin", ";", "h", "<=", "hourMax", ";", "h", "+=", "o", ".", "hourGrid", ")", "{", "hourGridSize", "++", ";", "var", "tmph", "=", "(", "o", ".", "ampm", "&&", "h", ">", "12", ")", "?", "h", "-", "12", ":", "h", ";", "if", "(", "tmph", "<", "10", ")", "tmph", "=", "'0'", "+", "tmph", ";", "if", "(", "o", ".", "ampm", ")", "{", "if", "(", "h", "==", "0", ")", "tmph", "=", "12", "+", "'a'", ";", "else", "if", "(", "h", "<", "12", ")", "tmph", "+=", "'a'", ";", "else", "tmph", "+=", "'p'", ";", "}", "html", "+=", "'<td>'", "+", "tmph", "+", "'</td>'", ";", "}", "html", "+=", "'</tr></table></div>'", "+", "'</dd>'", ";", "}", "else", "html", "+=", "'<dd class=\"ui_tpicker_hour\" id=\"ui_tpicker_hour_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showHour", ")", "?", "''", ":", "noDisplay", ")", "+", "'></dd>'", ";", "html", "+=", "'<dt class=\"ui_tpicker_minute_label\" id=\"ui_tpicker_minute_label_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showMinute", ")", "?", "''", ":", "noDisplay", ")", "+", "'>'", "+", "o", ".", "minuteText", "+", "'</dt>'", ";", "if", "(", "o", ".", "showMinute", "&&", "o", ".", "minuteGrid", ">", "0", ")", "{", "html", "+=", "'<dd class=\"ui_tpicker_minute ui_tpicker_minute_'", "+", "o", ".", "minuteGrid", "+", "'\">'", "+", "'<div id=\"ui_tpicker_minute_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showMinute", ")", "?", "''", ":", "noDisplay", ")", "+", "'></div>'", "+", "'<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>'", ";", "for", "(", "var", "m", "=", "o", ".", "minuteMin", ";", "m", "<=", "minMax", ";", "m", "+=", "o", ".", "minuteGrid", ")", "{", "minuteGridSize", "++", ";", "html", "+=", "'<td>'", "+", "(", "(", "m", "<", "10", ")", "?", "'0'", ":", "''", ")", "+", "m", "+", "'</td>'", ";", "}", "html", "+=", "'</tr></table></div>'", "+", "'</dd>'", ";", "}", "else", "html", "+=", "'<dd class=\"ui_tpicker_minute\" id=\"ui_tpicker_minute_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showMinute", ")", "?", "''", ":", "noDisplay", ")", "+", "'></dd>'", ";", "html", "+=", "'<dt class=\"ui_tpicker_second_label\" id=\"ui_tpicker_second_label_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showSecond", ")", "?", "''", ":", "noDisplay", ")", "+", "'>'", "+", "o", ".", "secondText", "+", "'</dt>'", ";", "if", "(", "o", ".", "showSecond", "&&", "o", ".", "secondGrid", ">", "0", ")", "{", "html", "+=", "'<dd class=\"ui_tpicker_second ui_tpicker_second_'", "+", "o", ".", "secondGrid", "+", "'\">'", "+", "'<div id=\"ui_tpicker_second_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showSecond", ")", "?", "''", ":", "noDisplay", ")", "+", "'></div>'", "+", "'<div style=\"padding-left: 1px\"><table><tr>'", ";", "for", "(", "var", "s", "=", "o", ".", "secondMin", ";", "s", "<=", "secMax", ";", "s", "+=", "o", ".", "secondGrid", ")", "{", "secondGridSize", "++", ";", "html", "+=", "'<td>'", "+", "(", "(", "s", "<", "10", ")", "?", "'0'", ":", "''", ")", "+", "s", "+", "'</td>'", ";", "}", "html", "+=", "'</tr></table></div>'", "+", "'</dd>'", ";", "}", "else", "html", "+=", "'<dd class=\"ui_tpicker_second\" id=\"ui_tpicker_second_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showSecond", ")", "?", "''", ":", "noDisplay", ")", "+", "'></dd>'", ";", "html", "+=", "'<dt class=\"ui_tpicker_timezone_label\" id=\"ui_tpicker_timezone_label_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showTimezone", ")", "?", "''", ":", "noDisplay", ")", "+", "'>'", "+", "o", ".", "timezoneText", "+", "'</dt>'", ";", "html", "+=", "'<dd class=\"ui_tpicker_timezone\" id=\"ui_tpicker_timezone_'", "+", "dp_id", "+", "'\"'", "+", "(", "(", "o", ".", "showTimezone", ")", "?", "''", ":", "noDisplay", ")", "+", "'></dd>'", ";", "html", "+=", "'</dl></div>'", ";", "$tp", "=", "$", "(", "html", ")", ";", "// if we only want time picker...\r", "if", "(", "o", ".", "timeOnly", "===", "true", ")", "{", "$tp", ".", "prepend", "(", "'<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\">'", "+", "'<div class=\"ui-datepicker-title\">'", "+", "o", ".", "timeOnlyTitle", "+", "'</div>'", "+", "'</div>'", ")", ";", "$dp", ".", "find", "(", "'.ui-datepicker-header, .ui-datepicker-calendar'", ")", ".", "hide", "(", ")", ";", "}", "this", ".", "hour_slider", "=", "$tp", ".", "find", "(", "'#ui_tpicker_hour_'", "+", "dp_id", ")", ".", "slider", "(", "{", "orientation", ":", "\"horizontal\"", ",", "value", ":", "this", ".", "hour", ",", "min", ":", "o", ".", "hourMin", ",", "max", ":", "hourMax", ",", "step", ":", "o", ".", "stepHour", ",", "slide", ":", "function", "(", "event", ",", "ui", ")", "{", "tp_inst", ".", "hour_slider", ".", "slider", "(", "\"option\"", ",", "\"value\"", ",", "ui", ".", "value", ")", ";", "tp_inst", ".", "_onTimeChange", "(", ")", ";", "}", "}", ")", ";", "// Updated by Peter Medeiros:\r", "// - Pass in Event and UI instance into slide function\r", "this", ".", "minute_slider", "=", "$tp", ".", "find", "(", "'#ui_tpicker_minute_'", "+", "dp_id", ")", ".", "slider", "(", "{", "orientation", ":", "\"horizontal\"", ",", "value", ":", "this", ".", "minute", ",", "min", ":", "o", ".", "minuteMin", ",", "max", ":", "minMax", ",", "step", ":", "o", ".", "stepMinute", ",", "slide", ":", "function", "(", "event", ",", "ui", ")", "{", "// update the global minute slider instance value with the current slider value\r", "tp_inst", ".", "minute_slider", ".", "slider", "(", "\"option\"", ",", "\"value\"", ",", "ui", ".", "value", ")", ";", "tp_inst", ".", "_onTimeChange", "(", ")", ";", "}", "}", ")", ";", "this", ".", "second_slider", "=", "$tp", ".", "find", "(", "'#ui_tpicker_second_'", "+", "dp_id", ")", ".", "slider", "(", "{", "orientation", ":", "\"horizontal\"", ",", "value", ":", "this", ".", "second", ",", "min", ":", "o", ".", "secondMin", ",", "max", ":", "secMax", ",", "step", ":", "o", ".", "stepSecond", ",", "slide", ":", "function", "(", "event", ",", "ui", ")", "{", "tp_inst", ".", "second_slider", ".", "slider", "(", "\"option\"", ",", "\"value\"", ",", "ui", ".", "value", ")", ";", "tp_inst", ".", "_onTimeChange", "(", ")", ";", "}", "}", ")", ";", "this", ".", "timezone_select", "=", "$tp", ".", "find", "(", "'#ui_tpicker_timezone_'", "+", "dp_id", ")", ".", "append", "(", "'<select></select>'", ")", ".", "find", "(", "\"select\"", ")", ";", "$", ".", "fn", ".", "append", ".", "apply", "(", "this", ".", "timezone_select", ",", "$", ".", "map", "(", "o", ".", "timezoneList", ",", "function", "(", "val", ",", "idx", ")", "{", "return", "$", "(", "\"<option />\"", ")", ".", "val", "(", "typeof", "val", "==", "\"object\"", "?", "val", ".", "value", ":", "val", ")", ".", "text", "(", "typeof", "val", "==", "\"object\"", "?", "val", ".", "label", ":", "val", ")", ";", "}", ")", ")", ";", "this", ".", "timezone_select", ".", "val", "(", "(", "typeof", "this", ".", "timezone", "!=", "\"undefined\"", "&&", "this", ".", "timezone", "!=", "null", "&&", "this", ".", "timezone", "!=", "\"\"", ")", "?", "this", ".", "timezone", ":", "o", ".", "timezone", ")", ";", "this", ".", "timezone_select", ".", "change", "(", "function", "(", ")", "{", "tp_inst", ".", "_onTimeChange", "(", ")", ";", "}", ")", ";", "// Add grid functionality\r", "if", "(", "o", ".", "showHour", "&&", "o", ".", "hourGrid", ">", "0", ")", "{", "size", "=", "100", "*", "hourGridSize", "*", "o", ".", "hourGrid", "/", "(", "hourMax", "-", "o", ".", "hourMin", ")", ";", "$tp", ".", "find", "(", "\".ui_tpicker_hour table\"", ")", ".", "css", "(", "{", "width", ":", "size", "+", "\"%\"", ",", "marginLeft", ":", "(", "size", "/", "(", "-", "2", "*", "hourGridSize", ")", ")", "+", "\"%\"", ",", "borderCollapse", ":", "'collapse'", "}", ")", ".", "find", "(", "\"td\"", ")", ".", "each", "(", "function", "(", "index", ")", "{", "$", "(", "this", ")", ".", "click", "(", "function", "(", ")", "{", "var", "h", "=", "$", "(", "this", ")", ".", "html", "(", ")", ";", "if", "(", "o", ".", "ampm", ")", "{", "var", "ap", "=", "h", ".", "substring", "(", "2", ")", ".", "toLowerCase", "(", ")", ",", "aph", "=", "parseInt", "(", "h", ".", "substring", "(", "0", ",", "2", ")", ",", "10", ")", ";", "if", "(", "ap", "==", "'a'", ")", "{", "if", "(", "aph", "==", "12", ")", "h", "=", "0", ";", "else", "h", "=", "aph", ";", "}", "else", "if", "(", "aph", "==", "12", ")", "h", "=", "12", ";", "else", "h", "=", "aph", "+", "12", ";", "}", "tp_inst", ".", "hour_slider", ".", "slider", "(", "\"option\"", ",", "\"value\"", ",", "h", ")", ";", "tp_inst", ".", "_onTimeChange", "(", ")", ";", "tp_inst", ".", "_onSelectHandler", "(", ")", ";", "}", ")", ".", "css", "(", "{", "cursor", ":", "'pointer'", ",", "width", ":", "(", "100", "/", "hourGridSize", ")", "+", "'%'", ",", "textAlign", ":", "'center'", ",", "overflow", ":", "'hidden'", "}", ")", ";", "}", ")", ";", "}", "if", "(", "o", ".", "showMinute", "&&", "o", ".", "minuteGrid", ">", "0", ")", "{", "size", "=", "100", "*", "minuteGridSize", "*", "o", ".", "minuteGrid", "/", "(", "minMax", "-", "o", ".", "minuteMin", ")", ";", "$tp", ".", "find", "(", "\".ui_tpicker_minute table\"", ")", ".", "css", "(", "{", "width", ":", "size", "+", "\"%\"", ",", "marginLeft", ":", "(", "size", "/", "(", "-", "2", "*", "minuteGridSize", ")", ")", "+", "\"%\"", ",", "borderCollapse", ":", "'collapse'", "}", ")", ".", "find", "(", "\"td\"", ")", ".", "each", "(", "function", "(", "index", ")", "{", "$", "(", "this", ")", ".", "click", "(", "function", "(", ")", "{", "tp_inst", ".", "minute_slider", ".", "slider", "(", "\"option\"", ",", "\"value\"", ",", "$", "(", "this", ")", ".", "html", "(", ")", ")", ";", "tp_inst", ".", "_onTimeChange", "(", ")", ";", "tp_inst", ".", "_onSelectHandler", "(", ")", ";", "}", ")", ".", "css", "(", "{", "cursor", ":", "'pointer'", ",", "width", ":", "(", "100", "/", "minuteGridSize", ")", "+", "'%'", ",", "textAlign", ":", "'center'", ",", "overflow", ":", "'hidden'", "}", ")", ";", "}", ")", ";", "}", "if", "(", "o", ".", "showSecond", "&&", "o", ".", "secondGrid", ">", "0", ")", "{", "$tp", ".", "find", "(", "\".ui_tpicker_second table\"", ")", ".", "css", "(", "{", "width", ":", "size", "+", "\"%\"", ",", "marginLeft", ":", "(", "size", "/", "(", "-", "2", "*", "secondGridSize", ")", ")", "+", "\"%\"", ",", "borderCollapse", ":", "'collapse'", "}", ")", ".", "find", "(", "\"td\"", ")", ".", "each", "(", "function", "(", "index", ")", "{", "$", "(", "this", ")", ".", "click", "(", "function", "(", ")", "{", "tp_inst", ".", "second_slider", ".", "slider", "(", "\"option\"", ",", "\"value\"", ",", "$", "(", "this", ")", ".", "html", "(", ")", ")", ";", "tp_inst", ".", "_onTimeChange", "(", ")", ";", "tp_inst", ".", "_onSelectHandler", "(", ")", ";", "}", ")", ".", "css", "(", "{", "cursor", ":", "'pointer'", ",", "width", ":", "(", "100", "/", "secondGridSize", ")", "+", "'%'", ",", "textAlign", ":", "'center'", ",", "overflow", ":", "'hidden'", "}", ")", ";", "}", ")", ";", "}", "var", "$buttonPanel", "=", "$dp", ".", "find", "(", "'.ui-datepicker-buttonpane'", ")", ";", "if", "(", "$buttonPanel", ".", "length", ")", "$buttonPanel", ".", "before", "(", "$tp", ")", ";", "else", "$dp", ".", "append", "(", "$tp", ")", ";", "this", ".", "$timeObj", "=", "$tp", ".", "find", "(", "'#ui_tpicker_time_'", "+", "dp_id", ")", ";", "if", "(", "this", ".", "inst", "!==", "null", ")", "{", "var", "timeDefined", "=", "this", ".", "timeDefined", ";", "this", ".", "_onTimeChange", "(", ")", ";", "this", ".", "timeDefined", "=", "timeDefined", ";", "}", "//Emulate datepicker onSelect behavior. Call on slidestop.\r", "var", "onSelectDelegate", "=", "function", "(", ")", "{", "tp_inst", ".", "_onSelectHandler", "(", ")", ";", "}", ";", "this", ".", "hour_slider", ".", "bind", "(", "'slidestop'", ",", "onSelectDelegate", ")", ";", "this", ".", "minute_slider", ".", "bind", "(", "'slidestop'", ",", "onSelectDelegate", ")", ";", "this", ".", "second_slider", ".", "bind", "(", "'slidestop'", ",", "onSelectDelegate", ")", ";", "}", "}"], "original_docstring": "######################################################################## generate and inject html for timepicker into ui datepicker ########################################################################", "docstring": {"block_comment": "                                                                         generate and inject html for timepicker into ui datepicker                                                                         ", "line_comment": ["Added by Peter Medeiros ", "Figure out what the hour minute second max should be based on the step values.", null, "Prevent displaying twice", "if   dp.find  div ui timepicker div    dp_id .length     0   ", "if we only want time picker...", "Updated by Peter Medeiros ", "Pass in Event and UI instance into slide function", "update the global minute slider instance value with the current slider value", "Add grid functionality", "Emulate datepicker onSelect behavior. Call on slidestop."]}, "docstring_tokens": ["generate", "and", "inject", "html", "for", "timepicker", "into", "ui", "datepicker"], "sample_id": 241, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004052", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\r\n\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t}", "code_tokens": ["function", "(", ")", "{", "tp_inst", ".", "_onSelectHandler", "(", ")", ";", "}"], "original_docstring": "Emulate datepicker onSelect behavior. Call on slidestop.", "docstring": {"block_comment": "Emulate datepicker onSelect behavior. Call on slidestop.", "line_comment": null}, "docstring_tokens": ["Emulate", "datepicker", "onSelect", "behavior", ".", "Call", "on", "slidestop", "."], "sample_id": 242, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004053", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\r\n\t\tvar finds = this._defaults.timeFormat.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|t{1,2}|z)/g),\r\n\t\t\torders = { h: -1, m: -1, s: -1, t: -1, z: -1 };\r\n\r\n\t\tif (finds)\r\n\t\t\tfor (var i = 0; i < finds.length; i++)\r\n\t\t\t\tif (orders[finds[i].toString().charAt(0)] == -1)\r\n\t\t\t\t\torders[finds[i].toString().charAt(0)] = i + 1;\r\n\r\n\t\treturn orders;\r\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "finds", "=", "this", ".", "_defaults", ".", "timeFormat", ".", "toLowerCase", "(", ")", ".", "match", "(", "/", "(h{1,2}|m{1,2}|s{1,2}|t{1,2}|z)", "/", "g", ")", ",", "orders", "=", "{", "h", ":", "-", "1", ",", "m", ":", "-", "1", ",", "s", ":", "-", "1", ",", "t", ":", "-", "1", ",", "z", ":", "-", "1", "}", ";", "if", "(", "finds", ")", "for", "(", "var", "i", "=", "0", ";", "i", "<", "finds", ".", "length", ";", "i", "++", ")", "if", "(", "orders", "[", "finds", "[", "i", "]", ".", "toString", "(", ")", ".", "charAt", "(", "0", ")", "]", "==", "-", "1", ")", "orders", "[", "finds", "[", "i", "]", ".", "toString", "(", ")", ".", "charAt", "(", "0", ")", "]", "=", "i", "+", "1", ";", "return", "orders", ";", "}"], "original_docstring": "######################################################################## figure out position of time elements.. cause js cant do named captures ########################################################################", "docstring": {"block_comment": "                                                                         figure out position of time elements.. cause js cant do named captures                                                                         ", "line_comment": null}, "docstring_tokens": ["figure", "out", "position", "of", "time", "elements", "..", "cause", "js", "cant", "do", "named", "captures"], "sample_id": 243, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004054", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(timeString, withDate) {\r\n\t\tvar regstr = this._defaults.timeFormat.toString()\r\n\t\t\t\t.replace(/h{1,2}/ig, '(\\\\d?\\\\d)')\r\n\t\t\t\t.replace(/m{1,2}/ig, '(\\\\d?\\\\d)')\r\n\t\t\t\t.replace(/s{1,2}/ig, '(\\\\d?\\\\d)')\r\n\t\t\t\t.replace(/t{1,2}/ig, '(am|pm|a|p)?')\r\n\t\t\t\t.replace(/z{1}/ig, '((\\\\+|-)\\\\d\\\\d\\\\d\\\\d)?')\r\n\t\t\t\t.replace(/\\s/g, '\\\\s?') + this._defaults.timeSuffix + '$',\r\n\t\t\torder = this._getFormatPositions(),\r\n\t\t\ttreg;\r\n\r\n\t\tif (!this.inst) this.inst = $.datepicker._getInst(this.$input[0]);\r\n\r\n\t\tif (withDate || !this._defaults.timeOnly) {\r\n\t\t\t// the time should come after x number of characters and a space.\r\n\t\t\t// x = at least the length of text specified by the date format\r\n\t\t\tvar dp_dateFormat = $.datepicker._get(this.inst, 'dateFormat');\r\n\t\t\t// escape special regex characters in the seperator\r\n\t\t\tvar specials = new RegExp(\"[.*+?|()\\\\[\\\\]{}\\\\\\\\]\", \"g\");\r\n\t\t\tregstr = '.{' + dp_dateFormat.length + ',}' + this._defaults.separator.replace(specials, \"\\\\$&\") + regstr;\r\n\t\t}\r\n\t\t\r\n\t\ttreg = timeString.match(new RegExp(regstr, 'i'));\r\n\r\n\t\tif (treg) {\r\n\t\t\tif (order.t !== -1)\r\n\t\t\t\tthis.ampm = ((treg[order.t] === undefined || treg[order.t].length === 0) ?\r\n\t\t\t\t\t'' :\r\n\t\t\t\t\t(treg[order.t].charAt(0).toUpperCase() == 'A') ? 'AM' : 'PM').toUpperCase();\r\n\r\n\t\t\tif (order.h !== -1) {\r\n\t\t\t\tif (this.ampm == 'AM' && treg[order.h] == '12') \r\n\t\t\t\t\tthis.hour = 0; // 12am = 0 hour\r\n\t\t\t\telse if (this.ampm == 'PM' && treg[order.h] != '12') \r\n\t\t\t\t\tthis.hour = (parseFloat(treg[order.h]) + 12).toFixed(0); // 12pm = 12 hour, any other pm = hour + 12\r\n\t\t\t\telse this.hour = Number(treg[order.h]);\r\n\t\t\t}\r\n\r\n\t\t\tif (order.m !== -1) this.minute = Number(treg[order.m]);\r\n\t\t\tif (order.s !== -1) this.second = Number(treg[order.s]);\r\n\t\t\tif (order.z !== -1) this.timezone = treg[order.z];\r\n\t\t\t\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\t\treturn false;\r\n\t}", "code_tokens": ["function", "(", "timeString", ",", "withDate", ")", "{", "var", "regstr", "=", "this", ".", "_defaults", ".", "timeFormat", ".", "toString", "(", ")", ".", "replace", "(", "/", "h{1,2}", "/", "ig", ",", "'(\\\\d?\\\\d)'", ")", ".", "replace", "(", "/", "m{1,2}", "/", "ig", ",", "'(\\\\d?\\\\d)'", ")", ".", "replace", "(", "/", "s{1,2}", "/", "ig", ",", "'(\\\\d?\\\\d)'", ")", ".", "replace", "(", "/", "t{1,2}", "/", "ig", ",", "'(am|pm|a|p)?'", ")", ".", "replace", "(", "/", "z{1}", "/", "ig", ",", "'((\\\\+|-)\\\\d\\\\d\\\\d\\\\d)?'", ")", ".", "replace", "(", "/", "\\s", "/", "g", ",", "'\\\\s?'", ")", "+", "this", ".", "_defaults", ".", "timeSuffix", "+", "'$'", ",", "order", "=", "this", ".", "_getFormatPositions", "(", ")", ",", "treg", ";", "if", "(", "!", "this", ".", "inst", ")", "this", ".", "inst", "=", "$", ".", "datepicker", ".", "_getInst", "(", "this", ".", "$input", "[", "0", "]", ")", ";", "if", "(", "withDate", "||", "!", "this", ".", "_defaults", ".", "timeOnly", ")", "{", "// the time should come after x number of characters and a space.\r", "// x = at least the length of text specified by the date format\r", "var", "dp_dateFormat", "=", "$", ".", "datepicker", ".", "_get", "(", "this", ".", "inst", ",", "'dateFormat'", ")", ";", "// escape special regex characters in the seperator\r", "var", "specials", "=", "new", "RegExp", "(", "\"[.*+?|()\\\\[\\\\]{}\\\\\\\\]\"", ",", "\"g\"", ")", ";", "regstr", "=", "'.{'", "+", "dp_dateFormat", ".", "length", "+", "',}'", "+", "this", ".", "_defaults", ".", "separator", ".", "replace", "(", "specials", ",", "\"\\\\$&\"", ")", "+", "regstr", ";", "}", "treg", "=", "timeString", ".", "match", "(", "new", "RegExp", "(", "regstr", ",", "'i'", ")", ")", ";", "if", "(", "treg", ")", "{", "if", "(", "order", ".", "t", "!==", "-", "1", ")", "this", ".", "ampm", "=", "(", "(", "treg", "[", "order", ".", "t", "]", "===", "undefined", "||", "treg", "[", "order", ".", "t", "]", ".", "length", "===", "0", ")", "?", "''", ":", "(", "treg", "[", "order", ".", "t", "]", ".", "charAt", "(", "0", ")", ".", "toUpperCase", "(", ")", "==", "'A'", ")", "?", "'AM'", ":", "'PM'", ")", ".", "toUpperCase", "(", ")", ";", "if", "(", "order", ".", "h", "!==", "-", "1", ")", "{", "if", "(", "this", ".", "ampm", "==", "'AM'", "&&", "treg", "[", "order", ".", "h", "]", "==", "'12'", ")", "this", ".", "hour", "=", "0", ";", "// 12am = 0 hour\r", "else", "if", "(", "this", ".", "ampm", "==", "'PM'", "&&", "treg", "[", "order", ".", "h", "]", "!=", "'12'", ")", "this", ".", "hour", "=", "(", "parseFloat", "(", "treg", "[", "order", ".", "h", "]", ")", "+", "12", ")", ".", "toFixed", "(", "0", ")", ";", "// 12pm = 12 hour, any other pm = hour + 12\r", "else", "this", ".", "hour", "=", "Number", "(", "treg", "[", "order", ".", "h", "]", ")", ";", "}", "if", "(", "order", ".", "m", "!==", "-", "1", ")", "this", ".", "minute", "=", "Number", "(", "treg", "[", "order", ".", "m", "]", ")", ";", "if", "(", "order", ".", "s", "!==", "-", "1", ")", "this", ".", "second", "=", "Number", "(", "treg", "[", "order", ".", "s", "]", ")", ";", "if", "(", "order", ".", "z", "!==", "-", "1", ")", "this", ".", "timezone", "=", "treg", "[", "order", ".", "z", "]", ";", "return", "true", ";", "}", "return", "false", ";", "}"], "original_docstring": "######################################################################## parse the time string from input value or _setTime ########################################################################", "docstring": {"block_comment": "                                                                         parse the time string from input value or _setTime                                                                         ", "line_comment": ["the time should come after x number of characters and a space.", "x   at least the length of text specified by the date format", "escape special regex characters in the seperator", "12am   0 hour", "12pm   12 hour, any other pm   hour   12"]}, "docstring_tokens": ["parse", "the", "time", "string", "from", "input", "value", "or", "_setTime"], "sample_id": 244, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004055", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(dp_inst) {\r\n\t\tvar currDT = (this.$altInput && this._defaults.altFieldTimeOnly) ?\r\n\t\t\t\tthis.$input.val() + ' ' + this.$altInput.val() : \r\n\t\t\t\tthis.$input.val();\r\n\r\n\t\tthis.timeDefined = this._parseTime(currDT);\r\n\t\tthis._limitMinMaxDateTime(dp_inst, false);\r\n\t\tthis._injectTimePicker();\r\n\t}", "code_tokens": ["function", "(", "dp_inst", ")", "{", "var", "currDT", "=", "(", "this", ".", "$altInput", "&&", "this", ".", "_defaults", ".", "altFieldTimeOnly", ")", "?", "this", ".", "$input", ".", "val", "(", ")", "+", "' '", "+", "this", ".", "$altInput", ".", "val", "(", ")", ":", "this", ".", "$input", ".", "val", "(", ")", ";", "this", ".", "timeDefined", "=", "this", ".", "_parseTime", "(", "currDT", ")", ";", "this", ".", "_limitMinMaxDateTime", "(", "dp_inst", ",", "false", ")", ";", "this", ".", "_injectTimePicker", "(", ")", ";", "}"], "original_docstring": "######################################################################## add our sliders to the calendar ########################################################################", "docstring": {"block_comment": "                                                                         add our sliders to the calendar                                                                         ", "line_comment": null}, "docstring_tokens": ["add", "our", "sliders", "to", "the", "calendar"], "sample_id": 245, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004056", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function($input, o) {\r\n\t\tvar tp_inst = new Timepicker(),\r\n\t\t\tinlineSettings = {};\r\n\t\t\t\r\n\t\tfor (var attrName in this._defaults) {\r\n\t\t\tvar attrValue = $input.attr('time:' + attrName);\r\n\t\t\tif (attrValue) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tinlineSettings[attrName] = eval(attrValue);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tinlineSettings[attrName] = attrValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\ttp_inst._defaults = $.extend({}, this._defaults, inlineSettings, o, {\r\n\t\t\tbeforeShow: function(input, dp_inst) {\r\n\t\t\t\tif ($.isFunction(o.beforeShow))\r\n\t\t\t\t\to.beforeShow(input, dp_inst, tp_inst);\r\n\t\t\t},\r\n\t\t\tonChangeMonthYear: function(year, month, dp_inst) {\r\n\t\t\t\t// Update the time as well : this prevents the time from disappearing from the $input field.\r\n\t\t\t\ttp_inst._updateDateTime(dp_inst);\r\n\t\t\t\tif ($.isFunction(o.onChangeMonthYear))\r\n\t\t\t\t\to.onChangeMonthYear.call($input[0], year, month, dp_inst, tp_inst);\r\n\t\t\t},\r\n\t\t\tonClose: function(dateText, dp_inst) {\r\n\t\t\t\tif (tp_inst.timeDefined === true && $input.val() != '')\r\n\t\t\t\t\ttp_inst._updateDateTime(dp_inst);\r\n\t\t\t\tif ($.isFunction(o.onClose))\r\n\t\t\t\t\to.onClose.call($input[0], dateText, dp_inst, tp_inst);\r\n\t\t\t},\r\n\t\t\ttimepicker: tp_inst // add timepicker as a property of datepicker: $.datepicker._get(dp_inst, 'timepicker');\r\n\t\t});\r\n\r\n\t\ttp_inst.hour = tp_inst._defaults.hour;\r\n\t\ttp_inst.minute = tp_inst._defaults.minute;\r\n\t\ttp_inst.second = tp_inst._defaults.second;\r\n\t\ttp_inst.ampm = '';\r\n\t\ttp_inst.$input = $input;\r\n\r\n\t\tif (o.altField)\r\n\t\t\ttp_inst.$altInput = $(o.altField)\r\n\t\t\t\t.css({ cursor: 'pointer' })\r\n\t\t\t\t.focus(function(){ $input.trigger(\"focus\"); });\r\n\t\t\t\t\t\r\n\t\t// datepicker needs minDate/maxDate, timepicker needs minDateTime/maxDateTime..\r\n\t\tif(tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date)\r\n\t\t\ttp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime());\r\n\t\tif(tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date)\r\n\t\t\ttp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime());\r\n\t\tif(tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date)\r\n\t\t\ttp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime());\r\n\t\tif(tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date)\r\n\t\t\ttp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime());\r\n\t\t\r\n\t\treturn tp_inst;\r\n\t}", "code_tokens": ["function", "(", "$input", ",", "o", ")", "{", "var", "tp_inst", "=", "new", "Timepicker", "(", ")", ",", "inlineSettings", "=", "{", "}", ";", "for", "(", "var", "attrName", "in", "this", ".", "_defaults", ")", "{", "var", "attrValue", "=", "$input", ".", "attr", "(", "'time:'", "+", "attrName", ")", ";", "if", "(", "attrValue", ")", "{", "try", "{", "inlineSettings", "[", "attrName", "]", "=", "eval", "(", "attrValue", ")", ";", "}", "catch", "(", "err", ")", "{", "inlineSettings", "[", "attrName", "]", "=", "attrValue", ";", "}", "}", "}", "tp_inst", ".", "_defaults", "=", "$", ".", "extend", "(", "{", "}", ",", "this", ".", "_defaults", ",", "inlineSettings", ",", "o", ",", "{", "beforeShow", ":", "function", "(", "input", ",", "dp_inst", ")", "{", "if", "(", "$", ".", "isFunction", "(", "o", ".", "beforeShow", ")", ")", "o", ".", "beforeShow", "(", "input", ",", "dp_inst", ",", "tp_inst", ")", ";", "}", ",", "onChangeMonthYear", ":", "function", "(", "year", ",", "month", ",", "dp_inst", ")", "{", "// Update the time as well : this prevents the time from disappearing from the $input field.\r", "tp_inst", ".", "_updateDateTime", "(", "dp_inst", ")", ";", "if", "(", "$", ".", "isFunction", "(", "o", ".", "onChangeMonthYear", ")", ")", "o", ".", "onChangeMonthYear", ".", "call", "(", "$input", "[", "0", "]", ",", "year", ",", "month", ",", "dp_inst", ",", "tp_inst", ")", ";", "}", ",", "onClose", ":", "function", "(", "dateText", ",", "dp_inst", ")", "{", "if", "(", "tp_inst", ".", "timeDefined", "===", "true", "&&", "$input", ".", "val", "(", ")", "!=", "''", ")", "tp_inst", ".", "_updateDateTime", "(", "dp_inst", ")", ";", "if", "(", "$", ".", "isFunction", "(", "o", ".", "onClose", ")", ")", "o", ".", "onClose", ".", "call", "(", "$input", "[", "0", "]", ",", "dateText", ",", "dp_inst", ",", "tp_inst", ")", ";", "}", ",", "timepicker", ":", "tp_inst", "// add timepicker as a property of datepicker: $.datepicker._get(dp_inst, 'timepicker');\r", "}", ")", ";", "tp_inst", ".", "hour", "=", "tp_inst", ".", "_defaults", ".", "hour", ";", "tp_inst", ".", "minute", "=", "tp_inst", ".", "_defaults", ".", "minute", ";", "tp_inst", ".", "second", "=", "tp_inst", ".", "_defaults", ".", "second", ";", "tp_inst", ".", "ampm", "=", "''", ";", "tp_inst", ".", "$input", "=", "$input", ";", "if", "(", "o", ".", "altField", ")", "tp_inst", ".", "$altInput", "=", "$", "(", "o", ".", "altField", ")", ".", "css", "(", "{", "cursor", ":", "'pointer'", "}", ")", ".", "focus", "(", "function", "(", ")", "{", "$input", ".", "trigger", "(", "\"focus\"", ")", ";", "}", ")", ";", "// datepicker needs minDate/maxDate, timepicker needs minDateTime/maxDateTime..\r", "if", "(", "tp_inst", ".", "_defaults", ".", "minDate", "!==", "undefined", "&&", "tp_inst", ".", "_defaults", ".", "minDate", "instanceof", "Date", ")", "tp_inst", ".", "_defaults", ".", "minDateTime", "=", "new", "Date", "(", "tp_inst", ".", "_defaults", ".", "minDate", ".", "getTime", "(", ")", ")", ";", "if", "(", "tp_inst", ".", "_defaults", ".", "minDateTime", "!==", "undefined", "&&", "tp_inst", ".", "_defaults", ".", "minDateTime", "instanceof", "Date", ")", "tp_inst", ".", "_defaults", ".", "minDate", "=", "new", "Date", "(", "tp_inst", ".", "_defaults", ".", "minDateTime", ".", "getTime", "(", ")", ")", ";", "if", "(", "tp_inst", ".", "_defaults", ".", "maxDate", "!==", "undefined", "&&", "tp_inst", ".", "_defaults", ".", "maxDate", "instanceof", "Date", ")", "tp_inst", ".", "_defaults", ".", "maxDateTime", "=", "new", "Date", "(", "tp_inst", ".", "_defaults", ".", "maxDate", ".", "getTime", "(", ")", ")", ";", "if", "(", "tp_inst", ".", "_defaults", ".", "maxDateTime", "!==", "undefined", "&&", "tp_inst", ".", "_defaults", ".", "maxDateTime", "instanceof", "Date", ")", "tp_inst", ".", "_defaults", ".", "maxDate", "=", "new", "Date", "(", "tp_inst", ".", "_defaults", ".", "maxDateTime", ".", "getTime", "(", ")", ")", ";", "return", "tp_inst", ";", "}"], "original_docstring": "######################################################################## Create a new Timepicker instance ########################################################################", "docstring": {"block_comment": "                                                                         Create a new Timepicker instance                                                                         ", "line_comment": ["Update the time as well   this prevents the time from disappearing from the  input field.", "add timepicker as a property of datepicker   .datepicker._get dp_inst,  timepicker   ", "datepicker needs minDate maxDate, timepicker needs minDateTime maxDateTime.."]}, "docstring_tokens": ["Create", "a", "new", "Timepicker", "instance"], "sample_id": 246, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004057", "repo": "kaiquewdev/liber", "path": "app/webroot/js/others/jquery-ui-timepicker-addon.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(settings) {\r\n\t\textendRemove(this._defaults, settings || {});\r\n\t\treturn this;\r\n\t}", "code_tokens": ["function", "(", "settings", ")", "{", "extendRemove", "(", "this", ".", "_defaults", ",", "settings", "||", "{", "}", ")", ";", "return", "this", ";", "}"], "original_docstring": "/* Override the default settings for all instances of the time picker.\n@param  settings  object - the new settings to use as defaults (anonymous object)\n@return the manager object", "docstring": {"block_comment": "Override the default settings for all instances of the time picker.", "line_comment": null}, "docstring_tokens": ["Override", "the", "default", "settings", "for", "all", "instances", "of", "the", "time", "picker", "."], "sample_id": 247, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004058", "repo": "robert1978/CometVisu", "path": "source/class/cv/ui/structure/pure/Slide.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function () {\n      return \"\";\n    }", "code_tokens": ["function", "(", ")", "{", "return", "\"\"", ";", "}"], "original_docstring": "\nGet the value that should be send to backend after the action has been triggered\n", "docstring": {"block_comment": "Get the value that should be send to backend after the action has been triggered", "line_comment": null}, "docstring_tokens": ["Get", "the", "value", "that", "should", "be", "send", "to", "backend", "after", "the", "action", "has", "been", "triggered"], "sample_id": 248, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004059", "repo": "robert1978/CometVisu", "path": "source/class/cv/ui/structure/pure/Slide.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(value) {\n      if (!this.__initialized || this.__skipUpdatesFromSlider === true) { return; }\n      if (this.isSendOnFinish() === false || this.__slider.isInPointerMove()) {\n        var currentValue = this.getValue();\n        this.sendToBackend(value, function(addr) {\n          var newValue = cv.Transform.encode(addr[0], value);\n          return !isNaN(newValue) && newValue !== cv.Transform.encode(addr[0], currentValue);\n        });\n      }\n      this.setValue(value);\n    }", "code_tokens": ["function", "(", "value", ")", "{", "if", "(", "!", "this", ".", "__initialized", "||", "this", ".", "__skipUpdatesFromSlider", "===", "true", ")", "{", "return", ";", "}", "if", "(", "this", ".", "isSendOnFinish", "(", ")", "===", "false", "||", "this", ".", "__slider", ".", "isInPointerMove", "(", ")", ")", "{", "var", "currentValue", "=", "this", ".", "getValue", "(", ")", ";", "this", ".", "sendToBackend", "(", "value", ",", "function", "(", "addr", ")", "{", "var", "newValue", "=", "cv", ".", "Transform", ".", "encode", "(", "addr", "[", "0", "]", ",", "value", ")", ";", "return", "!", "isNaN", "(", "newValue", ")", "&&", "newValue", "!==", "cv", ".", "Transform", ".", "encode", "(", "addr", "[", "0", "]", ",", "currentValue", ")", ";", "}", ")", ";", "}", "this", ".", "setValue", "(", "value", ")", ";", "}"], "original_docstring": "\nHandle incoming value changes send by the slider widget (e.g. triggered by user interaction)\n@param value {Number}\n", "docstring": {"block_comment": "Handle incoming value changes send by the slider widget  e.g. triggered by user interaction ", "line_comment": null}, "docstring_tokens": ["Handle", "incoming", "value", "changes", "send", "by", "the", "slider", "widget", "e", ".", "g", ".", "triggered", "by", "user", "interaction"], "sample_id": 249, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004061", "repo": "robert1978/CometVisu", "path": "source/class/cv/ui/structure/pure/Slide.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\n      if (this.__slider) {\n        this.__skipUpdatesFromSlider = true;\n        this.__slider.updatePositions();\n        this.__skipUpdatesFromSlider = false;\n      }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "__slider", ")", "{", "this", ".", "__skipUpdatesFromSlider", "=", "true", ";", "this", ".", "__slider", ".", "updatePositions", "(", ")", ";", "this", ".", "__skipUpdatesFromSlider", "=", "false", ";", "}", "}"], "original_docstring": "\nRefresh the slider position\n", "docstring": {"block_comment": "Refresh the slider position", "line_comment": null}, "docstring_tokens": ["Refresh", "the", "slider", "position"], "sample_id": 250, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004062", "repo": "Rostlab/JS16_ProjectC_Group10", "path": "editor/js/cities.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function (allCities){\n\t\t\tJSON.parse(allCities).map(function (city,i) {var x = \"\";\n\t\tif(city.coordX) {\n\t\t\taddMarker(city, i);\n        \tx = ' class=\"onmap\"';\n\t\t}\n\t\tvar li = $('<li'+x+'>'+city.name+'</li>').click(function () {\n\t\t\tgotDB.setCurrent(i);\n\t\t});\n\t\tul.append(li);\n\t\t\t});\n\t}", "code_tokens": ["function", "(", "allCities", ")", "{", "JSON", ".", "parse", "(", "allCities", ")", ".", "map", "(", "function", "(", "city", ",", "i", ")", "{", "var", "x", "=", "\"\"", ";", "if", "(", "city", ".", "coordX", ")", "{", "addMarker", "(", "city", ",", "i", ")", ";", "x", "=", "' class=\"onmap\"'", ";", "}", "var", "li", "=", "$", "(", "'<li'", "+", "x", "+", "'>'", "+", "city", ".", "name", "+", "'</li>'", ")", ".", "click", "(", "function", "(", ")", "{", "gotDB", ".", "setCurrent", "(", "i", ")", ";", "}", ")", ";", "ul", ".", "append", "(", "li", ")", ";", "}", ")", ";", "}"], "original_docstring": "Static Link jQuery.get(\"https://got-api.bruck.me/api/cities\", {},", "docstring": {"block_comment": "Static Link jQuery.get     ,", "line_comment": null}, "docstring_tokens": ["Static", "Link", "jQuery", ".", "get"], "sample_id": 251, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004063", "repo": "zackaholic/ESPOV", "path": "WiFi_POV/dev/drawingCanvas.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function (mousePos) {\n      return (mousePos.x < this.pixelSize * this.cols && mousePos.y < this.pixelSize * this.rows);\n    }", "code_tokens": ["function", "(", "mousePos", ")", "{", "return", "(", "mousePos", ".", "x", "<", "this", ".", "pixelSize", "*", "this", ".", "cols", "&&", "mousePos", ".", "y", "<", "this", ".", "pixelSize", "*", "this", ".", "rows", ")", ";", "}"], "original_docstring": "a more general drawable(): const contained = (coord, width, height, scale) { return (coord.x < scale * width && coord.y < scale * height); }", "docstring": {"block_comment": "a more general drawable    const contained    coord, width, height, scale    return  coord.x   scale   width    coord.y   scale   height    ", "line_comment": null}, "docstring_tokens": ["a", "more", "general", "drawable", "const", "contained", "coord", "width", "height", "scale", "return", "coord", ".", "x", "scale", "width", "coord", ".", "y", "scale", "height"], "sample_id": 252, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004064", "repo": "zackaholic/ESPOV", "path": "WiFi_POV/dev/drawingCanvas.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\n      this.ctx.clearRect(0, 0, this.element.width, this.element.height);\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "ctx", ".", "clearRect", "(", "0", ",", "0", ",", "this", ".", "element", ".", "width", ",", "this", ".", "element", ".", "height", ")", ";", "}"], "original_docstring": "const clear = (context, canvas) => { context.clearRect(0, 0, canvas.width, canvas.height); }", "docstring": {"block_comment": "const clear    context, canvas       context.clearRect 0, 0, canvas.width, canvas.height    ", "line_comment": null}, "docstring_tokens": ["const", "clear", "context", "canvas", "context", ".", "clearRect", "0", "0", "canvas", ".", "width", "canvas", ".", "height"], "sample_id": 253, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004065", "repo": "Yukarumya/Yukarum-Redfoxes", "path": "browser/base/content/test/general/browser_selectpopup.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function(event) {\n    ok(false, \"Should not get keypress event\");\n  }", "code_tokens": ["function", "(", "event", ")", "{", "ok", "(", "false", ",", "\"Should not get keypress event\"", ")", ";", "}"], "original_docstring": "Backspace should not go back", "docstring": {"block_comment": "Backspace should not go back", "line_comment": null}, "docstring_tokens": ["Backspace", "should", "not", "go", "back"], "sample_id": 254, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004066", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      // Don't show the scale service if we're viewing a status list (e.g.\n      // errors) or if the service is a subordinate.\n      if (this.props.unitStatus || this.props.service.get('subordinate')) {\n        return;\n      }\n      return (\n        <div className=\"unit-list__actions\">\n          <juju.components.OverviewAction\n            action={this._navigate}\n            icon=\"plus_box_16\"\n            title=\"Scale application\" />\n        </div>);\n    }", "code_tokens": ["function", "(", ")", "{", "// Don't show the scale service if we're viewing a status list (e.g.", "// errors) or if the service is a subordinate.", "if", "(", "this", ".", "props", ".", "unitStatus", "||", "this", ".", "props", ".", "service", ".", "get", "(", "'subordinate'", ")", ")", "{", "return", ";", "}", "return", "(", "<", "div", "className", "=", "\"unit-list__actions\"", ">", "\n          ", "<", "juju", ".", "components", ".", "OverviewAction", "action", "=", "{", "this", ".", "_navigate", "}", "icon", "=", "\"plus_box_16\"", "title", "=", "\"Scale application\"", "/", ">", "\n        ", "<", "/", "div", ">", ")", ";", "}"], "original_docstring": "\nGenerate the scale service action.\n\n@method _generateScaleService\n@returns {Object} The scale service component.\n", "docstring": {"block_comment": "Generate the scale service action.", "line_comment": ["Don t show the scale service if we re viewing a status list  e.g.", "errors  or if the service is a subordinate."]}, "docstring_tokens": ["Generate", "the", "scale", "service", "action", "."], "sample_id": 255, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004066", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      // Don't show the scale service if we're viewing a status list (e.g.\n      // errors) or if the service is a subordinate.\n      if (this.props.unitStatus || this.props.service.get('subordinate')) {\n        return;\n      }\n      return (\n        <div className=\"unit-list__actions\">\n          <juju.components.OverviewAction\n            action={this._navigate}\n            icon=\"plus_box_16\"\n            title=\"Scale application\" />\n        </div>);\n    }", "code_tokens": ["function", "(", ")", "{", "// Don't show the scale service if we're viewing a status list (e.g.", "// errors) or if the service is a subordinate.", "if", "(", "this", ".", "props", ".", "unitStatus", "||", "this", ".", "props", ".", "service", ".", "get", "(", "'subordinate'", ")", ")", "{", "return", ";", "}", "return", "(", "<", "div", "className", "=", "\"unit-list__actions\"", ">", "\n          ", "<", "juju", ".", "components", ".", "OverviewAction", "action", "=", "{", "this", ".", "_navigate", "}", "icon", "=", "\"plus_box_16\"", "title", "=", "\"Scale application\"", "/", ">", "\n        ", "<", "/", "div", ">", ")", ";", "}"], "original_docstring": "\nGenerate the scale service action.\n\n@method _generateScaleService\n@returns {Object} The scale service component.\n", "docstring": {"block_comment": "Generate the scale service action.", "line_comment": ["Don t show the scale service if we re viewing a status list  e.g.", "errors  or if the service is a subordinate."]}, "docstring_tokens": ["{", "Object", "}", "The", "scale", "service", "component", "."], "sample_id": 255, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004067", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      if (this.props.units.length === 0) {\n        return;\n      }\n      var buttons = [];\n      var disabled = this.state.activeCount === 0 ||\n        this.props.acl.isReadOnly();\n      if (this.props.unitStatus === 'error') {\n        buttons.push({\n          title: 'Resolve',\n          type: 'base',\n          action: this._handleUpdateUnits.bind(this, 'resolve'),\n          disabled: disabled\n        });\n        buttons.push({\n          title: 'Retry',\n          type: 'base',\n          action: this._handleUpdateUnits.bind(this, 'retry'),\n          disabled: disabled\n        });\n      }\n      buttons.push({\n        title: 'Remove',\n        type: 'neutral',\n        action: this._handleUpdateUnits.bind(this, 'remove'),\n        disabled: disabled\n      });\n      return (\n        <juju.components.ButtonRow\n          buttons={buttons} />);\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "props", ".", "units", ".", "length", "===", "0", ")", "{", "return", ";", "}", "var", "buttons", "=", "[", "]", ";", "var", "disabled", "=", "this", ".", "state", ".", "activeCount", "===", "0", "||", "this", ".", "props", ".", "acl", ".", "isReadOnly", "(", ")", ";", "if", "(", "this", ".", "props", ".", "unitStatus", "===", "'error'", ")", "{", "buttons", ".", "push", "(", "{", "title", ":", "'Resolve'", ",", "type", ":", "'base'", ",", "action", ":", "this", ".", "_handleUpdateUnits", ".", "bind", "(", "this", ",", "'resolve'", ")", ",", "disabled", ":", "disabled", "}", ")", ";", "buttons", ".", "push", "(", "{", "title", ":", "'Retry'", ",", "type", ":", "'base'", ",", "action", ":", "this", ".", "_handleUpdateUnits", ".", "bind", "(", "this", ",", "'retry'", ")", ",", "disabled", ":", "disabled", "}", ")", ";", "}", "buttons", ".", "push", "(", "{", "title", ":", "'Remove'", ",", "type", ":", "'neutral'", ",", "action", ":", "this", ".", "_handleUpdateUnits", ".", "bind", "(", "this", ",", "'remove'", ")", ",", "disabled", ":", "disabled", "}", ")", ";", "return", "(", "<", "juju", ".", "components", ".", "ButtonRow", "buttons", "=", "{", "buttons", "}", "/", ">", ")", ";", "}"], "original_docstring": "\nGenerate the buttons for the status.\n\n@method _generateButtons\n@returns {Array} The list of buttons\n", "docstring": {"block_comment": "Generate the buttons for the status.", "line_comment": null}, "docstring_tokens": ["Generate", "the", "buttons", "for", "the", "status", "."], "sample_id": 256, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004067", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      if (this.props.units.length === 0) {\n        return;\n      }\n      var buttons = [];\n      var disabled = this.state.activeCount === 0 ||\n        this.props.acl.isReadOnly();\n      if (this.props.unitStatus === 'error') {\n        buttons.push({\n          title: 'Resolve',\n          type: 'base',\n          action: this._handleUpdateUnits.bind(this, 'resolve'),\n          disabled: disabled\n        });\n        buttons.push({\n          title: 'Retry',\n          type: 'base',\n          action: this._handleUpdateUnits.bind(this, 'retry'),\n          disabled: disabled\n        });\n      }\n      buttons.push({\n        title: 'Remove',\n        type: 'neutral',\n        action: this._handleUpdateUnits.bind(this, 'remove'),\n        disabled: disabled\n      });\n      return (\n        <juju.components.ButtonRow\n          buttons={buttons} />);\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "props", ".", "units", ".", "length", "===", "0", ")", "{", "return", ";", "}", "var", "buttons", "=", "[", "]", ";", "var", "disabled", "=", "this", ".", "state", ".", "activeCount", "===", "0", "||", "this", ".", "props", ".", "acl", ".", "isReadOnly", "(", ")", ";", "if", "(", "this", ".", "props", ".", "unitStatus", "===", "'error'", ")", "{", "buttons", ".", "push", "(", "{", "title", ":", "'Resolve'", ",", "type", ":", "'base'", ",", "action", ":", "this", ".", "_handleUpdateUnits", ".", "bind", "(", "this", ",", "'resolve'", ")", ",", "disabled", ":", "disabled", "}", ")", ";", "buttons", ".", "push", "(", "{", "title", ":", "'Retry'", ",", "type", ":", "'base'", ",", "action", ":", "this", ".", "_handleUpdateUnits", ".", "bind", "(", "this", ",", "'retry'", ")", ",", "disabled", ":", "disabled", "}", ")", ";", "}", "buttons", ".", "push", "(", "{", "title", ":", "'Remove'", ",", "type", ":", "'neutral'", ",", "action", ":", "this", ".", "_handleUpdateUnits", ".", "bind", "(", "this", ",", "'remove'", ")", ",", "disabled", ":", "disabled", "}", ")", ";", "return", "(", "<", "juju", ".", "components", ".", "ButtonRow", "buttons", "=", "{", "buttons", "}", "/", ">", ")", ";", "}"], "original_docstring": "\nGenerate the buttons for the status.\n\n@method _generateButtons\n@returns {Array} The list of buttons\n", "docstring": {"block_comment": "Generate the buttons for the status.", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "The", "list", "of", "buttons"], "sample_id": 256, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004068", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      var activeCount = 0;\n      var refs = this.refs;\n      Object.keys(refs).forEach((ref) => {\n        if (ref.split('-')[0] === 'CheckListItem') {\n          if (refs[ref].state.checked) {\n            activeCount += 1;\n          }\n        }\n      });\n      this.setState({'activeCount': activeCount});\n    }", "code_tokens": ["function", "(", ")", "{", "var", "activeCount", "=", "0", ";", "var", "refs", "=", "this", ".", "refs", ";", "Object", ".", "keys", "(", "refs", ")", ".", "forEach", "(", "(", "ref", ")", "=>", "{", "if", "(", "ref", ".", "split", "(", "'-'", ")", "[", "0", "]", "===", "'CheckListItem'", ")", "{", "if", "(", "refs", "[", "ref", "]", ".", "state", ".", "checked", ")", "{", "activeCount", "+=", "1", ";", "}", "}", "}", ")", ";", "this", ".", "setState", "(", "{", "'activeCount'", ":", "activeCount", "}", ")", ";", "}"], "original_docstring": "\nUpdate the count of the number of active checkboxes.\n\n@method _updateActiveCount\n", "docstring": {"block_comment": "Update the count of the number of active checkboxes.", "line_comment": null}, "docstring_tokens": ["Update", "the", "count", "of", "the", "number", "of", "active", "checkboxes", "."], "sample_id": 257, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004069", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      if (this.props.units.length === 0) {\n        return (\n          <div className=\"unit-list__message\">\n            No units for this application. Scale to add units.\n          </div>);\n      }\n      var components = [];\n      var groups = this._generateGroups();\n      Object.keys(groups).forEach(function(key) {\n        var group = groups[key];\n        components = components.concat(this._generateUnitList(group));\n      }, this);\n      return (\n        <ul className=\"unit-list__units\">\n          {components}\n        </ul>);\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "props", ".", "units", ".", "length", "===", "0", ")", "{", "return", "(", "<", "div", "className", "=", "\"unit-list__message\"", ">", "\n            No units for this application. Scale to add units.\n          ", "<", "/", "div", ">", ")", ";", "}", "var", "components", "=", "[", "]", ";", "var", "groups", "=", "this", ".", "_generateGroups", "(", ")", ";", "Object", ".", "keys", "(", "groups", ")", ".", "forEach", "(", "function", "(", "key", ")", "{", "var", "group", "=", "groups", "[", "key", "]", ";", "components", "=", "components", ".", "concat", "(", "this", ".", "_generateUnitList", "(", "group", ")", ")", ";", "}", ",", "this", ")", ";", "return", "(", "<", "ul", "className", "=", "\"unit-list__units\"", ">", "\n          ", "{", "components", "}", "\n        ", "<", "/", "ul", ">", ")", ";", "}"], "original_docstring": "\nGenerate the groups of units.\n\n@method _generateListGroups\n@returns {Object} The list components\n", "docstring": {"block_comment": "Generate the groups of units.", "line_comment": null}, "docstring_tokens": ["Generate", "the", "groups", "of", "units", "."], "sample_id": 258, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004069", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      if (this.props.units.length === 0) {\n        return (\n          <div className=\"unit-list__message\">\n            No units for this application. Scale to add units.\n          </div>);\n      }\n      var components = [];\n      var groups = this._generateGroups();\n      Object.keys(groups).forEach(function(key) {\n        var group = groups[key];\n        components = components.concat(this._generateUnitList(group));\n      }, this);\n      return (\n        <ul className=\"unit-list__units\">\n          {components}\n        </ul>);\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "props", ".", "units", ".", "length", "===", "0", ")", "{", "return", "(", "<", "div", "className", "=", "\"unit-list__message\"", ">", "\n            No units for this application. Scale to add units.\n          ", "<", "/", "div", ">", ")", ";", "}", "var", "components", "=", "[", "]", ";", "var", "groups", "=", "this", ".", "_generateGroups", "(", ")", ";", "Object", ".", "keys", "(", "groups", ")", ".", "forEach", "(", "function", "(", "key", ")", "{", "var", "group", "=", "groups", "[", "key", "]", ";", "components", "=", "components", ".", "concat", "(", "this", ".", "_generateUnitList", "(", "group", ")", ")", ";", "}", ",", "this", ")", ";", "return", "(", "<", "ul", "className", "=", "\"unit-list__units\"", ">", "\n          ", "{", "components", "}", "\n        ", "<", "/", "ul", ">", ")", ";", "}"], "original_docstring": "\nGenerate the groups of units.\n\n@method _generateListGroups\n@returns {Object} The list components\n", "docstring": {"block_comment": "Generate the groups of units.", "line_comment": null}, "docstring_tokens": ["{", "Object", "}", "The", "list", "components"], "sample_id": 258, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004070", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      var units = this.props.units;\n      var groups = {};\n      var unitStatus = this.props.unitStatus;\n      if (unitStatus === 'error') {\n        var errors = {};\n        units.forEach(function(unit) {\n          var agentState = unit.agent_state_info;\n          if (!errors[agentState]) {\n            errors[agentState] = [];\n          }\n          errors[agentState].push(unit);\n        });\n        Object.keys(errors).forEach(function (error, i) {\n          var key = 'select-all-' + i;\n          groups[key] = {\n            label: error,\n            units: errors[error],\n            count: errors[error].length,\n            key: key\n          };\n        });\n      } else {\n        var key = 'select-all';\n        var status = unitStatus || 'all';\n        groups[key] = {\n          label: `Select ${status} units`,\n          units: units,\n          count: units.length,\n          key: key\n        };\n      }\n      return groups;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "units", "=", "this", ".", "props", ".", "units", ";", "var", "groups", "=", "{", "}", ";", "var", "unitStatus", "=", "this", ".", "props", ".", "unitStatus", ";", "if", "(", "unitStatus", "===", "'error'", ")", "{", "var", "errors", "=", "{", "}", ";", "units", ".", "forEach", "(", "function", "(", "unit", ")", "{", "var", "agentState", "=", "unit", ".", "agent_state_info", ";", "if", "(", "!", "errors", "[", "agentState", "]", ")", "{", "errors", "[", "agentState", "]", "=", "[", "]", ";", "}", "errors", "[", "agentState", "]", ".", "push", "(", "unit", ")", ";", "}", ")", ";", "Object", ".", "keys", "(", "errors", ")", ".", "forEach", "(", "function", "(", "error", ",", "i", ")", "{", "var", "key", "=", "'select-all-'", "+", "i", ";", "groups", "[", "key", "]", "=", "{", "label", ":", "error", ",", "units", ":", "errors", "[", "error", "]", ",", "count", ":", "errors", "[", "error", "]", ".", "length", ",", "key", ":", "key", "}", ";", "}", ")", ";", "}", "else", "{", "var", "key", "=", "'select-all'", ";", "var", "status", "=", "unitStatus", "||", "'all'", ";", "groups", "[", "key", "]", "=", "{", "label", ":", "`", "${", "status", "}", "`", ",", "units", ":", "units", ",", "count", ":", "units", ".", "length", ",", "key", ":", "key", "}", ";", "}", "return", "groups", ";", "}"], "original_docstring": "\nGenerate the groups of units for the service.\n\n@method _generateGroups\n@returns {Object} The groups of units for the service.\n", "docstring": {"block_comment": "Generate the groups of units for the service.", "line_comment": null}, "docstring_tokens": ["Generate", "the", "groups", "of", "units", "for", "the", "service", "."], "sample_id": 259, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004070", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      var units = this.props.units;\n      var groups = {};\n      var unitStatus = this.props.unitStatus;\n      if (unitStatus === 'error') {\n        var errors = {};\n        units.forEach(function(unit) {\n          var agentState = unit.agent_state_info;\n          if (!errors[agentState]) {\n            errors[agentState] = [];\n          }\n          errors[agentState].push(unit);\n        });\n        Object.keys(errors).forEach(function (error, i) {\n          var key = 'select-all-' + i;\n          groups[key] = {\n            label: error,\n            units: errors[error],\n            count: errors[error].length,\n            key: key\n          };\n        });\n      } else {\n        var key = 'select-all';\n        var status = unitStatus || 'all';\n        groups[key] = {\n          label: `Select ${status} units`,\n          units: units,\n          count: units.length,\n          key: key\n        };\n      }\n      return groups;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "units", "=", "this", ".", "props", ".", "units", ";", "var", "groups", "=", "{", "}", ";", "var", "unitStatus", "=", "this", ".", "props", ".", "unitStatus", ";", "if", "(", "unitStatus", "===", "'error'", ")", "{", "var", "errors", "=", "{", "}", ";", "units", ".", "forEach", "(", "function", "(", "unit", ")", "{", "var", "agentState", "=", "unit", ".", "agent_state_info", ";", "if", "(", "!", "errors", "[", "agentState", "]", ")", "{", "errors", "[", "agentState", "]", "=", "[", "]", ";", "}", "errors", "[", "agentState", "]", ".", "push", "(", "unit", ")", ";", "}", ")", ";", "Object", ".", "keys", "(", "errors", ")", ".", "forEach", "(", "function", "(", "error", ",", "i", ")", "{", "var", "key", "=", "'select-all-'", "+", "i", ";", "groups", "[", "key", "]", "=", "{", "label", ":", "error", ",", "units", ":", "errors", "[", "error", "]", ",", "count", ":", "errors", "[", "error", "]", ".", "length", ",", "key", ":", "key", "}", ";", "}", ")", ";", "}", "else", "{", "var", "key", "=", "'select-all'", ";", "var", "status", "=", "unitStatus", "||", "'all'", ";", "groups", "[", "key", "]", "=", "{", "label", ":", "`", "${", "status", "}", "`", ",", "units", ":", "units", ",", "count", ":", "units", ".", "length", ",", "key", ":", "key", "}", ";", "}", "return", "groups", ";", "}"], "original_docstring": "\nGenerate the groups of units for the service.\n\n@method _generateGroups\n@returns {Object} The groups of units for the service.\n", "docstring": {"block_comment": "Generate the groups of units for the service.", "line_comment": null}, "docstring_tokens": ["{", "Object", "}", "The", "groups", "of", "units", "for", "the", "service", "."], "sample_id": 259, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004071", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(group) {\n      var key = group.key;\n      var unitList = [\n        <juju.components.CheckListItem\n          aside={group.count + ''}\n          disabled={this.props.acl.isReadOnly()}\n          key={key}\n          ref={key}\n          label={group.label}\n          className='select-all'\n          whenChanged={this._selectAllUnits.bind(this, key)}/>\n      ];\n      group.units.forEach((unit) => {\n        var ref = 'CheckListItem-' + unit.id;\n        unitList.push(\n          <juju.components.CheckListItem\n            disabled={this.props.acl.isReadOnly()}\n            key={unit.displayName}\n            ref={ref}\n            label={unit.displayName}\n            extraInfo={unit.workloadStatusMessage}\n            action={this._unitItemAction}\n            id={unit.id}\n            whenChanged={this._updateActiveCount} />);\n      });\n      return unitList;\n    }", "code_tokens": ["function", "(", "group", ")", "{", "var", "key", "=", "group", ".", "key", ";", "var", "unitList", "=", "[", "<", "juju", ".", "components", ".", "CheckListItem", "aside", "=", "{", "group", ".", "count", "+", "''", "}", "disabled", "=", "{", "this", ".", "props", ".", "acl", ".", "isReadOnly", "(", ")", "}", "key", "=", "{", "key", "}", "ref", "=", "{", "key", "}", "label", "=", "{", "group", ".", "label", "}", "className", "=", "'select-all'", "whenChanged", "=", "{", "this", ".", "_selectAllUnits", ".", "bind", "(", "this", ",", "key", ")", "}", "/", ">", "]", ";", "group", ".", "units", ".", "forEach", "(", "(", "unit", ")", "=>", "{", "var", "ref", "=", "'CheckListItem-'", "+", "unit", ".", "id", ";", "unitList", ".", "push", "(", "<", "juju", ".", "components", ".", "CheckListItem", "disabled", "=", "{", "this", ".", "props", ".", "acl", ".", "isReadOnly", "(", ")", "}", "key", "=", "{", "unit", ".", "displayName", "}", "ref", "=", "{", "ref", "}", "label", "=", "{", "unit", ".", "displayName", "}", "extraInfo", "=", "{", "unit", ".", "workloadStatusMessage", "}", "action", "=", "{", "this", ".", "_unitItemAction", "}", "id", "=", "{", "unit", ".", "id", "}", "whenChanged", "=", "{", "this", ".", "_updateActiveCount", "}", "/", ">", ")", ";", "}", ")", ";", "return", "unitList", ";", "}"], "original_docstring": "\nGenerates a list of unit components.\n\n@method _generateUnitList\n@param {Object} group A definition for a group of checkboxes .\n@returns {Array} Collection of unit components.\n", "docstring": {"block_comment": "Generates a list of unit components.", "line_comment": null}, "docstring_tokens": ["Generates", "a", "list", "of", "unit", "components", "."], "sample_id": 260, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004071", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(group) {\n      var key = group.key;\n      var unitList = [\n        <juju.components.CheckListItem\n          aside={group.count + ''}\n          disabled={this.props.acl.isReadOnly()}\n          key={key}\n          ref={key}\n          label={group.label}\n          className='select-all'\n          whenChanged={this._selectAllUnits.bind(this, key)}/>\n      ];\n      group.units.forEach((unit) => {\n        var ref = 'CheckListItem-' + unit.id;\n        unitList.push(\n          <juju.components.CheckListItem\n            disabled={this.props.acl.isReadOnly()}\n            key={unit.displayName}\n            ref={ref}\n            label={unit.displayName}\n            extraInfo={unit.workloadStatusMessage}\n            action={this._unitItemAction}\n            id={unit.id}\n            whenChanged={this._updateActiveCount} />);\n      });\n      return unitList;\n    }", "code_tokens": ["function", "(", "group", ")", "{", "var", "key", "=", "group", ".", "key", ";", "var", "unitList", "=", "[", "<", "juju", ".", "components", ".", "CheckListItem", "aside", "=", "{", "group", ".", "count", "+", "''", "}", "disabled", "=", "{", "this", ".", "props", ".", "acl", ".", "isReadOnly", "(", ")", "}", "key", "=", "{", "key", "}", "ref", "=", "{", "key", "}", "label", "=", "{", "group", ".", "label", "}", "className", "=", "'select-all'", "whenChanged", "=", "{", "this", ".", "_selectAllUnits", ".", "bind", "(", "this", ",", "key", ")", "}", "/", ">", "]", ";", "group", ".", "units", ".", "forEach", "(", "(", "unit", ")", "=>", "{", "var", "ref", "=", "'CheckListItem-'", "+", "unit", ".", "id", ";", "unitList", ".", "push", "(", "<", "juju", ".", "components", ".", "CheckListItem", "disabled", "=", "{", "this", ".", "props", ".", "acl", ".", "isReadOnly", "(", ")", "}", "key", "=", "{", "unit", ".", "displayName", "}", "ref", "=", "{", "ref", "}", "label", "=", "{", "unit", ".", "displayName", "}", "extraInfo", "=", "{", "unit", ".", "workloadStatusMessage", "}", "action", "=", "{", "this", ".", "_unitItemAction", "}", "id", "=", "{", "unit", ".", "id", "}", "whenChanged", "=", "{", "this", ".", "_updateActiveCount", "}", "/", ">", ")", ";", "}", ")", ";", "return", "unitList", ";", "}"], "original_docstring": "\nGenerates a list of unit components.\n\n@method _generateUnitList\n@param {Object} group A definition for a group of checkboxes .\n@returns {Array} Collection of unit components.\n", "docstring": {"block_comment": "Generates a list of unit components.", "line_comment": null}, "docstring_tokens": ["A", "definition", "for", "a", "group", "of", "checkboxes", "."], "sample_id": 260, "prompt_tokens": ["<javascript>", "<param>", "group"], "comment_type": "param", "sentence_id": 1}
{"id": "21004071", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(group) {\n      var key = group.key;\n      var unitList = [\n        <juju.components.CheckListItem\n          aside={group.count + ''}\n          disabled={this.props.acl.isReadOnly()}\n          key={key}\n          ref={key}\n          label={group.label}\n          className='select-all'\n          whenChanged={this._selectAllUnits.bind(this, key)}/>\n      ];\n      group.units.forEach((unit) => {\n        var ref = 'CheckListItem-' + unit.id;\n        unitList.push(\n          <juju.components.CheckListItem\n            disabled={this.props.acl.isReadOnly()}\n            key={unit.displayName}\n            ref={ref}\n            label={unit.displayName}\n            extraInfo={unit.workloadStatusMessage}\n            action={this._unitItemAction}\n            id={unit.id}\n            whenChanged={this._updateActiveCount} />);\n      });\n      return unitList;\n    }", "code_tokens": ["function", "(", "group", ")", "{", "var", "key", "=", "group", ".", "key", ";", "var", "unitList", "=", "[", "<", "juju", ".", "components", ".", "CheckListItem", "aside", "=", "{", "group", ".", "count", "+", "''", "}", "disabled", "=", "{", "this", ".", "props", ".", "acl", ".", "isReadOnly", "(", ")", "}", "key", "=", "{", "key", "}", "ref", "=", "{", "key", "}", "label", "=", "{", "group", ".", "label", "}", "className", "=", "'select-all'", "whenChanged", "=", "{", "this", ".", "_selectAllUnits", ".", "bind", "(", "this", ",", "key", ")", "}", "/", ">", "]", ";", "group", ".", "units", ".", "forEach", "(", "(", "unit", ")", "=>", "{", "var", "ref", "=", "'CheckListItem-'", "+", "unit", ".", "id", ";", "unitList", ".", "push", "(", "<", "juju", ".", "components", ".", "CheckListItem", "disabled", "=", "{", "this", ".", "props", ".", "acl", ".", "isReadOnly", "(", ")", "}", "key", "=", "{", "unit", ".", "displayName", "}", "ref", "=", "{", "ref", "}", "label", "=", "{", "unit", ".", "displayName", "}", "extraInfo", "=", "{", "unit", ".", "workloadStatusMessage", "}", "action", "=", "{", "this", ".", "_unitItemAction", "}", "id", "=", "{", "unit", ".", "id", "}", "whenChanged", "=", "{", "this", ".", "_updateActiveCount", "}", "/", ">", ")", ";", "}", ")", ";", "return", "unitList", ";", "}"], "original_docstring": "\nGenerates a list of unit components.\n\n@method _generateUnitList\n@param {Object} group A definition for a group of checkboxes .\n@returns {Array} Collection of unit components.\n", "docstring": {"block_comment": "Generates a list of unit components.", "line_comment": null}, "docstring_tokens": ["{", "Array", "}", "Collection", "of", "unit", "components", "."], "sample_id": 260, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004072", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(action) {\n      var units = [];\n      var refs = this.refs;\n      var envResolved = this.props.envResolved;\n      Object.keys(refs).forEach(function (ref) {\n        var isInstance = ref.split('-')[0] === 'CheckListItem';\n        if (isInstance && refs[ref].state.checked) {\n          var unitName = ref.slice(ref.indexOf('-') + 1);\n          units.push(unitName);\n          // On resolve and remove we want to mark the unit as resolved else\n          // Juju won't remove units that are in error.\n          if (action === 'resolve' || action === 'remove') {\n            envResolved(unitName, null, false);\n          } else if (action === 'retry') {\n            envResolved(unitName, null, true);\n          }\n        }\n      });\n      if (action === 'remove') {\n        this.props.destroyUnits(units);\n      }\n      this._selectAllUnits(null, false);\n    }", "code_tokens": ["function", "(", "action", ")", "{", "var", "units", "=", "[", "]", ";", "var", "refs", "=", "this", ".", "refs", ";", "var", "envResolved", "=", "this", ".", "props", ".", "envResolved", ";", "Object", ".", "keys", "(", "refs", ")", ".", "forEach", "(", "function", "(", "ref", ")", "{", "var", "isInstance", "=", "ref", ".", "split", "(", "'-'", ")", "[", "0", "]", "===", "'CheckListItem'", ";", "if", "(", "isInstance", "&&", "refs", "[", "ref", "]", ".", "state", ".", "checked", ")", "{", "var", "unitName", "=", "ref", ".", "slice", "(", "ref", ".", "indexOf", "(", "'-'", ")", "+", "1", ")", ";", "units", ".", "push", "(", "unitName", ")", ";", "// On resolve and remove we want to mark the unit as resolved else", "// Juju won't remove units that are in error.", "if", "(", "action", "===", "'resolve'", "||", "action", "===", "'remove'", ")", "{", "envResolved", "(", "unitName", ",", "null", ",", "false", ")", ";", "}", "else", "if", "(", "action", "===", "'retry'", ")", "{", "envResolved", "(", "unitName", ",", "null", ",", "true", ")", ";", "}", "}", "}", ")", ";", "if", "(", "action", "===", "'remove'", ")", "{", "this", ".", "props", ".", "destroyUnits", "(", "units", ")", ";", "}", "this", ".", "_selectAllUnits", "(", "null", ",", "false", ")", ";", "}"], "original_docstring": "\nUpdate the selected units with the supplied action.\n\n@method _handleUpdateUnits\n@param {String} action The action to apply to the units.\n", "docstring": {"block_comment": "Update the selected units with the supplied action.", "line_comment": ["On resolve and remove we want to mark the unit as resolved else", "Juju won t remove units that are in error."]}, "docstring_tokens": ["Update", "the", "selected", "units", "with", "the", "supplied", "action", "."], "sample_id": 261, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004072", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(action) {\n      var units = [];\n      var refs = this.refs;\n      var envResolved = this.props.envResolved;\n      Object.keys(refs).forEach(function (ref) {\n        var isInstance = ref.split('-')[0] === 'CheckListItem';\n        if (isInstance && refs[ref].state.checked) {\n          var unitName = ref.slice(ref.indexOf('-') + 1);\n          units.push(unitName);\n          // On resolve and remove we want to mark the unit as resolved else\n          // Juju won't remove units that are in error.\n          if (action === 'resolve' || action === 'remove') {\n            envResolved(unitName, null, false);\n          } else if (action === 'retry') {\n            envResolved(unitName, null, true);\n          }\n        }\n      });\n      if (action === 'remove') {\n        this.props.destroyUnits(units);\n      }\n      this._selectAllUnits(null, false);\n    }", "code_tokens": ["function", "(", "action", ")", "{", "var", "units", "=", "[", "]", ";", "var", "refs", "=", "this", ".", "refs", ";", "var", "envResolved", "=", "this", ".", "props", ".", "envResolved", ";", "Object", ".", "keys", "(", "refs", ")", ".", "forEach", "(", "function", "(", "ref", ")", "{", "var", "isInstance", "=", "ref", ".", "split", "(", "'-'", ")", "[", "0", "]", "===", "'CheckListItem'", ";", "if", "(", "isInstance", "&&", "refs", "[", "ref", "]", ".", "state", ".", "checked", ")", "{", "var", "unitName", "=", "ref", ".", "slice", "(", "ref", ".", "indexOf", "(", "'-'", ")", "+", "1", ")", ";", "units", ".", "push", "(", "unitName", ")", ";", "// On resolve and remove we want to mark the unit as resolved else", "// Juju won't remove units that are in error.", "if", "(", "action", "===", "'resolve'", "||", "action", "===", "'remove'", ")", "{", "envResolved", "(", "unitName", ",", "null", ",", "false", ")", ";", "}", "else", "if", "(", "action", "===", "'retry'", ")", "{", "envResolved", "(", "unitName", ",", "null", ",", "true", ")", ";", "}", "}", "}", ")", ";", "if", "(", "action", "===", "'remove'", ")", "{", "this", ".", "props", ".", "destroyUnits", "(", "units", ")", ";", "}", "this", ".", "_selectAllUnits", "(", "null", ",", "false", ")", ";", "}"], "original_docstring": "\nUpdate the selected units with the supplied action.\n\n@method _handleUpdateUnits\n@param {String} action The action to apply to the units.\n", "docstring": {"block_comment": "Update the selected units with the supplied action.", "line_comment": ["On resolve and remove we want to mark the unit as resolved else", "Juju won t remove units that are in error."]}, "docstring_tokens": ["The", "action", "to", "apply", "to", "the", "units", "."], "sample_id": 261, "prompt_tokens": ["<javascript>", "<param>", "action"], "comment_type": "param", "sentence_id": 1}
{"id": "21004073", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(e) {\n      var unitParts = e.currentTarget.getAttribute('data-id').split('/');\n      this.props.changeState({\n        gui: {\n          inspector: {\n            // This is done in parts like this because subordinate units show\n            // the service unit that it's placed on, not the subordinate itself.\n            id: unitParts[0], // Service Id\n            unit: unitParts[1], // Unit Id\n            activeComponent: 'unit'\n          }\n        }\n      });\n    }", "code_tokens": ["function", "(", "e", ")", "{", "var", "unitParts", "=", "e", ".", "currentTarget", ".", "getAttribute", "(", "'data-id'", ")", ".", "split", "(", "'/'", ")", ";", "this", ".", "props", ".", "changeState", "(", "{", "gui", ":", "{", "inspector", ":", "{", "// This is done in parts like this because subordinate units show", "// the service unit that it's placed on, not the subordinate itself.", "id", ":", "unitParts", "[", "0", "]", ",", "// Service Id", "unit", ":", "unitParts", "[", "1", "]", ",", "// Unit Id", "activeComponent", ":", "'unit'", "}", "}", "}", ")", ";", "}"], "original_docstring": "\nThe callable to be passed to the unit items for navigating to the unit\ndetails.\n\n@method _unitItemAction\n@param {Object} e The click event.\n", "docstring": {"block_comment": "The callable to be passed to the unit items for navigating to the unit \ndetails.", "line_comment": ["This is done in parts like this because subordinate units show", "the service unit that it s placed on, not the subordinate itself.", "Service Id", "Unit Id"]}, "docstring_tokens": ["The", "callable", "to", "be", "passed", "to", "the", "unit", "items", "for", "navigating", "to", "the", "unit", "details", "."], "sample_id": 262, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004073", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(e) {\n      var unitParts = e.currentTarget.getAttribute('data-id').split('/');\n      this.props.changeState({\n        gui: {\n          inspector: {\n            // This is done in parts like this because subordinate units show\n            // the service unit that it's placed on, not the subordinate itself.\n            id: unitParts[0], // Service Id\n            unit: unitParts[1], // Unit Id\n            activeComponent: 'unit'\n          }\n        }\n      });\n    }", "code_tokens": ["function", "(", "e", ")", "{", "var", "unitParts", "=", "e", ".", "currentTarget", ".", "getAttribute", "(", "'data-id'", ")", ".", "split", "(", "'/'", ")", ";", "this", ".", "props", ".", "changeState", "(", "{", "gui", ":", "{", "inspector", ":", "{", "// This is done in parts like this because subordinate units show", "// the service unit that it's placed on, not the subordinate itself.", "id", ":", "unitParts", "[", "0", "]", ",", "// Service Id", "unit", ":", "unitParts", "[", "1", "]", ",", "// Unit Id", "activeComponent", ":", "'unit'", "}", "}", "}", ")", ";", "}"], "original_docstring": "\nThe callable to be passed to the unit items for navigating to the unit\ndetails.\n\n@method _unitItemAction\n@param {Object} e The click event.\n", "docstring": {"block_comment": "The callable to be passed to the unit items for navigating to the unit \ndetails.", "line_comment": ["This is done in parts like this because subordinate units show", "the service unit that it s placed on, not the subordinate itself.", "Service Id", "Unit Id"]}, "docstring_tokens": ["The", "click", "event", "."], "sample_id": 262, "prompt_tokens": ["<javascript>", "<param>", "e"], "comment_type": "param", "sentence_id": 1}
{"id": "21004074", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(group, checked) {\n      var refs = this.refs;\n      var setChecked = (key, groups) => {\n        groups[key].units.forEach((unit) => {\n          refs['CheckListItem-' + unit.id].setState({\n            checked: checked\n          }, () => {\n            // After the state has been updated then update the active unit\n            // count to enable/disable the buttons.\n            this._updateActiveCount();\n          });\n        });\n      };\n      if (checked === undefined) {\n        checked = false;\n      }\n      var groups = this._generateGroups();\n      if (group === null) {\n        for (var key in groups) {\n          setChecked(key, groups);\n          var groupSelectAll = refs[key];\n          if (groupSelectAll.state.checked !== checked) {\n            groupSelectAll.setState({checked: checked});\n          }\n        }\n      } else {\n        setChecked(group, groups);\n      }\n    }", "code_tokens": ["function", "(", "group", ",", "checked", ")", "{", "var", "refs", "=", "this", ".", "refs", ";", "var", "setChecked", "=", "(", "key", ",", "groups", ")", "=>", "{", "groups", "[", "key", "]", ".", "units", ".", "forEach", "(", "(", "unit", ")", "=>", "{", "refs", "[", "'CheckListItem-'", "+", "unit", ".", "id", "]", ".", "setState", "(", "{", "checked", ":", "checked", "}", ",", "(", ")", "=>", "{", "// After the state has been updated then update the active unit", "// count to enable/disable the buttons.", "this", ".", "_updateActiveCount", "(", ")", ";", "}", ")", ";", "}", ")", ";", "}", ";", "if", "(", "checked", "===", "undefined", ")", "{", "checked", "=", "false", ";", "}", "var", "groups", "=", "this", ".", "_generateGroups", "(", ")", ";", "if", "(", "group", "===", "null", ")", "{", "for", "(", "var", "key", "in", "groups", ")", "{", "setChecked", "(", "key", ",", "groups", ")", ";", "var", "groupSelectAll", "=", "refs", "[", "key", "]", ";", "if", "(", "groupSelectAll", ".", "state", ".", "checked", "!==", "checked", ")", "{", "groupSelectAll", ".", "setState", "(", "{", "checked", ":", "checked", "}", ")", ";", "}", "}", "}", "else", "{", "setChecked", "(", "group", ",", "groups", ")", ";", "}", "}"], "original_docstring": "\nSets the selectAll state property based on the \"select all\" child\ncomponent.\n\n@method _selectAllUnits\n@param {String} group The key for a group of checkboxes.\n@param {Boolean} checked Whether the \"select all\" child component is\nchecked.\n", "docstring": {"block_comment": "Sets the selectAll state property based on the  select all  child \ncomponent.", "line_comment": ["After the state has been updated then update the active unit", "count to enable disable the buttons."]}, "docstring_tokens": ["Sets", "the", "selectAll", "state", "property", "based", "on", "the", "select", "all", "child", "component", "."], "sample_id": 263, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004074", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(group, checked) {\n      var refs = this.refs;\n      var setChecked = (key, groups) => {\n        groups[key].units.forEach((unit) => {\n          refs['CheckListItem-' + unit.id].setState({\n            checked: checked\n          }, () => {\n            // After the state has been updated then update the active unit\n            // count to enable/disable the buttons.\n            this._updateActiveCount();\n          });\n        });\n      };\n      if (checked === undefined) {\n        checked = false;\n      }\n      var groups = this._generateGroups();\n      if (group === null) {\n        for (var key in groups) {\n          setChecked(key, groups);\n          var groupSelectAll = refs[key];\n          if (groupSelectAll.state.checked !== checked) {\n            groupSelectAll.setState({checked: checked});\n          }\n        }\n      } else {\n        setChecked(group, groups);\n      }\n    }", "code_tokens": ["function", "(", "group", ",", "checked", ")", "{", "var", "refs", "=", "this", ".", "refs", ";", "var", "setChecked", "=", "(", "key", ",", "groups", ")", "=>", "{", "groups", "[", "key", "]", ".", "units", ".", "forEach", "(", "(", "unit", ")", "=>", "{", "refs", "[", "'CheckListItem-'", "+", "unit", ".", "id", "]", ".", "setState", "(", "{", "checked", ":", "checked", "}", ",", "(", ")", "=>", "{", "// After the state has been updated then update the active unit", "// count to enable/disable the buttons.", "this", ".", "_updateActiveCount", "(", ")", ";", "}", ")", ";", "}", ")", ";", "}", ";", "if", "(", "checked", "===", "undefined", ")", "{", "checked", "=", "false", ";", "}", "var", "groups", "=", "this", ".", "_generateGroups", "(", ")", ";", "if", "(", "group", "===", "null", ")", "{", "for", "(", "var", "key", "in", "groups", ")", "{", "setChecked", "(", "key", ",", "groups", ")", ";", "var", "groupSelectAll", "=", "refs", "[", "key", "]", ";", "if", "(", "groupSelectAll", ".", "state", ".", "checked", "!==", "checked", ")", "{", "groupSelectAll", ".", "setState", "(", "{", "checked", ":", "checked", "}", ")", ";", "}", "}", "}", "else", "{", "setChecked", "(", "group", ",", "groups", ")", ";", "}", "}"], "original_docstring": "\nSets the selectAll state property based on the \"select all\" child\ncomponent.\n\n@method _selectAllUnits\n@param {String} group The key for a group of checkboxes.\n@param {Boolean} checked Whether the \"select all\" child component is\nchecked.\n", "docstring": {"block_comment": "Sets the selectAll state property based on the  select all  child \ncomponent.", "line_comment": ["After the state has been updated then update the active unit", "count to enable disable the buttons."]}, "docstring_tokens": ["The", "key", "for", "a", "group", "of", "checkboxes", "."], "sample_id": 263, "prompt_tokens": ["<javascript>", "<param>", "group"], "comment_type": "param", "sentence_id": 1}
{"id": "21004074", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(group, checked) {\n      var refs = this.refs;\n      var setChecked = (key, groups) => {\n        groups[key].units.forEach((unit) => {\n          refs['CheckListItem-' + unit.id].setState({\n            checked: checked\n          }, () => {\n            // After the state has been updated then update the active unit\n            // count to enable/disable the buttons.\n            this._updateActiveCount();\n          });\n        });\n      };\n      if (checked === undefined) {\n        checked = false;\n      }\n      var groups = this._generateGroups();\n      if (group === null) {\n        for (var key in groups) {\n          setChecked(key, groups);\n          var groupSelectAll = refs[key];\n          if (groupSelectAll.state.checked !== checked) {\n            groupSelectAll.setState({checked: checked});\n          }\n        }\n      } else {\n        setChecked(group, groups);\n      }\n    }", "code_tokens": ["function", "(", "group", ",", "checked", ")", "{", "var", "refs", "=", "this", ".", "refs", ";", "var", "setChecked", "=", "(", "key", ",", "groups", ")", "=>", "{", "groups", "[", "key", "]", ".", "units", ".", "forEach", "(", "(", "unit", ")", "=>", "{", "refs", "[", "'CheckListItem-'", "+", "unit", ".", "id", "]", ".", "setState", "(", "{", "checked", ":", "checked", "}", ",", "(", ")", "=>", "{", "// After the state has been updated then update the active unit", "// count to enable/disable the buttons.", "this", ".", "_updateActiveCount", "(", ")", ";", "}", ")", ";", "}", ")", ";", "}", ";", "if", "(", "checked", "===", "undefined", ")", "{", "checked", "=", "false", ";", "}", "var", "groups", "=", "this", ".", "_generateGroups", "(", ")", ";", "if", "(", "group", "===", "null", ")", "{", "for", "(", "var", "key", "in", "groups", ")", "{", "setChecked", "(", "key", ",", "groups", ")", ";", "var", "groupSelectAll", "=", "refs", "[", "key", "]", ";", "if", "(", "groupSelectAll", ".", "state", ".", "checked", "!==", "checked", ")", "{", "groupSelectAll", ".", "setState", "(", "{", "checked", ":", "checked", "}", ")", ";", "}", "}", "}", "else", "{", "setChecked", "(", "group", ",", "groups", ")", ";", "}", "}"], "original_docstring": "\nSets the selectAll state property based on the \"select all\" child\ncomponent.\n\n@method _selectAllUnits\n@param {String} group The key for a group of checkboxes.\n@param {Boolean} checked Whether the \"select all\" child component is\nchecked.\n", "docstring": {"block_comment": "Sets the selectAll state property based on the  select all  child \ncomponent.", "line_comment": ["After the state has been updated then update the active unit", "count to enable disable the buttons."]}, "docstring_tokens": ["Whether", "the", "select", "all", "child", "component", "is"], "sample_id": 263, "prompt_tokens": ["<javascript>", "<param>", "checked"], "comment_type": "param", "sentence_id": 2}
{"id": "21004075", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(e) {\n      this.props.changeState({\n        gui: {\n          inspector: {\n            id: this.props.service.get('id'),\n            activeComponent: 'scale'\n          }}});\n    }", "code_tokens": ["function", "(", "e", ")", "{", "this", ".", "props", ".", "changeState", "(", "{", "gui", ":", "{", "inspector", ":", "{", "id", ":", "this", ".", "props", ".", "service", ".", "get", "(", "'id'", ")", ",", "activeComponent", ":", "'scale'", "}", "}", "}", ")", ";", "}"], "original_docstring": "\nFires changeState to update the UI based on the component clicked.\n\n@method _navigate\n@param {Object} e The click event.\n", "docstring": {"block_comment": "Fires changeState to update the UI based on the component clicked.", "line_comment": null}, "docstring_tokens": ["Fires", "changeState", "to", "update", "the", "UI", "based", "on", "the", "component", "clicked", "."], "sample_id": 264, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004075", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(e) {\n      this.props.changeState({\n        gui: {\n          inspector: {\n            id: this.props.service.get('id'),\n            activeComponent: 'scale'\n          }}});\n    }", "code_tokens": ["function", "(", "e", ")", "{", "this", ".", "props", ".", "changeState", "(", "{", "gui", ":", "{", "inspector", ":", "{", "id", ":", "this", ".", "props", ".", "service", ".", "get", "(", "'id'", ")", ",", "activeComponent", ":", "'scale'", "}", "}", "}", ")", ";", "}"], "original_docstring": "\nFires changeState to update the UI based on the component clicked.\n\n@method _navigate\n@param {Object} e The click event.\n", "docstring": {"block_comment": "Fires changeState to update the UI based on the component clicked.", "line_comment": null}, "docstring_tokens": ["The", "click", "event", "."], "sample_id": 264, "prompt_tokens": ["<javascript>", "<param>", "e"], "comment_type": "param", "sentence_id": 1}
{"id": "21004076", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      return {activeCount: 0};\n    }", "code_tokens": ["function", "(", ")", "{", "return", "{", "activeCount", ":", "0", "}", ";", "}"], "original_docstring": "\nGenerate the initial state.\n\n@method getInitialState\n@returns {String} The intial state.\n", "docstring": {"block_comment": "Generate the initial state.", "line_comment": null}, "docstring_tokens": ["Generate", "the", "initial", "state", "."], "sample_id": 265, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004076", "repo": "bac/juju-gui", "path": "jujugui/static/gui/src/app/components/inspector/unit-list/unit-list.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function() {\n      return {activeCount: 0};\n    }", "code_tokens": ["function", "(", ")", "{", "return", "{", "activeCount", ":", "0", "}", ";", "}"], "original_docstring": "\nGenerate the initial state.\n\n@method getInitialState\n@returns {String} The intial state.\n", "docstring": {"block_comment": "Generate the initial state.", "line_comment": null}, "docstring_tokens": ["{", "String", "}", "The", "intial", "state", "."], "sample_id": 265, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004077", "repo": "slash851/mwEmbed", "path": "modules/KalturaSupport/resources/mw.ClosedCaptions.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function( size ) {\n\t\t\t// This is a ugly hack we should read \"original player size\" and set based\n\t\t\t// on some standard normal 31 columns 15 rows\n\t\t\tvar sizeFactor = 4;\n\t\t\tif( size.height / size.width < .7 ){\n\t\t\t\tsizeFactor = 6;\n\t\t\t}\n\t\t\tvar textSize = size.width / sizeFactor;\n\t\t\tif( textSize < 95 ){\n\t\t\t\ttextSize = 95;\n\t\t\t}\n\t\t\tif( textSize > 200 ){\n\t\t\t\ttextSize = 200;\n\t\t\t}\n\t\t\treturn textSize;\n\t\t}", "code_tokens": ["function", "(", "size", ")", "{", "// This is a ugly hack we should read \"original player size\" and set based", "// on some standard normal 31 columns 15 rows", "var", "sizeFactor", "=", "4", ";", "if", "(", "size", ".", "height", "/", "size", ".", "width", "<", ".7", ")", "{", "sizeFactor", "=", "6", ";", "}", "var", "textSize", "=", "size", ".", "width", "/", "sizeFactor", ";", "if", "(", "textSize", "<", "95", ")", "{", "textSize", "=", "95", ";", "}", "if", "(", "textSize", ">", "200", ")", "{", "textSize", "=", "200", ";", "}", "return", "textSize", ";", "}"], "original_docstring": "\nGets a text size percent relative to about 30 columns of text for 400\npixel wide player, at 100% text size.\n\n@param size {object} The size of the target player area width and height\n", "docstring": {"block_comment": "Gets a text size percent relative to about 30 columns of text for 400 \npixel wide player, at 100  text size.", "line_comment": ["This is a ugly hack we should read  original player size  and set based", "on some standard normal 31 columns 15 rows"]}, "docstring_tokens": ["Gets", "a", "text", "size", "percent", "relative", "to", "about", "30", "columns", "of", "text", "for", "400", "pixel", "wide", "player", "at", "100", "text", "size", "."], "sample_id": 266, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004077", "repo": "slash851/mwEmbed", "path": "modules/KalturaSupport/resources/mw.ClosedCaptions.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function( size ) {\n\t\t\t// This is a ugly hack we should read \"original player size\" and set based\n\t\t\t// on some standard normal 31 columns 15 rows\n\t\t\tvar sizeFactor = 4;\n\t\t\tif( size.height / size.width < .7 ){\n\t\t\t\tsizeFactor = 6;\n\t\t\t}\n\t\t\tvar textSize = size.width / sizeFactor;\n\t\t\tif( textSize < 95 ){\n\t\t\t\ttextSize = 95;\n\t\t\t}\n\t\t\tif( textSize > 200 ){\n\t\t\t\ttextSize = 200;\n\t\t\t}\n\t\t\treturn textSize;\n\t\t}", "code_tokens": ["function", "(", "size", ")", "{", "// This is a ugly hack we should read \"original player size\" and set based", "// on some standard normal 31 columns 15 rows", "var", "sizeFactor", "=", "4", ";", "if", "(", "size", ".", "height", "/", "size", ".", "width", "<", ".7", ")", "{", "sizeFactor", "=", "6", ";", "}", "var", "textSize", "=", "size", ".", "width", "/", "sizeFactor", ";", "if", "(", "textSize", "<", "95", ")", "{", "textSize", "=", "95", ";", "}", "if", "(", "textSize", ">", "200", ")", "{", "textSize", "=", "200", ";", "}", "return", "textSize", ";", "}"], "original_docstring": "\nGets a text size percent relative to about 30 columns of text for 400\npixel wide player, at 100% text size.\n\n@param size {object} The size of the target player area width and height\n", "docstring": {"block_comment": "Gets a text size percent relative to about 30 columns of text for 400 \npixel wide player, at 100  text size.", "line_comment": ["This is a ugly hack we should read  original player size  and set based", "on some standard normal 31 columns 15 rows"]}, "docstring_tokens": ["The", "size", "of", "the", "target", "player", "area", "width", "and", "height"], "sample_id": 266, "prompt_tokens": ["<javascript>", "<param>", "size"], "comment_type": "param", "sentence_id": 1}
{"id": "21004078", "repo": "Luxoft/SDLP", "path": "SDL_Core/src/components/HMI/app/controlls/ScrollableText.js", "language": "JavaScript", "license": "lgpl-2.1", "func_name": "", "code": "function( id ) {\n        this.items.splice( id, 1 );\n        this.scrollableText.refresh();\n    }", "code_tokens": ["function", "(", "id", ")", "{", "this", ".", "items", ".", "splice", "(", "id", ",", "1", ")", ";", "this", ".", "scrollableText", ".", "refresh", "(", ")", ";", "}"], "original_docstring": "Method for delete certain item from scrollableText", "docstring": {"block_comment": "Method for delete certain item from scrollableText", "line_comment": null}, "docstring_tokens": ["Method", "for", "delete", "certain", "item", "from", "scrollableText"], "sample_id": 267, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004079", "repo": "Luxoft/SDLP", "path": "SDL_Core/src/components/HMI/app/controlls/ScrollableText.js", "language": "JavaScript", "license": "lgpl-2.1", "func_name": "", "code": "function() {\n        if( this.get( 'currentPage' ) < this.get( 'pageCount' ) - 1 ){\n            this.set( 'currentPage', this.get( 'currentPage' ) + 1 );\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "get", "(", "'currentPage'", ")", "<", "this", ".", "get", "(", "'pageCount'", ")", "-", "1", ")", "{", "this", ".", "set", "(", "'currentPage'", ",", "this", ".", "get", "(", "'currentPage'", ")", "+", "1", ")", ";", "}", "}"], "original_docstring": "Action of element \"sb-bottom\" which show previous scrollableText page", "docstring": {"block_comment": "Action of element  sb bottom  which show previous scrollableText page", "line_comment": null}, "docstring_tokens": ["Action", "of", "element", "sb", "bottom", "which", "show", "previous", "scrollableText", "page"], "sample_id": 268, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004080", "repo": "Luxoft/SDLP", "path": "SDL_Core/src/components/HMI/app/controlls/ScrollableText.js", "language": "JavaScript", "license": "lgpl-2.1", "func_name": "", "code": "function() {\n        if( this.get( 'currentPage' ) > 0 ){\n            this.set( 'currentPage', this.get( 'currentPage' ) - 1 );\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "get", "(", "'currentPage'", ")", ">", "0", ")", "{", "this", ".", "set", "(", "'currentPage'", ",", "this", ".", "get", "(", "'currentPage'", ")", "-", "1", ")", ";", "}", "}"], "original_docstring": "Action of element \"sb-top\" which show previous scrollableText page", "docstring": {"block_comment": "Action of element  sb top  which show previous scrollableText page", "line_comment": null}, "docstring_tokens": ["Action", "of", "element", "sb", "top", "which", "show", "previous", "scrollableText", "page"], "sample_id": 269, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004081", "repo": "enaeseth/loki", "path": "js/UI.Link_Menugroup.js", "language": "JavaScript", "license": "lgpl-2.1", "func_name": "", "code": "function() { self._link_helper.open_page_link_dialog() }", "code_tokens": ["function", "(", ")", "{", "self", ".", "_link_helper", ".", "open_page_link_dialog", "(", ")", "}"], "original_docstring": "listener : function() { self._link_helper.open_dialog_by_context() }", "docstring": {"block_comment": "listener   function     self._link_helper.open_dialog_by_context    ", "line_comment": null}, "docstring_tokens": ["listener", "function", "self", ".", "_link_helper", ".", "open_dialog_by_context"], "sample_id": 270, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004083", "repo": "imbcmdth/bxh", "path": "bih/index.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(testAABB, returnArray, aabbTestFunction, leafTestFunction, useAlteredLogic) {\n\t\t\t\tvar parentStack = [], // Contains the nodes that are parents of the hit nodes\n\t\t\t\t    directionStack = [], // Which was the last direction taken - true = left\n\t\t\t\t    lastDirectionWasLeft = true,\n\t\t\t\t    returnArray = returnArray || [],\n\t\t\t\t    node = null,\n\t\t\t\t    parentNode = null,\n\t\t\t\t    axis = null,\n\t\t\t\t    leafElementCount,\n\t\t\t\t    leafElement = null,\n\t\t\t\t    overlaps, contained,\n\t\t\t\t    alteredLogic = !!useAlteredLogic;\n\n\t\t\t\tif(this._T === null) return returnArray;\n\n\t\t\t\toverlaps = testAABB.overlaps(this.i);\n\t\t\t\tcontained = testAABB[aabbTestFunction](this.i);\n\n\t\t\t\tif(overlaps) {\n\t\t\t\t\tif(!alteredLogic){\n\t\t\t\t\t\tnode = this._T;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(contained) node = this._T;\n\t\t\t\t\t\telse return returnArray;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn returnArray;\n\t\t\t\t}\n\n\t\t\t\twhile( (node != null) || parentStack.length > 0) {\n\n\t\t\t\t\tif(node == null) {\n\t\t\t\t\t\tparentNode = parentStack.pop();\n\t\t\t\t\t\tlastDirectionWasLeft = directionStack.pop();\n\n\t\t\t\t\t\tif(lastDirectionWasLeft)\n\t\t\t\t\t\t\tnode = parentNode.l;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnode = parentNode.r;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(node.s) { // An unfinished node!\n\t\t\t\t\t\tnode = this._incrementalBuild(node);\n\t\t\t\t\t\tif(parentNode == null) {\n\t\t\t\t\t\t\tthis._T = node;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(lastDirectionWasLeft)\n\t\t\t\t\t\t\t\tparentNode.l = node;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tparentNode.r = node;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Below is not an \"else if\" because we want to continue traversal during \n\t\t\t\t\t// an incremental build\n\t\t\t\t\tif (node.x) { // A node!\n\t\t\t\t\t\taxis = node.x - 1; // Axis: 1 = x, 2 = y, 3 = z ... so on\n\t\t\t\t\t\t// Cases where entry point is between *both* splitting planes\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(testAABB.min[axis] <= node.u) { // Starts in left node\n\t\t\t\t\t\t\tif(testAABB.max[axis] >= node.v) { // B0 Ends in right - Both nodes\n\t\t\t\t\t\t\t\tif(!alteredLogic || testAABB.min[axis] >= node.v) {\n\t\t\t\t\t\t\t\t\tparentStack.push(node);\n\t\t\t\t\t\t\t\t\tdirectionStack.push(false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // L0, L1, Left node\n\t\t\t\t\t\t\tif(!alteredLogic || testAABB.max[axis] <= node.u) {\n\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(testAABB.max[axis] >= node.v) { // Ends in right\n\t\t\t\t\t\t\t// R0, R1 - only Right node\n\t\t\t\t\t\t\tif(!alteredLogic || testAABB.min[axis] >= node.v) {\n\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else { // G0 - no nodes\n\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node && node.o) { // A Leaf !!\n\t\t\t\t\t\tleafElementCount = node.o.length;\n\t\t\t\t\t\twhile(leafElementCount-->0) {\n\t\t\t\t\t\t\tleafElement = node.o[leafElementCount];\n\t\t\t\t\t\t\tleafElement[leafTestFunction].call(leafElement.o, testAABB, returnArray);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode = null;\n\t\t\t\t\t}\n\t\t\t\t}// end of main while()\n\t\t\t\treturn (returnArray);\n\t\t\t}", "code_tokens": ["function", "(", "testAABB", ",", "returnArray", ",", "aabbTestFunction", ",", "leafTestFunction", ",", "useAlteredLogic", ")", "{", "var", "parentStack", "=", "[", "]", ",", "// Contains the nodes that are parents of the hit nodes", "directionStack", "=", "[", "]", ",", "// Which was the last direction taken - true = left", "lastDirectionWasLeft", "=", "true", ",", "returnArray", "=", "returnArray", "||", "[", "]", ",", "node", "=", "null", ",", "parentNode", "=", "null", ",", "axis", "=", "null", ",", "leafElementCount", ",", "leafElement", "=", "null", ",", "overlaps", ",", "contained", ",", "alteredLogic", "=", "!", "!", "useAlteredLogic", ";", "if", "(", "this", ".", "_T", "===", "null", ")", "return", "returnArray", ";", "overlaps", "=", "testAABB", ".", "overlaps", "(", "this", ".", "i", ")", ";", "contained", "=", "testAABB", "[", "aabbTestFunction", "]", "(", "this", ".", "i", ")", ";", "if", "(", "overlaps", ")", "{", "if", "(", "!", "alteredLogic", ")", "{", "node", "=", "this", ".", "_T", ";", "}", "else", "{", "if", "(", "contained", ")", "node", "=", "this", ".", "_T", ";", "else", "return", "returnArray", ";", "}", "}", "else", "{", "return", "returnArray", ";", "}", "while", "(", "(", "node", "!=", "null", ")", "||", "parentStack", ".", "length", ">", "0", ")", "{", "if", "(", "node", "==", "null", ")", "{", "parentNode", "=", "parentStack", ".", "pop", "(", ")", ";", "lastDirectionWasLeft", "=", "directionStack", ".", "pop", "(", ")", ";", "if", "(", "lastDirectionWasLeft", ")", "node", "=", "parentNode", ".", "l", ";", "else", "node", "=", "parentNode", ".", "r", ";", "}", "if", "(", "node", ".", "s", ")", "{", "// An unfinished node!", "node", "=", "this", ".", "_incrementalBuild", "(", "node", ")", ";", "if", "(", "parentNode", "==", "null", ")", "{", "this", ".", "_T", "=", "node", ";", "}", "else", "{", "if", "(", "lastDirectionWasLeft", ")", "parentNode", ".", "l", "=", "node", ";", "else", "parentNode", ".", "r", "=", "node", ";", "}", "}", "// Below is not an \"else if\" because we want to continue traversal during ", "// an incremental build", "if", "(", "node", ".", "x", ")", "{", "// A node!", "axis", "=", "node", ".", "x", "-", "1", ";", "// Axis: 1 = x, 2 = y, 3 = z ... so on", "// Cases where entry point is between *both* splitting planes", "if", "(", "testAABB", ".", "min", "[", "axis", "]", "<=", "node", ".", "u", ")", "{", "// Starts in left node", "if", "(", "testAABB", ".", "max", "[", "axis", "]", ">=", "node", ".", "v", ")", "{", "// B0 Ends in right - Both nodes", "if", "(", "!", "alteredLogic", "||", "testAABB", ".", "min", "[", "axis", "]", ">=", "node", ".", "v", ")", "{", "parentStack", ".", "push", "(", "node", ")", ";", "directionStack", ".", "push", "(", "false", ")", ";", "}", "}", "// L0, L1, Left node", "if", "(", "!", "alteredLogic", "||", "testAABB", ".", "max", "[", "axis", "]", "<=", "node", ".", "u", ")", "{", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "node", "=", "node", ".", "l", ";", "}", "else", "{", "node", "=", "null", ";", "}", "}", "else", "if", "(", "testAABB", ".", "max", "[", "axis", "]", ">=", "node", ".", "v", ")", "{", "// Ends in right", "// R0, R1 - only Right node", "if", "(", "!", "alteredLogic", "||", "testAABB", ".", "min", "[", "axis", "]", ">=", "node", ".", "v", ")", "{", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "node", "=", "node", ".", "r", ";", "}", "else", "{", "node", "=", "null", ";", "}", "}", "else", "{", "// G0 - no nodes", "node", "=", "null", ";", "}", "}", "if", "(", "node", "&&", "node", ".", "o", ")", "{", "// A Leaf !!", "leafElementCount", "=", "node", ".", "o", ".", "length", ";", "while", "(", "leafElementCount", "--", ">", "0", ")", "{", "leafElement", "=", "node", ".", "o", "[", "leafElementCount", "]", ";", "leafElement", "[", "leafTestFunction", "]", ".", "call", "(", "leafElement", ".", "o", ",", "testAABB", ",", "returnArray", ")", ";", "}", "node", "=", "null", ";", "}", "}", "// end of main while()", "return", "(", "returnArray", ")", ";", "}"], "original_docstring": "tree.overlaps (non-recursive) - Search a region defined by testAABB and return an array of all elements that overlap this region.  Posible node-intervals cases during traversal: B0 - Interval starts in left, ends in right; L0 - Interval starts in left, ends in left; L1 - Interval starts in left, ends in gap; R0 - Interval starts in right, ends in right; R1 - Interval starts in gap, ends in right; G0 - Interval starts in gap, ends in gap; Modified for incremental(on-demand?) tree building", "docstring": {"block_comment": "tree.overlaps  non recursive    Search a region defined by testAABB and return an array of all elements that overlap this region.  Posible node intervals cases during traversal  B0   Interval starts in left, ends in right  L0   Interval starts in left, ends in left  L1   Interval starts in left, ends in gap  R0   Interval starts in right, ends in right  R1   Interval starts in gap, ends in right  G0   Interval starts in gap, ends in gap  Modified for incremental on demand   tree building", "line_comment": ["Contains the nodes that are parents of the hit nodes", "Which was the last direction taken   true   left", "An unfinished node ", "Below is not an  else if  because we want to continue traversal during", "an incremental build", "A node ", null, "Cases where entry point is between  both  splitting planes", "Starts in left node", "B0 Ends in right   Both nodes", "L0, L1, Left node", "Ends in right", "R0, R1   only Right node", "G0   no nodes", "A Leaf   ", "end of main while  "]}, "docstring_tokens": ["tree", ".", "overlaps", "non", "recursive", "Search", "a", "region", "defined", "by", "testAABB", "and", "return", "an", "array", "of", "all", "elements", "that", "overlap", "this", "region", ".", "Posible", "node", "intervals", "cases", "during", "traversal", "B0", "Interval", "starts", "in", "left", "ends", "in", "right", "L0", "Interval", "starts", "in", "left", "ends", "in", "left", "L1", "Interval", "starts", "in", "left", "ends", "in", "gap", "R0", "Interval", "starts", "in", "right", "ends", "in", "right", "R1", "Interval", "starts", "in", "gap", "ends", "in", "right", "G0", "Interval", "starts", "in", "gap", "ends", "in", "gap", "Modified", "for", "incremental", "on", "demand", "tree", "building"], "sample_id": 271, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004084", "repo": "imbcmdth/bxh", "path": "bih/index.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(ray, intersectInfo) {\n\t\t\t\tvar parentStack = [], // Contains the nodes that are parents of the hit nodes\n\t\t\t\t    rayStack = [], // Contains the ray-segment for the current sub-tree\n\t\t\t\t    depthStack = [], // Just for depth determining. debugging stuff.\n\t\t\t\t    directionStack = [], // Which was the last direction taken - true = left\n\t\t\t\t    lastDirectionWasLeft = true,\n\t\t\t\t    rayIntervals = ray.toIntervals(),\n\t\t\t\t    majorAxis = ray.getMajorAxis(),\n\t\t\t\t    node = null,\n\t\t\t\t    parentNode = null,\n\t\t\t\t    rs = null,\n\t\t\t\t    axis = null,\n\t\t\t\t    newRS = null,\n\t\t\t\t    bestSegment = this.segmentHelpers.cloneSegment(rayIntervals),\n\t\t\t\t    leafElementCount,\n\t\t\t\t    leafElement = null,\n\t\t\t\t    noDebug = true,\n\t\t\t\t    debug = null;\n\n\t\t\t\tif(intersectInfo.debug) {\n\t\t\t\t\tnoDebug = false;\n\t\t\t\t\tdebug = intersectInfo.debug;\n\t\t\t\t\tdepthStack = [];\n\t\t\t\t}\n\n\t\t\t\t// Test ray AABB first\n\t\t\t\trs = this.i.intersectWithSegment(rayIntervals);\n\n\t\t\t\t// If there are no elements or the ray-AABB test failed, don't bother traversing\n\t\t\t\tif (rs && this._T !== null) {\n\t\t\t\t\tnode = this._T;\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\twhile( (node !== null) || parentStack.length > 0) {\n\t\t\t\t\tif(!noDebug) debug.currDepth++;\n\n\t\t\t\t\tif(node === null) {\n\t\t\t\t\t\trs = rayStack.pop(); // Depth-First Descent\n\t\t\t\t\t\tparentNode = parentStack.pop();\n\t\t\t\t\t\tlastDirectionWasLeft = directionStack.pop();\n\t\t\t\t\t\tif(!noDebug) {\n\t\t\t\t\t\t\tdebug.depth = Math.max(debug.depth, debug.currDepth);\n\t\t\t\t\t\t\tdebug.currDepth = depthStack.pop();\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif(lastDirectionWasLeft)\n\t\t\t\t\t\t\tnode = parentNode.l;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnode = parentNode.r;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check to see if this node is still reachable\n\t\t\t\t\tif(intersectInfo.isHit) {\n\t\t\t\t\t\tif(!this.segmentHelpers.trimSegmentInPlace(bestSegment, rs, majorAxis)) {\n\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(node.s) { // An unfinished node!\n\t\t\t\t\t\tnode = this._incrementalBuild(node);\n\t\t\t\t\t\tif(parentNode == null) {\n\t\t\t\t\t\t\tthis._T = node;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(lastDirectionWasLeft)\n\t\t\t\t\t\t\t\tparentNode.l = node;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tparentNode.r = node;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Below is not an \"else if\" because we want to continue traversal during an incremental build\n\t\t\t\t\tif (node.x) { // A node!\n\t\t\t\t\t\taxis = node.x - 1; // Axis: 1 = x, 2 = y, 3 = z ...\n\t\t\t\t\t\t// Cases where entry point is between *both* splitting planes\n\t\t\t\t\t\tif (rs[axis].a < node.v && rs[axis].a > node.u) {\n\t\t\t\t\t\t\tif (rs[axis].b <= node.u) { // Is the exit point inside the left node?\n\t\t\t\t\t\t\t\t/* case I1 */\n\t\t\t\t\t\t\t\t// The ray enters the volume between the planes so\n\t\t\t\t\t\t\t\t// we need to clip the ray start for this case\n\t\t\t\t\t\t\t\tthis.segmentHelpers.clipSegmentStartInPlace(rs, axis, node.u);\n\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t} else if (rs[axis].b >= node.v) { // Is the exit point inside the right node?\n\t\t\t\t\t\t\t\t/* case I2 */\n\t\t\t\t\t\t\t\t// The ray enters the volume between the planes so\n\t\t\t\t\t\t\t\t// we need to clip the ray start for this case\n\t\t\t\t\t\t\t\tthis.segmentHelpers.clipSegmentStartInPlace(rs, axis, node.v);\n\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t} // If start is between both planes,\n\t\t\t\t\t\t\t// the end point CAN NOT be in BOTH nodes - it is unpossible\n\t\t\t\t\t\t\t else {\n\t\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (rs[axis].a <= node.u) { // Starts in left node\n\t\t\t\t\t\t\tif (rs[axis].a >= node.v) { // Also in right node!\n\t\t\t\t\t\t\t\t// If we exit and are no longer in the right node, we must clip the ray\n\t\t\t\t\t\t\t\tif (rs[axis].b < node.v) {\n\t\t\t\t\t\t\t\t\tnewRS = this.segmentHelpers.clipSegmentEnd(rs, axis, node.v);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewRS = this.segmentHelpers.cloneSegment(rs);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// This will be popped later, so right = far node\n\t\t\t\t\t\t\t\trayStack.push(newRS);\n\t\t\t\t\t\t\t\tparentStack.push(node);\n\t\t\t\t\t\t\t\tdirectionStack.push(false);\n\t\t\t\t\t\t\t\tif(!noDebug) depthStack.push(debug.currDepth);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// If we exit and are no longer in the left node, we must clip the ray\n\t\t\t\t\t\t\t\tif (rs[axis].b > node.u) {\n\t\t\t\t\t\t\t\t\tthis.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.u);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// This will be popped first, so left = near node\n\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t} else if (rs[axis].b < node.v) { // We are exiting before the right plane\n\t\t\t\t\t\t\t\tif (rs[axis].b <= node.u) {\n\t\t\t\t\t\t\t\t\t// We are exiting before the left plane\n\t\t\t\t\t\t\t\t\t/* cases N1,N2,N3,P5,Z2,Z3 */\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// The ray exits the volume between the planes so\n\t\t\t\t\t\t\t\t\t// we need to clip the ray end for this case\n\t\t\t\t\t\t\t\t\tthis.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.u);\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { // The ray exits on the far side of the right plane\n\t\t\t\t\t\t\t\t/* case N4 */\n\t\t\t\t\t\t\t\t// This will be popped later, so right = far node\n\t\t\t\t\t\t\t\tnewRS = this.segmentHelpers.clipSegmentStart(rs, axis, node.v);\n\n\t\t\t\t\t\t\t\trayStack.push(newRS);\n\t\t\t\t\t\t\t\tparentStack.push(node);\n\t\t\t\t\t\t\t\tdirectionStack.push(false);\n\t\t\t\t\t\t\t\tif(!noDebug) depthStack.push(debug.currDepth);\n\n\t\t\t\t\t\t\t\t// This will be popped first, so left = near node\n\t\t\t\t\t\t\t\tthis.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.u);\n\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (rs[axis].a >= node.v) { // Starts in right node\n\t\t\t\t\t\t\tif (rs[axis].b > node.u) { // Ray exits before the left plane\n\t\t\t\t\t\t\t\tif (rs[axis].b >= node.v) { // Ray exits before the right plane\n\t\t\t\t\t\t\t\t\t/* cases P1,P2,P3,N5,Z1 */\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t\t} else { /* cases P1,P2,P3,N5,Z1 */\n\t\t\t\t\t\t\t\t\t// we need to clip the ray end for this case\n\t\t\t\t\t\t\t\t\tthis.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.v);\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { // Ray hits both planes\n\t\t\t\t\t\t\t\t/* case P4 */\n\t\t\t\t\t\t\t\t// This will be popped later, so left = far node\n\t\t\t\t\t\t\t\tnewRS = this.segmentHelpers.clipSegmentStart(rs, axis, node.u);\n\t\t\t\t\t\t\t\trayStack.push(newRS);\n\t\t\t\t\t\t\t\tparentStack.push(node);\n\t\t\t\t\t\t\t\tdirectionStack.push(true);\n\t\t\t\t\t\t\t\tif(!noDebug) depthStack.push(debug.currDepth);\n\n\t\t\t\t\t\t\t\t// This will be popped first, so right = near node\n\t\t\t\t\t\t\t\tthis.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.v);\n\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node && node.o) { // A leaf!!\n\t\t\t\t\t\tleafElementCount = node.o.length;\n\t\t\t\t\t\twhile(leafElementCount-->0) {\n\t\t\t\t\t\t\tleafElement = node.o[leafElementCount];\n\t\t\t\t\t\t\tleafElement.iFn.call(leafElement.o, ray, intersectInfo);\n\n\t\t\t\t\t\t\tif(intersectInfo.isHit) {\n\t\t\t\t\t\t\t\tthis.segmentHelpers.setBestSegment(bestSegment, intersectInfo.position);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}// end while each element\n\n\t\t\t\t\t\t// Causes the loop to pop far-node candidates from the stack\n\t\t\t\t\t\tnode = null;\n\t\t\t\t\t}\n\t\t\t\t}// end of main while()\n\t\t\t\tif(!noDebug) debug.depth = Math.max(debug.depth, debug.currDepth);\n\t\t\t}", "code_tokens": ["function", "(", "ray", ",", "intersectInfo", ")", "{", "var", "parentStack", "=", "[", "]", ",", "// Contains the nodes that are parents of the hit nodes", "rayStack", "=", "[", "]", ",", "// Contains the ray-segment for the current sub-tree", "depthStack", "=", "[", "]", ",", "// Just for depth determining. debugging stuff.", "directionStack", "=", "[", "]", ",", "// Which was the last direction taken - true = left", "lastDirectionWasLeft", "=", "true", ",", "rayIntervals", "=", "ray", ".", "toIntervals", "(", ")", ",", "majorAxis", "=", "ray", ".", "getMajorAxis", "(", ")", ",", "node", "=", "null", ",", "parentNode", "=", "null", ",", "rs", "=", "null", ",", "axis", "=", "null", ",", "newRS", "=", "null", ",", "bestSegment", "=", "this", ".", "segmentHelpers", ".", "cloneSegment", "(", "rayIntervals", ")", ",", "leafElementCount", ",", "leafElement", "=", "null", ",", "noDebug", "=", "true", ",", "debug", "=", "null", ";", "if", "(", "intersectInfo", ".", "debug", ")", "{", "noDebug", "=", "false", ";", "debug", "=", "intersectInfo", ".", "debug", ";", "depthStack", "=", "[", "]", ";", "}", "// Test ray AABB first", "rs", "=", "this", ".", "i", ".", "intersectWithSegment", "(", "rayIntervals", ")", ";", "// If there are no elements or the ray-AABB test failed, don't bother traversing", "if", "(", "rs", "&&", "this", ".", "_T", "!==", "null", ")", "{", "node", "=", "this", ".", "_T", ";", "}", "else", "{", "return", ";", "}", "while", "(", "(", "node", "!==", "null", ")", "||", "parentStack", ".", "length", ">", "0", ")", "{", "if", "(", "!", "noDebug", ")", "debug", ".", "currDepth", "++", ";", "if", "(", "node", "===", "null", ")", "{", "rs", "=", "rayStack", ".", "pop", "(", ")", ";", "// Depth-First Descent", "parentNode", "=", "parentStack", ".", "pop", "(", ")", ";", "lastDirectionWasLeft", "=", "directionStack", ".", "pop", "(", ")", ";", "if", "(", "!", "noDebug", ")", "{", "debug", ".", "depth", "=", "Math", ".", "max", "(", "debug", ".", "depth", ",", "debug", ".", "currDepth", ")", ";", "debug", ".", "currDepth", "=", "depthStack", ".", "pop", "(", ")", ";", "}", "if", "(", "lastDirectionWasLeft", ")", "node", "=", "parentNode", ".", "l", ";", "else", "node", "=", "parentNode", ".", "r", ";", "}", "// Check to see if this node is still reachable", "if", "(", "intersectInfo", ".", "isHit", ")", "{", "if", "(", "!", "this", ".", "segmentHelpers", ".", "trimSegmentInPlace", "(", "bestSegment", ",", "rs", ",", "majorAxis", ")", ")", "{", "node", "=", "null", ";", "continue", ";", "}", "}", "if", "(", "node", ".", "s", ")", "{", "// An unfinished node!", "node", "=", "this", ".", "_incrementalBuild", "(", "node", ")", ";", "if", "(", "parentNode", "==", "null", ")", "{", "this", ".", "_T", "=", "node", ";", "}", "else", "{", "if", "(", "lastDirectionWasLeft", ")", "parentNode", ".", "l", "=", "node", ";", "else", "parentNode", ".", "r", "=", "node", ";", "}", "}", "// Below is not an \"else if\" because we want to continue traversal during an incremental build", "if", "(", "node", ".", "x", ")", "{", "// A node!", "axis", "=", "node", ".", "x", "-", "1", ";", "// Axis: 1 = x, 2 = y, 3 = z ...", "// Cases where entry point is between *both* splitting planes", "if", "(", "rs", "[", "axis", "]", ".", "a", "<", "node", ".", "v", "&&", "rs", "[", "axis", "]", ".", "a", ">", "node", ".", "u", ")", "{", "if", "(", "rs", "[", "axis", "]", ".", "b", "<=", "node", ".", "u", ")", "{", "// Is the exit point inside the left node?", "/* case I1 */", "// The ray enters the volume between the planes so", "// we need to clip the ray start for this case", "this", ".", "segmentHelpers", ".", "clipSegmentStartInPlace", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "node", "=", "node", ".", "l", ";", "}", "else", "if", "(", "rs", "[", "axis", "]", ".", "b", ">=", "node", ".", "v", ")", "{", "// Is the exit point inside the right node?", "/* case I2 */", "// The ray enters the volume between the planes so", "// we need to clip the ray start for this case", "this", ".", "segmentHelpers", ".", "clipSegmentStartInPlace", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "node", "=", "node", ".", "r", ";", "}", "// If start is between both planes,", "// the end point CAN NOT be in BOTH nodes - it is unpossible", "else", "{", "node", "=", "null", ";", "}", "}", "else", "if", "(", "rs", "[", "axis", "]", ".", "a", "<=", "node", ".", "u", ")", "{", "// Starts in left node", "if", "(", "rs", "[", "axis", "]", ".", "a", ">=", "node", ".", "v", ")", "{", "// Also in right node!", "// If we exit and are no longer in the right node, we must clip the ray", "if", "(", "rs", "[", "axis", "]", ".", "b", "<", "node", ".", "v", ")", "{", "newRS", "=", "this", ".", "segmentHelpers", ".", "clipSegmentEnd", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "}", "else", "{", "newRS", "=", "this", ".", "segmentHelpers", ".", "cloneSegment", "(", "rs", ")", ";", "}", "// This will be popped later, so right = far node", "rayStack", ".", "push", "(", "newRS", ")", ";", "parentStack", ".", "push", "(", "node", ")", ";", "directionStack", ".", "push", "(", "false", ")", ";", "if", "(", "!", "noDebug", ")", "depthStack", ".", "push", "(", "debug", ".", "currDepth", ")", ";", "// If we exit and are no longer in the left node, we must clip the ray", "if", "(", "rs", "[", "axis", "]", ".", "b", ">", "node", ".", "u", ")", "{", "this", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "}", "// This will be popped first, so left = near node", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "node", "=", "node", ".", "l", ";", "}", "else", "if", "(", "rs", "[", "axis", "]", ".", "b", "<", "node", ".", "v", ")", "{", "// We are exiting before the right plane", "if", "(", "rs", "[", "axis", "]", ".", "b", "<=", "node", ".", "u", ")", "{", "// We are exiting before the left plane", "/* cases N1,N2,N3,P5,Z2,Z3 */", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "node", "=", "node", ".", "l", ";", "}", "else", "{", "// The ray exits the volume between the planes so", "// we need to clip the ray end for this case", "this", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "node", "=", "node", ".", "l", ";", "}", "}", "else", "{", "// The ray exits on the far side of the right plane", "/* case N4 */", "// This will be popped later, so right = far node", "newRS", "=", "this", ".", "segmentHelpers", ".", "clipSegmentStart", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "rayStack", ".", "push", "(", "newRS", ")", ";", "parentStack", ".", "push", "(", "node", ")", ";", "directionStack", ".", "push", "(", "false", ")", ";", "if", "(", "!", "noDebug", ")", "depthStack", ".", "push", "(", "debug", ".", "currDepth", ")", ";", "// This will be popped first, so left = near node", "this", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "node", "=", "node", ".", "l", ";", "}", "}", "else", "if", "(", "rs", "[", "axis", "]", ".", "a", ">=", "node", ".", "v", ")", "{", "// Starts in right node", "if", "(", "rs", "[", "axis", "]", ".", "b", ">", "node", ".", "u", ")", "{", "// Ray exits before the left plane", "if", "(", "rs", "[", "axis", "]", ".", "b", ">=", "node", ".", "v", ")", "{", "// Ray exits before the right plane", "/* cases P1,P2,P3,N5,Z1 */", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "node", "=", "node", ".", "r", ";", "}", "else", "{", "/* cases P1,P2,P3,N5,Z1 */", "// we need to clip the ray end for this case", "this", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "node", "=", "node", ".", "r", ";", "}", "}", "else", "{", "// Ray hits both planes", "/* case P4 */", "// This will be popped later, so left = far node", "newRS", "=", "this", ".", "segmentHelpers", ".", "clipSegmentStart", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "rayStack", ".", "push", "(", "newRS", ")", ";", "parentStack", ".", "push", "(", "node", ")", ";", "directionStack", ".", "push", "(", "true", ")", ";", "if", "(", "!", "noDebug", ")", "depthStack", ".", "push", "(", "debug", ".", "currDepth", ")", ";", "// This will be popped first, so right = near node", "this", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "node", "=", "node", ".", "r", ";", "}", "}", "else", "{", "node", "=", "null", ";", "}", "}", "if", "(", "node", "&&", "node", ".", "o", ")", "{", "// A leaf!!", "leafElementCount", "=", "node", ".", "o", ".", "length", ";", "while", "(", "leafElementCount", "--", ">", "0", ")", "{", "leafElement", "=", "node", ".", "o", "[", "leafElementCount", "]", ";", "leafElement", ".", "iFn", ".", "call", "(", "leafElement", ".", "o", ",", "ray", ",", "intersectInfo", ")", ";", "if", "(", "intersectInfo", ".", "isHit", ")", "{", "this", ".", "segmentHelpers", ".", "setBestSegment", "(", "bestSegment", ",", "intersectInfo", ".", "position", ")", ";", "}", "}", "// end while each element", "// Causes the loop to pop far-node candidates from the stack", "node", "=", "null", ";", "}", "}", "// end of main while()", "if", "(", "!", "noDebug", ")", "debug", ".", "depth", "=", "Math", ".", "max", "(", "debug", ".", "depth", ",", "debug", ".", "currDepth", ")", ";", "}"], "original_docstring": "tree.intersect (non-recursive) intersect the tree with ray returning the earliest element that hits the ray  Based on Havran's TA-B - Modified for BIH with several new cases: - I1 (ray enters between planes, exits in left node) - I2 (ray enters between planes, exits in right node) - I3 (ray enters between planes, exits between planes) - B1 (Ray enters in both planes, exits both) - B2 (Ray enters in both planes, exits left) - B3 (Ray enters in both planes, exits right)  Modified for incremental(on-demand?) tree building", "docstring": {"block_comment": "tree.intersect  non recursive  intersect the tree with ray returning the earliest element that hits the ray  Based on Havran s TA B   Modified for BIH with several new cases    I1  ray enters between planes, exits in left node    I2  ray enters between planes, exits in right node    I3  ray enters between planes, exits between planes    B1  Ray enters in both planes, exits both    B2  Ray enters in both planes, exits left    B3  Ray enters in both planes, exits right   Modified for incremental on demand   tree building", "line_comment": ["Contains the nodes that are parents of the hit nodes", "Contains the ray segment for the current sub tree", "Just for depth determining. debugging stuff.", "Which was the last direction taken   true   left", "Test ray AABB first", "If there are no elements or the ray AABB test failed, don t bother traversing", "Depth First Descent", "Check to see if this node is still reachable", "An unfinished node ", "Below is not an  else if  because we want to continue traversal during an incremental build", "A node ", null, "Cases where entry point is between  both  splitting planes", null, "case I1", "The ray enters the volume between the planes so", "we need to clip the ray start for this case", null, "case I2", "The ray enters the volume between the planes so", "we need to clip the ray start for this case", "If start is between both planes,", "the end point CAN NOT be in BOTH nodes   it is unpossible", "Starts in left node", "Also in right node ", "If we exit and are no longer in the right node, we must clip the ray", "This will be popped later, so right   far node", "If we exit and are no longer in the left node, we must clip the ray", "This will be popped first, so left   near node", "We are exiting before the right plane", "We are exiting before the left plane", "cases N1,N2,N3,P5,Z2,Z3", "The ray exits the volume between the planes so", "we need to clip the ray end for this case", "The ray exits on the far side of the right plane", "case N4", "This will be popped later, so right   far node", "This will be popped first, so left   near node", "Starts in right node", "Ray exits before the left plane", "Ray exits before the right plane", "cases P1,P2,P3,N5,Z1", "cases P1,P2,P3,N5,Z1", "we need to clip the ray end for this case", "Ray hits both planes", "case P4", "This will be popped later, so left   far node", "This will be popped first, so right   near node", "A leaf  ", "end while each element", "Causes the loop to pop far node candidates from the stack", "end of main while  "]}, "docstring_tokens": ["tree", ".", "intersect", "non", "recursive", "intersect", "the", "tree", "with", "ray", "returning", "the", "earliest", "element", "that", "hits", "the", "ray", "Based", "on", "Havran", "s", "TA", "B", "Modified", "for", "BIH", "with", "several", "new", "cases", "I1", "ray", "enters", "between", "planes", "exits", "in", "left", "node", "I2", "ray", "enters", "between", "planes", "exits", "in", "right", "node", "I3", "ray", "enters", "between", "planes", "exits", "between", "planes", "B1", "Ray", "enters", "in", "both", "planes", "exits", "both", "B2", "Ray", "enters", "in", "both", "planes", "exits", "left", "B3", "Ray", "enters", "in", "both", "planes", "exits", "right", "Modified", "for", "incremental", "on", "demand", "tree", "building"], "sample_id": 272, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004085", "repo": "imbcmdth/bxh", "path": "bih/index.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(ray, intersectInfo, stepCallback, finishedCallback) {\n\t\t\t\tvar parentStack = [], // Contains the nodes that are parents of the hit nodes\n\t\t\t\t    rayStack = [], // Contains the ray-segment for the current sub-tree\n\t\t\t\t    depthStack = [], // Just for depth determining. debugging stuff.\n\t\t\t\t    directionStack = [], // Which was the last direction taken - true = left\n\t\t\t\t    aabbStack = [],\n\t\t\t\t    currentAABB = this.i.clone(),\n\t\t\t\t    tempAABB,\n\t\t\t\t    lastDirectionWasLeft = true,\n\t\t\t\t    rayIntervals = ray.toIntervals(),\n\t\t\t\t    majorAxis = ray.getMajorAxis(),\n\t\t\t\t    node = null,\n\t\t\t\t    parentNode = null,\n\t\t\t\t    rs = null,\n\t\t\t\t    axis = null,\n\t\t\t\t    newRS = null,\n\t\t\t\t    bestSegment = this.segmentHelpers.cloneSegment(rayIntervals),\n\t\t\t\t    leafElementCount,\n\t\t\t\t    leafElement = null,\n\t\t\t\t    noDebug = true,\n\t\t\t\t    debug = null,\n\t\t\t\t    thisTree = this;\n\n\t\t\t\tif(intersectInfo.debug) {\n\t\t\t\t\tnoDebug = false;\n\t\t\t\t\tdebug = intersectInfo.debug;\n\t\t\t\t\tdepthStack = [];\n\t\t\t\t}\n\n\t\t\t\t// Test ray AABB first\n\t\t\t\trs = this.i.intersectWithSegment(rayIntervals);\n\n\t\t\t\t// If there are no elements or the ray-AABB test failed, don't bother traversing\n\t\t\t\tif (rs && this._T !== null) {\n\t\t\t\t\tnode = this._T;\n\t\t\t\t} else {\n\t\t\t\t\tif(finishedCallback) return finishedCallback(intersectInfo);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstepCallback(node, rs, currentAABB, null, 0, step);\n\n\t\t\t\tfunction step() {\n\t\t\t\t\twhile( (node !== null) || parentStack.length > 0) {\n\t\t\t\t\t\tif(!noDebug) debug.currDepth++;\n\n\t\t\t\t\t\tif(node === null) {\n\t\t\t\t\t\t\trs = rayStack.pop(); // Depth-First Descent\n\t\t\t\t\t\t\tparentNode = parentStack.pop();\n\t\t\t\t\t\t\tlastDirectionWasLeft = directionStack.pop();\n\t\t\t\t\t\t\tcurrentAABB = aabbStack.pop();\n\t\t\t\t\t\t\tif(!noDebug) {\n\t\t\t\t\t\t\t\tdebug.depth = Math.max(debug.depth, debug.currDepth);\n\t\t\t\t\t\t\t\tdebug.currDepth = depthStack.pop();\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\tif(lastDirectionWasLeft)\n\t\t\t\t\t\t\t\tnode = parentNode.l;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tnode = parentNode.r;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check to see if this node is still reachable\n\t\t\t\t\t\tif(intersectInfo.isHit) {\n\t\t\t\t\t\t\tif(!thisTree.segmentHelpers.trimSegmentInPlace(bestSegment, rs, majorAxis)) {\n\t\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!noDebug) debug.costT++;\n\n\t\t\t\t\t\tif(node.s) { // An unfinished node!\n\t\t\t\t\t\t\tnode = thisTree._incrementalBuild(node);\n\t\t\t\t\t\t\tif(parentNode == null) {\n\t\t\t\t\t\t\t\tthisTree._T = node;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif(lastDirectionWasLeft)\n\t\t\t\t\t\t\t\t\tparentNode.l = node;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tparentNode.r = node;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Below is not an \"else if\" because we want to continue traversal during an incremental build\n\t\t\t\t\t\tif (node.x) { // A node!\n\t\t\t\t\t\t\taxis = node.x - 1; // Axis: 1 = x, 2 = y, 3 = z ...\n\t\t\t\t\t\t\t// Cases where entry point is between *both* splitting planes\n\t\t\t\t\t\t\tif (rs[axis].a < node.v && rs[axis].a > node.u) {\n\t\t\t\t\t\t\t\tif (rs[axis].b <= node.u) { // Is the exit point inside the left node?\n\t\t\t\t\t\t\t\t\t/* case I1 */\n\t\t\t\t\t\t\t\t\t// The ray enters the volume between the planes so\n\t\t\t\t\t\t\t\t\t// we need to clip the ray start for this case\n\t\t\t\t\t\t\t\t\tthisTree.segmentHelpers.clipSegmentStartInPlace(rs, axis, node.u);\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\t\tcurrentAABB.max[axis] = node.u;\n\t\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t\t} else if (rs[axis].b >= node.v) { // Is the exit point inside the right node?\n\t\t\t\t\t\t\t\t\t/* case I2 */\n\t\t\t\t\t\t\t\t\t// The ray enters the volume between the planes so\n\t\t\t\t\t\t\t\t\t// we need to clip the ray start for this case\n\t\t\t\t\t\t\t\t\tthisTree.segmentHelpers.clipSegmentStartInPlace(rs, axis, node.v);\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\t\tcurrentAABB.min[axis] = node.v;\n\t\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t\t} // If start is between both planes,\n\t\t\t\t\t\t\t\t// the end point CAN NOT be in BOTH nodes - it is unpossible\n\t\t\t\t\t\t\t\t else {\n\t\t\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (rs[axis].a <= node.u) { // Starts in left node\n\t\t\t\t\t\t\t\tif (rs[axis].a >= node.v) { // Also in right node!\n\t\t\t\t\t\t\t\t\t// If we exit and are no longer in the right node, we must clip the ray\n\t\t\t\t\t\t\t\t\tif (rs[axis].b < node.v) {\n\t\t\t\t\t\t\t\t\t\tnewRS = thisTree.segmentHelpers.clipSegmentEnd(rs, axis, node.v);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tnewRS = thisTree.segmentHelpers.cloneSegment(rs);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// This will be popped later, so right = far node\n\t\t\t\t\t\t\t\t\trayStack.push(newRS);\n\t\t\t\t\t\t\t\t\tparentStack.push(node);\n\t\t\t\t\t\t\t\t\tdirectionStack.push(false);\n\t\t\t\t\t\t\t\t\ttempAABB = currentAABB.clone();\n\t\t\t\t\t\t\t\t\ttempAABB.min[axis] = node.v;\n\t\t\t\t\t\t\t\t\taabbStack.push(tempAABB);\n\t\t\t\t\t\t\t\t\tif(!noDebug) depthStack.push(debug.currDepth);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// If we exit and are no longer in the left node, we must clip the ray\n\t\t\t\t\t\t\t\t\tif (rs[axis].b > node.u) {\n\t\t\t\t\t\t\t\t\t\tthisTree.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.u);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// This will be popped first, so left = near node\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\t\tcurrentAABB.max[axis] = node.u;\n\t\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t\t} else if (rs[axis].b < node.v) { // We are exiting before the right plane\n\t\t\t\t\t\t\t\t\tif (rs[axis].b <= node.u) {\n\t\t\t\t\t\t\t\t\t\t// We are exiting before the left plane\n\t\t\t\t\t\t\t\t\t\t/* cases N1,N2,N3,P5,Z2,Z3 */\n\t\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\t\t\tcurrentAABB.max[axis] = node.u;\n\t\t\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// The ray exits the volume between the planes so\n\t\t\t\t\t\t\t\t\t\t// we need to clip the ray end for this case\n\t\t\t\t\t\t\t\t\t\tthisTree.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.u);\n\t\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\t\t\tcurrentAABB.max[axis] = node.u;\n\t\t\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else { // The ray exits on the far side of the right plane\n\t\t\t\t\t\t\t\t\t/* case N4 */\n\t\t\t\t\t\t\t\t\t// This will be popped later, so right = far node\n\t\t\t\t\t\t\t\t\tnewRS = thisTree.segmentHelpers.clipSegmentStart(rs, axis, node.v);\n\n\t\t\t\t\t\t\t\t\trayStack.push(newRS);\n\t\t\t\t\t\t\t\t\tparentStack.push(node);\n\t\t\t\t\t\t\t\t\tdirectionStack.push(false);\n\t\t\t\t\t\t\t\t\ttempAABB = currentAABB.clone();\n\t\t\t\t\t\t\t\t\ttempAABB.min[axis] = node.v;\n\t\t\t\t\t\t\t\t\taabbStack.push(tempAABB);\n\t\t\t\t\t\t\t\t\tif(!noDebug) depthStack.push(debug.currDepth);\n\n\t\t\t\t\t\t\t\t\t// This will be popped first, so left = near node\n\t\t\t\t\t\t\t\t\tthisTree.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.u);\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = true;\n\t\t\t\t\t\t\t\t\tcurrentAABB.max[axis] = node.u;\n\t\t\t\t\t\t\t\t\tnode = node.l;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (rs[axis].a >= node.v) { // Starts in right node\n\t\t\t\t\t\t\t\tif (rs[axis].b > node.u) { // Ray exits before the left plane\n\t\t\t\t\t\t\t\t\tif (rs[axis].b >= node.v) { // Ray exits before the right plane\n\t\t\t\t\t\t\t\t\t\t/* cases P1,P2,P3,N5,Z1 */\n\t\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\t\t\tcurrentAABB.min[axis] = node.v;\n\t\t\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t\t\t} else { /* cases P1,P2,P3,N5,Z1 */\n\t\t\t\t\t\t\t\t\t\t// we need to clip the ray end for this case\n\t\t\t\t\t\t\t\t\t\tthisTree.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.v);\n\t\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\t\t\tcurrentAABB.min[axis] = node.v;\n\t\t\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else { // Ray hits both planes\n\t\t\t\t\t\t\t\t\t/* case P4 */\n\t\t\t\t\t\t\t\t\t// This will be popped later, so left = far node\n\t\t\t\t\t\t\t\t\tnewRS = thisTree.segmentHelpers.clipSegmentStart(rs, axis, node.u);\n\t\t\t\t\t\t\t\t\trayStack.push(newRS);\n\t\t\t\t\t\t\t\t\tparentStack.push(node);\n\t\t\t\t\t\t\t\t\tdirectionStack.push(true);\n\t\t\t\t\t\t\t\t\ttempAABB = currentAABB.clone();\n\t\t\t\t\t\t\t\t\ttempAABB.max[axis] = node.u;\n\t\t\t\t\t\t\t\t\taabbStack.push(tempAABB);\n\t\t\t\t\t\t\t\t\tif(!noDebug) depthStack.push(debug.currDepth);\n\n\t\t\t\t\t\t\t\t\t// This will be popped first, so right = near node\n\t\t\t\t\t\t\t\t\tthisTree.segmentHelpers.clipSegmentEndInPlace(rs, axis, node.v);\n\t\t\t\t\t\t\t\t\tparentNode = node;\n\t\t\t\t\t\t\t\t\tlastDirectionWasLeft = false;\n\t\t\t\t\t\t\t\t\tcurrentAABB.min[axis] = node.v;\n\t\t\t\t\t\t\t\t\tnode = node.r;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node && node.x) return stepCallback(node, rs, currentAABB, lastDirectionWasLeft, debug.currDepth, step);\n\n\t\t\t\t\t\tif (node && node.o) { // A leaf!!\n\t\t\t\t\t\t\tleafElementCount = node.o.length;\n\t\t\t\t\t\t\twhile(leafElementCount-->0) {\n\t\t\t\t\t\t\t\tif(!noDebug) debug.costI++;\n\n\t\t\t\t\t\t\t\tleafElement = node.o[leafElementCount];\n\t\t\t\t\t\t\t\tleafElement.iFn.call(leafElement.o, ray, intersectInfo);\n\n\t\t\t\t\t\t\t\tif(intersectInfo.isHit) {\n\t\t\t\t\t\t\t\t\tthisTree.segmentHelpers.setBestSegment(bestSegment, intersectInfo.position);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}// end while each element\n\n\t\t\t\t\t\t\t// Causes the loop to pop far-node candidates from the stack\n\t\t\t\t\t\t\tstepCallback(node, rs, currentAABB, lastDirectionWasLeft, debug.currDepth, step);\n\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}// end of main while()\n\t\t\t\t\tif(!noDebug) debug.depth = Math.max(debug.depth, debug.currDepth);\n\t\t\t\t\tif(finishedCallback) finishedCallback(intersectInfo);\n\t\t\t\t}\n\t\t\t}", "code_tokens": ["function", "(", "ray", ",", "intersectInfo", ",", "stepCallback", ",", "finishedCallback", ")", "{", "var", "parentStack", "=", "[", "]", ",", "// Contains the nodes that are parents of the hit nodes", "rayStack", "=", "[", "]", ",", "// Contains the ray-segment for the current sub-tree", "depthStack", "=", "[", "]", ",", "// Just for depth determining. debugging stuff.", "directionStack", "=", "[", "]", ",", "// Which was the last direction taken - true = left", "aabbStack", "=", "[", "]", ",", "currentAABB", "=", "this", ".", "i", ".", "clone", "(", ")", ",", "tempAABB", ",", "lastDirectionWasLeft", "=", "true", ",", "rayIntervals", "=", "ray", ".", "toIntervals", "(", ")", ",", "majorAxis", "=", "ray", ".", "getMajorAxis", "(", ")", ",", "node", "=", "null", ",", "parentNode", "=", "null", ",", "rs", "=", "null", ",", "axis", "=", "null", ",", "newRS", "=", "null", ",", "bestSegment", "=", "this", ".", "segmentHelpers", ".", "cloneSegment", "(", "rayIntervals", ")", ",", "leafElementCount", ",", "leafElement", "=", "null", ",", "noDebug", "=", "true", ",", "debug", "=", "null", ",", "thisTree", "=", "this", ";", "if", "(", "intersectInfo", ".", "debug", ")", "{", "noDebug", "=", "false", ";", "debug", "=", "intersectInfo", ".", "debug", ";", "depthStack", "=", "[", "]", ";", "}", "// Test ray AABB first", "rs", "=", "this", ".", "i", ".", "intersectWithSegment", "(", "rayIntervals", ")", ";", "// If there are no elements or the ray-AABB test failed, don't bother traversing", "if", "(", "rs", "&&", "this", ".", "_T", "!==", "null", ")", "{", "node", "=", "this", ".", "_T", ";", "}", "else", "{", "if", "(", "finishedCallback", ")", "return", "finishedCallback", "(", "intersectInfo", ")", ";", "return", ";", "}", "stepCallback", "(", "node", ",", "rs", ",", "currentAABB", ",", "null", ",", "0", ",", "step", ")", ";", "function", "step", "(", ")", "{", "while", "(", "(", "node", "!==", "null", ")", "||", "parentStack", ".", "length", ">", "0", ")", "{", "if", "(", "!", "noDebug", ")", "debug", ".", "currDepth", "++", ";", "if", "(", "node", "===", "null", ")", "{", "rs", "=", "rayStack", ".", "pop", "(", ")", ";", "// Depth-First Descent", "parentNode", "=", "parentStack", ".", "pop", "(", ")", ";", "lastDirectionWasLeft", "=", "directionStack", ".", "pop", "(", ")", ";", "currentAABB", "=", "aabbStack", ".", "pop", "(", ")", ";", "if", "(", "!", "noDebug", ")", "{", "debug", ".", "depth", "=", "Math", ".", "max", "(", "debug", ".", "depth", ",", "debug", ".", "currDepth", ")", ";", "debug", ".", "currDepth", "=", "depthStack", ".", "pop", "(", ")", ";", "}", "if", "(", "lastDirectionWasLeft", ")", "node", "=", "parentNode", ".", "l", ";", "else", "node", "=", "parentNode", ".", "r", ";", "}", "// Check to see if this node is still reachable", "if", "(", "intersectInfo", ".", "isHit", ")", "{", "if", "(", "!", "thisTree", ".", "segmentHelpers", ".", "trimSegmentInPlace", "(", "bestSegment", ",", "rs", ",", "majorAxis", ")", ")", "{", "node", "=", "null", ";", "continue", ";", "}", "}", "if", "(", "!", "noDebug", ")", "debug", ".", "costT", "++", ";", "if", "(", "node", ".", "s", ")", "{", "// An unfinished node!", "node", "=", "thisTree", ".", "_incrementalBuild", "(", "node", ")", ";", "if", "(", "parentNode", "==", "null", ")", "{", "thisTree", ".", "_T", "=", "node", ";", "}", "else", "{", "if", "(", "lastDirectionWasLeft", ")", "parentNode", ".", "l", "=", "node", ";", "else", "parentNode", ".", "r", "=", "node", ";", "}", "}", "// Below is not an \"else if\" because we want to continue traversal during an incremental build", "if", "(", "node", ".", "x", ")", "{", "// A node!", "axis", "=", "node", ".", "x", "-", "1", ";", "// Axis: 1 = x, 2 = y, 3 = z ...", "// Cases where entry point is between *both* splitting planes", "if", "(", "rs", "[", "axis", "]", ".", "a", "<", "node", ".", "v", "&&", "rs", "[", "axis", "]", ".", "a", ">", "node", ".", "u", ")", "{", "if", "(", "rs", "[", "axis", "]", ".", "b", "<=", "node", ".", "u", ")", "{", "// Is the exit point inside the left node?", "/* case I1 */", "// The ray enters the volume between the planes so", "// we need to clip the ray start for this case", "thisTree", ".", "segmentHelpers", ".", "clipSegmentStartInPlace", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "currentAABB", ".", "max", "[", "axis", "]", "=", "node", ".", "u", ";", "node", "=", "node", ".", "l", ";", "}", "else", "if", "(", "rs", "[", "axis", "]", ".", "b", ">=", "node", ".", "v", ")", "{", "// Is the exit point inside the right node?", "/* case I2 */", "// The ray enters the volume between the planes so", "// we need to clip the ray start for this case", "thisTree", ".", "segmentHelpers", ".", "clipSegmentStartInPlace", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "currentAABB", ".", "min", "[", "axis", "]", "=", "node", ".", "v", ";", "node", "=", "node", ".", "r", ";", "}", "// If start is between both planes,", "// the end point CAN NOT be in BOTH nodes - it is unpossible", "else", "{", "node", "=", "null", ";", "}", "}", "else", "if", "(", "rs", "[", "axis", "]", ".", "a", "<=", "node", ".", "u", ")", "{", "// Starts in left node", "if", "(", "rs", "[", "axis", "]", ".", "a", ">=", "node", ".", "v", ")", "{", "// Also in right node!", "// If we exit and are no longer in the right node, we must clip the ray", "if", "(", "rs", "[", "axis", "]", ".", "b", "<", "node", ".", "v", ")", "{", "newRS", "=", "thisTree", ".", "segmentHelpers", ".", "clipSegmentEnd", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "}", "else", "{", "newRS", "=", "thisTree", ".", "segmentHelpers", ".", "cloneSegment", "(", "rs", ")", ";", "}", "// This will be popped later, so right = far node", "rayStack", ".", "push", "(", "newRS", ")", ";", "parentStack", ".", "push", "(", "node", ")", ";", "directionStack", ".", "push", "(", "false", ")", ";", "tempAABB", "=", "currentAABB", ".", "clone", "(", ")", ";", "tempAABB", ".", "min", "[", "axis", "]", "=", "node", ".", "v", ";", "aabbStack", ".", "push", "(", "tempAABB", ")", ";", "if", "(", "!", "noDebug", ")", "depthStack", ".", "push", "(", "debug", ".", "currDepth", ")", ";", "// If we exit and are no longer in the left node, we must clip the ray", "if", "(", "rs", "[", "axis", "]", ".", "b", ">", "node", ".", "u", ")", "{", "thisTree", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "}", "// This will be popped first, so left = near node", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "currentAABB", ".", "max", "[", "axis", "]", "=", "node", ".", "u", ";", "node", "=", "node", ".", "l", ";", "}", "else", "if", "(", "rs", "[", "axis", "]", ".", "b", "<", "node", ".", "v", ")", "{", "// We are exiting before the right plane", "if", "(", "rs", "[", "axis", "]", ".", "b", "<=", "node", ".", "u", ")", "{", "// We are exiting before the left plane", "/* cases N1,N2,N3,P5,Z2,Z3 */", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "currentAABB", ".", "max", "[", "axis", "]", "=", "node", ".", "u", ";", "node", "=", "node", ".", "l", ";", "}", "else", "{", "// The ray exits the volume between the planes so", "// we need to clip the ray end for this case", "thisTree", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "currentAABB", ".", "max", "[", "axis", "]", "=", "node", ".", "u", ";", "node", "=", "node", ".", "l", ";", "}", "}", "else", "{", "// The ray exits on the far side of the right plane", "/* case N4 */", "// This will be popped later, so right = far node", "newRS", "=", "thisTree", ".", "segmentHelpers", ".", "clipSegmentStart", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "rayStack", ".", "push", "(", "newRS", ")", ";", "parentStack", ".", "push", "(", "node", ")", ";", "directionStack", ".", "push", "(", "false", ")", ";", "tempAABB", "=", "currentAABB", ".", "clone", "(", ")", ";", "tempAABB", ".", "min", "[", "axis", "]", "=", "node", ".", "v", ";", "aabbStack", ".", "push", "(", "tempAABB", ")", ";", "if", "(", "!", "noDebug", ")", "depthStack", ".", "push", "(", "debug", ".", "currDepth", ")", ";", "// This will be popped first, so left = near node", "thisTree", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "true", ";", "currentAABB", ".", "max", "[", "axis", "]", "=", "node", ".", "u", ";", "node", "=", "node", ".", "l", ";", "}", "}", "else", "if", "(", "rs", "[", "axis", "]", ".", "a", ">=", "node", ".", "v", ")", "{", "// Starts in right node", "if", "(", "rs", "[", "axis", "]", ".", "b", ">", "node", ".", "u", ")", "{", "// Ray exits before the left plane", "if", "(", "rs", "[", "axis", "]", ".", "b", ">=", "node", ".", "v", ")", "{", "// Ray exits before the right plane", "/* cases P1,P2,P3,N5,Z1 */", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "currentAABB", ".", "min", "[", "axis", "]", "=", "node", ".", "v", ";", "node", "=", "node", ".", "r", ";", "}", "else", "{", "/* cases P1,P2,P3,N5,Z1 */", "// we need to clip the ray end for this case", "thisTree", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "currentAABB", ".", "min", "[", "axis", "]", "=", "node", ".", "v", ";", "node", "=", "node", ".", "r", ";", "}", "}", "else", "{", "// Ray hits both planes", "/* case P4 */", "// This will be popped later, so left = far node", "newRS", "=", "thisTree", ".", "segmentHelpers", ".", "clipSegmentStart", "(", "rs", ",", "axis", ",", "node", ".", "u", ")", ";", "rayStack", ".", "push", "(", "newRS", ")", ";", "parentStack", ".", "push", "(", "node", ")", ";", "directionStack", ".", "push", "(", "true", ")", ";", "tempAABB", "=", "currentAABB", ".", "clone", "(", ")", ";", "tempAABB", ".", "max", "[", "axis", "]", "=", "node", ".", "u", ";", "aabbStack", ".", "push", "(", "tempAABB", ")", ";", "if", "(", "!", "noDebug", ")", "depthStack", ".", "push", "(", "debug", ".", "currDepth", ")", ";", "// This will be popped first, so right = near node", "thisTree", ".", "segmentHelpers", ".", "clipSegmentEndInPlace", "(", "rs", ",", "axis", ",", "node", ".", "v", ")", ";", "parentNode", "=", "node", ";", "lastDirectionWasLeft", "=", "false", ";", "currentAABB", ".", "min", "[", "axis", "]", "=", "node", ".", "v", ";", "node", "=", "node", ".", "r", ";", "}", "}", "else", "{", "node", "=", "null", ";", "}", "}", "if", "(", "node", "&&", "node", ".", "x", ")", "return", "stepCallback", "(", "node", ",", "rs", ",", "currentAABB", ",", "lastDirectionWasLeft", ",", "debug", ".", "currDepth", ",", "step", ")", ";", "if", "(", "node", "&&", "node", ".", "o", ")", "{", "// A leaf!!", "leafElementCount", "=", "node", ".", "o", ".", "length", ";", "while", "(", "leafElementCount", "--", ">", "0", ")", "{", "if", "(", "!", "noDebug", ")", "debug", ".", "costI", "++", ";", "leafElement", "=", "node", ".", "o", "[", "leafElementCount", "]", ";", "leafElement", ".", "iFn", ".", "call", "(", "leafElement", ".", "o", ",", "ray", ",", "intersectInfo", ")", ";", "if", "(", "intersectInfo", ".", "isHit", ")", "{", "thisTree", ".", "segmentHelpers", ".", "setBestSegment", "(", "bestSegment", ",", "intersectInfo", ".", "position", ")", ";", "}", "}", "// end while each element", "// Causes the loop to pop far-node candidates from the stack", "stepCallback", "(", "node", ",", "rs", ",", "currentAABB", ",", "lastDirectionWasLeft", ",", "debug", ".", "currDepth", ",", "step", ")", ";", "node", "=", "null", ";", "return", ";", "}", "}", "// end of main while()", "if", "(", "!", "noDebug", ")", "debug", ".", "depth", "=", "Math", ".", "max", "(", "debug", ".", "depth", ",", "debug", ".", "currDepth", ")", ";", "if", "(", "finishedCallback", ")", "finishedCallback", "(", "intersectInfo", ")", ";", "}", "}"], "original_docstring": "tree.intersectStep intersect the tree with ray returning the earliest element that hits the ray returns information to a callback and provides a next function to continue traversal  Based on Havran's TA-B - Modified for BIH with several new cases: - I1 (ray enters between planes, exits in left node) - I2 (ray enters between planes, exits in right node) - I3 (ray enters between planes, exits between planes) - B1 (Ray enters in both planes, exits both) - B2 (Ray enters in both planes, exits left) - B3 (Ray enters in both planes, exits right)  Modified for incremental(on-demand?) tree building  stepCallback(node, rs, currentAABB, wasLeft, depth, next)", "docstring": {"block_comment": "tree.intersectStep intersect the tree with ray returning the earliest element that hits the ray returns information to a callback and provides a next function to continue traversal  Based on Havran s TA B   Modified for BIH with several new cases    I1  ray enters between planes, exits in left node    I2  ray enters between planes, exits in right node    I3  ray enters between planes, exits between planes    B1  Ray enters in both planes, exits both    B2  Ray enters in both planes, exits left    B3  Ray enters in both planes, exits right   Modified for incremental on demand   tree building  stepCallback node, rs, currentAABB, wasLeft, depth, next ", "line_comment": ["Contains the nodes that are parents of the hit nodes", "Contains the ray segment for the current sub tree", "Just for depth determining. debugging stuff.", "Which was the last direction taken   true   left", "Test ray AABB first", "If there are no elements or the ray AABB test failed, don t bother traversing", "Depth First Descent", "Check to see if this node is still reachable", "An unfinished node ", "Below is not an  else if  because we want to continue traversal during an incremental build", "A node ", null, "Cases where entry point is between  both  splitting planes", null, "case I1", "The ray enters the volume between the planes so", "we need to clip the ray start for this case", null, "case I2", "The ray enters the volume between the planes so", "we need to clip the ray start for this case", "If start is between both planes,", "the end point CAN NOT be in BOTH nodes   it is unpossible", "Starts in left node", "Also in right node ", "If we exit and are no longer in the right node, we must clip the ray", "This will be popped later, so right   far node", "If we exit and are no longer in the left node, we must clip the ray", "This will be popped first, so left   near node", "We are exiting before the right plane", "We are exiting before the left plane", "cases N1,N2,N3,P5,Z2,Z3", "The ray exits the volume between the planes so", "we need to clip the ray end for this case", "The ray exits on the far side of the right plane", "case N4", "This will be popped later, so right   far node", "This will be popped first, so left   near node", "Starts in right node", "Ray exits before the left plane", "Ray exits before the right plane", "cases P1,P2,P3,N5,Z1", "cases P1,P2,P3,N5,Z1", "we need to clip the ray end for this case", "Ray hits both planes", "case P4", "This will be popped later, so left   far node", "This will be popped first, so right   near node", "A leaf  ", "end while each element", "Causes the loop to pop far node candidates from the stack", "end of main while  "]}, "docstring_tokens": ["tree", ".", "intersectStep", "intersect", "the", "tree", "with", "ray", "returning", "the", "earliest", "element", "that", "hits", "the", "ray", "returns", "information", "to", "a", "callback", "and", "provides", "a", "next", "function", "to", "continue", "traversal", "Based", "on", "Havran", "s", "TA", "B", "Modified", "for", "BIH", "with", "several", "new", "cases", "I1", "ray", "enters", "between", "planes", "exits", "in", "left", "node", "I2", "ray", "enters", "between", "planes", "exits", "in", "right", "node", "I3", "ray", "enters", "between", "planes", "exits", "between", "planes", "B1", "Ray", "enters", "in", "both", "planes", "exits", "both", "B2", "Ray", "enters", "in", "both", "planes", "exits", "left", "B3", "Ray", "enters", "in", "both", "planes", "exits", "right", "Modified", "for", "incremental", "on", "demand", "tree", "building", "stepCallback", "node", "rs", "currentAABB", "wasLeft", "depth", "next"], "sample_id": 273, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004086", "repo": "imbcmdth/bxh", "path": "bih/index.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(nodeCallback, leafCallback) {\n\t\t\t\tfunction iterate(node, currentAABB, depth){\n\t\t\t\t\tvar axis,\n\t\t\t\t\t    leftAABB,\n\t\t\t\t\t    rightAABB, retVal;\n\n\t\t\t\t\tif(node.x){\n\t\t\t\t\t\taxis = node.x - 1;\n\n\t\t\t\t\t\tleftAABB = currentAABB.clone();\n\t\t\t\t\t\tleftAABB.max[axis] = node.u;\n\n\t\t\t\t\t\trightAABB = currentAABB.clone();\n\t\t\t\t\t\trightAABB.min[axis] = node.v;\n\n\t\t\t\t\t\tif(nodeCallback) retVal = nodeCallback(node, leftAABB, rightAABB, depth);\n\t\t\t\t\t\tif(!retVal) return;\n\n\t\t\t\t\t\titerate(node.l, leftAABB, depth+1);\n\t\t\t\t\t\titerate(node.r, rightAABB, depth+1);\n\t\t\t\t\t} else if(node.o) {\n\t\t\t\t\t\tif(leafCallback) leafCallback(node, currentAABB, depth);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\titerate(this._T, this.i, 0);\n\t\t\t}", "code_tokens": ["function", "(", "nodeCallback", ",", "leafCallback", ")", "{", "function", "iterate", "(", "node", ",", "currentAABB", ",", "depth", ")", "{", "var", "axis", ",", "leftAABB", ",", "rightAABB", ",", "retVal", ";", "if", "(", "node", ".", "x", ")", "{", "axis", "=", "node", ".", "x", "-", "1", ";", "leftAABB", "=", "currentAABB", ".", "clone", "(", ")", ";", "leftAABB", ".", "max", "[", "axis", "]", "=", "node", ".", "u", ";", "rightAABB", "=", "currentAABB", ".", "clone", "(", ")", ";", "rightAABB", ".", "min", "[", "axis", "]", "=", "node", ".", "v", ";", "if", "(", "nodeCallback", ")", "retVal", "=", "nodeCallback", "(", "node", ",", "leftAABB", ",", "rightAABB", ",", "depth", ")", ";", "if", "(", "!", "retVal", ")", "return", ";", "iterate", "(", "node", ".", "l", ",", "leftAABB", ",", "depth", "+", "1", ")", ";", "iterate", "(", "node", ".", "r", ",", "rightAABB", ",", "depth", "+", "1", ")", ";", "}", "else", "if", "(", "node", ".", "o", ")", "{", "if", "(", "leafCallback", ")", "leafCallback", "(", "node", ",", "currentAABB", ",", "depth", ")", ";", "}", "}", "iterate", "(", "this", ".", "_T", ",", "this", ".", "i", ",", "0", ")", ";", "}"], "original_docstring": "tree.each (recursive) go over each node and leaf in the tree (depth-first) and execute the provided callback functions. Very useful for drawing the tree, counting nodes, ect.", "docstring": {"block_comment": "tree.each  recursive  go over each node and leaf in the tree  depth first  and execute the provided callback functions. Very useful for drawing the tree, counting nodes, ect.", "line_comment": null}, "docstring_tokens": ["tree", ".", "each", "recursive", "go", "over", "each", "node", "and", "leaf", "in", "the", "tree", "depth", "first", "and", "execute", "the", "provided", "callback", "functions", ".", "Very", "useful", "for", "drawing", "the", "tree", "counting", "nodes", "ect", "."], "sample_id": 274, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004087", "repo": "imbcmdth/bxh", "path": "bih/index.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(boundingBox, sortedArraysOfNodes, totalWeight) {\n\t\t\t\treturn {\n\t\t\t\t\ti: boundingBox,\n\t\t\t\t\ts: sortedArraysOfNodes,\n\t\t\t\t\tw: totalWeight\n\t\t\t\t};\n\t\t\t}", "code_tokens": ["function", "(", "boundingBox", ",", "sortedArraysOfNodes", ",", "totalWeight", ")", "{", "return", "{", "i", ":", "boundingBox", ",", "s", ":", "sortedArraysOfNodes", ",", "w", ":", "totalWeight", "}", ";", "}"], "original_docstring": "ALL nodes only have one-letter variables to save space in the event that the tree is serialized. TODO: Allow the tree to be serialized. :)", "docstring": {"block_comment": "ALL nodes only have one letter variables to save space in the event that the tree is serialized. TODO  Allow the tree to be serialized.   ", "line_comment": null}, "docstring_tokens": ["ALL", "nodes", "only", "have", "one", "letter", "variables", "to", "save", "space", "in", "the", "event", "that", "the", "tree", "is", "serialized", ".", "TODO", "Allow", "the", "tree", "to", "be", "serialized", "."], "sample_id": 275, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004088", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(data, cssClass) {\n            this._addPing(data, cssClass);\n            this._expirePings();\n\n            // Start timer if not active\n            if (!this._running && this._data.length > 0) {\n                this._running = true;\n                this._lastUpdate = Date.now();\n\n                var that = this;\n                d3.timer(function() { that._updatePings.call(that, false); });\n            }\n\n            return this;\n        }", "code_tokens": ["function", "(", "data", ",", "cssClass", ")", "{", "this", ".", "_addPing", "(", "data", ",", "cssClass", ")", ";", "this", ".", "_expirePings", "(", ")", ";", "// Start timer if not active", "if", "(", "!", "this", ".", "_running", "&&", "this", ".", "_data", ".", "length", ">", "0", ")", "{", "this", ".", "_running", "=", "true", ";", "this", ".", "_lastUpdate", "=", "Date", ".", "now", "(", ")", ";", "var", "that", "=", "this", ";", "d3", ".", "timer", "(", "function", "(", ")", "{", "that", ".", "_updatePings", ".", "call", "(", "that", ",", "false", ")", ";", "}", ")", ";", "}", "return", "this", ";", "}"], "original_docstring": "/*\nMethod by which to \"add\" pings\n", "docstring": {"block_comment": "Method by which to  add  pings", "line_comment": ["Start timer if not active"]}, "docstring_tokens": ["Method", "by", "which", "to", "add", "pings"], "sample_id": 276, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004089", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(data, cssClass) {\n            // Lazy init the data array\n            if (null == this._data) this._data = [];\n\n            // Derive the spatial data\n            var geo = [ this._fn.lat(data), this._fn.lng(data) ];\n            var coords = this._getCircleCoords(geo);\n\n            // Add the data to the list of pings\n            var circle = {\n                data: data,\n                geo: geo,\n                ts: Date.now(),\n                nts: 0\n            };\n            circle.c = this._d3Container.append('circle')\n                .attr('class', (null != cssClass)? 'ping ' + cssClass : 'ping')\n                .attr('cx', coords.x)\n                .attr('cy', coords.y)\n                .attr('r', this._fn.radiusScaleFactor.call(this, data) * this._scale.radius.range()[0]);\n\n            // Push new circles\n            this._data.push(circle);\n        }", "code_tokens": ["function", "(", "data", ",", "cssClass", ")", "{", "// Lazy init the data array", "if", "(", "null", "==", "this", ".", "_data", ")", "this", ".", "_data", "=", "[", "]", ";", "// Derive the spatial data", "var", "geo", "=", "[", "this", ".", "_fn", ".", "lat", "(", "data", ")", ",", "this", ".", "_fn", ".", "lng", "(", "data", ")", "]", ";", "var", "coords", "=", "this", ".", "_getCircleCoords", "(", "geo", ")", ";", "// Add the data to the list of pings", "var", "circle", "=", "{", "data", ":", "data", ",", "geo", ":", "geo", ",", "ts", ":", "Date", ".", "now", "(", ")", ",", "nts", ":", "0", "}", ";", "circle", ".", "c", "=", "this", ".", "_d3Container", ".", "append", "(", "'circle'", ")", ".", "attr", "(", "'class'", ",", "(", "null", "!=", "cssClass", ")", "?", "'ping '", "+", "cssClass", ":", "'ping'", ")", ".", "attr", "(", "'cx'", ",", "coords", ".", "x", ")", ".", "attr", "(", "'cy'", ",", "coords", ".", "y", ")", ".", "attr", "(", "'r'", ",", "this", ".", "_fn", ".", "radiusScaleFactor", ".", "call", "(", "this", ",", "data", ")", "*", "this", ".", "_scale", ".", "radius", ".", "range", "(", ")", "[", "0", "]", ")", ";", "// Push new circles", "this", ".", "_data", ".", "push", "(", "circle", ")", ";", "}"], "original_docstring": "Add a ping to the map", "docstring": {"block_comment": "Add a ping to the map", "line_comment": ["Lazy init the data array", "Derive the spatial data", "Add the data to the list of pings", "Push new circles"]}, "docstring_tokens": ["Add", "a", "ping", "to", "the", "map"], "sample_id": 277, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004090", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(geo) {\n            var point = this._map.latLngToLayerPoint(geo);\n            return { x: point.x, y: point.y };\n        }", "code_tokens": ["function", "(", "geo", ")", "{", "var", "point", "=", "this", ".", "_map", ".", "latLngToLayerPoint", "(", "geo", ")", ";", "return", "{", "x", ":", "point", ".", "x", ",", "y", ":", "point", ".", "y", "}", ";", "}"], "original_docstring": "Calculate the circle coordinates for the provided data", "docstring": {"block_comment": "Calculate the circle coordinates for the provided data", "line_comment": null}, "docstring_tokens": ["Calculate", "the", "circle", "coordinates", "for", "the", "provided", "data"], "sample_id": 278, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004091", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function() {\n\n            // Don't do anything\n\n        }", "code_tokens": ["function", "(", ")", "{", "// Don't do anything", "}"], "original_docstring": "Cleanup the svg pane", "docstring": {"block_comment": "Cleanup the svg pane", "line_comment": ["Don t do anything"]}, "docstring_tokens": ["Cleanup", "the", "svg", "pane"], "sample_id": 279, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004092", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function() {\n\n            this._updatePings(true);\n\n        }", "code_tokens": ["function", "(", ")", "{", "this", ".", "_updatePings", "(", "true", ")", ";", "}"], "original_docstring": "Update the container - Updates the dimensions of the svg pane", "docstring": {"block_comment": "Update the container   Updates the dimensions of the svg pane", "line_comment": null}, "docstring_tokens": ["Update", "the", "container", "Updates", "the", "dimensions", "of", "the", "svg", "pane"], "sample_id": 280, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004093", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function() {\n\n            L.SVG.prototype._initContainer.call(this);\n            this._d3Container = d3.select(this._container).select('g');\n\n        }", "code_tokens": ["function", "(", ")", "{", "L", ".", "SVG", ".", "prototype", ".", "_initContainer", ".", "call", "(", "this", ")", ";", "this", ".", "_d3Container", "=", "d3", ".", "select", "(", "this", ".", "_container", ")", ".", "select", "(", "'g'", ")", ";", "}"], "original_docstring": "/*\nPrivate Methods\n Initialize the Container - creates the svg pane", "docstring": {"block_comment": "Private Methods \nInitialize the Container   creates the svg pane", "line_comment": null}, "docstring_tokens": ["Private", "Methods", "Initialize", "the", "Container", "creates", "the", "svg", "pane"], "sample_id": 281, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004094", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(map) {\n\n            L.SVG.prototype.onRemove.call(this);\n\n            // Destroy the svg container\n            this._destroyContainer();\n\n            // Remove events\n            map.off({'move': this._updateContainer}, this);\n\n            this._map = null;\n            this._data = null;\n\n        }", "code_tokens": ["function", "(", "map", ")", "{", "L", ".", "SVG", ".", "prototype", ".", "onRemove", ".", "call", "(", "this", ")", ";", "// Destroy the svg container", "this", ".", "_destroyContainer", "(", ")", ";", "// Remove events", "map", ".", "off", "(", "{", "'move'", ":", "this", ".", "_updateContainer", "}", ",", "this", ")", ";", "this", ".", "_map", "=", "null", ";", "this", ".", "_data", "=", "null", ";", "}"], "original_docstring": "Called when the plugin layer is removed from the map", "docstring": {"block_comment": "Called when the plugin layer is removed from the map", "line_comment": ["Destroy the svg container", "Remove events"]}, "docstring_tokens": ["Called", "when", "the", "plugin", "layer", "is", "removed", "from", "the", "map"], "sample_id": 282, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004095", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(map) {\n\n            L.SVG.prototype.onAdd.call(this);\n\n            // Store a reference to the map for later use\n            this._map = map;\n\n            // Init the state of the simulation\n            this._running = false;\n\n            // Set up events\n            map.on({'move': this._updateContainer}, this);\n\n        }", "code_tokens": ["function", "(", "map", ")", "{", "L", ".", "SVG", ".", "prototype", ".", "onAdd", ".", "call", "(", "this", ")", ";", "// Store a reference to the map for later use", "this", ".", "_map", "=", "map", ";", "// Init the state of the simulation", "this", ".", "_running", "=", "false", ";", "// Set up events", "map", ".", "on", "(", "{", "'move'", ":", "this", ".", "_updateContainer", "}", ",", "this", ")", ";", "}"], "original_docstring": "Called when the plugin layer is added to the map", "docstring": {"block_comment": "Called when the plugin layer is added to the map", "line_comment": ["Store a reference to the map for later use", "Init the state of the simulation", "Set up events"]}, "docstring_tokens": ["Called", "when", "the", "plugin", "layer", "is", "added", "to", "the", "map"], "sample_id": 283, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004096", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(options) {\n            L.setOptions(this, options);\n\n            this._fn = {\n                lng: function(d) { return d[0]; },\n                lat: function(d) { return d[1]; },\n                radiusScaleFactor: function(d) { return 1; }\n            };\n\n            this._scale = {\n                radius: d3.scalePow().exponent(0.35),\n                opacity: d3.scaleLinear()\n            };\n\n            this._lastUpdate = Date.now();\n            this._fps = 0;\n\n            this._scale.radius\n                .domain([ 0, this.options.duration ])\n                .range(this.options.radiusRange)\n                .clamp(true);\n            this._scale.opacity\n                .domain([ 0, this.options.duration ])\n                .range(this.options.opacityRange)\n                .clamp(true);\n        }", "code_tokens": ["function", "(", "options", ")", "{", "L", ".", "setOptions", "(", "this", ",", "options", ")", ";", "this", ".", "_fn", "=", "{", "lng", ":", "function", "(", "d", ")", "{", "return", "d", "[", "0", "]", ";", "}", ",", "lat", ":", "function", "(", "d", ")", "{", "return", "d", "[", "1", "]", ";", "}", ",", "radiusScaleFactor", ":", "function", "(", "d", ")", "{", "return", "1", ";", "}", "}", ";", "this", ".", "_scale", "=", "{", "radius", ":", "d3", ".", "scalePow", "(", ")", ".", "exponent", "(", "0.35", ")", ",", "opacity", ":", "d3", ".", "scaleLinear", "(", ")", "}", ";", "this", ".", "_lastUpdate", "=", "Date", ".", "now", "(", ")", ";", "this", ".", "_fps", "=", "0", ";", "this", ".", "_scale", ".", "radius", ".", "domain", "(", "[", "0", ",", "this", ".", "options", ".", "duration", "]", ")", ".", "range", "(", "this", ".", "options", ".", "radiusRange", ")", ".", "clamp", "(", "true", ")", ";", "this", ".", "_scale", ".", "opacity", ".", "domain", "(", "[", "0", ",", "this", ".", "options", ".", "duration", "]", ")", ".", "range", "(", "this", ".", "options", ".", "opacityRange", ")", ".", "clamp", "(", "true", ")", ";", "}"], "original_docstring": "Initialization of the plugin", "docstring": {"block_comment": "Initialization of the plugin", "line_comment": null}, "docstring_tokens": ["Initialization", "of", "the", "plugin"], "sample_id": 284, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004097", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function () {\n            return L.GeoJSON.getFeature(this, {\n                type: 'LineString',\n                coordinates: L.GeoJSON.latLngsToCoords(this.getLatLngs(), 0)\n            });\n        }", "code_tokens": ["function", "(", ")", "{", "return", "L", ".", "GeoJSON", ".", "getFeature", "(", "this", ",", "{", "type", ":", "'LineString'", ",", "coordinates", ":", "L", ".", "GeoJSON", ".", "latLngsToCoords", "(", "this", ".", "getLatLngs", "(", ")", ",", "0", ")", "}", ")", ";", "}"], "original_docstring": "/*\nGet path geometry as GeoJSON\n", "docstring": {"block_comment": "Get path geometry as GeoJSON", "line_comment": null}, "docstring_tokens": ["Get", "path", "geometry", "as", "GeoJSON"], "sample_id": 285, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004098", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function () {\n            var that = this;\n\n            // Map the data into an array of latLngs using the configured lat/lng accessors\n            return this._data.map(function(d) {\n                return L.latLng(that.options.lat(d), that.options.lng(d));\n            });\n        }", "code_tokens": ["function", "(", ")", "{", "var", "that", "=", "this", ";", "// Map the data into an array of latLngs using the configured lat/lng accessors", "return", "this", ".", "_data", ".", "map", "(", "function", "(", "d", ")", "{", "return", "L", ".", "latLng", "(", "that", ".", "options", ".", "lat", "(", "d", ")", ",", "that", ".", "options", ".", "lng", "(", "d", ")", ")", ";", "}", ")", ";", "}"], "original_docstring": "/*\nReturns an array of the points in the path, or nested arrays of points in case of multi-polyline.\n", "docstring": {"block_comment": "Returns an array of the points in the path, or nested arrays of points in case of multi polyline.", "line_comment": ["Map the data into an array of latLngs using the configured lat lng accessors"]}, "docstring_tokens": ["Returns", "an", "array", "of", "the", "points", "in", "the", "path", "or", "nested", "arrays", "of", "points", "in", "case", "of", "multi", "polyline", "."], "sample_id": 286, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004099", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function() {\n            return this._dispatch;\n        }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "_dispatch", ";", "}"], "original_docstring": "/*\nGetter for the event dispatcher\n", "docstring": {"block_comment": "Getter for the event dispatcher", "line_comment": null}, "docstring_tokens": ["Getter", "for", "the", "event", "dispatcher"], "sample_id": 287, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004100", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function() {\n            var that = this;\n\n            if (!that._map) {\n                return;\n            }\n\n            // Generate the mapped version of the data\n            var data = that._data.map(function(d) {\n                var lng = that._fn.lng(d);\n                var lat = that._fn.lat(d);\n\n                var point = that._project([ lng, lat ]);\n                return { o: d, point: point };\n            });\n\n            // Select the hex group for the current zoom level. This has\n            // the effect of recreating the group if the zoom level has changed\n            var join = this._d3Container.selectAll('g.hexbin')\n                .data([ this._map.getZoom() ], function(d) { return d; });\n\n            // enter\n            var enter = join.enter().append('g')\n                .attr('class', function(d) { return 'hexbin zoom-' + d; });\n\n            // enter + update\n            var enterUpdate = enter.merge(join);\n\n            // exit\n            join.exit().remove();\n\n            // add the hexagons to the select\n            this._createHexagons(enterUpdate, data);\n\n        }", "code_tokens": ["function", "(", ")", "{", "var", "that", "=", "this", ";", "if", "(", "!", "that", ".", "_map", ")", "{", "return", ";", "}", "// Generate the mapped version of the data", "var", "data", "=", "that", ".", "_data", ".", "map", "(", "function", "(", "d", ")", "{", "var", "lng", "=", "that", ".", "_fn", ".", "lng", "(", "d", ")", ";", "var", "lat", "=", "that", ".", "_fn", ".", "lat", "(", "d", ")", ";", "var", "point", "=", "that", ".", "_project", "(", "[", "lng", ",", "lat", "]", ")", ";", "return", "{", "o", ":", "d", ",", "point", ":", "point", "}", ";", "}", ")", ";", "// Select the hex group for the current zoom level. This has", "// the effect of recreating the group if the zoom level has changed", "var", "join", "=", "this", ".", "_d3Container", ".", "selectAll", "(", "'g.hexbin'", ")", ".", "data", "(", "[", "this", ".", "_map", ".", "getZoom", "(", ")", "]", ",", "function", "(", "d", ")", "{", "return", "d", ";", "}", ")", ";", "// enter", "var", "enter", "=", "join", ".", "enter", "(", ")", ".", "append", "(", "'g'", ")", ".", "attr", "(", "'class'", ",", "function", "(", "d", ")", "{", "return", "'hexbin zoom-'", "+", "d", ";", "}", ")", ";", "// enter + update", "var", "enterUpdate", "=", "enter", ".", "merge", "(", "join", ")", ";", "// exit", "join", ".", "exit", "(", ")", ".", "remove", "(", ")", ";", "// add the hexagons to the select", "this", ".", "_createHexagons", "(", "enterUpdate", ",", "data", ")", ";", "}"], "original_docstring": "\n(Re)draws the hexbins data on the container\n@private\n", "docstring": {"block_comment": " Re draws the hexbins data on the container", "line_comment": ["Generate the mapped version of the data", "Select the hex group for the current zoom level. This has", "the effect of recreating the group if the zoom level has changed", "enter", "enter   update", "exit", "add the hexagons to the select"]}, "docstring_tokens": ["Re", "draws", "the", "hexbins", "data", "on", "the", "container"], "sample_id": 288, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004103", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(map) {\n\n            L.SVG.prototype.onRemove.call(this);\n\n            // Destroy the svg container\n            this._destroyContainer();\n\n            // Remove events\n            map.off({ 'moveend': this.redraw }, this);\n\n            this._map = null;\n\n            // Explicitly will leave the data array alone in case the layer will be shown again\n            //this._data = [];\n\n        }", "code_tokens": ["function", "(", "map", ")", "{", "L", ".", "SVG", ".", "prototype", ".", "onRemove", ".", "call", "(", "this", ")", ";", "// Destroy the svg container", "this", ".", "_destroyContainer", "(", ")", ";", "// Remove events", "map", ".", "off", "(", "{", "'moveend'", ":", "this", ".", "redraw", "}", ",", "this", ")", ";", "this", ".", "_map", "=", "null", ";", "// Explicitly will leave the data array alone in case the layer will be shown again", "//this._data = [];", "}"], "original_docstring": "\nCallback made by Leaflet when the layer is removed from the map\n@param map Reference to the map from which this layer is being removed\n", "docstring": {"block_comment": "Callback made by Leaflet when the layer is removed from the map", "line_comment": ["Destroy the svg container", "Remove events", "Explicitly will leave the data array alone in case the layer will be shown again", "this._data      "]}, "docstring_tokens": ["Callback", "made", "by", "Leaflet", "when", "the", "layer", "is", "removed", "from", "the", "map"], "sample_id": 289, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004104", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(map) {\n\n            L.SVG.prototype.onAdd.call(this);\n\n            // Store a reference to the map for later use\n            this._map = map;\n\n            // Redraw on moveend\n            map.on({ 'moveend': this.redraw }, this);\n\n            // Initial draw\n            this.redraw();\n\n        }", "code_tokens": ["function", "(", "map", ")", "{", "L", ".", "SVG", ".", "prototype", ".", "onAdd", ".", "call", "(", "this", ")", ";", "// Store a reference to the map for later use", "this", ".", "_map", "=", "map", ";", "// Redraw on moveend", "map", ".", "on", "(", "{", "'moveend'", ":", "this", ".", "redraw", "}", ",", "this", ")", ";", "// Initial draw", "this", ".", "redraw", "(", ")", ";", "}"], "original_docstring": "\nCallback made by Leaflet when the layer is added to the map\n@param map Reference to the map to which this layer has been added\n", "docstring": {"block_comment": "Callback made by Leaflet when the layer is added to the map", "line_comment": ["Store a reference to the map for later use", "Redraw on moveend", "Initial draw"]}, "docstring_tokens": ["Callback", "made", "by", "Leaflet", "when", "the", "layer", "is", "added", "to", "the", "map"], "sample_id": 290, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004105", "repo": "jakobzhao/GeovisualAnalytics", "path": "troubleshoot/hexbin/js/leaflet-d3.js", "language": "JavaScript", "license": "lgpl-3.0", "func_name": "", "code": "function(options) {\n            L.setOptions(this, options);\n\n            // Set up the various overrideable functions\n            this._fn = {\n                lng: function(d) { return d[0]; },\n                lat: function(d) { return d[1]; },\n                colorValue: function(d) { return d.length; },\n                radiusValue: function(d) { return Number.MAX_VALUE; },\n\n                fill: function(d) {\n                    var val = this._fn.colorValue(d);\n                    return (null != val) ? this._scale.color(val) : 'none';\n                }\n            };\n\n            // Set up the customizable scale\n            this._scale = {\n                color: d3.scaleLinear(),\n                radius: d3.scaleLinear()\n            };\n\n            // Set up the Dispatcher for managing events and callbacks\n            this._dispatch = d3.dispatch('mouseover', 'mouseout', 'click');\n\n            // Set up the default hover handler\n            this._hoverHandler = L.HexbinHoverHandler.none();\n\n            // Create the hex layout\n            this._hexLayout = d3_hexbin()\n                .radius(this.options.radius)\n                .x(function(d) { return d.point[0]; })\n                .y(function(d) { return d.point[1]; });\n\n            // Initialize the data array to be empty\n            this._data = [];\n\n            this._scale.color\n                .range(this.options.colorRange)\n                .clamp(true);\n\n            this._scale.radius\n                .range(this.options.radiusRange)\n                .clamp(true);\n\n        }", "code_tokens": ["function", "(", "options", ")", "{", "L", ".", "setOptions", "(", "this", ",", "options", ")", ";", "// Set up the various overrideable functions", "this", ".", "_fn", "=", "{", "lng", ":", "function", "(", "d", ")", "{", "return", "d", "[", "0", "]", ";", "}", ",", "lat", ":", "function", "(", "d", ")", "{", "return", "d", "[", "1", "]", ";", "}", ",", "colorValue", ":", "function", "(", "d", ")", "{", "return", "d", ".", "length", ";", "}", ",", "radiusValue", ":", "function", "(", "d", ")", "{", "return", "Number", ".", "MAX_VALUE", ";", "}", ",", "fill", ":", "function", "(", "d", ")", "{", "var", "val", "=", "this", ".", "_fn", ".", "colorValue", "(", "d", ")", ";", "return", "(", "null", "!=", "val", ")", "?", "this", ".", "_scale", ".", "color", "(", "val", ")", ":", "'none'", ";", "}", "}", ";", "// Set up the customizable scale", "this", ".", "_scale", "=", "{", "color", ":", "d3", ".", "scaleLinear", "(", ")", ",", "radius", ":", "d3", ".", "scaleLinear", "(", ")", "}", ";", "// Set up the Dispatcher for managing events and callbacks", "this", ".", "_dispatch", "=", "d3", ".", "dispatch", "(", "'mouseover'", ",", "'mouseout'", ",", "'click'", ")", ";", "// Set up the default hover handler", "this", ".", "_hoverHandler", "=", "L", ".", "HexbinHoverHandler", ".", "none", "(", ")", ";", "// Create the hex layout", "this", ".", "_hexLayout", "=", "d3_hexbin", "(", ")", ".", "radius", "(", "this", ".", "options", ".", "radius", ")", ".", "x", "(", "function", "(", "d", ")", "{", "return", "d", ".", "point", "[", "0", "]", ";", "}", ")", ".", "y", "(", "function", "(", "d", ")", "{", "return", "d", ".", "point", "[", "1", "]", ";", "}", ")", ";", "// Initialize the data array to be empty", "this", ".", "_data", "=", "[", "]", ";", "this", ".", "_scale", ".", "color", ".", "range", "(", "this", ".", "options", ".", "colorRange", ")", ".", "clamp", "(", "true", ")", ";", "this", ".", "_scale", ".", "radius", ".", "range", "(", "this", ".", "options", ".", "radiusRange", ")", ".", "clamp", "(", "true", ")", ";", "}"], "original_docstring": "\nStandard Leaflet initialize function, accepting an options argument provided by the\nuser when they create the layer\n@param options Options object where the options override the defaults\n", "docstring": {"block_comment": "Standard Leaflet initialize function, accepting an options argument provided by the \nuser when they create the layer", "line_comment": ["Set up the various overrideable functions", "Set up the customizable scale", "Set up the Dispatcher for managing events and callbacks", "Set up the default hover handler", "Create the hex layout", "Initialize the data array to be empty"]}, "docstring_tokens": ["Standard", "Leaflet", "initialize", "function", "accepting", "an", "options", "argument", "provided", "by", "the", "user", "when", "they", "create", "the", "layer"], "sample_id": 291, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004106", "repo": "rodrigoramos/shaka-player", "path": "third_party/jsdoc/plugins/shout.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\r\n        if (typeof e.doclet.description === 'string') {\r\n            e.doclet.description = e.doclet.description.toUpperCase();\r\n        }\r\n    }", "code_tokens": ["function", "(", "e", ")", "{", "if", "(", "typeof", "e", ".", "doclet", ".", "description", "===", "'string'", ")", "{", "e", ".", "doclet", ".", "description", "=", "e", ".", "doclet", ".", "description", ".", "toUpperCase", "(", ")", ";", "}", "}"], "original_docstring": "\nMake your descriptions more shoutier.\n", "docstring": {"block_comment": "Make your descriptions more shoutier.", "line_comment": null}, "docstring_tokens": ["Make", "your", "descriptions", "more", "shoutier", "."], "sample_id": 292, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004107", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(labels) {\n            var columns = this.columns;\n\n            for (var i = 0; i < columns.length; i++) {\n                var range = this._findRangeElement(columns[i]);\n                range.setAttribute('aria-label', labels[i] + ' ' + this.config.assistiveLabel);\n            }\n        }", "code_tokens": ["function", "(", "labels", ")", "{", "var", "columns", "=", "this", ".", "columns", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "columns", ".", "length", ";", "i", "++", ")", "{", "var", "range", "=", "this", ".", "_findRangeElement", "(", "columns", "[", "i", "]", ")", ";", "range", ".", "setAttribute", "(", "'aria-label'", ",", "labels", "[", "i", "]", "+", "' '", "+", "this", ".", "config", ".", "assistiveLabel", ")", ";", "}", "}"], "original_docstring": "\nUpdates the accessibility labels for each resizer\n", "docstring": {"block_comment": "Updates the accessibility labels for each resizer", "line_comment": null}, "docstring_tokens": ["Updates", "the", "accessibility", "labels", "for", "each", "resizer"], "sample_id": 293, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004108", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(widths) {\n            this.tableWidth = 0;\n            this.table.style.width = null;\n\n            for (var i = 0; i < this.columns.length; i++) {\n                var column = this.columns[i];\n                var width = widths[i];\n\n                // we must be able to set widths that are smaller than min width due to \"system columns\"\n                if ($A.util.isUndefinedOrNull(width)) {\n                    width = this.config.minWidth;\n                }\n\n                this._resize(column, width);\n                this._resize(column.firstChild, width);\n\n                this.tableWidth += width;\n            }\n\n            this.table.style.width = this.tableWidth + 'px';\n        }", "code_tokens": ["function", "(", "widths", ")", "{", "this", ".", "tableWidth", "=", "0", ";", "this", ".", "table", ".", "style", ".", "width", "=", "null", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "this", ".", "columns", ".", "length", ";", "i", "++", ")", "{", "var", "column", "=", "this", ".", "columns", "[", "i", "]", ";", "var", "width", "=", "widths", "[", "i", "]", ";", "// we must be able to set widths that are smaller than min width due to \"system columns\"", "if", "(", "$A", ".", "util", ".", "isUndefinedOrNull", "(", "width", ")", ")", "{", "width", "=", "this", ".", "config", ".", "minWidth", ";", "}", "this", ".", "_resize", "(", "column", ",", "width", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "width", ")", ";", "this", ".", "tableWidth", "+=", "width", ";", "}", "this", ".", "table", ".", "style", ".", "width", "=", "this", ".", "tableWidth", "+", "'px'", ";", "}"], "original_docstring": "\nManually resize all columns\n\nSince we have all the info we need in this function, wipe the existing\nwidths, apply all the widths to the columns, and set the table to the sum\nof the given widths\n", "docstring": {"block_comment": "Manually resize all columns \nSince we have all the info we need in this function, wipe the existing \nwidths, apply all the widths to the columns, and set the table to the sum \nof the given widths", "line_comment": ["we must be able to set widths that are smaller than min width due to  system columns "]}, "docstring_tokens": ["Manually", "resize", "all", "columns", "Since", "we", "have", "all", "the", "info", "we", "need", "in", "this", "function", "wipe", "the", "existing", "widths", "apply", "all", "the", "widths", "to", "the", "columns", "and", "set", "the", "table", "to", "the", "sum", "of", "the", "given", "widths"], "sample_id": 294, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004109", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(index, width) {\n            var column = this.columns[index];\n            if (column && width > 0) {\n                this.resizeColumn(column, width, this._findRangeElement(column));\n            }\n        }", "code_tokens": ["function", "(", "index", ",", "width", ")", "{", "var", "column", "=", "this", ".", "columns", "[", "index", "]", ";", "if", "(", "column", "&&", "width", ">", "0", ")", "{", "this", ".", "resizeColumn", "(", "column", ",", "width", ",", "this", ".", "_findRangeElement", "(", "column", ")", ")", ";", "}", "}"], "original_docstring": "\nManually resizes the specified column\n", "docstring": {"block_comment": "Manually resizes the specified column", "line_comment": null}, "docstring_tokens": ["Manually", "resizes", "the", "specified", "column"], "sample_id": 295, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004110", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            return this.columns.map(function(th) {\n                return th.clientWidth;\n            });\n        }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "columns", ".", "map", "(", "function", "(", "th", ")", "{", "return", "th", ".", "clientWidth", ";", "}", ")", ";", "}"], "original_docstring": "\nRetrieves the widths of all the columns\n\n@method getColumnWidths\n@return {Array} widths of all the columns as an array of integers\n", "docstring": {"block_comment": "Retrieves the widths of all the columns", "line_comment": null}, "docstring_tokens": ["Retrieves", "the", "widths", "of", "all", "the", "columns"], "sample_id": 296, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004110", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            return this.columns.map(function(th) {\n                return th.clientWidth;\n            });\n        }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "columns", ".", "map", "(", "function", "(", "th", ")", "{", "return", "th", ".", "clientWidth", ";", "}", ")", ";", "}"], "original_docstring": "\nRetrieves the widths of all the columns\n\n@method getColumnWidths\n@return {Array} widths of all the columns as an array of integers\n", "docstring": {"block_comment": "Retrieves the widths of all the columns", "line_comment": null}, "docstring_tokens": ["widths", "of", "all", "the", "columns", "as", "an", "array", "of", "integers"], "sample_id": 296, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004111", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            return this.table.querySelectorAll(RESIZER_CONTAINER_CLASS);\n        }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "table", ".", "querySelectorAll", "(", "RESIZER_CONTAINER_CLASS", ")", ";", "}"], "original_docstring": "\nRetrieves the resizer handles\n", "docstring": {"block_comment": "Retrieves the resizer handles", "line_comment": null}, "docstring_tokens": ["Retrieves", "the", "resizer", "handles"], "sample_id": 297, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004112", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            if(this.indicator) {\n                this._setDividerHeight(this.indicator);\n            }\n            this.tableWidth = 0;\n            this.table.style.width = null;\n            this._initializeColumns(this.table);\n        }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "indicator", ")", "{", "this", ".", "_setDividerHeight", "(", "this", ".", "indicator", ")", ";", "}", "this", ".", "tableWidth", "=", "0", ";", "this", ".", "table", ".", "style", ".", "width", "=", "null", ";", "this", ".", "_initializeColumns", "(", "this", ".", "table", ")", ";", "}"], "original_docstring": "\nRe-initialize column data\n", "docstring": {"block_comment": "Re initialize column data", "line_comment": null}, "docstring_tokens": ["Re", "initialize", "column", "data"], "sample_id": 298, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004113", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(column) {\n            return column ? (column.querySelector('.' + HANDLE_CLASS) !== null) : false;\n        }", "code_tokens": ["function", "(", "column", ")", "{", "return", "column", "?", "(", "column", ".", "querySelector", "(", "'.'", "+", "HANDLE_CLASS", ")", "!==", "null", ")", ":", "false", ";", "}"], "original_docstring": "\nChecks to see if the specified column has a handle attached\n", "docstring": {"block_comment": "Checks to see if the specified column has a handle attached", "line_comment": null}, "docstring_tokens": ["Checks", "to", "see", "if", "the", "specified", "column", "has", "a", "handle", "attached"], "sample_id": 299, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004114", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(column) {\n            //this detection only works if the column is visible so we check for that with offsetParent\n            if (column.offsetParent === null) {\n                return true;\n            }\n            return  ((column.clientWidth + 'px') === column.style.width);\n        }", "code_tokens": ["function", "(", "column", ")", "{", "//this detection only works if the column is visible so we check for that with offsetParent", "if", "(", "column", ".", "offsetParent", "===", "null", ")", "{", "return", "true", ";", "}", "return", "(", "(", "column", ".", "clientWidth", "+", "'px'", ")", "===", "column", ".", "style", ".", "width", ")", ";", "}"], "original_docstring": "\nChecks to see if the DOM element's calculated width matches the specified width\n\n@method isValid\n@param column {HTMLElement} column element to be checked\n@return {Boolean} Whether the column's calculated width matches the specified width\n", "docstring": {"block_comment": "Checks to see if the DOM element s calculated width matches the specified width", "line_comment": ["this detection only works if the column is visible so we check for that with offsetParent"]}, "docstring_tokens": ["Checks", "to", "see", "if", "the", "DOM", "element", "s", "calculated", "width", "matches", "the", "specified", "width"], "sample_id": 300, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004114", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(column) {\n            //this detection only works if the column is visible so we check for that with offsetParent\n            if (column.offsetParent === null) {\n                return true;\n            }\n            return  ((column.clientWidth + 'px') === column.style.width);\n        }", "code_tokens": ["function", "(", "column", ")", "{", "//this detection only works if the column is visible so we check for that with offsetParent", "if", "(", "column", ".", "offsetParent", "===", "null", ")", "{", "return", "true", ";", "}", "return", "(", "(", "column", ".", "clientWidth", "+", "'px'", ")", "===", "column", ".", "style", ".", "width", ")", ";", "}"], "original_docstring": "\nChecks to see if the DOM element's calculated width matches the specified width\n\n@method isValid\n@param column {HTMLElement} column element to be checked\n@return {Boolean} Whether the column's calculated width matches the specified width\n", "docstring": {"block_comment": "Checks to see if the DOM element s calculated width matches the specified width", "line_comment": ["this detection only works if the column is visible so we check for that with offsetParent"]}, "docstring_tokens": ["column", "element", "to", "be", "checked"], "sample_id": 300, "prompt_tokens": ["<javascript>", "<param>", "column"], "comment_type": "param", "sentence_id": 1}
{"id": "21004114", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(column) {\n            //this detection only works if the column is visible so we check for that with offsetParent\n            if (column.offsetParent === null) {\n                return true;\n            }\n            return  ((column.clientWidth + 'px') === column.style.width);\n        }", "code_tokens": ["function", "(", "column", ")", "{", "//this detection only works if the column is visible so we check for that with offsetParent", "if", "(", "column", ".", "offsetParent", "===", "null", ")", "{", "return", "true", ";", "}", "return", "(", "(", "column", ".", "clientWidth", "+", "'px'", ")", "===", "column", ".", "style", ".", "width", ")", ";", "}"], "original_docstring": "\nChecks to see if the DOM element's calculated width matches the specified width\n\n@method isValid\n@param column {HTMLElement} column element to be checked\n@return {Boolean} Whether the column's calculated width matches the specified width\n", "docstring": {"block_comment": "Checks to see if the DOM element s calculated width matches the specified width", "line_comment": ["this detection only works if the column is visible so we check for that with offsetParent"]}, "docstring_tokens": ["Whether", "the", "column", "s", "calculated", "width", "matches", "the", "specified", "width"], "sample_id": 300, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004115", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(headerEl) {\n            return headerEl ? headerEl.querySelector('input[type=\"range\"]') : null;\n        }", "code_tokens": ["function", "(", "headerEl", ")", "{", "return", "headerEl", "?", "headerEl", ".", "querySelector", "(", "'input[type=\"range\"]'", ")", ":", "null", ";", "}"], "original_docstring": "\nFinds the range element used to store the column width values\n\n@method _findRangeElement\n@param headerEl {HTMLElement} header element\n@return {HTMLElement} The input of type range we use to store the column width values\n", "docstring": {"block_comment": "Finds the range element used to store the column width values", "line_comment": null}, "docstring_tokens": ["Finds", "the", "range", "element", "used", "to", "store", "the", "column", "width", "values"], "sample_id": 301, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004115", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(headerEl) {\n            return headerEl ? headerEl.querySelector('input[type=\"range\"]') : null;\n        }", "code_tokens": ["function", "(", "headerEl", ")", "{", "return", "headerEl", "?", "headerEl", ".", "querySelector", "(", "'input[type=\"range\"]'", ")", ":", "null", ";", "}"], "original_docstring": "\nFinds the range element used to store the column width values\n\n@method _findRangeElement\n@param headerEl {HTMLElement} header element\n@return {HTMLElement} The input of type range we use to store the column width values\n", "docstring": {"block_comment": "Finds the range element used to store the column width values", "line_comment": null}, "docstring_tokens": ["The", "input", "of", "type", "range", "we", "use", "to", "store", "the", "column", "width", "values"], "sample_id": 301, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004116", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(element) {\n            while (element.tagName !== \"TH\") {\n                element = element.parentNode;\n            }\n            return element;\n        }", "code_tokens": ["function", "(", "element", ")", "{", "while", "(", "element", ".", "tagName", "!==", "\"TH\"", ")", "{", "element", "=", "element", ".", "parentNode", ";", "}", "return", "element", ";", "}"], "original_docstring": "\nFinds the parent TH of the specified element\n\n@method _findParentTH\n@param element {HTMLElement} child element of a th\n@return {HTMLElement} the TH parent element\n", "docstring": {"block_comment": "Finds the parent TH of the specified element", "line_comment": null}, "docstring_tokens": ["Finds", "the", "parent", "TH", "of", "the", "specified", "element"], "sample_id": 302, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004116", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(element) {\n            while (element.tagName !== \"TH\") {\n                element = element.parentNode;\n            }\n            return element;\n        }", "code_tokens": ["function", "(", "element", ")", "{", "while", "(", "element", ".", "tagName", "!==", "\"TH\"", ")", "{", "element", "=", "element", ".", "parentNode", ";", "}", "return", "element", ";", "}"], "original_docstring": "\nFinds the parent TH of the specified element\n\n@method _findParentTH\n@param element {HTMLElement} child element of a th\n@return {HTMLElement} the TH parent element\n", "docstring": {"block_comment": "Finds the parent TH of the specified element", "line_comment": null}, "docstring_tokens": ["child", "element", "of", "a", "th"], "sample_id": 302, "prompt_tokens": ["<javascript>", "<param>", "element"], "comment_type": "param", "sentence_id": 1}
{"id": "21004116", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(element) {\n            while (element.tagName !== \"TH\") {\n                element = element.parentNode;\n            }\n            return element;\n        }", "code_tokens": ["function", "(", "element", ")", "{", "while", "(", "element", ".", "tagName", "!==", "\"TH\"", ")", "{", "element", "=", "element", ".", "parentNode", ";", "}", "return", "element", ";", "}"], "original_docstring": "\nFinds the parent TH of the specified element\n\n@method _findParentTH\n@param element {HTMLElement} child element of a th\n@return {HTMLElement} the TH parent element\n", "docstring": {"block_comment": "Finds the parent TH of the specified element", "line_comment": null}, "docstring_tokens": ["the", "TH", "parent", "element"], "sample_id": 302, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004117", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(eventType) {\n            var eventQueue = this._events[eventType],\n                eventFncs = eventQueue && eventQueue.length,\n                params = Array.prototype.slice.call(arguments, 1),\n                ePayload;\n\n            if (eventFncs) {\n                for (var i = 0; i < eventFncs; i++) {\n                    ePayload = eventQueue[i];\n                    ePayload.fn.apply(ePayload.context || this, params);\n                }\n            }\n        }", "code_tokens": ["function", "(", "eventType", ")", "{", "var", "eventQueue", "=", "this", ".", "_events", "[", "eventType", "]", ",", "eventFncs", "=", "eventQueue", "&&", "eventQueue", ".", "length", ",", "params", "=", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "arguments", ",", "1", ")", ",", "ePayload", ";", "if", "(", "eventFncs", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "eventFncs", ";", "i", "++", ")", "{", "ePayload", "=", "eventQueue", "[", "i", "]", ";", "ePayload", ".", "fn", ".", "apply", "(", "ePayload", ".", "context", "||", "this", ",", "params", ")", ";", "}", "}", "}"], "original_docstring": "\nFire a custom event by name\nThe callback functions are executed with the resizer instance as context and witht he parameters listed here.\nThe first argument is the event type and any additional arguments are passed to the listeners as parameters.\nThis is used to notify any listeners when resizing happens\n\n@method _fire\n@param eventType {string} Type of event to be dispatched\n@param arguments {object} An arbitrary set of parameters to pass to the listener\n@private\n", "docstring": {"block_comment": "Fire a custom event by name \nThe callback functions are executed with the resizer instance as context and witht he parameters listed here. \nThe first argument is the event type and any additional arguments are passed to the listeners as parameters. \nThis is used to notify any listeners when resizing happens", "line_comment": null}, "docstring_tokens": ["Fire", "a", "custom", "event", "by", "name", "The", "callback", "functions", "are", "executed", "with", "the", "resizer", "instance", "as", "context", "and", "witht", "he", "parameters", "listed", "here", ".", "The", "first", "argument", "is", "the", "event", "type", "and", "any", "additional", "arguments", "are", "passed", "to", "the", "listeners", "as", "parameters", ".", "This", "is", "used", "to", "notify", "any", "listeners", "when", "resizing", "happens"], "sample_id": 303, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004117", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(eventType) {\n            var eventQueue = this._events[eventType],\n                eventFncs = eventQueue && eventQueue.length,\n                params = Array.prototype.slice.call(arguments, 1),\n                ePayload;\n\n            if (eventFncs) {\n                for (var i = 0; i < eventFncs; i++) {\n                    ePayload = eventQueue[i];\n                    ePayload.fn.apply(ePayload.context || this, params);\n                }\n            }\n        }", "code_tokens": ["function", "(", "eventType", ")", "{", "var", "eventQueue", "=", "this", ".", "_events", "[", "eventType", "]", ",", "eventFncs", "=", "eventQueue", "&&", "eventQueue", ".", "length", ",", "params", "=", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "arguments", ",", "1", ")", ",", "ePayload", ";", "if", "(", "eventFncs", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "eventFncs", ";", "i", "++", ")", "{", "ePayload", "=", "eventQueue", "[", "i", "]", ";", "ePayload", ".", "fn", ".", "apply", "(", "ePayload", ".", "context", "||", "this", ",", "params", ")", ";", "}", "}", "}"], "original_docstring": "\nFire a custom event by name\nThe callback functions are executed with the resizer instance as context and witht he parameters listed here.\nThe first argument is the event type and any additional arguments are passed to the listeners as parameters.\nThis is used to notify any listeners when resizing happens\n\n@method _fire\n@param eventType {string} Type of event to be dispatched\n@param arguments {object} An arbitrary set of parameters to pass to the listener\n@private\n", "docstring": {"block_comment": "Fire a custom event by name \nThe callback functions are executed with the resizer instance as context and witht he parameters listed here. \nThe first argument is the event type and any additional arguments are passed to the listeners as parameters. \nThis is used to notify any listeners when resizing happens", "line_comment": null}, "docstring_tokens": ["Type", "of", "event", "to", "be", "dispatched"], "sample_id": 303, "prompt_tokens": ["<javascript>", "<param>", "eventType"], "comment_type": "param", "sentence_id": 1}
{"id": "21004118", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(eventType, fn, context) {\n            var eventQueue = this._events[eventType] || (this._events[eventType] = []);\n            eventQueue.push({\n                fn      : fn,\n                context : context\n            });\n        }", "code_tokens": ["function", "(", "eventType", ",", "fn", ",", "context", ")", "{", "var", "eventQueue", "=", "this", ".", "_events", "[", "eventType", "]", "||", "(", "this", ".", "_events", "[", "eventType", "]", "=", "[", "]", ")", ";", "eventQueue", ".", "push", "(", "{", "fn", ":", "fn", ",", "context", ":", "context", "}", ")", ";", "}"], "original_docstring": "\nAttach an event handler onto the resizer\n\n@method on\n@param eventType {string} event name\n@param fn {function} The callback to execute in response to the event\n@param [context] {object} Override 'this' object in callback\n@public\n", "docstring": {"block_comment": "Attach an event handler onto the resizer", "line_comment": null}, "docstring_tokens": ["Attach", "an", "event", "handler", "onto", "the", "resizer"], "sample_id": 304, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004118", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(eventType, fn, context) {\n            var eventQueue = this._events[eventType] || (this._events[eventType] = []);\n            eventQueue.push({\n                fn      : fn,\n                context : context\n            });\n        }", "code_tokens": ["function", "(", "eventType", ",", "fn", ",", "context", ")", "{", "var", "eventQueue", "=", "this", ".", "_events", "[", "eventType", "]", "||", "(", "this", ".", "_events", "[", "eventType", "]", "=", "[", "]", ")", ";", "eventQueue", ".", "push", "(", "{", "fn", ":", "fn", ",", "context", ":", "context", "}", ")", ";", "}"], "original_docstring": "\nAttach an event handler onto the resizer\n\n@method on\n@param eventType {string} event name\n@param fn {function} The callback to execute in response to the event\n@param [context] {object} Override 'this' object in callback\n@public\n", "docstring": {"block_comment": "Attach an event handler onto the resizer", "line_comment": null}, "docstring_tokens": ["The", "callback", "to", "execute", "in", "response", "to", "the", "event"], "sample_id": 304, "prompt_tokens": ["<javascript>", "<param>", "fn"], "comment_type": "param", "sentence_id": 1}
{"id": "21004118", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(eventType, fn, context) {\n            var eventQueue = this._events[eventType] || (this._events[eventType] = []);\n            eventQueue.push({\n                fn      : fn,\n                context : context\n            });\n        }", "code_tokens": ["function", "(", "eventType", ",", "fn", ",", "context", ")", "{", "var", "eventQueue", "=", "this", ".", "_events", "[", "eventType", "]", "||", "(", "this", ".", "_events", "[", "eventType", "]", "=", "[", "]", ")", ";", "eventQueue", ".", "push", "(", "{", "fn", ":", "fn", ",", "context", ":", "context", "}", ")", ";", "}"], "original_docstring": "\nAttach an event handler onto the resizer\n\n@method on\n@param eventType {string} event name\n@param fn {function} The callback to execute in response to the event\n@param [context] {object} Override 'this' object in callback\n@public\n", "docstring": {"block_comment": "Attach an event handler onto the resizer", "line_comment": null}, "docstring_tokens": ["Override", "this", "object", "in", "callback"], "sample_id": 304, "prompt_tokens": ["<javascript>", "<param>", "context"], "comment_type": "param", "sentence_id": 2}
{"id": "21004119", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\n\n\n            var range = e.target;\n            var column;\n            switch(e.keyCode) {\n                // Left Arrow key\n                case 37:\n                    column = this._findParentTH(range);\n                    this.resizeColumn(column, column.clientWidth - this.config.step, range);\n                    break;\n                // Right Arrow key\n                case 39:\n                    column = this._findParentTH(range);\n                    this.resizeColumn(column, column.clientWidth + this.config.step, range);\n                    break;\n            }\n        }", "code_tokens": ["function", "(", "e", ")", "{", "var", "range", "=", "e", ".", "target", ";", "var", "column", ";", "switch", "(", "e", ".", "keyCode", ")", "{", "// Left Arrow key", "case", "37", ":", "column", "=", "this", ".", "_findParentTH", "(", "range", ")", ";", "this", ".", "resizeColumn", "(", "column", ",", "column", ".", "clientWidth", "-", "this", ".", "config", ".", "step", ",", "range", ")", ";", "break", ";", "// Right Arrow key", "case", "39", ":", "column", "=", "this", ".", "_findParentTH", "(", "range", ")", ";", "this", ".", "resizeColumn", "(", "column", ",", "column", ".", "clientWidth", "+", "this", ".", "config", ".", "step", ",", "range", ")", ";", "break", ";", "}", "}"], "original_docstring": "\nHandler when keyboard is used on a focused resize handle\n\n@method _onKeydown\n@param e {event} Event fired by the browser\n", "docstring": {"block_comment": "Handler when keyboard is used on a focused resize handle", "line_comment": ["Left Arrow key", "Right Arrow key"]}, "docstring_tokens": ["Handler", "when", "keyboard", "is", "used", "on", "a", "focused", "resize", "handle"], "sample_id": 305, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004119", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\n\n\n            var range = e.target;\n            var column;\n            switch(e.keyCode) {\n                // Left Arrow key\n                case 37:\n                    column = this._findParentTH(range);\n                    this.resizeColumn(column, column.clientWidth - this.config.step, range);\n                    break;\n                // Right Arrow key\n                case 39:\n                    column = this._findParentTH(range);\n                    this.resizeColumn(column, column.clientWidth + this.config.step, range);\n                    break;\n            }\n        }", "code_tokens": ["function", "(", "e", ")", "{", "var", "range", "=", "e", ".", "target", ";", "var", "column", ";", "switch", "(", "e", ".", "keyCode", ")", "{", "// Left Arrow key", "case", "37", ":", "column", "=", "this", ".", "_findParentTH", "(", "range", ")", ";", "this", ".", "resizeColumn", "(", "column", ",", "column", ".", "clientWidth", "-", "this", ".", "config", ".", "step", ",", "range", ")", ";", "break", ";", "// Right Arrow key", "case", "39", ":", "column", "=", "this", ".", "_findParentTH", "(", "range", ")", ";", "this", ".", "resizeColumn", "(", "column", ",", "column", ".", "clientWidth", "+", "this", ".", "config", ".", "step", ",", "range", ")", ";", "break", ";", "}", "}"], "original_docstring": "\nHandler when keyboard is used on a focused resize handle\n\n@method _onKeydown\n@param e {event} Event fired by the browser\n", "docstring": {"block_comment": "Handler when keyboard is used on a focused resize handle", "line_comment": ["Left Arrow key", "Right Arrow key"]}, "docstring_tokens": ["Event", "fired", "by", "the", "browser"], "sample_id": 305, "prompt_tokens": ["<javascript>", "<param>", "e"], "comment_type": "param", "sentence_id": 1}
{"id": "21004120", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            var current = this.current;\n\n            this.resizeColumn(current.element, current.width, current.range);\n\n            this.detachHandlers();\n            this.current = null;\n\n            this.table.classList.remove(\"resizing\");\n            this.indicator.classList.remove(\"active\");\n        }", "code_tokens": ["function", "(", ")", "{", "var", "current", "=", "this", ".", "current", ";", "this", ".", "resizeColumn", "(", "current", ".", "element", ",", "current", ".", "width", ",", "current", ".", "range", ")", ";", "this", ".", "detachHandlers", "(", ")", ";", "this", ".", "current", "=", "null", ";", "this", ".", "table", ".", "classList", ".", "remove", "(", "\"resizing\"", ")", ";", "this", ".", "indicator", ".", "classList", ".", "remove", "(", "\"active\"", ")", ";", "}"], "original_docstring": "\nHandler when resizing is finished\n\n@method _onEnd\n", "docstring": {"block_comment": "Handler when resizing is finished", "line_comment": null}, "docstring_tokens": ["Handler", "when", "resizing", "is", "finished"], "sample_id": 306, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004121", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\n            var current = this.current;\n            var currentWidth = e.clientX + current.offsetX - current.element.offsetLeft - current.tableOffset;\n\n            var normalizedX = e.clientX - current.offsetX;\n            if (currentWidth > this.config.minWidth || normalizedX > current.startX) {\n                this._slideIndicator(normalizedX);\n                current.width = currentWidth;\n            }\n        }", "code_tokens": ["function", "(", "e", ")", "{", "var", "current", "=", "this", ".", "current", ";", "var", "currentWidth", "=", "e", ".", "clientX", "+", "current", ".", "offsetX", "-", "current", ".", "element", ".", "offsetLeft", "-", "current", ".", "tableOffset", ";", "var", "normalizedX", "=", "e", ".", "clientX", "-", "current", ".", "offsetX", ";", "if", "(", "currentWidth", ">", "this", ".", "config", ".", "minWidth", "||", "normalizedX", ">", "current", ".", "startX", ")", "{", "this", ".", "_slideIndicator", "(", "normalizedX", ")", ";", "current", ".", "width", "=", "currentWidth", ";", "}", "}"], "original_docstring": "\nHandler while column is being resized\n\n@method _onMove\n@param e {event} Event fired by the browser\n", "docstring": {"block_comment": "Handler while column is being resized", "line_comment": null}, "docstring_tokens": ["Handler", "while", "column", "is", "being", "resized"], "sample_id": 307, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004121", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\n            var current = this.current;\n            var currentWidth = e.clientX + current.offsetX - current.element.offsetLeft - current.tableOffset;\n\n            var normalizedX = e.clientX - current.offsetX;\n            if (currentWidth > this.config.minWidth || normalizedX > current.startX) {\n                this._slideIndicator(normalizedX);\n                current.width = currentWidth;\n            }\n        }", "code_tokens": ["function", "(", "e", ")", "{", "var", "current", "=", "this", ".", "current", ";", "var", "currentWidth", "=", "e", ".", "clientX", "+", "current", ".", "offsetX", "-", "current", ".", "element", ".", "offsetLeft", "-", "current", ".", "tableOffset", ";", "var", "normalizedX", "=", "e", ".", "clientX", "-", "current", ".", "offsetX", ";", "if", "(", "currentWidth", ">", "this", ".", "config", ".", "minWidth", "||", "normalizedX", ">", "current", ".", "startX", ")", "{", "this", ".", "_slideIndicator", "(", "normalizedX", ")", ";", "current", ".", "width", "=", "currentWidth", ";", "}", "}"], "original_docstring": "\nHandler while column is being resized\n\n@method _onMove\n@param e {event} Event fired by the browser\n", "docstring": {"block_comment": "Handler while column is being resized", "line_comment": null}, "docstring_tokens": ["Event", "fired", "by", "the", "browser"], "sample_id": 307, "prompt_tokens": ["<javascript>", "<param>", "e"], "comment_type": "param", "sentence_id": 1}
{"id": "21004122", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\n            var th = this._findParentTH(e.target);\n            var targetX = e.target.getBoundingClientRect().left;\n\n            // Save what's being resized so we can reference it later\n            this.current = {\n                element : th,\n                range : this._findRangeElement(th),\n                offsetX : e.clientX - targetX,\n                startX : targetX,\n                width : th.clientWidth,\n                tableOffset : this.table.getBoundingClientRect().left\n            };\n\n            this.attachHandlers();\n\n            this.indicator.classList.add(\"active\");\n            this.table.classList.add(\"resizing\");\n            this._setDividerHeight(this.indicator);\n\n            this._slideIndicator(targetX);\n        }", "code_tokens": ["function", "(", "e", ")", "{", "var", "th", "=", "this", ".", "_findParentTH", "(", "e", ".", "target", ")", ";", "var", "targetX", "=", "e", ".", "target", ".", "getBoundingClientRect", "(", ")", ".", "left", ";", "// Save what's being resized so we can reference it later", "this", ".", "current", "=", "{", "element", ":", "th", ",", "range", ":", "this", ".", "_findRangeElement", "(", "th", ")", ",", "offsetX", ":", "e", ".", "clientX", "-", "targetX", ",", "startX", ":", "targetX", ",", "width", ":", "th", ".", "clientWidth", ",", "tableOffset", ":", "this", ".", "table", ".", "getBoundingClientRect", "(", ")", ".", "left", "}", ";", "this", ".", "attachHandlers", "(", ")", ";", "this", ".", "indicator", ".", "classList", ".", "add", "(", "\"active\"", ")", ";", "this", ".", "table", ".", "classList", ".", "add", "(", "\"resizing\"", ")", ";", "this", ".", "_setDividerHeight", "(", "this", ".", "indicator", ")", ";", "this", ".", "_slideIndicator", "(", "targetX", ")", ";", "}"], "original_docstring": "\nHandler when resizing begins\n\n@method _onStart\n@param e {event} Event fired by the browser\n", "docstring": {"block_comment": "Handler when resizing begins", "line_comment": ["Save what s being resized so we can reference it later"]}, "docstring_tokens": ["Handler", "when", "resizing", "begins"], "sample_id": 308, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004122", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\n            var th = this._findParentTH(e.target);\n            var targetX = e.target.getBoundingClientRect().left;\n\n            // Save what's being resized so we can reference it later\n            this.current = {\n                element : th,\n                range : this._findRangeElement(th),\n                offsetX : e.clientX - targetX,\n                startX : targetX,\n                width : th.clientWidth,\n                tableOffset : this.table.getBoundingClientRect().left\n            };\n\n            this.attachHandlers();\n\n            this.indicator.classList.add(\"active\");\n            this.table.classList.add(\"resizing\");\n            this._setDividerHeight(this.indicator);\n\n            this._slideIndicator(targetX);\n        }", "code_tokens": ["function", "(", "e", ")", "{", "var", "th", "=", "this", ".", "_findParentTH", "(", "e", ".", "target", ")", ";", "var", "targetX", "=", "e", ".", "target", ".", "getBoundingClientRect", "(", ")", ".", "left", ";", "// Save what's being resized so we can reference it later", "this", ".", "current", "=", "{", "element", ":", "th", ",", "range", ":", "this", ".", "_findRangeElement", "(", "th", ")", ",", "offsetX", ":", "e", ".", "clientX", "-", "targetX", ",", "startX", ":", "targetX", ",", "width", ":", "th", ".", "clientWidth", ",", "tableOffset", ":", "this", ".", "table", ".", "getBoundingClientRect", "(", ")", ".", "left", "}", ";", "this", ".", "attachHandlers", "(", ")", ";", "this", ".", "indicator", ".", "classList", ".", "add", "(", "\"active\"", ")", ";", "this", ".", "table", ".", "classList", ".", "add", "(", "\"resizing\"", ")", ";", "this", ".", "_setDividerHeight", "(", "this", ".", "indicator", ")", ";", "this", ".", "_slideIndicator", "(", "targetX", ")", ";", "}"], "original_docstring": "\nHandler when resizing begins\n\n@method _onStart\n@param e {event} Event fired by the browser\n", "docstring": {"block_comment": "Handler when resizing begins", "line_comment": ["Save what s being resized so we can reference it later"]}, "docstring_tokens": ["Event", "fired", "by", "the", "browser"], "sample_id": 308, "prompt_tokens": ["<javascript>", "<param>", "e"], "comment_type": "param", "sentence_id": 1}
{"id": "21004123", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\n            switch (e.type) {\n                case 'mousedown':\n                    this._onStart(e);\n\n                    // Prevent the browser default (text selection) during resizing\n                    $A.util.squash(e, true);\n                    break;\n                case 'mousemove':\n                    this._onMove(e);\n                    break;\n                case 'mouseup':\n                case 'mouseleave':\n                    this._onEnd(e);\n                    break;\n                case 'keydown':\n                    this._onKeydown(e);\n                    break;\n                case 'focus':\n                    this._onFocus(e);\n                    break;\n            }\n        }", "code_tokens": ["function", "(", "e", ")", "{", "switch", "(", "e", ".", "type", ")", "{", "case", "'mousedown'", ":", "this", ".", "_onStart", "(", "e", ")", ";", "// Prevent the browser default (text selection) during resizing", "$A", ".", "util", ".", "squash", "(", "e", ",", "true", ")", ";", "break", ";", "case", "'mousemove'", ":", "this", ".", "_onMove", "(", "e", ")", ";", "break", ";", "case", "'mouseup'", ":", "case", "'mouseleave'", ":", "this", ".", "_onEnd", "(", "e", ")", ";", "break", ";", "case", "'keydown'", ":", "this", ".", "_onKeydown", "(", "e", ")", ";", "break", ";", "case", "'focus'", ":", "this", ".", "_onFocus", "(", "e", ")", ";", "break", ";", "}", "}"], "original_docstring": "\nDispatches all of the events that the resizer listens to.\nThe browser calls this function if any of the events are triggered.\nUse with attachHandlers and detachHandlers to manage events we want\nto listen to\n\n@method handleEvent\n@param e {event} The event fired by the browser\n@private\n", "docstring": {"block_comment": "Dispatches all of the events that the resizer listens to. \nThe browser calls this function if any of the events are triggered. \nUse with attachHandlers and detachHandlers to manage events we want \nto listen to", "line_comment": ["Prevent the browser default  text selection  during resizing"]}, "docstring_tokens": ["Dispatches", "all", "of", "the", "events", "that", "the", "resizer", "listens", "to", ".", "The", "browser", "calls", "this", "function", "if", "any", "of", "the", "events", "are", "triggered", ".", "Use", "with", "attachHandlers", "and", "detachHandlers", "to", "manage", "events", "we", "want", "to", "listen", "to"], "sample_id": 309, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004123", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(e) {\n            switch (e.type) {\n                case 'mousedown':\n                    this._onStart(e);\n\n                    // Prevent the browser default (text selection) during resizing\n                    $A.util.squash(e, true);\n                    break;\n                case 'mousemove':\n                    this._onMove(e);\n                    break;\n                case 'mouseup':\n                case 'mouseleave':\n                    this._onEnd(e);\n                    break;\n                case 'keydown':\n                    this._onKeydown(e);\n                    break;\n                case 'focus':\n                    this._onFocus(e);\n                    break;\n            }\n        }", "code_tokens": ["function", "(", "e", ")", "{", "switch", "(", "e", ".", "type", ")", "{", "case", "'mousedown'", ":", "this", ".", "_onStart", "(", "e", ")", ";", "// Prevent the browser default (text selection) during resizing", "$A", ".", "util", ".", "squash", "(", "e", ",", "true", ")", ";", "break", ";", "case", "'mousemove'", ":", "this", ".", "_onMove", "(", "e", ")", ";", "break", ";", "case", "'mouseup'", ":", "case", "'mouseleave'", ":", "this", ".", "_onEnd", "(", "e", ")", ";", "break", ";", "case", "'keydown'", ":", "this", ".", "_onKeydown", "(", "e", ")", ";", "break", ";", "case", "'focus'", ":", "this", ".", "_onFocus", "(", "e", ")", ";", "break", ";", "}", "}"], "original_docstring": "\nDispatches all of the events that the resizer listens to.\nThe browser calls this function if any of the events are triggered.\nUse with attachHandlers and detachHandlers to manage events we want\nto listen to\n\n@method handleEvent\n@param e {event} The event fired by the browser\n@private\n", "docstring": {"block_comment": "Dispatches all of the events that the resizer listens to. \nThe browser calls this function if any of the events are triggered. \nUse with attachHandlers and detachHandlers to manage events we want \nto listen to", "line_comment": ["Prevent the browser default  text selection  during resizing"]}, "docstring_tokens": ["The", "event", "fired", "by", "the", "browser"], "sample_id": 309, "prompt_tokens": ["<javascript>", "<param>", "e"], "comment_type": "param", "sentence_id": 1}
{"id": "21004124", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            this.container.removeEventListener('mousemove', this);\n            this.container.removeEventListener('mouseup', this);\n            this.container.removeEventListener('mouseleave', this);\n            this.indicator.removeEventListener('mouseup', this);\n        }", "code_tokens": ["function", "(", ")", "{", "this", ".", "container", ".", "removeEventListener", "(", "'mousemove'", ",", "this", ")", ";", "this", ".", "container", ".", "removeEventListener", "(", "'mouseup'", ",", "this", ")", ";", "this", ".", "container", ".", "removeEventListener", "(", "'mouseleave'", ",", "this", ")", ";", "this", ".", "indicator", ".", "removeEventListener", "(", "'mouseup'", ",", "this", ")", ";", "}"], "original_docstring": "\nDetaches the event handlers when resizing ends\n\n@method detachHandlers\n", "docstring": {"block_comment": "Detaches the event handlers when resizing ends", "line_comment": null}, "docstring_tokens": ["Detaches", "the", "event", "handlers", "when", "resizing", "ends"], "sample_id": 310, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004125", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            this.container.addEventListener('mousemove', this);\n            this.container.addEventListener('mouseup', this);\n            this.container.addEventListener('mouseleave', this);\n            this.indicator.addEventListener('mouseup', this);\n        }", "code_tokens": ["function", "(", ")", "{", "this", ".", "container", ".", "addEventListener", "(", "'mousemove'", ",", "this", ")", ";", "this", ".", "container", ".", "addEventListener", "(", "'mouseup'", ",", "this", ")", ";", "this", ".", "container", ".", "addEventListener", "(", "'mouseleave'", ",", "this", ")", ";", "this", ".", "indicator", ".", "addEventListener", "(", "'mouseup'", ",", "this", ")", ";", "}"], "original_docstring": "\nAttaches the needed event handlers when resizing begins\n\n@method attachHandlers\n", "docstring": {"block_comment": "Attaches the needed event handlers when resizing begins", "line_comment": null}, "docstring_tokens": ["Attaches", "the", "needed", "event", "handlers", "when", "resizing", "begins"], "sample_id": 311, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004126", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(range, value) {\n            if (range) {\n                range.value = value;\n            }\n        }", "code_tokens": ["function", "(", "range", ",", "value", ")", "{", "if", "(", "range", ")", "{", "range", ".", "value", "=", "value", ";", "}", "}"], "original_docstring": "\nUpdates the range element with the specified value\n\n@method _updateRange\n@param range {HTMLElement} The target range element\n@private\n", "docstring": {"block_comment": "Updates the range element with the specified value", "line_comment": null}, "docstring_tokens": ["Updates", "the", "range", "element", "with", "the", "specified", "value"], "sample_id": 312, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004126", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(range, value) {\n            if (range) {\n                range.value = value;\n            }\n        }", "code_tokens": ["function", "(", "range", ",", "value", ")", "{", "if", "(", "range", ")", "{", "range", ".", "value", "=", "value", ";", "}", "}"], "original_docstring": "\nUpdates the range element with the specified value\n\n@method _updateRange\n@param range {HTMLElement} The target range element\n@private\n", "docstring": {"block_comment": "Updates the range element with the specified value", "line_comment": null}, "docstring_tokens": ["The", "target", "range", "element"], "sample_id": 312, "prompt_tokens": ["<javascript>", "<param>", "range"], "comment_type": "param", "sentence_id": 1}
{"id": "21004127", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(element, targetWidth) {\n            if (element && element.style) {\n                element.style.width = targetWidth + 'px';\n            }\n        }", "code_tokens": ["function", "(", "element", ",", "targetWidth", ")", "{", "if", "(", "element", "&&", "element", ".", "style", ")", "{", "element", ".", "style", ".", "width", "=", "targetWidth", "+", "'px'", ";", "}", "}"], "original_docstring": "\nResizes the specified element to the target width\n\n@method _resize\n@param element {HTMLElement} The target element to resize\n@param targetWidth {Integer} The width to resize to, in pixels\n@private\n", "docstring": {"block_comment": "Resizes the specified element to the target width", "line_comment": null}, "docstring_tokens": ["Resizes", "the", "specified", "element", "to", "the", "target", "width"], "sample_id": 313, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004127", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(element, targetWidth) {\n            if (element && element.style) {\n                element.style.width = targetWidth + 'px';\n            }\n        }", "code_tokens": ["function", "(", "element", ",", "targetWidth", ")", "{", "if", "(", "element", "&&", "element", ".", "style", ")", "{", "element", ".", "style", ".", "width", "=", "targetWidth", "+", "'px'", ";", "}", "}"], "original_docstring": "\nResizes the specified element to the target width\n\n@method _resize\n@param element {HTMLElement} The target element to resize\n@param targetWidth {Integer} The width to resize to, in pixels\n@private\n", "docstring": {"block_comment": "Resizes the specified element to the target width", "line_comment": null}, "docstring_tokens": ["The", "target", "element", "to", "resize"], "sample_id": 313, "prompt_tokens": ["<javascript>", "<param>", "element"], "comment_type": "param", "sentence_id": 1}
{"id": "21004127", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(element, targetWidth) {\n            if (element && element.style) {\n                element.style.width = targetWidth + 'px';\n            }\n        }", "code_tokens": ["function", "(", "element", ",", "targetWidth", ")", "{", "if", "(", "element", "&&", "element", ".", "style", ")", "{", "element", ".", "style", ".", "width", "=", "targetWidth", "+", "'px'", ";", "}", "}"], "original_docstring": "\nResizes the specified element to the target width\n\n@method _resize\n@param element {HTMLElement} The target element to resize\n@param targetWidth {Integer} The width to resize to, in pixels\n@private\n", "docstring": {"block_comment": "Resizes the specified element to the target width", "line_comment": null}, "docstring_tokens": ["The", "width", "to", "resize", "to", "in", "pixels"], "sample_id": 313, "prompt_tokens": ["<javascript>", "<param>", "targetWidth"], "comment_type": "param", "sentence_id": 2}
{"id": "21004128", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(column, targetWidth, rangeElement) {\n            if (targetWidth < this.config.minWidth) {\n                targetWidth = this.config.minWidth;\n            }\n\n            var diff = targetWidth - column.clientWidth;\n\n            // Resize the column\n            this._resize(column, targetWidth);\n            this._resize(column.firstChild, targetWidth);\n            this._addTableWidth(diff);\n\n            // If the column width is invalid, we've failed to force the width of the column. To avoid inconsistencies\n            // between the style and the calculated width, we should reset the style to the calculated width.\n            if (!this.isValid(column)) {\n                var adjustedWidth = column.clientWidth;\n                this._resize(column, adjustedWidth);\n                this._resize(column.firstChild, adjustedWidth);\n\n                this._addTableWidth(adjustedWidth - targetWidth);\n            }\n\n            // Update the value on the range input attached to this column\n            if (rangeElement) {\n                this._updateRange(rangeElement, column.clientWidth);\n            }\n\n            // Fire event notifying listeners that we have resized.\n            this._fire(\"resize\", {\n                index : this.columns.indexOf(column),\n                width : column.clientWidth\n            });\n\n            return column.clientWidth;\n        }", "code_tokens": ["function", "(", "column", ",", "targetWidth", ",", "rangeElement", ")", "{", "if", "(", "targetWidth", "<", "this", ".", "config", ".", "minWidth", ")", "{", "targetWidth", "=", "this", ".", "config", ".", "minWidth", ";", "}", "var", "diff", "=", "targetWidth", "-", "column", ".", "clientWidth", ";", "// Resize the column", "this", ".", "_resize", "(", "column", ",", "targetWidth", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "targetWidth", ")", ";", "this", ".", "_addTableWidth", "(", "diff", ")", ";", "// If the column width is invalid, we've failed to force the width of the column. To avoid inconsistencies", "// between the style and the calculated width, we should reset the style to the calculated width.", "if", "(", "!", "this", ".", "isValid", "(", "column", ")", ")", "{", "var", "adjustedWidth", "=", "column", ".", "clientWidth", ";", "this", ".", "_resize", "(", "column", ",", "adjustedWidth", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "adjustedWidth", ")", ";", "this", ".", "_addTableWidth", "(", "adjustedWidth", "-", "targetWidth", ")", ";", "}", "// Update the value on the range input attached to this column", "if", "(", "rangeElement", ")", "{", "this", ".", "_updateRange", "(", "rangeElement", ",", "column", ".", "clientWidth", ")", ";", "}", "// Fire event notifying listeners that we have resized.", "this", ".", "_fire", "(", "\"resize\"", ",", "{", "index", ":", "this", ".", "columns", ".", "indexOf", "(", "column", ")", ",", "width", ":", "column", ".", "clientWidth", "}", ")", ";", "return", "column", ".", "clientWidth", ";", "}"], "original_docstring": "\nResizes the specified column to the target width and\nupdates the total table width\n\n@method resizeColumn\n@param column {HTMLElement} column element to resize\n@param targetWidth {Integer} target width to resize the column to, in pixels\n@param rangeElement {HTMLElement} OPTIONAL input element of type range that holds the width value\n", "docstring": {"block_comment": "Resizes the specified column to the target width and \nupdates the total table width", "line_comment": ["Resize the column", "If the column width is invalid, we ve failed to force the width of the column. To avoid inconsistencies", "between the style and the calculated width, we should reset the style to the calculated width.", "Update the value on the range input attached to this column", "Fire event notifying listeners that we have resized."]}, "docstring_tokens": ["Resizes", "the", "specified", "column", "to", "the", "target", "width", "and", "updates", "the", "total", "table", "width"], "sample_id": 314, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004128", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(column, targetWidth, rangeElement) {\n            if (targetWidth < this.config.minWidth) {\n                targetWidth = this.config.minWidth;\n            }\n\n            var diff = targetWidth - column.clientWidth;\n\n            // Resize the column\n            this._resize(column, targetWidth);\n            this._resize(column.firstChild, targetWidth);\n            this._addTableWidth(diff);\n\n            // If the column width is invalid, we've failed to force the width of the column. To avoid inconsistencies\n            // between the style and the calculated width, we should reset the style to the calculated width.\n            if (!this.isValid(column)) {\n                var adjustedWidth = column.clientWidth;\n                this._resize(column, adjustedWidth);\n                this._resize(column.firstChild, adjustedWidth);\n\n                this._addTableWidth(adjustedWidth - targetWidth);\n            }\n\n            // Update the value on the range input attached to this column\n            if (rangeElement) {\n                this._updateRange(rangeElement, column.clientWidth);\n            }\n\n            // Fire event notifying listeners that we have resized.\n            this._fire(\"resize\", {\n                index : this.columns.indexOf(column),\n                width : column.clientWidth\n            });\n\n            return column.clientWidth;\n        }", "code_tokens": ["function", "(", "column", ",", "targetWidth", ",", "rangeElement", ")", "{", "if", "(", "targetWidth", "<", "this", ".", "config", ".", "minWidth", ")", "{", "targetWidth", "=", "this", ".", "config", ".", "minWidth", ";", "}", "var", "diff", "=", "targetWidth", "-", "column", ".", "clientWidth", ";", "// Resize the column", "this", ".", "_resize", "(", "column", ",", "targetWidth", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "targetWidth", ")", ";", "this", ".", "_addTableWidth", "(", "diff", ")", ";", "// If the column width is invalid, we've failed to force the width of the column. To avoid inconsistencies", "// between the style and the calculated width, we should reset the style to the calculated width.", "if", "(", "!", "this", ".", "isValid", "(", "column", ")", ")", "{", "var", "adjustedWidth", "=", "column", ".", "clientWidth", ";", "this", ".", "_resize", "(", "column", ",", "adjustedWidth", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "adjustedWidth", ")", ";", "this", ".", "_addTableWidth", "(", "adjustedWidth", "-", "targetWidth", ")", ";", "}", "// Update the value on the range input attached to this column", "if", "(", "rangeElement", ")", "{", "this", ".", "_updateRange", "(", "rangeElement", ",", "column", ".", "clientWidth", ")", ";", "}", "// Fire event notifying listeners that we have resized.", "this", ".", "_fire", "(", "\"resize\"", ",", "{", "index", ":", "this", ".", "columns", ".", "indexOf", "(", "column", ")", ",", "width", ":", "column", ".", "clientWidth", "}", ")", ";", "return", "column", ".", "clientWidth", ";", "}"], "original_docstring": "\nResizes the specified column to the target width and\nupdates the total table width\n\n@method resizeColumn\n@param column {HTMLElement} column element to resize\n@param targetWidth {Integer} target width to resize the column to, in pixels\n@param rangeElement {HTMLElement} OPTIONAL input element of type range that holds the width value\n", "docstring": {"block_comment": "Resizes the specified column to the target width and \nupdates the total table width", "line_comment": ["Resize the column", "If the column width is invalid, we ve failed to force the width of the column. To avoid inconsistencies", "between the style and the calculated width, we should reset the style to the calculated width.", "Update the value on the range input attached to this column", "Fire event notifying listeners that we have resized."]}, "docstring_tokens": ["column", "element", "to", "resize"], "sample_id": 314, "prompt_tokens": ["<javascript>", "<param>", "column"], "comment_type": "param", "sentence_id": 1}
{"id": "21004128", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(column, targetWidth, rangeElement) {\n            if (targetWidth < this.config.minWidth) {\n                targetWidth = this.config.minWidth;\n            }\n\n            var diff = targetWidth - column.clientWidth;\n\n            // Resize the column\n            this._resize(column, targetWidth);\n            this._resize(column.firstChild, targetWidth);\n            this._addTableWidth(diff);\n\n            // If the column width is invalid, we've failed to force the width of the column. To avoid inconsistencies\n            // between the style and the calculated width, we should reset the style to the calculated width.\n            if (!this.isValid(column)) {\n                var adjustedWidth = column.clientWidth;\n                this._resize(column, adjustedWidth);\n                this._resize(column.firstChild, adjustedWidth);\n\n                this._addTableWidth(adjustedWidth - targetWidth);\n            }\n\n            // Update the value on the range input attached to this column\n            if (rangeElement) {\n                this._updateRange(rangeElement, column.clientWidth);\n            }\n\n            // Fire event notifying listeners that we have resized.\n            this._fire(\"resize\", {\n                index : this.columns.indexOf(column),\n                width : column.clientWidth\n            });\n\n            return column.clientWidth;\n        }", "code_tokens": ["function", "(", "column", ",", "targetWidth", ",", "rangeElement", ")", "{", "if", "(", "targetWidth", "<", "this", ".", "config", ".", "minWidth", ")", "{", "targetWidth", "=", "this", ".", "config", ".", "minWidth", ";", "}", "var", "diff", "=", "targetWidth", "-", "column", ".", "clientWidth", ";", "// Resize the column", "this", ".", "_resize", "(", "column", ",", "targetWidth", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "targetWidth", ")", ";", "this", ".", "_addTableWidth", "(", "diff", ")", ";", "// If the column width is invalid, we've failed to force the width of the column. To avoid inconsistencies", "// between the style and the calculated width, we should reset the style to the calculated width.", "if", "(", "!", "this", ".", "isValid", "(", "column", ")", ")", "{", "var", "adjustedWidth", "=", "column", ".", "clientWidth", ";", "this", ".", "_resize", "(", "column", ",", "adjustedWidth", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "adjustedWidth", ")", ";", "this", ".", "_addTableWidth", "(", "adjustedWidth", "-", "targetWidth", ")", ";", "}", "// Update the value on the range input attached to this column", "if", "(", "rangeElement", ")", "{", "this", ".", "_updateRange", "(", "rangeElement", ",", "column", ".", "clientWidth", ")", ";", "}", "// Fire event notifying listeners that we have resized.", "this", ".", "_fire", "(", "\"resize\"", ",", "{", "index", ":", "this", ".", "columns", ".", "indexOf", "(", "column", ")", ",", "width", ":", "column", ".", "clientWidth", "}", ")", ";", "return", "column", ".", "clientWidth", ";", "}"], "original_docstring": "\nResizes the specified column to the target width and\nupdates the total table width\n\n@method resizeColumn\n@param column {HTMLElement} column element to resize\n@param targetWidth {Integer} target width to resize the column to, in pixels\n@param rangeElement {HTMLElement} OPTIONAL input element of type range that holds the width value\n", "docstring": {"block_comment": "Resizes the specified column to the target width and \nupdates the total table width", "line_comment": ["Resize the column", "If the column width is invalid, we ve failed to force the width of the column. To avoid inconsistencies", "between the style and the calculated width, we should reset the style to the calculated width.", "Update the value on the range input attached to this column", "Fire event notifying listeners that we have resized."]}, "docstring_tokens": ["target", "width", "to", "resize", "the", "column", "to", "in", "pixels"], "sample_id": 314, "prompt_tokens": ["<javascript>", "<param>", "targetWidth"], "comment_type": "param", "sentence_id": 2}
{"id": "21004128", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(column, targetWidth, rangeElement) {\n            if (targetWidth < this.config.minWidth) {\n                targetWidth = this.config.minWidth;\n            }\n\n            var diff = targetWidth - column.clientWidth;\n\n            // Resize the column\n            this._resize(column, targetWidth);\n            this._resize(column.firstChild, targetWidth);\n            this._addTableWidth(diff);\n\n            // If the column width is invalid, we've failed to force the width of the column. To avoid inconsistencies\n            // between the style and the calculated width, we should reset the style to the calculated width.\n            if (!this.isValid(column)) {\n                var adjustedWidth = column.clientWidth;\n                this._resize(column, adjustedWidth);\n                this._resize(column.firstChild, adjustedWidth);\n\n                this._addTableWidth(adjustedWidth - targetWidth);\n            }\n\n            // Update the value on the range input attached to this column\n            if (rangeElement) {\n                this._updateRange(rangeElement, column.clientWidth);\n            }\n\n            // Fire event notifying listeners that we have resized.\n            this._fire(\"resize\", {\n                index : this.columns.indexOf(column),\n                width : column.clientWidth\n            });\n\n            return column.clientWidth;\n        }", "code_tokens": ["function", "(", "column", ",", "targetWidth", ",", "rangeElement", ")", "{", "if", "(", "targetWidth", "<", "this", ".", "config", ".", "minWidth", ")", "{", "targetWidth", "=", "this", ".", "config", ".", "minWidth", ";", "}", "var", "diff", "=", "targetWidth", "-", "column", ".", "clientWidth", ";", "// Resize the column", "this", ".", "_resize", "(", "column", ",", "targetWidth", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "targetWidth", ")", ";", "this", ".", "_addTableWidth", "(", "diff", ")", ";", "// If the column width is invalid, we've failed to force the width of the column. To avoid inconsistencies", "// between the style and the calculated width, we should reset the style to the calculated width.", "if", "(", "!", "this", ".", "isValid", "(", "column", ")", ")", "{", "var", "adjustedWidth", "=", "column", ".", "clientWidth", ";", "this", ".", "_resize", "(", "column", ",", "adjustedWidth", ")", ";", "this", ".", "_resize", "(", "column", ".", "firstChild", ",", "adjustedWidth", ")", ";", "this", ".", "_addTableWidth", "(", "adjustedWidth", "-", "targetWidth", ")", ";", "}", "// Update the value on the range input attached to this column", "if", "(", "rangeElement", ")", "{", "this", ".", "_updateRange", "(", "rangeElement", ",", "column", ".", "clientWidth", ")", ";", "}", "// Fire event notifying listeners that we have resized.", "this", ".", "_fire", "(", "\"resize\"", ",", "{", "index", ":", "this", ".", "columns", ".", "indexOf", "(", "column", ")", ",", "width", ":", "column", ".", "clientWidth", "}", ")", ";", "return", "column", ".", "clientWidth", ";", "}"], "original_docstring": "\nResizes the specified column to the target width and\nupdates the total table width\n\n@method resizeColumn\n@param column {HTMLElement} column element to resize\n@param targetWidth {Integer} target width to resize the column to, in pixels\n@param rangeElement {HTMLElement} OPTIONAL input element of type range that holds the width value\n", "docstring": {"block_comment": "Resizes the specified column to the target width and \nupdates the total table width", "line_comment": ["Resize the column", "If the column width is invalid, we ve failed to force the width of the column. To avoid inconsistencies", "between the style and the calculated width, we should reset the style to the calculated width.", "Update the value on the range input attached to this column", "Fire event notifying listeners that we have resized."]}, "docstring_tokens": ["OPTIONAL", "input", "element", "of", "type", "range", "that", "holds", "the", "width", "value"], "sample_id": 314, "prompt_tokens": ["<javascript>", "<param>", "rangeElement"], "comment_type": "param", "sentence_id": 3}
{"id": "21004129", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(x) {\n            var pos = x;\n            var offsetParent = this.indicator.offsetParent;\n            if (offsetParent) {\n                // Take care of the indicator's container's offset\n                pos -= offsetParent.getBoundingClientRect().left;\n            }\n            this.indicator.style[this.transformStyle] = 'translate3d(' + pos + 'px,0px,0px)';\n        }", "code_tokens": ["function", "(", "x", ")", "{", "var", "pos", "=", "x", ";", "var", "offsetParent", "=", "this", ".", "indicator", ".", "offsetParent", ";", "if", "(", "offsetParent", ")", "{", "// Take care of the indicator's container's offset", "pos", "-=", "offsetParent", ".", "getBoundingClientRect", "(", ")", ".", "left", ";", "}", "this", ".", "indicator", ".", "style", "[", "this", ".", "transformStyle", "]", "=", "'translate3d('", "+", "pos", "+", "'px,0px,0px)'", ";", "}"], "original_docstring": "\nTranslates the indicator element to the specified location\n\n@method _slideIndicator\n@param x {Integer} The position to translate the indicator to, in pixels.\n@private\n", "docstring": {"block_comment": "Translates the indicator element to the specified location", "line_comment": ["Take care of the indicator s container s offset"]}, "docstring_tokens": ["Translates", "the", "indicator", "element", "to", "the", "specified", "location"], "sample_id": 315, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004129", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(x) {\n            var pos = x;\n            var offsetParent = this.indicator.offsetParent;\n            if (offsetParent) {\n                // Take care of the indicator's container's offset\n                pos -= offsetParent.getBoundingClientRect().left;\n            }\n            this.indicator.style[this.transformStyle] = 'translate3d(' + pos + 'px,0px,0px)';\n        }", "code_tokens": ["function", "(", "x", ")", "{", "var", "pos", "=", "x", ";", "var", "offsetParent", "=", "this", ".", "indicator", ".", "offsetParent", ";", "if", "(", "offsetParent", ")", "{", "// Take care of the indicator's container's offset", "pos", "-=", "offsetParent", ".", "getBoundingClientRect", "(", ")", ".", "left", ";", "}", "this", ".", "indicator", ".", "style", "[", "this", ".", "transformStyle", "]", "=", "'translate3d('", "+", "pos", "+", "'px,0px,0px)'", ";", "}"], "original_docstring": "\nTranslates the indicator element to the specified location\n\n@method _slideIndicator\n@param x {Integer} The position to translate the indicator to, in pixels.\n@private\n", "docstring": {"block_comment": "Translates the indicator element to the specified location", "line_comment": ["Take care of the indicator s container s offset"]}, "docstring_tokens": ["The", "position", "to", "translate", "the", "indicator", "to", "in", "pixels", "."], "sample_id": 315, "prompt_tokens": ["<javascript>", "<param>", "x"], "comment_type": "param", "sentence_id": 1}
{"id": "21004130", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(value) {\n            var range = document.createElement('input');\n\n            range.setAttribute('type', 'range');\n            range.setAttribute('min', this.config.minWidth);\n            range.setAttribute('max', this.config.maxWidth);\n            range.setAttribute('class', INPUT_RANGE_CLASS);\n            range.value = value;\n            range.addEventListener('focus', function(e) {\n                var handle = e.target.parentNode.querySelector('.' + HANDLE_CLASS);\n                if(handle) {\n                    this._setDividerHeight(handle);\n                }\n\n            }.bind(this));\n\n            return range;\n        }", "code_tokens": ["function", "(", "value", ")", "{", "var", "range", "=", "document", ".", "createElement", "(", "'input'", ")", ";", "range", ".", "setAttribute", "(", "'type'", ",", "'range'", ")", ";", "range", ".", "setAttribute", "(", "'min'", ",", "this", ".", "config", ".", "minWidth", ")", ";", "range", ".", "setAttribute", "(", "'max'", ",", "this", ".", "config", ".", "maxWidth", ")", ";", "range", ".", "setAttribute", "(", "'class'", ",", "INPUT_RANGE_CLASS", ")", ";", "range", ".", "value", "=", "value", ";", "range", ".", "addEventListener", "(", "'focus'", ",", "function", "(", "e", ")", "{", "var", "handle", "=", "e", ".", "target", ".", "parentNode", ".", "querySelector", "(", "'.'", "+", "HANDLE_CLASS", ")", ";", "if", "(", "handle", ")", "{", "this", ".", "_setDividerHeight", "(", "handle", ")", ";", "}", "}", ".", "bind", "(", "this", ")", ")", ";", "return", "range", ";", "}"], "original_docstring": "\nCreates the input range element used in the handle\n\n@return {HTMLElement} input element of type range\n", "docstring": {"block_comment": "Creates the input range element used in the handle", "line_comment": null}, "docstring_tokens": ["Creates", "the", "input", "range", "element", "used", "in", "the", "handle"], "sample_id": 316, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004130", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(value) {\n            var range = document.createElement('input');\n\n            range.setAttribute('type', 'range');\n            range.setAttribute('min', this.config.minWidth);\n            range.setAttribute('max', this.config.maxWidth);\n            range.setAttribute('class', INPUT_RANGE_CLASS);\n            range.value = value;\n            range.addEventListener('focus', function(e) {\n                var handle = e.target.parentNode.querySelector('.' + HANDLE_CLASS);\n                if(handle) {\n                    this._setDividerHeight(handle);\n                }\n\n            }.bind(this));\n\n            return range;\n        }", "code_tokens": ["function", "(", "value", ")", "{", "var", "range", "=", "document", ".", "createElement", "(", "'input'", ")", ";", "range", ".", "setAttribute", "(", "'type'", ",", "'range'", ")", ";", "range", ".", "setAttribute", "(", "'min'", ",", "this", ".", "config", ".", "minWidth", ")", ";", "range", ".", "setAttribute", "(", "'max'", ",", "this", ".", "config", ".", "maxWidth", ")", ";", "range", ".", "setAttribute", "(", "'class'", ",", "INPUT_RANGE_CLASS", ")", ";", "range", ".", "value", "=", "value", ";", "range", ".", "addEventListener", "(", "'focus'", ",", "function", "(", "e", ")", "{", "var", "handle", "=", "e", ".", "target", ".", "parentNode", ".", "querySelector", "(", "'.'", "+", "HANDLE_CLASS", ")", ";", "if", "(", "handle", ")", "{", "this", ".", "_setDividerHeight", "(", "handle", ")", ";", "}", "}", ".", "bind", "(", "this", ")", ")", ";", "return", "range", ";", "}"], "original_docstring": "\nCreates the input range element used in the handle\n\n@return {HTMLElement} input element of type range\n", "docstring": {"block_comment": "Creates the input range element used in the handle", "line_comment": null}, "docstring_tokens": ["input", "element", "of", "type", "range"], "sample_id": 316, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004131", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(columnWidth) {\n            var handleContainer = document.createElement('div');\n            handleContainer.classList.add(RESIZER_CONTAINER_CLASS);\n\n            // Input range for storing the width of the column as a slider\n            var range = this._createRangeElement(columnWidth);\n\n            // Visible handle the user will interact with\n            var resizeHandle = document.createElement('span');\n            resizeHandle.classList.add(HANDLE_CLASS);\n\n            // Divider line to show what's being resized\n            var columnDivider = document.createElement('span');\n            columnDivider.classList.add(DIVIDER_CLASS);\n\n            // Compose all the elements and attach event handlers\n            resizeHandle.appendChild(columnDivider);\n\n            handleContainer.appendChild(range);\n            handleContainer.appendChild(resizeHandle);\n\n            handleContainer.addEventListener('keydown', this);\n            handleContainer.addEventListener('mousedown', this);\n\n            return handleContainer;\n        }", "code_tokens": ["function", "(", "columnWidth", ")", "{", "var", "handleContainer", "=", "document", ".", "createElement", "(", "'div'", ")", ";", "handleContainer", ".", "classList", ".", "add", "(", "RESIZER_CONTAINER_CLASS", ")", ";", "// Input range for storing the width of the column as a slider", "var", "range", "=", "this", ".", "_createRangeElement", "(", "columnWidth", ")", ";", "// Visible handle the user will interact with", "var", "resizeHandle", "=", "document", ".", "createElement", "(", "'span'", ")", ";", "resizeHandle", ".", "classList", ".", "add", "(", "HANDLE_CLASS", ")", ";", "// Divider line to show what's being resized", "var", "columnDivider", "=", "document", ".", "createElement", "(", "'span'", ")", ";", "columnDivider", ".", "classList", ".", "add", "(", "DIVIDER_CLASS", ")", ";", "// Compose all the elements and attach event handlers", "resizeHandle", ".", "appendChild", "(", "columnDivider", ")", ";", "handleContainer", ".", "appendChild", "(", "range", ")", ";", "handleContainer", ".", "appendChild", "(", "resizeHandle", ")", ";", "handleContainer", ".", "addEventListener", "(", "'keydown'", ",", "this", ")", ";", "handleContainer", ".", "addEventListener", "(", "'mousedown'", ",", "this", ")", ";", "return", "handleContainer", ";", "}"], "original_docstring": "\nCreate a handle element for the user to interact with\n\n@method _createHandle\n@private\n", "docstring": {"block_comment": "Create a handle element for the user to interact with", "line_comment": ["Input range for storing the width of the column as a slider", "Visible handle the user will interact with", "Divider line to show what s being resized", "Compose all the elements and attach event handlers"]}, "docstring_tokens": ["Create", "a", "handle", "element", "for", "the", "user", "to", "interact", "with"], "sample_id": 317, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004132", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            var indicator = document.createElement('div');\n            var indicatorClasses = $A.util.isString(this.config.indicatorClasses) ? this.config.indicatorClasses : '';\n\n            indicatorClasses = indicatorClasses.split(/\\s+/);\n            // We should manually add all classes because IE does not support multiple arguments for 'add' https://developer.mozilla.org/en-US/docs/Web/API/Element/classList\n            for (var i = 0; i < indicatorClasses.length; i++) {\n                indicator.classList.add(indicatorClasses[i]);\n            }\n\n            indicator.classList.add(INDICATOR_CLASS);\n\n            var columnDivider = document.createElement('span');\n            columnDivider.classList.add(DIVIDER_CLASS);\n\n            indicator.appendChild(columnDivider);\n            return indicator;\n        }", "code_tokens": ["function", "(", ")", "{", "var", "indicator", "=", "document", ".", "createElement", "(", "'div'", ")", ";", "var", "indicatorClasses", "=", "$A", ".", "util", ".", "isString", "(", "this", ".", "config", ".", "indicatorClasses", ")", "?", "this", ".", "config", ".", "indicatorClasses", ":", "''", ";", "indicatorClasses", "=", "indicatorClasses", ".", "split", "(", "/", "\\s+", "/", ")", ";", "// We should manually add all classes because IE does not support multiple arguments for 'add' https://developer.mozilla.org/en-US/docs/Web/API/Element/classList", "for", "(", "var", "i", "=", "0", ";", "i", "<", "indicatorClasses", ".", "length", ";", "i", "++", ")", "{", "indicator", ".", "classList", ".", "add", "(", "indicatorClasses", "[", "i", "]", ")", ";", "}", "indicator", ".", "classList", ".", "add", "(", "INDICATOR_CLASS", ")", ";", "var", "columnDivider", "=", "document", ".", "createElement", "(", "'span'", ")", ";", "columnDivider", ".", "classList", ".", "add", "(", "DIVIDER_CLASS", ")", ";", "indicator", ".", "appendChild", "(", "columnDivider", ")", ";", "return", "indicator", ";", "}"], "original_docstring": "\nCreate an indicator element to show how the column is going to be resized\n\n@method _createIndicator\n@private\n", "docstring": {"block_comment": "Create an indicator element to show how the column is going to be resized", "line_comment": ["We should manually add all classes because IE does not support multiple arguments for  add "]}, "docstring_tokens": ["Create", "an", "indicator", "element", "to", "show", "how", "the", "column", "is", "going", "to", "be", "resized"], "sample_id": 318, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004133", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(table) {\n            var totalWidth = 0;\n            var columns = this.columns;\n            var i;\n\n            // initialWidths can be set to NULL to avoid setting any widths on the table header on initialization\n           if (this.config.initialWidths === null) {\n                // in this case we just initialize the handles and do nothing else\n                for (i = 0; i < columns.length; i++) {\n                    var column = columns[i];\n                    if (!this.hasHandle(column)) {\n                        var handle = this._createHandle();\n                        this._attachHandle(column, handle);\n                    }\n                }\n                return;\n            }\n\n            var initialWidths = this.config.initialWidths || [];\n            // Create and attach a handle to each column\n            var promise = Promise.resolve();\n            var that = this;\n            for (i = 0; i < columns.length; i++) {\n                promise = this._calculateWidthAsync(promise, columns[i], initialWidths[i])\n                    .then(function(col) {\n                        totalWidth += col.clientWidth;\n                    });\n            }\n\n            promise = promise.then($A.getCallback(function (){\n                return that._setDividerHeight(that.indicator);\n            })).then($A.getCallback(function (){\n                // Fix the table's width so that the browser doesn't try to resize columns by itself\n                table.style.width = totalWidth + 'px';\n                that.tableWidth = totalWidth;\n            }));\n        }", "code_tokens": ["function", "(", "table", ")", "{", "var", "totalWidth", "=", "0", ";", "var", "columns", "=", "this", ".", "columns", ";", "var", "i", ";", "// initialWidths can be set to NULL to avoid setting any widths on the table header on initialization", "if", "(", "this", ".", "config", ".", "initialWidths", "===", "null", ")", "{", "// in this case we just initialize the handles and do nothing else", "for", "(", "i", "=", "0", ";", "i", "<", "columns", ".", "length", ";", "i", "++", ")", "{", "var", "column", "=", "columns", "[", "i", "]", ";", "if", "(", "!", "this", ".", "hasHandle", "(", "column", ")", ")", "{", "var", "handle", "=", "this", ".", "_createHandle", "(", ")", ";", "this", ".", "_attachHandle", "(", "column", ",", "handle", ")", ";", "}", "}", "return", ";", "}", "var", "initialWidths", "=", "this", ".", "config", ".", "initialWidths", "||", "[", "]", ";", "// Create and attach a handle to each column", "var", "promise", "=", "Promise", ".", "resolve", "(", ")", ";", "var", "that", "=", "this", ";", "for", "(", "i", "=", "0", ";", "i", "<", "columns", ".", "length", ";", "i", "++", ")", "{", "promise", "=", "this", ".", "_calculateWidthAsync", "(", "promise", ",", "columns", "[", "i", "]", ",", "initialWidths", "[", "i", "]", ")", ".", "then", "(", "function", "(", "col", ")", "{", "totalWidth", "+=", "col", ".", "clientWidth", ";", "}", ")", ";", "}", "promise", "=", "promise", ".", "then", "(", "$A", ".", "getCallback", "(", "function", "(", ")", "{", "return", "that", ".", "_setDividerHeight", "(", "that", ".", "indicator", ")", ";", "}", ")", ")", ".", "then", "(", "$A", ".", "getCallback", "(", "function", "(", ")", "{", "// Fix the table's width so that the browser doesn't try to resize columns by itself", "table", ".", "style", ".", "width", "=", "totalWidth", "+", "'px'", ";", "that", ".", "tableWidth", "=", "totalWidth", ";", "}", ")", ")", ";", "}"], "original_docstring": "\nCreate and attach handles to each column\n\n@method _createHandles\n@private\n", "docstring": {"block_comment": "Create and attach handles to each column", "line_comment": ["initialWidths can be set to NULL to avoid setting any widths on the table header on initialization", "in this case we just initialize the handles and do nothing else", "Create and attach a handle to each column", "Fix the table s width so that the browser doesn t try to resize columns by itself"]}, "docstring_tokens": ["Create", "and", "attach", "handles", "to", "each", "column"], "sample_id": 319, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004134", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n            var docStyle = w.document.documentElement.style;\n\n            if (typeof docStyle.transform !== 'undefined') {\n                this.transformStyle = 'transform';\n            } else {\n                for (var i = 0; i < VENDORS.length; i++) {\n                    var property = VENDORS[i] + 'Transform';\n                    if (typeof docStyle[property] !== 'undefined') {\n                        this.transformStyle = property;\n                        break;\n                    }\n                }\n            }\n        }", "code_tokens": ["function", "(", ")", "{", "var", "docStyle", "=", "w", ".", "document", ".", "documentElement", ".", "style", ";", "if", "(", "typeof", "docStyle", ".", "transform", "!==", "'undefined'", ")", "{", "this", ".", "transformStyle", "=", "'transform'", ";", "}", "else", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "VENDORS", ".", "length", ";", "i", "++", ")", "{", "var", "property", "=", "VENDORS", "[", "i", "]", "+", "'Transform'", ";", "if", "(", "typeof", "docStyle", "[", "property", "]", "!==", "'undefined'", ")", "{", "this", ".", "transformStyle", "=", "property", ";", "break", ";", "}", "}", "}", "}"], "original_docstring": "\nDetermine the appropriate CSS styles to use for animations\n\n@method _initializeBrowserSupport\n@private\n", "docstring": {"block_comment": "Determine the appropriate CSS styles to use for animations", "line_comment": null}, "docstring_tokens": ["Determine", "the", "appropriate", "CSS", "styles", "to", "use", "for", "animations"], "sample_id": 320, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004135", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(table) {\n            // Avoid having to go to the DOM each time we need a reference to the columns.\n            // Use a real array so we get the array methods\n            this.columns = [];\n            var columns = table.querySelectorAll(\"thead th\");\n            for (var i = 0; i < columns.length; i++) {\n                this.columns[i] = columns[i];\n            }\n\n            if (this.columns.length > 0) {\n                this._initializeHandles(table);\n                if (this.columns[0].firstChild) {\n                    this.indicator.style.height = (this.config.handleHeight || this.columns[0].firstChild.clientHeight) + 'px';\n                }\n            }\n        }", "code_tokens": ["function", "(", "table", ")", "{", "// Avoid having to go to the DOM each time we need a reference to the columns.", "// Use a real array so we get the array methods", "this", ".", "columns", "=", "[", "]", ";", "var", "columns", "=", "table", ".", "querySelectorAll", "(", "\"thead th\"", ")", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "columns", ".", "length", ";", "i", "++", ")", "{", "this", ".", "columns", "[", "i", "]", "=", "columns", "[", "i", "]", ";", "}", "if", "(", "this", ".", "columns", ".", "length", ">", "0", ")", "{", "this", ".", "_initializeHandles", "(", "table", ")", ";", "if", "(", "this", ".", "columns", "[", "0", "]", ".", "firstChild", ")", "{", "this", ".", "indicator", ".", "style", ".", "height", "=", "(", "this", ".", "config", ".", "handleHeight", "||", "this", ".", "columns", "[", "0", "]", ".", "firstChild", ".", "clientHeight", ")", "+", "'px'", ";", "}", "}", "}"], "original_docstring": "\nSet up the columns\n\n@method _initializeColumns\n@param table {HTMLElement} <table> element we want to attach the resizer to\n@private\n", "docstring": {"block_comment": "Set up the columns", "line_comment": ["Avoid having to go to the DOM each time we need a reference to the columns.", "Use a real array so we get the array methods"]}, "docstring_tokens": ["Set", "up", "the", "columns"], "sample_id": 321, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004135", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(table) {\n            // Avoid having to go to the DOM each time we need a reference to the columns.\n            // Use a real array so we get the array methods\n            this.columns = [];\n            var columns = table.querySelectorAll(\"thead th\");\n            for (var i = 0; i < columns.length; i++) {\n                this.columns[i] = columns[i];\n            }\n\n            if (this.columns.length > 0) {\n                this._initializeHandles(table);\n                if (this.columns[0].firstChild) {\n                    this.indicator.style.height = (this.config.handleHeight || this.columns[0].firstChild.clientHeight) + 'px';\n                }\n            }\n        }", "code_tokens": ["function", "(", "table", ")", "{", "// Avoid having to go to the DOM each time we need a reference to the columns.", "// Use a real array so we get the array methods", "this", ".", "columns", "=", "[", "]", ";", "var", "columns", "=", "table", ".", "querySelectorAll", "(", "\"thead th\"", ")", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "columns", ".", "length", ";", "i", "++", ")", "{", "this", ".", "columns", "[", "i", "]", "=", "columns", "[", "i", "]", ";", "}", "if", "(", "this", ".", "columns", ".", "length", ">", "0", ")", "{", "this", ".", "_initializeHandles", "(", "table", ")", ";", "if", "(", "this", ".", "columns", "[", "0", "]", ".", "firstChild", ")", "{", "this", ".", "indicator", ".", "style", ".", "height", "=", "(", "this", ".", "config", ".", "handleHeight", "||", "this", ".", "columns", "[", "0", "]", ".", "firstChild", ".", "clientHeight", ")", "+", "'px'", ";", "}", "}", "}"], "original_docstring": "\nSet up the columns\n\n@method _initializeColumns\n@param table {HTMLElement} <table> element we want to attach the resizer to\n@private\n", "docstring": {"block_comment": "Set up the columns", "line_comment": ["Avoid having to go to the DOM each time we need a reference to the columns.", "Use a real array so we get the array methods"]}, "docstring_tokens": ["<table", ">", "element", "we", "want", "to", "attach", "the", "resizer", "to"], "sample_id": 321, "prompt_tokens": ["<javascript>", "<param>", "table"], "comment_type": "param", "sentence_id": 1}
{"id": "21004136", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(table) {\n            this.container = this.config.container || table.parentNode;\n            this.tableParent = table.parentNode;\n            this.table = table;\n            this._events = {};\n\n            this.current = null;\n\n            // Create and attach the visual elements for resizing\n            this.indicator = this._createIndicator();\n\n            this.tableParent.insertBefore(this.indicator, table);\n            this._setDividerHeight(this.indicator);\n\n            // Determine what vendor prefixes to use for the animation\n            this._initializeBrowserSupport();\n        }", "code_tokens": ["function", "(", "table", ")", "{", "this", ".", "container", "=", "this", ".", "config", ".", "container", "||", "table", ".", "parentNode", ";", "this", ".", "tableParent", "=", "table", ".", "parentNode", ";", "this", ".", "table", "=", "table", ";", "this", ".", "_events", "=", "{", "}", ";", "this", ".", "current", "=", "null", ";", "// Create and attach the visual elements for resizing", "this", ".", "indicator", "=", "this", ".", "_createIndicator", "(", ")", ";", "this", ".", "tableParent", ".", "insertBefore", "(", "this", ".", "indicator", ",", "table", ")", ";", "this", ".", "_setDividerHeight", "(", "this", ".", "indicator", ")", ";", "// Determine what vendor prefixes to use for the animation", "this", ".", "_initializeBrowserSupport", "(", ")", ";", "}"], "original_docstring": "\nInitializes internal parameters and creates the\nindicator for the resizer.\n\n@method _initializeResizer\n@param table {HTMLElement} <table> element we want to attach the resizer to\n@private\n", "docstring": {"block_comment": "Initializes internal parameters and creates the \nindicator for the resizer.", "line_comment": ["Create and attach the visual elements for resizing", "Determine what vendor prefixes to use for the animation"]}, "docstring_tokens": ["Initializes", "internal", "parameters", "and", "creates", "the", "indicator", "for", "the", "resizer", "."], "sample_id": 322, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004136", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(table) {\n            this.container = this.config.container || table.parentNode;\n            this.tableParent = table.parentNode;\n            this.table = table;\n            this._events = {};\n\n            this.current = null;\n\n            // Create and attach the visual elements for resizing\n            this.indicator = this._createIndicator();\n\n            this.tableParent.insertBefore(this.indicator, table);\n            this._setDividerHeight(this.indicator);\n\n            // Determine what vendor prefixes to use for the animation\n            this._initializeBrowserSupport();\n        }", "code_tokens": ["function", "(", "table", ")", "{", "this", ".", "container", "=", "this", ".", "config", ".", "container", "||", "table", ".", "parentNode", ";", "this", ".", "tableParent", "=", "table", ".", "parentNode", ";", "this", ".", "table", "=", "table", ";", "this", ".", "_events", "=", "{", "}", ";", "this", ".", "current", "=", "null", ";", "// Create and attach the visual elements for resizing", "this", ".", "indicator", "=", "this", ".", "_createIndicator", "(", ")", ";", "this", ".", "tableParent", ".", "insertBefore", "(", "this", ".", "indicator", ",", "table", ")", ";", "this", ".", "_setDividerHeight", "(", "this", ".", "indicator", ")", ";", "// Determine what vendor prefixes to use for the animation", "this", ".", "_initializeBrowserSupport", "(", ")", ";", "}"], "original_docstring": "\nInitializes internal parameters and creates the\nindicator for the resizer.\n\n@method _initializeResizer\n@param table {HTMLElement} <table> element we want to attach the resizer to\n@private\n", "docstring": {"block_comment": "Initializes internal parameters and creates the \nindicator for the resizer.", "line_comment": ["Create and attach the visual elements for resizing", "Determine what vendor prefixes to use for the animation"]}, "docstring_tokens": ["<table", ">", "element", "we", "want", "to", "attach", "the", "resizer", "to"], "sample_id": 322, "prompt_tokens": ["<javascript>", "<param>", "table"], "comment_type": "param", "sentence_id": 1}
{"id": "21004137", "repo": "madmax983/aura", "path": "aura-components/src/main/components/ui/virtualDataTableLib/columnResize.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(config) {\n            config = config || {};\n\n            this.config = {\n                container : config.container,\n                initialWidths : config.initialWidths,\n\n                handleHeight : config.handleHeight,\n                step : config.step || DEFAULT_CONFIG.step,\n                minWidth : config.minWidth || DEFAULT_CONFIG.minWidth,\n                maxWidth : config.maxWidth || DEFAULT_CONFIG.maxWidth,\n\n                indicatorClasses : config.indicatorClasses || DEFAULT_CONFIG.indicatorClasses,\n                contentSpanClasses : config.contentSpanClasses || DEFAULT_CONFIG.contentSpanClasses,\n                headerSpanClasses : config.headerSpanClasses || DEFAULT_CONFIG.headerSpanClasses,\n\n                assistiveLabel : config.assistiveLabel || DEFAULT_CONFIG.assistiveLabel\n            };\n        }", "code_tokens": ["function", "(", "config", ")", "{", "config", "=", "config", "||", "{", "}", ";", "this", ".", "config", "=", "{", "container", ":", "config", ".", "container", ",", "initialWidths", ":", "config", ".", "initialWidths", ",", "handleHeight", ":", "config", ".", "handleHeight", ",", "step", ":", "config", ".", "step", "||", "DEFAULT_CONFIG", ".", "step", ",", "minWidth", ":", "config", ".", "minWidth", "||", "DEFAULT_CONFIG", ".", "minWidth", ",", "maxWidth", ":", "config", ".", "maxWidth", "||", "DEFAULT_CONFIG", ".", "maxWidth", ",", "indicatorClasses", ":", "config", ".", "indicatorClasses", "||", "DEFAULT_CONFIG", ".", "indicatorClasses", ",", "contentSpanClasses", ":", "config", ".", "contentSpanClasses", "||", "DEFAULT_CONFIG", ".", "contentSpanClasses", ",", "headerSpanClasses", ":", "config", ".", "headerSpanClasses", "||", "DEFAULT_CONFIG", ".", "headerSpanClasses", ",", "assistiveLabel", ":", "config", ".", "assistiveLabel", "||", "DEFAULT_CONFIG", ".", "assistiveLabel", "}", ";", "}"], "original_docstring": "\nUse the default configuration wherever the user hasn't specified a value\n\n@method _initializeConfig\n@param config {Object} Configuration object\n@private\n", "docstring": {"block_comment": "Use the default configuration wherever the user hasn t specified a value", "line_comment": null}, "docstring_tokens": ["Use", "the", "default", "configuration", "wherever", "the", "user", "hasn", "t", "specified", "a", "value"], "sample_id": 323, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004138", "repo": "google/tern-closure", "path": "lib/file.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, loadFn, access) {\n  /** @type {string} */\n  this.name = name;\n\n  /**\n   * @private {fn(name: string, access: Visibility, requestingFileName: string)}\n   */\n  this.loadFn_ = loadFn;\n\n  /**\n   * The highest level of access any open file has to this file. A file with\n   * PRIVATE access is one that has been opened by the user (directly added,\n   * rather than included). A file with PROTECTED access contains a superclass\n   * or interface extended in some file with PRIVATE access. A file with PUBLIC\n   * access just provides a name that was referenced in some other way.\n   * @type {Visibility}\n   */\n  this.access = access || Visibility.PUBLIC;\n\n  /**\n   * Maps from the names that are not exposed at the current access level to the\n   * access level this file would have to that name, stored by the level of\n   * access that will expose them.\n   * @type {Array.<Object.<Visibility>>}\n   */\n  this.deferredRequests = [{}, {}, {}];\n}", "code_tokens": ["function", "(", "name", ",", "loadFn", ",", "access", ")", "{", "/** @type {string} */", "this", ".", "name", "=", "name", ";", "/**\n   * @private {fn(name: string, access: Visibility, requestingFileName: string)}\n   */", "this", ".", "loadFn_", "=", "loadFn", ";", "/**\n   * The highest level of access any open file has to this file. A file with\n   * PRIVATE access is one that has been opened by the user (directly added,\n   * rather than included). A file with PROTECTED access contains a superclass\n   * or interface extended in some file with PRIVATE access. A file with PUBLIC\n   * access just provides a name that was referenced in some other way.\n   * @type {Visibility}\n   */", "this", ".", "access", "=", "access", "||", "Visibility", ".", "PUBLIC", ";", "/**\n   * Maps from the names that are not exposed at the current access level to the\n   * access level this file would have to that name, stored by the level of\n   * access that will expose them.\n   * @type {Array.<Object.<Visibility>>}\n   */", "this", ".", "deferredRequests", "=", "[", "{", "}", ",", "{", "}", ",", "{", "}", "]", ";", "}"], "original_docstring": "\nA class for tracking the names referenced from a file.\n@param {string} name The file name (a full path, matching Tern's origin\nstring).\n@param {fn(name: string, access: Visibility, requestingFileName: string)}\nloadFn The function to call to actually find and load a name.\n@param {Visibility=} access The access level to this file. Default PUBLIC.\n@constructor\n@struct\n", "docstring": {"block_comment": "A class for tracking the names referenced from a file.", "line_comment": [" type  string ", " private  fn name  string, access  Visibility, requestingFileName  string  ", "The highest level of access any open file has to this file. A file with \nPRIVATE access is one that has been opened by the user  directly added, \nrather than included . A file with PROTECTED access contains a superclass \nor interface extended in some file with PRIVATE access. A file with PUBLIC \naccess just provides a name that was referenced in some other way. \n type  Visibility ", "Maps from the names that are not exposed at the current access level to the \naccess level this file would have to that name, stored by the level of \naccess that will expose them. \n type  Array.  "]}, "docstring_tokens": ["A", "class", "for", "tracking", "the", "names", "referenced", "from", "a", "file", "."], "sample_id": 324, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004138", "repo": "google/tern-closure", "path": "lib/file.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, loadFn, access) {\n  /** @type {string} */\n  this.name = name;\n\n  /**\n   * @private {fn(name: string, access: Visibility, requestingFileName: string)}\n   */\n  this.loadFn_ = loadFn;\n\n  /**\n   * The highest level of access any open file has to this file. A file with\n   * PRIVATE access is one that has been opened by the user (directly added,\n   * rather than included). A file with PROTECTED access contains a superclass\n   * or interface extended in some file with PRIVATE access. A file with PUBLIC\n   * access just provides a name that was referenced in some other way.\n   * @type {Visibility}\n   */\n  this.access = access || Visibility.PUBLIC;\n\n  /**\n   * Maps from the names that are not exposed at the current access level to the\n   * access level this file would have to that name, stored by the level of\n   * access that will expose them.\n   * @type {Array.<Object.<Visibility>>}\n   */\n  this.deferredRequests = [{}, {}, {}];\n}", "code_tokens": ["function", "(", "name", ",", "loadFn", ",", "access", ")", "{", "/** @type {string} */", "this", ".", "name", "=", "name", ";", "/**\n   * @private {fn(name: string, access: Visibility, requestingFileName: string)}\n   */", "this", ".", "loadFn_", "=", "loadFn", ";", "/**\n   * The highest level of access any open file has to this file. A file with\n   * PRIVATE access is one that has been opened by the user (directly added,\n   * rather than included). A file with PROTECTED access contains a superclass\n   * or interface extended in some file with PRIVATE access. A file with PUBLIC\n   * access just provides a name that was referenced in some other way.\n   * @type {Visibility}\n   */", "this", ".", "access", "=", "access", "||", "Visibility", ".", "PUBLIC", ";", "/**\n   * Maps from the names that are not exposed at the current access level to the\n   * access level this file would have to that name, stored by the level of\n   * access that will expose them.\n   * @type {Array.<Object.<Visibility>>}\n   */", "this", ".", "deferredRequests", "=", "[", "{", "}", ",", "{", "}", ",", "{", "}", "]", ";", "}"], "original_docstring": "\nA class for tracking the names referenced from a file.\n@param {string} name The file name (a full path, matching Tern's origin\nstring).\n@param {fn(name: string, access: Visibility, requestingFileName: string)}\nloadFn The function to call to actually find and load a name.\n@param {Visibility=} access The access level to this file. Default PUBLIC.\n@constructor\n@struct\n", "docstring": {"block_comment": "A class for tracking the names referenced from a file.", "line_comment": [" type  string ", " private  fn name  string, access  Visibility, requestingFileName  string  ", "The highest level of access any open file has to this file. A file with \nPRIVATE access is one that has been opened by the user  directly added, \nrather than included . A file with PROTECTED access contains a superclass \nor interface extended in some file with PRIVATE access. A file with PUBLIC \naccess just provides a name that was referenced in some other way. \n type  Visibility ", "Maps from the names that are not exposed at the current access level to the \naccess level this file would have to that name, stored by the level of \naccess that will expose them. \n type  Array.  "]}, "docstring_tokens": ["The", "file", "name", "(", "a", "full", "path", "matching", "Tern", "s", "origin"], "sample_id": 324, "prompt_tokens": ["<javascript>", "<param>", "name"], "comment_type": "param", "sentence_id": 1}
{"id": "21004138", "repo": "google/tern-closure", "path": "lib/file.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, loadFn, access) {\n  /** @type {string} */\n  this.name = name;\n\n  /**\n   * @private {fn(name: string, access: Visibility, requestingFileName: string)}\n   */\n  this.loadFn_ = loadFn;\n\n  /**\n   * The highest level of access any open file has to this file. A file with\n   * PRIVATE access is one that has been opened by the user (directly added,\n   * rather than included). A file with PROTECTED access contains a superclass\n   * or interface extended in some file with PRIVATE access. A file with PUBLIC\n   * access just provides a name that was referenced in some other way.\n   * @type {Visibility}\n   */\n  this.access = access || Visibility.PUBLIC;\n\n  /**\n   * Maps from the names that are not exposed at the current access level to the\n   * access level this file would have to that name, stored by the level of\n   * access that will expose them.\n   * @type {Array.<Object.<Visibility>>}\n   */\n  this.deferredRequests = [{}, {}, {}];\n}", "code_tokens": ["function", "(", "name", ",", "loadFn", ",", "access", ")", "{", "/** @type {string} */", "this", ".", "name", "=", "name", ";", "/**\n   * @private {fn(name: string, access: Visibility, requestingFileName: string)}\n   */", "this", ".", "loadFn_", "=", "loadFn", ";", "/**\n   * The highest level of access any open file has to this file. A file with\n   * PRIVATE access is one that has been opened by the user (directly added,\n   * rather than included). A file with PROTECTED access contains a superclass\n   * or interface extended in some file with PRIVATE access. A file with PUBLIC\n   * access just provides a name that was referenced in some other way.\n   * @type {Visibility}\n   */", "this", ".", "access", "=", "access", "||", "Visibility", ".", "PUBLIC", ";", "/**\n   * Maps from the names that are not exposed at the current access level to the\n   * access level this file would have to that name, stored by the level of\n   * access that will expose them.\n   * @type {Array.<Object.<Visibility>>}\n   */", "this", ".", "deferredRequests", "=", "[", "{", "}", ",", "{", "}", ",", "{", "}", "]", ";", "}"], "original_docstring": "\nA class for tracking the names referenced from a file.\n@param {string} name The file name (a full path, matching Tern's origin\nstring).\n@param {fn(name: string, access: Visibility, requestingFileName: string)}\nloadFn The function to call to actually find and load a name.\n@param {Visibility=} access The access level to this file. Default PUBLIC.\n@constructor\n@struct\n", "docstring": {"block_comment": "A class for tracking the names referenced from a file.", "line_comment": [" type  string ", " private  fn name  string, access  Visibility, requestingFileName  string  ", "The highest level of access any open file has to this file. A file with \nPRIVATE access is one that has been opened by the user  directly added, \nrather than included . A file with PROTECTED access contains a superclass \nor interface extended in some file with PRIVATE access. A file with PUBLIC \naccess just provides a name that was referenced in some other way. \n type  Visibility ", "Maps from the names that are not exposed at the current access level to the \naccess level this file would have to that name, stored by the level of \naccess that will expose them. \n type  Array.  "]}, "docstring_tokens": ["The", "access", "level", "to", "this", "file", ".", "Default", "PUBLIC", "."], "sample_id": 324, "prompt_tokens": ["<javascript>", "<param>", "access"], "comment_type": "param", "sentence_id": 2}
{"id": "21004139", "repo": "amida-tech/orange-api", "path": "test/documentSignatures/list_document_signature_test.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function () {\n                        return fixtures.build(\"DocumentSignature\", {}).then(create);\n                    }", "code_tokens": ["function", "(", ")", "{", "return", "fixtures", ".", "build", "(", "\"DocumentSignature\"", ",", "{", "}", ")", ".", "then", "(", "create", ")", ";", "}"], "original_docstring": "/*eslint-disable no-loop-func", "docstring": {"block_comment": "eslint disable no loop func", "line_comment": null}, "docstring_tokens": ["eslint", "disable", "no", "loop", "func"], "sample_id": 325, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004140", "repo": "google/digitalbuildings", "path": "ibr/ibr_sdk/src/BlockingGrid.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n    return this.visualization;\n  }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "visualization", ";", "}"], "original_docstring": "\nGet the visualization of the BlockingGrid Object.\n@return {Visualization} visualization of the BlockingGrid Object.\n", "docstring": {"block_comment": "Get the visualization of the BlockingGrid Object.", "line_comment": null}, "docstring_tokens": ["Get", "the", "visualization", "of", "the", "BlockingGrid", "Object", "."], "sample_id": 326, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004140", "repo": "google/digitalbuildings", "path": "ibr/ibr_sdk/src/BlockingGrid.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n    return this.visualization;\n  }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "visualization", ";", "}"], "original_docstring": "\nGet the visualization of the BlockingGrid Object.\n@return {Visualization} visualization of the BlockingGrid Object.\n", "docstring": {"block_comment": "Get the visualization of the BlockingGrid Object.", "line_comment": null}, "docstring_tokens": ["visualization", "of", "the", "BlockingGrid", "Object", "."], "sample_id": 326, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004141", "repo": "google/digitalbuildings", "path": "ibr/ibr_sdk/src/BlockingGrid.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n    return this.id;\n  }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "id", ";", "}"], "original_docstring": "\nGet the ID of the BlockingGrid.\n@return {String} name of the BlockingGrid.\n", "docstring": {"block_comment": "Get the ID of the BlockingGrid.", "line_comment": null}, "docstring_tokens": ["Get", "the", "ID", "of", "the", "BlockingGrid", "."], "sample_id": 327, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004141", "repo": "google/digitalbuildings", "path": "ibr/ibr_sdk/src/BlockingGrid.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n    return this.id;\n  }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "id", ";", "}"], "original_docstring": "\nGet the ID of the BlockingGrid.\n@return {String} name of the BlockingGrid.\n", "docstring": {"block_comment": "Get the ID of the BlockingGrid.", "line_comment": null}, "docstring_tokens": ["name", "of", "the", "BlockingGrid", "."], "sample_id": 327, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004142", "repo": "gagrock/imzclient_node", "path": "js/util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (utftext) {\n    var string = \"\";\n    var i = 0;\n    var c= 0, c1 = 0, c2 = 0;\n\n    while ( i < utftext.length ) {\n\n        c = utftext.charCodeAt(i);\n\n        if (c < 128) {\n            string += String.fromCharCode(c);\n            i++;\n        }\n        else if((c > 191) && (c < 224)) {\n            c2 = utftext.charCodeAt(i+1);\n            string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n            i += 2;\n        }\n        else {\n            c2 = utftext.charCodeAt(i+1);\n            c3 = utftext.charCodeAt(i+2);\n            string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n            i += 3;\n        }\n\n    }\n    return string;\n}", "code_tokens": ["function", "(", "utftext", ")", "{", "var", "string", "=", "\"\"", ";", "var", "i", "=", "0", ";", "var", "c", "=", "0", ",", "c1", "=", "0", ",", "c2", "=", "0", ";", "while", "(", "i", "<", "utftext", ".", "length", ")", "{", "c", "=", "utftext", ".", "charCodeAt", "(", "i", ")", ";", "if", "(", "c", "<", "128", ")", "{", "string", "+=", "String", ".", "fromCharCode", "(", "c", ")", ";", "i", "++", ";", "}", "else", "if", "(", "(", "c", ">", "191", ")", "&&", "(", "c", "<", "224", ")", ")", "{", "c2", "=", "utftext", ".", "charCodeAt", "(", "i", "+", "1", ")", ";", "string", "+=", "String", ".", "fromCharCode", "(", "(", "(", "c", "&", "31", ")", "<<", "6", ")", "|", "(", "c2", "&", "63", ")", ")", ";", "i", "+=", "2", ";", "}", "else", "{", "c2", "=", "utftext", ".", "charCodeAt", "(", "i", "+", "1", ")", ";", "c3", "=", "utftext", ".", "charCodeAt", "(", "i", "+", "2", ")", ";", "string", "+=", "String", ".", "fromCharCode", "(", "(", "(", "c", "&", "15", ")", "<<", "12", ")", "|", "(", "(", "c2", "&", "63", ")", "<<", "6", ")", "|", "(", "c3", "&", "63", ")", ")", ";", "i", "+=", "3", ";", "}", "}", "return", "string", ";", "}"], "original_docstring": "private method for UTF-8 decoding", "docstring": {"block_comment": "private method for UTF 8 decoding", "line_comment": null}, "docstring_tokens": ["private", "method", "for", "UTF", "8", "decoding"], "sample_id": 328, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004143", "repo": "gagrock/imzclient_node", "path": "js/util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (string) {\n    string = string.replace(/\\r\\n/g,\"\\n\");\n    var utftext = \"\";\n\n    for (var n = 0; n < string.length; n++) {\n\n        var c = string.charCodeAt(n);\n\n        if (c < 128) {\n            utftext += String.fromCharCode(c);\n        }\n        else if((c > 127) && (c < 2048)) {\n            utftext += String.fromCharCode((c >> 6) | 192);\n            utftext += String.fromCharCode((c & 63) | 128);\n        }\n        else {\n            utftext += String.fromCharCode((c >> 12) | 224);\n            utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n            utftext += String.fromCharCode((c & 63) | 128);\n        }\n\n    }\n\n    return utftext;\n}", "code_tokens": ["function", "(", "string", ")", "{", "string", "=", "string", ".", "replace", "(", "/", "\\r\\n", "/", "g", ",", "\"\\n\"", ")", ";", "var", "utftext", "=", "\"\"", ";", "for", "(", "var", "n", "=", "0", ";", "n", "<", "string", ".", "length", ";", "n", "++", ")", "{", "var", "c", "=", "string", ".", "charCodeAt", "(", "n", ")", ";", "if", "(", "c", "<", "128", ")", "{", "utftext", "+=", "String", ".", "fromCharCode", "(", "c", ")", ";", "}", "else", "if", "(", "(", "c", ">", "127", ")", "&&", "(", "c", "<", "2048", ")", ")", "{", "utftext", "+=", "String", ".", "fromCharCode", "(", "(", "c", ">>", "6", ")", "|", "192", ")", ";", "utftext", "+=", "String", ".", "fromCharCode", "(", "(", "c", "&", "63", ")", "|", "128", ")", ";", "}", "else", "{", "utftext", "+=", "String", ".", "fromCharCode", "(", "(", "c", ">>", "12", ")", "|", "224", ")", ";", "utftext", "+=", "String", ".", "fromCharCode", "(", "(", "(", "c", ">>", "6", ")", "&", "63", ")", "|", "128", ")", ";", "utftext", "+=", "String", ".", "fromCharCode", "(", "(", "c", "&", "63", ")", "|", "128", ")", ";", "}", "}", "return", "utftext", ";", "}"], "original_docstring": "private method for UTF-8 encoding", "docstring": {"block_comment": "private method for UTF 8 encoding", "line_comment": null}, "docstring_tokens": ["private", "method", "for", "UTF", "8", "encoding"], "sample_id": 329, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004144", "repo": "gagrock/imzclient_node", "path": "js/util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    //remove the appended Base String\n    if(input !== null){\n    arr = input.split(/[ ]+/);\n    if(arr.length == 2 )\n    input = arr[1].replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n    else \n    input = arr[0].replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\t\n\n    while (i < input.length) {\n\n        enc1 = Base64._keyStr.indexOf(input.charAt(i++));\n        enc2 = Base64._keyStr.indexOf(input.charAt(i++));\n        enc3 = Base64._keyStr.indexOf(input.charAt(i++));\n        enc4 = Base64._keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n        }\n\n    }\n\n    output = Base64._utf8_decode(output);\n\n    return output;\n    }\n}", "code_tokens": ["function", "(", "input", ")", "{", "var", "output", "=", "\"\"", ";", "var", "chr1", ",", "chr2", ",", "chr3", ";", "var", "enc1", ",", "enc2", ",", "enc3", ",", "enc4", ";", "var", "i", "=", "0", ";", "//remove the appended Base String", "if", "(", "input", "!==", "null", ")", "{", "arr", "=", "input", ".", "split", "(", "/", "[ ]+", "/", ")", ";", "if", "(", "arr", ".", "length", "==", "2", ")", "input", "=", "arr", "[", "1", "]", ".", "replace", "(", "/", "[^A-Za-z0-9\\+\\/\\=]", "/", "g", ",", "\"\"", ")", ";", "else", "input", "=", "arr", "[", "0", "]", ".", "replace", "(", "/", "[^A-Za-z0-9\\+\\/\\=]", "/", "g", ",", "\"\"", ")", ";", "while", "(", "i", "<", "input", ".", "length", ")", "{", "enc1", "=", "Base64", ".", "_keyStr", ".", "indexOf", "(", "input", ".", "charAt", "(", "i", "++", ")", ")", ";", "enc2", "=", "Base64", ".", "_keyStr", ".", "indexOf", "(", "input", ".", "charAt", "(", "i", "++", ")", ")", ";", "enc3", "=", "Base64", ".", "_keyStr", ".", "indexOf", "(", "input", ".", "charAt", "(", "i", "++", ")", ")", ";", "enc4", "=", "Base64", ".", "_keyStr", ".", "indexOf", "(", "input", ".", "charAt", "(", "i", "++", ")", ")", ";", "chr1", "=", "(", "enc1", "<<", "2", ")", "|", "(", "enc2", ">>", "4", ")", ";", "chr2", "=", "(", "(", "enc2", "&", "15", ")", "<<", "4", ")", "|", "(", "enc3", ">>", "2", ")", ";", "chr3", "=", "(", "(", "enc3", "&", "3", ")", "<<", "6", ")", "|", "enc4", ";", "output", "=", "output", "+", "String", ".", "fromCharCode", "(", "chr1", ")", ";", "if", "(", "enc3", "!=", "64", ")", "{", "output", "=", "output", "+", "String", ".", "fromCharCode", "(", "chr2", ")", ";", "}", "if", "(", "enc4", "!=", "64", ")", "{", "output", "=", "output", "+", "String", ".", "fromCharCode", "(", "chr3", ")", ";", "}", "}", "output", "=", "Base64", ".", "_utf8_decode", "(", "output", ")", ";", "return", "output", ";", "}", "}"], "original_docstring": "public method for decoding", "docstring": {"block_comment": "public method for decoding", "line_comment": ["remove the appended Base String"]}, "docstring_tokens": ["public", "method", "for", "decoding"], "sample_id": 330, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004145", "repo": "gagrock/imzclient_node", "path": "js/util.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n   if(input !== null){\n    input = Base64._utf8_encode(input);\n\n    while (i < input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output +\n        Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) +\n        Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);\n\n    }\n\n    return \"Base \"+output;\n  }\n}", "code_tokens": ["function", "(", "input", ")", "{", "var", "output", "=", "\"\"", ";", "var", "chr1", ",", "chr2", ",", "chr3", ",", "enc1", ",", "enc2", ",", "enc3", ",", "enc4", ";", "var", "i", "=", "0", ";", "if", "(", "input", "!==", "null", ")", "{", "input", "=", "Base64", ".", "_utf8_encode", "(", "input", ")", ";", "while", "(", "i", "<", "input", ".", "length", ")", "{", "chr1", "=", "input", ".", "charCodeAt", "(", "i", "++", ")", ";", "chr2", "=", "input", ".", "charCodeAt", "(", "i", "++", ")", ";", "chr3", "=", "input", ".", "charCodeAt", "(", "i", "++", ")", ";", "enc1", "=", "chr1", ">>", "2", ";", "enc2", "=", "(", "(", "chr1", "&", "3", ")", "<<", "4", ")", "|", "(", "chr2", ">>", "4", ")", ";", "enc3", "=", "(", "(", "chr2", "&", "15", ")", "<<", "2", ")", "|", "(", "chr3", ">>", "6", ")", ";", "enc4", "=", "chr3", "&", "63", ";", "if", "(", "isNaN", "(", "chr2", ")", ")", "{", "enc3", "=", "enc4", "=", "64", ";", "}", "else", "if", "(", "isNaN", "(", "chr3", ")", ")", "{", "enc4", "=", "64", ";", "}", "output", "=", "output", "+", "Base64", ".", "_keyStr", ".", "charAt", "(", "enc1", ")", "+", "Base64", ".", "_keyStr", ".", "charAt", "(", "enc2", ")", "+", "Base64", ".", "_keyStr", ".", "charAt", "(", "enc3", ")", "+", "Base64", ".", "_keyStr", ".", "charAt", "(", "enc4", ")", ";", "}", "return", "\"Base \"", "+", "output", ";", "}", "}"], "original_docstring": "public method for encoding", "docstring": {"block_comment": "public method for encoding", "line_comment": null}, "docstring_tokens": ["public", "method", "for", "encoding"], "sample_id": 331, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004147", "repo": "truststamp/S3", "path": "lib/api/apiUtils/bucket/bucketDeletion.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "actualDeletionStep", "code": "function actualDeletionStep(err) {\n        if (err) {\n            return cb(err);\n        }\n        return metadata.deleteBucket(bucketName, log, err => {\n            log.trace('deleting bucket from metadata');\n            if (err) {\n                return cb(err);\n            }\n            const serverSideEncryption = bucketMD.getServerSideEncryption();\n            if (serverSideEncryption &&\n                serverSideEncryption.algorithm === 'AES256') {\n                const masterKeyId = serverSideEncryption.masterKeyId;\n                return kms.destroyBucketKey(masterKeyId, log, cb);\n            }\n            return cb();\n        });\n    }", "code_tokens": ["function", "actualDeletionStep", "(", "err", ")", "{", "if", "(", "err", ")", "{", "return", "cb", "(", "err", ")", ";", "}", "return", "metadata", ".", "deleteBucket", "(", "bucketName", ",", "log", ",", "err", "=>", "{", "log", ".", "trace", "(", "'deleting bucket from metadata'", ")", ";", "if", "(", "err", ")", "{", "return", "cb", "(", "err", ")", ";", "}", "const", "serverSideEncryption", "=", "bucketMD", ".", "getServerSideEncryption", "(", ")", ";", "if", "(", "serverSideEncryption", "&&", "serverSideEncryption", ".", "algorithm", "===", "'AES256'", ")", "{", "const", "masterKeyId", "=", "serverSideEncryption", ".", "masterKeyId", ";", "return", "kms", ".", "destroyBucketKey", "(", "masterKeyId", ",", "log", ",", "cb", ")", ";", "}", "return", "cb", "(", ")", ";", "}", ")", ";", "}"], "original_docstring": "eslint-disable-next-line prefer-arrow-callback", "docstring": {"block_comment": "eslint disable next line prefer arrow callback", "line_comment": null}, "docstring_tokens": ["eslint", "disable", "next", "line", "prefer", "arrow", "callback"], "sample_id": 332, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004148", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (url, callback) {\n            // Shield the call--a cross-domain call in IE9 sporadically breaks with \"Access refused\"\n            try {\n                $.ajax({\n                    type: 'HEAD',\n                    url: url,\n                    success: function () {\n                        callback(true);\n                    },\n                    error: function () {\n                        callback(false);\n                    }\n                });\n            } catch (ignore) {\n                callback(false);\n            }\n        }", "code_tokens": ["function", "(", "url", ",", "callback", ")", "{", "// Shield the call--a cross-domain call in IE9 sporadically breaks with \"Access refused\"", "try", "{", "$", ".", "ajax", "(", "{", "type", ":", "'HEAD'", ",", "url", ":", "url", ",", "success", ":", "function", "(", ")", "{", "callback", "(", "true", ")", ";", "}", ",", "error", ":", "function", "(", ")", "{", "callback", "(", "false", ")", ";", "}", "}", ")", ";", "}", "catch", "(", "ignore", ")", "{", "callback", "(", "false", ")", ";", "}", "}"], "original_docstring": "\nMakes a HEAD call to a URL to see if it is a valid URL.\n@param {string} url URL to test\n@param {function} callback Function to call upon response from test; function gets boolean parameter indicating\nif the HEAD call succeeded or not\n@private\n", "docstring": {"block_comment": "Makes a HEAD call to a URL to see if it is a valid URL.", "line_comment": ["Shield the call  a cross domain call in IE9 sporadically breaks with  Access refused "]}, "docstring_tokens": ["Makes", "a", "HEAD", "call", "to", "a", "URL", "to", "see", "if", "it", "is", "a", "valid", "URL", "."], "sample_id": 333, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004148", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (url, callback) {\n            // Shield the call--a cross-domain call in IE9 sporadically breaks with \"Access refused\"\n            try {\n                $.ajax({\n                    type: 'HEAD',\n                    url: url,\n                    success: function () {\n                        callback(true);\n                    },\n                    error: function () {\n                        callback(false);\n                    }\n                });\n            } catch (ignore) {\n                callback(false);\n            }\n        }", "code_tokens": ["function", "(", "url", ",", "callback", ")", "{", "// Shield the call--a cross-domain call in IE9 sporadically breaks with \"Access refused\"", "try", "{", "$", ".", "ajax", "(", "{", "type", ":", "'HEAD'", ",", "url", ":", "url", ",", "success", ":", "function", "(", ")", "{", "callback", "(", "true", ")", ";", "}", ",", "error", ":", "function", "(", ")", "{", "callback", "(", "false", ")", ";", "}", "}", ")", ";", "}", "catch", "(", "ignore", ")", "{", "callback", "(", "false", ")", ";", "}", "}"], "original_docstring": "\nMakes a HEAD call to a URL to see if it is a valid URL.\n@param {string} url URL to test\n@param {function} callback Function to call upon response from test; function gets boolean parameter indicating\nif the HEAD call succeeded or not\n@private\n", "docstring": {"block_comment": "Makes a HEAD call to a URL to see if it is a valid URL.", "line_comment": ["Shield the call  a cross domain call in IE9 sporadically breaks with  Access refused "]}, "docstring_tokens": ["URL", "to", "test"], "sample_id": 333, "prompt_tokens": ["<javascript>", "<param>", "url"], "comment_type": "param", "sentence_id": 1}
{"id": "21004148", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (url, callback) {\n            // Shield the call--a cross-domain call in IE9 sporadically breaks with \"Access refused\"\n            try {\n                $.ajax({\n                    type: 'HEAD',\n                    url: url,\n                    success: function () {\n                        callback(true);\n                    },\n                    error: function () {\n                        callback(false);\n                    }\n                });\n            } catch (ignore) {\n                callback(false);\n            }\n        }", "code_tokens": ["function", "(", "url", ",", "callback", ")", "{", "// Shield the call--a cross-domain call in IE9 sporadically breaks with \"Access refused\"", "try", "{", "$", ".", "ajax", "(", "{", "type", ":", "'HEAD'", ",", "url", ":", "url", ",", "success", ":", "function", "(", ")", "{", "callback", "(", "true", ")", ";", "}", ",", "error", ":", "function", "(", ")", "{", "callback", "(", "false", ")", ";", "}", "}", ")", ";", "}", "catch", "(", "ignore", ")", "{", "callback", "(", "false", ")", ";", "}", "}"], "original_docstring": "\nMakes a HEAD call to a URL to see if it is a valid URL.\n@param {string} url URL to test\n@param {function} callback Function to call upon response from test; function gets boolean parameter indicating\nif the HEAD call succeeded or not\n@private\n", "docstring": {"block_comment": "Makes a HEAD call to a URL to see if it is a valid URL.", "line_comment": ["Shield the call  a cross domain call in IE9 sporadically breaks with  Access refused "]}, "docstring_tokens": ["Function", "to", "call", "upon", "response", "from", "test", ";", "function", "gets", "boolean", "parameter", "indicating"], "sample_id": 333, "prompt_tokens": ["<javascript>", "<param>", "callback"], "comment_type": "param", "sentence_id": 2}
{"id": "21004149", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (featureSvcUrl, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n            if (parseConfigInfo.isUsableString(featureSvcUrl)) {\n                $.getJSON(featureSvcUrl + \"?f=json\", function (data) {\n                    data.canBeUpdated = data.capabilities && data.capabilities.indexOf(\"Update\") >= 0;\n                    deferred.resolve(data);\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "featureSvcUrl", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "featureSvcUrl", ")", ")", "{", "$", ".", "getJSON", "(", "featureSvcUrl", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "data", ".", "canBeUpdated", "=", "data", ".", "capabilities", "&&", "data", ".", "capabilities", ".", "indexOf", "(", "\"Update\"", ")", ">=", "0", ";", "deferred", ".", "resolve", "(", "data", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets feature service information.\n@param {string} featureSvcUrl URL to feature service\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\ndata from feature service's main section\n", "docstring": {"block_comment": "Gets feature service information.", "line_comment": null}, "docstring_tokens": ["Gets", "feature", "service", "information", "."], "sample_id": 334, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004149", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (featureSvcUrl, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n            if (parseConfigInfo.isUsableString(featureSvcUrl)) {\n                $.getJSON(featureSvcUrl + \"?f=json\", function (data) {\n                    data.canBeUpdated = data.capabilities && data.capabilities.indexOf(\"Update\") >= 0;\n                    deferred.resolve(data);\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "featureSvcUrl", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "featureSvcUrl", ")", ")", "{", "$", ".", "getJSON", "(", "featureSvcUrl", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "data", ".", "canBeUpdated", "=", "data", ".", "capabilities", "&&", "data", ".", "capabilities", ".", "indexOf", "(", "\"Update\"", ")", ">=", "0", ";", "deferred", ".", "resolve", "(", "data", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets feature service information.\n@param {string} featureSvcUrl URL to feature service\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\ndata from feature service's main section\n", "docstring": {"block_comment": "Gets feature service information.", "line_comment": null}, "docstring_tokens": ["URL", "to", "feature", "service"], "sample_id": 334, "prompt_tokens": ["<javascript>", "<param>", "featureSvcUrl"], "comment_type": "param", "sentence_id": 1}
{"id": "21004149", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (featureSvcUrl, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n            if (parseConfigInfo.isUsableString(featureSvcUrl)) {\n                $.getJSON(featureSvcUrl + \"?f=json\", function (data) {\n                    data.canBeUpdated = data.capabilities && data.capabilities.indexOf(\"Update\") >= 0;\n                    deferred.resolve(data);\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "featureSvcUrl", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "featureSvcUrl", ")", ")", "{", "$", ".", "getJSON", "(", "featureSvcUrl", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "data", ".", "canBeUpdated", "=", "data", ".", "capabilities", "&&", "data", ".", "capabilities", ".", "indexOf", "(", "\"Update\"", ")", ">=", "0", ";", "deferred", ".", "resolve", "(", "data", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets feature service information.\n@param {string} featureSvcUrl URL to feature service\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\ndata from feature service's main section\n", "docstring": {"block_comment": "Gets feature service information.", "line_comment": null}, "docstring_tokens": ["Deferred", "to", "use", "for", "fetch", "notification", ";", "if", "not", "supplied", "function"], "sample_id": 334, "prompt_tokens": ["<javascript>", "<param>", "deferred"], "comment_type": "param", "sentence_id": 2}
{"id": "21004149", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (featureSvcUrl, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n            if (parseConfigInfo.isUsableString(featureSvcUrl)) {\n                $.getJSON(featureSvcUrl + \"?f=json\", function (data) {\n                    data.canBeUpdated = data.capabilities && data.capabilities.indexOf(\"Update\") >= 0;\n                    deferred.resolve(data);\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "featureSvcUrl", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "featureSvcUrl", ")", ")", "{", "$", ".", "getJSON", "(", "featureSvcUrl", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "data", ".", "canBeUpdated", "=", "data", ".", "capabilities", "&&", "data", ".", "capabilities", ".", "indexOf", "(", "\"Update\"", ")", ">=", "0", ";", "deferred", ".", "resolve", "(", "data", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets feature service information.\n@param {string} featureSvcUrl URL to feature service\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\ndata from feature service's main section\n", "docstring": {"block_comment": "Gets feature service information.", "line_comment": null}, "docstring_tokens": ["Deferred", "indicating", "when", "service", "information", "is", "ready", ";", "successful", "resolution", "includes", "object", "with"], "sample_id": 334, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 3}
{"id": "21004150", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"/data?f=json\", function (data) {\n                    var featureSvcData = {};\n\n                    if (data && data.operationalLayers && data.operationalLayers.length > 0 && data.tables && data.tables.length > 0) {\n                        featureSvcData.opLayerParams = data.operationalLayers[0];\n                        featureSvcData.formUIParams = data.tables[0];\n\n                        // Get the app's webmap's feature service's data and the survey questions table data\n                        $.when(fetchConfigInfo.getFeatureSvcData(featureSvcData.opLayerParams.url),\n                                fetchConfigInfo.getFeatureSvcData(featureSvcData.formUIParams.url))\n                        .done(function (svcdata, uidata) {\n                            if (!svcdata || svcdata.error || !uidata || uidata.error) {\n                                deferred.reject();\n                            }\n                            featureSvcData.featureSvcParams = svcdata;\n                            featureSvcData.formUISvcParams = uidata;\n                            deferred.resolve(featureSvcData);\n                        })\n                        .fail(function(){\n                            deferred.resolve({});\n                        });\n\n                    } else {\n                        deferred.resolve({});\n                    }\n                });\n            } else {\n                deferred.resolve({});\n            }\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "var", "featureSvcData", "=", "{", "}", ";", "if", "(", "data", "&&", "data", ".", "operationalLayers", "&&", "data", ".", "operationalLayers", ".", "length", ">", "0", "&&", "data", ".", "tables", "&&", "data", ".", "tables", ".", "length", ">", "0", ")", "{", "featureSvcData", ".", "opLayerParams", "=", "data", ".", "operationalLayers", "[", "0", "]", ";", "featureSvcData", ".", "formUIParams", "=", "data", ".", "tables", "[", "0", "]", ";", "// Get the app's webmap's feature service's data and the survey questions table data", "$", ".", "when", "(", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "opLayerParams", ".", "url", ")", ",", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "formUIParams", ".", "url", ")", ")", ".", "done", "(", "function", "(", "svcdata", ",", "uidata", ")", "{", "if", "(", "!", "svcdata", "||", "svcdata", ".", "error", "||", "!", "uidata", "||", "uidata", ".", "error", ")", "{", "deferred", ".", "reject", "(", ")", ";", "}", "featureSvcData", ".", "featureSvcParams", "=", "svcdata", ";", "featureSvcData", ".", "formUISvcParams", "=", "uidata", ";", "deferred", ".", "resolve", "(", "featureSvcData", ")", ";", "}", ")", ".", "fail", "(", "function", "(", ")", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets operational layer and feature service information from parameters in webmap's data section.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\nopLayerParams and featureSvcParams\n", "docstring": {"block_comment": "Gets operational layer and feature service information from parameters in webmap s data section.", "line_comment": ["Get the app s webmap s feature service s data and the survey questions table data"]}, "docstring_tokens": ["Gets", "operational", "layer", "and", "feature", "service", "information", "from", "parameters", "in", "webmap", "s", "data", "section", "."], "sample_id": 335, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004150", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"/data?f=json\", function (data) {\n                    var featureSvcData = {};\n\n                    if (data && data.operationalLayers && data.operationalLayers.length > 0 && data.tables && data.tables.length > 0) {\n                        featureSvcData.opLayerParams = data.operationalLayers[0];\n                        featureSvcData.formUIParams = data.tables[0];\n\n                        // Get the app's webmap's feature service's data and the survey questions table data\n                        $.when(fetchConfigInfo.getFeatureSvcData(featureSvcData.opLayerParams.url),\n                                fetchConfigInfo.getFeatureSvcData(featureSvcData.formUIParams.url))\n                        .done(function (svcdata, uidata) {\n                            if (!svcdata || svcdata.error || !uidata || uidata.error) {\n                                deferred.reject();\n                            }\n                            featureSvcData.featureSvcParams = svcdata;\n                            featureSvcData.formUISvcParams = uidata;\n                            deferred.resolve(featureSvcData);\n                        })\n                        .fail(function(){\n                            deferred.resolve({});\n                        });\n\n                    } else {\n                        deferred.resolve({});\n                    }\n                });\n            } else {\n                deferred.resolve({});\n            }\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "var", "featureSvcData", "=", "{", "}", ";", "if", "(", "data", "&&", "data", ".", "operationalLayers", "&&", "data", ".", "operationalLayers", ".", "length", ">", "0", "&&", "data", ".", "tables", "&&", "data", ".", "tables", ".", "length", ">", "0", ")", "{", "featureSvcData", ".", "opLayerParams", "=", "data", ".", "operationalLayers", "[", "0", "]", ";", "featureSvcData", ".", "formUIParams", "=", "data", ".", "tables", "[", "0", "]", ";", "// Get the app's webmap's feature service's data and the survey questions table data", "$", ".", "when", "(", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "opLayerParams", ".", "url", ")", ",", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "formUIParams", ".", "url", ")", ")", ".", "done", "(", "function", "(", "svcdata", ",", "uidata", ")", "{", "if", "(", "!", "svcdata", "||", "svcdata", ".", "error", "||", "!", "uidata", "||", "uidata", ".", "error", ")", "{", "deferred", ".", "reject", "(", ")", ";", "}", "featureSvcData", ".", "featureSvcParams", "=", "svcdata", ";", "featureSvcData", ".", "formUISvcParams", "=", "uidata", ";", "deferred", ".", "resolve", "(", "featureSvcData", ")", ";", "}", ")", ".", "fail", "(", "function", "(", ")", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets operational layer and feature service information from parameters in webmap's data section.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\nopLayerParams and featureSvcParams\n", "docstring": {"block_comment": "Gets operational layer and feature service information from parameters in webmap s data section.", "line_comment": ["Get the app s webmap s feature service s data and the survey questions table data"]}, "docstring_tokens": ["URL", "to", "arcgis", "items", "e", ".", "g", ".", "http", ":", "//", "www", ".", "arcgis", ".", "com", "/", "sharing", "/", "content", "/", "items", "/"], "sample_id": 335, "prompt_tokens": ["<javascript>", "<param>", "arcgisUrl"], "comment_type": "param", "sentence_id": 1}
{"id": "21004150", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"/data?f=json\", function (data) {\n                    var featureSvcData = {};\n\n                    if (data && data.operationalLayers && data.operationalLayers.length > 0 && data.tables && data.tables.length > 0) {\n                        featureSvcData.opLayerParams = data.operationalLayers[0];\n                        featureSvcData.formUIParams = data.tables[0];\n\n                        // Get the app's webmap's feature service's data and the survey questions table data\n                        $.when(fetchConfigInfo.getFeatureSvcData(featureSvcData.opLayerParams.url),\n                                fetchConfigInfo.getFeatureSvcData(featureSvcData.formUIParams.url))\n                        .done(function (svcdata, uidata) {\n                            if (!svcdata || svcdata.error || !uidata || uidata.error) {\n                                deferred.reject();\n                            }\n                            featureSvcData.featureSvcParams = svcdata;\n                            featureSvcData.formUISvcParams = uidata;\n                            deferred.resolve(featureSvcData);\n                        })\n                        .fail(function(){\n                            deferred.resolve({});\n                        });\n\n                    } else {\n                        deferred.resolve({});\n                    }\n                });\n            } else {\n                deferred.resolve({});\n            }\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "var", "featureSvcData", "=", "{", "}", ";", "if", "(", "data", "&&", "data", ".", "operationalLayers", "&&", "data", ".", "operationalLayers", ".", "length", ">", "0", "&&", "data", ".", "tables", "&&", "data", ".", "tables", ".", "length", ">", "0", ")", "{", "featureSvcData", ".", "opLayerParams", "=", "data", ".", "operationalLayers", "[", "0", "]", ";", "featureSvcData", ".", "formUIParams", "=", "data", ".", "tables", "[", "0", "]", ";", "// Get the app's webmap's feature service's data and the survey questions table data", "$", ".", "when", "(", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "opLayerParams", ".", "url", ")", ",", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "formUIParams", ".", "url", ")", ")", ".", "done", "(", "function", "(", "svcdata", ",", "uidata", ")", "{", "if", "(", "!", "svcdata", "||", "svcdata", ".", "error", "||", "!", "uidata", "||", "uidata", ".", "error", ")", "{", "deferred", ".", "reject", "(", ")", ";", "}", "featureSvcData", ".", "featureSvcParams", "=", "svcdata", ";", "featureSvcData", ".", "formUISvcParams", "=", "uidata", ";", "deferred", ".", "resolve", "(", "featureSvcData", ")", ";", "}", ")", ".", "fail", "(", "function", "(", ")", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets operational layer and feature service information from parameters in webmap's data section.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\nopLayerParams and featureSvcParams\n", "docstring": {"block_comment": "Gets operational layer and feature service information from parameters in webmap s data section.", "line_comment": ["Get the app s webmap s feature service s data and the survey questions table data"]}, "docstring_tokens": ["Id", "of", "webmap"], "sample_id": 335, "prompt_tokens": ["<javascript>", "<param>", "webmapId"], "comment_type": "param", "sentence_id": 2}
{"id": "21004150", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"/data?f=json\", function (data) {\n                    var featureSvcData = {};\n\n                    if (data && data.operationalLayers && data.operationalLayers.length > 0 && data.tables && data.tables.length > 0) {\n                        featureSvcData.opLayerParams = data.operationalLayers[0];\n                        featureSvcData.formUIParams = data.tables[0];\n\n                        // Get the app's webmap's feature service's data and the survey questions table data\n                        $.when(fetchConfigInfo.getFeatureSvcData(featureSvcData.opLayerParams.url),\n                                fetchConfigInfo.getFeatureSvcData(featureSvcData.formUIParams.url))\n                        .done(function (svcdata, uidata) {\n                            if (!svcdata || svcdata.error || !uidata || uidata.error) {\n                                deferred.reject();\n                            }\n                            featureSvcData.featureSvcParams = svcdata;\n                            featureSvcData.formUISvcParams = uidata;\n                            deferred.resolve(featureSvcData);\n                        })\n                        .fail(function(){\n                            deferred.resolve({});\n                        });\n\n                    } else {\n                        deferred.resolve({});\n                    }\n                });\n            } else {\n                deferred.resolve({});\n            }\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "var", "featureSvcData", "=", "{", "}", ";", "if", "(", "data", "&&", "data", ".", "operationalLayers", "&&", "data", ".", "operationalLayers", ".", "length", ">", "0", "&&", "data", ".", "tables", "&&", "data", ".", "tables", ".", "length", ">", "0", ")", "{", "featureSvcData", ".", "opLayerParams", "=", "data", ".", "operationalLayers", "[", "0", "]", ";", "featureSvcData", ".", "formUIParams", "=", "data", ".", "tables", "[", "0", "]", ";", "// Get the app's webmap's feature service's data and the survey questions table data", "$", ".", "when", "(", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "opLayerParams", ".", "url", ")", ",", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "formUIParams", ".", "url", ")", ")", ".", "done", "(", "function", "(", "svcdata", ",", "uidata", ")", "{", "if", "(", "!", "svcdata", "||", "svcdata", ".", "error", "||", "!", "uidata", "||", "uidata", ".", "error", ")", "{", "deferred", ".", "reject", "(", ")", ";", "}", "featureSvcData", ".", "featureSvcParams", "=", "svcdata", ";", "featureSvcData", ".", "formUISvcParams", "=", "uidata", ";", "deferred", ".", "resolve", "(", "featureSvcData", ")", ";", "}", ")", ".", "fail", "(", "function", "(", ")", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets operational layer and feature service information from parameters in webmap's data section.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\nopLayerParams and featureSvcParams\n", "docstring": {"block_comment": "Gets operational layer and feature service information from parameters in webmap s data section.", "line_comment": ["Get the app s webmap s feature service s data and the survey questions table data"]}, "docstring_tokens": ["Deferred", "to", "use", "for", "fetch", "notification", ";", "if", "not", "supplied", "function"], "sample_id": 335, "prompt_tokens": ["<javascript>", "<param>", "deferred"], "comment_type": "param", "sentence_id": 3}
{"id": "21004150", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"/data?f=json\", function (data) {\n                    var featureSvcData = {};\n\n                    if (data && data.operationalLayers && data.operationalLayers.length > 0 && data.tables && data.tables.length > 0) {\n                        featureSvcData.opLayerParams = data.operationalLayers[0];\n                        featureSvcData.formUIParams = data.tables[0];\n\n                        // Get the app's webmap's feature service's data and the survey questions table data\n                        $.when(fetchConfigInfo.getFeatureSvcData(featureSvcData.opLayerParams.url),\n                                fetchConfigInfo.getFeatureSvcData(featureSvcData.formUIParams.url))\n                        .done(function (svcdata, uidata) {\n                            if (!svcdata || svcdata.error || !uidata || uidata.error) {\n                                deferred.reject();\n                            }\n                            featureSvcData.featureSvcParams = svcdata;\n                            featureSvcData.formUISvcParams = uidata;\n                            deferred.resolve(featureSvcData);\n                        })\n                        .fail(function(){\n                            deferred.resolve({});\n                        });\n\n                    } else {\n                        deferred.resolve({});\n                    }\n                });\n            } else {\n                deferred.resolve({});\n            }\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "var", "featureSvcData", "=", "{", "}", ";", "if", "(", "data", "&&", "data", ".", "operationalLayers", "&&", "data", ".", "operationalLayers", ".", "length", ">", "0", "&&", "data", ".", "tables", "&&", "data", ".", "tables", ".", "length", ">", "0", ")", "{", "featureSvcData", ".", "opLayerParams", "=", "data", ".", "operationalLayers", "[", "0", "]", ";", "featureSvcData", ".", "formUIParams", "=", "data", ".", "tables", "[", "0", "]", ";", "// Get the app's webmap's feature service's data and the survey questions table data", "$", ".", "when", "(", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "opLayerParams", ".", "url", ")", ",", "fetchConfigInfo", ".", "getFeatureSvcData", "(", "featureSvcData", ".", "formUIParams", ".", "url", ")", ")", ".", "done", "(", "function", "(", "svcdata", ",", "uidata", ")", "{", "if", "(", "!", "svcdata", "||", "svcdata", ".", "error", "||", "!", "uidata", "||", "uidata", ".", "error", ")", "{", "deferred", ".", "reject", "(", ")", ";", "}", "featureSvcData", ".", "featureSvcParams", "=", "svcdata", ";", "featureSvcData", ".", "formUISvcParams", "=", "uidata", ";", "deferred", ".", "resolve", "(", "featureSvcData", ")", ";", "}", ")", ".", "fail", "(", "function", "(", ")", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nGets operational layer and feature service information from parameters in webmap's data section.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function\ncreates one\n@return {object} Deferred indicating when service information is ready; successful resolution includes object with\nopLayerParams and featureSvcParams\n", "docstring": {"block_comment": "Gets operational layer and feature service information from parameters in webmap s data section.", "line_comment": ["Get the app s webmap s feature service s data and the survey questions table data"]}, "docstring_tokens": ["Deferred", "indicating", "when", "service", "information", "is", "ready", ";", "successful", "resolution", "includes", "object", "with"], "sample_id": 335, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 4}
{"id": "21004151", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, paramsDeferred, origImageUrlDeferred) {\n            var deferreds = {};\n            deferreds.params = paramsDeferred || $.Deferred();\n            deferreds.origImageUrl = origImageUrlDeferred || $.Deferred();\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"?f=json\", function (data) {\n                    var normalizedData = {}, imageUrl, iExt;\n                    if (!data || data.error) {\n                        deferreds.params.reject();\n                        deferreds.origImageUrl.resolve();\n                        return;\n                    }\n\n                    normalizedData.title = data.title;\n                    normalizedData.splashText = data.snippet;\n                    normalizedData.helpText = data.description;\n                    normalizedData = $.extend(normalizedData, parseConfigInfo.parseAccessConfig(data.licenseInfo));\n                    deferreds.params.resolve(normalizedData);\n\n                    // See if we can get an original-size image\n                    imageUrl = data.thumbnail;\n                    if (imageUrl) {\n                        iExt = imageUrl.lastIndexOf(\".\");\n                        if (iExt >= 0) {\n                            imageUrl = imageUrl.substring(0, iExt) + \"_orig\" + imageUrl.substr(iExt);\n                        } else {\n                            imageUrl = imageUrl + \"_orig\";\n                        }\n                        imageUrl = arcgisUrl + webmapId + \"/info/\" + imageUrl;\n\n                        // Test that this URL is valid\n                        fetchConfigInfo.testURL(imageUrl, function (isOK) {\n                            deferreds.origImageUrl.resolve(isOK\n                                ? imageUrl\n                                : null);\n                        });\n                    } else {\n                        deferreds.origImageUrl.resolve();\n                    }\n                });\n            } else {\n                deferreds.params.resolve({});\n                deferreds.origImageUrl.resolve();\n            }\n\n            return deferreds;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "paramsDeferred", ",", "origImageUrlDeferred", ")", "{", "var", "deferreds", "=", "{", "}", ";", "deferreds", ".", "params", "=", "paramsDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "deferreds", ".", "origImageUrl", "=", "origImageUrlDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "var", "normalizedData", "=", "{", "}", ",", "imageUrl", ",", "iExt", ";", "if", "(", "!", "data", "||", "data", ".", "error", ")", "{", "deferreds", ".", "params", ".", "reject", "(", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "return", ";", "}", "normalizedData", ".", "title", "=", "data", ".", "title", ";", "normalizedData", ".", "splashText", "=", "data", ".", "snippet", ";", "normalizedData", ".", "helpText", "=", "data", ".", "description", ";", "normalizedData", "=", "$", ".", "extend", "(", "normalizedData", ",", "parseConfigInfo", ".", "parseAccessConfig", "(", "data", ".", "licenseInfo", ")", ")", ";", "deferreds", ".", "params", ".", "resolve", "(", "normalizedData", ")", ";", "// See if we can get an original-size image", "imageUrl", "=", "data", ".", "thumbnail", ";", "if", "(", "imageUrl", ")", "{", "iExt", "=", "imageUrl", ".", "lastIndexOf", "(", "\".\"", ")", ";", "if", "(", "iExt", ">=", "0", ")", "{", "imageUrl", "=", "imageUrl", ".", "substring", "(", "0", ",", "iExt", ")", "+", "\"_orig\"", "+", "imageUrl", ".", "substr", "(", "iExt", ")", ";", "}", "else", "{", "imageUrl", "=", "imageUrl", "+", "\"_orig\"", ";", "}", "imageUrl", "=", "arcgisUrl", "+", "webmapId", "+", "\"/info/\"", "+", "imageUrl", ";", "// Test that this URL is valid", "fetchConfigInfo", ".", "testURL", "(", "imageUrl", ",", "function", "(", "isOK", ")", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", "isOK", "?", "imageUrl", ":", "null", ")", ";", "}", ")", ";", "}", "else", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferreds", ".", "params", ".", "resolve", "(", "{", "}", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "return", "deferreds", ";", "}"], "original_docstring": "\nExtracts parameters from webmap.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [paramsDeferred] Deferred to use for parameters fetch notification; if not supplied, function\ncreates one\n@param {object} [origImageUrlDeferred] Deferred to use for original-size version of the webmap's thumbnail fetch\nnotification; if not supplied, function creates one\n@return {object} Object with properties params and origImageUrl that contain the supplied (or created)\nparamsDeferred and origImageUrlDeferred Deferreds, respectively, for when the app's configuration parameters are\nready to use and when the original-size version of the webmap's thumbnail has been checked and is ready to use;\nsuccessful resolution of 'params' includes object with title, splashText, helpText, contribLevels,\nsurveyorNameField, bestPhotoField; successful resolution of 'origImageUrl' contains the URL of the original-size\nimage.\n", "docstring": {"block_comment": "Extracts parameters from webmap.", "line_comment": ["See if we can get an original size image", "Test that this URL is valid"]}, "docstring_tokens": ["Extracts", "parameters", "from", "webmap", "."], "sample_id": 336, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004151", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, paramsDeferred, origImageUrlDeferred) {\n            var deferreds = {};\n            deferreds.params = paramsDeferred || $.Deferred();\n            deferreds.origImageUrl = origImageUrlDeferred || $.Deferred();\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"?f=json\", function (data) {\n                    var normalizedData = {}, imageUrl, iExt;\n                    if (!data || data.error) {\n                        deferreds.params.reject();\n                        deferreds.origImageUrl.resolve();\n                        return;\n                    }\n\n                    normalizedData.title = data.title;\n                    normalizedData.splashText = data.snippet;\n                    normalizedData.helpText = data.description;\n                    normalizedData = $.extend(normalizedData, parseConfigInfo.parseAccessConfig(data.licenseInfo));\n                    deferreds.params.resolve(normalizedData);\n\n                    // See if we can get an original-size image\n                    imageUrl = data.thumbnail;\n                    if (imageUrl) {\n                        iExt = imageUrl.lastIndexOf(\".\");\n                        if (iExt >= 0) {\n                            imageUrl = imageUrl.substring(0, iExt) + \"_orig\" + imageUrl.substr(iExt);\n                        } else {\n                            imageUrl = imageUrl + \"_orig\";\n                        }\n                        imageUrl = arcgisUrl + webmapId + \"/info/\" + imageUrl;\n\n                        // Test that this URL is valid\n                        fetchConfigInfo.testURL(imageUrl, function (isOK) {\n                            deferreds.origImageUrl.resolve(isOK\n                                ? imageUrl\n                                : null);\n                        });\n                    } else {\n                        deferreds.origImageUrl.resolve();\n                    }\n                });\n            } else {\n                deferreds.params.resolve({});\n                deferreds.origImageUrl.resolve();\n            }\n\n            return deferreds;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "paramsDeferred", ",", "origImageUrlDeferred", ")", "{", "var", "deferreds", "=", "{", "}", ";", "deferreds", ".", "params", "=", "paramsDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "deferreds", ".", "origImageUrl", "=", "origImageUrlDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "var", "normalizedData", "=", "{", "}", ",", "imageUrl", ",", "iExt", ";", "if", "(", "!", "data", "||", "data", ".", "error", ")", "{", "deferreds", ".", "params", ".", "reject", "(", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "return", ";", "}", "normalizedData", ".", "title", "=", "data", ".", "title", ";", "normalizedData", ".", "splashText", "=", "data", ".", "snippet", ";", "normalizedData", ".", "helpText", "=", "data", ".", "description", ";", "normalizedData", "=", "$", ".", "extend", "(", "normalizedData", ",", "parseConfigInfo", ".", "parseAccessConfig", "(", "data", ".", "licenseInfo", ")", ")", ";", "deferreds", ".", "params", ".", "resolve", "(", "normalizedData", ")", ";", "// See if we can get an original-size image", "imageUrl", "=", "data", ".", "thumbnail", ";", "if", "(", "imageUrl", ")", "{", "iExt", "=", "imageUrl", ".", "lastIndexOf", "(", "\".\"", ")", ";", "if", "(", "iExt", ">=", "0", ")", "{", "imageUrl", "=", "imageUrl", ".", "substring", "(", "0", ",", "iExt", ")", "+", "\"_orig\"", "+", "imageUrl", ".", "substr", "(", "iExt", ")", ";", "}", "else", "{", "imageUrl", "=", "imageUrl", "+", "\"_orig\"", ";", "}", "imageUrl", "=", "arcgisUrl", "+", "webmapId", "+", "\"/info/\"", "+", "imageUrl", ";", "// Test that this URL is valid", "fetchConfigInfo", ".", "testURL", "(", "imageUrl", ",", "function", "(", "isOK", ")", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", "isOK", "?", "imageUrl", ":", "null", ")", ";", "}", ")", ";", "}", "else", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferreds", ".", "params", ".", "resolve", "(", "{", "}", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "return", "deferreds", ";", "}"], "original_docstring": "\nExtracts parameters from webmap.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [paramsDeferred] Deferred to use for parameters fetch notification; if not supplied, function\ncreates one\n@param {object} [origImageUrlDeferred] Deferred to use for original-size version of the webmap's thumbnail fetch\nnotification; if not supplied, function creates one\n@return {object} Object with properties params and origImageUrl that contain the supplied (or created)\nparamsDeferred and origImageUrlDeferred Deferreds, respectively, for when the app's configuration parameters are\nready to use and when the original-size version of the webmap's thumbnail has been checked and is ready to use;\nsuccessful resolution of 'params' includes object with title, splashText, helpText, contribLevels,\nsurveyorNameField, bestPhotoField; successful resolution of 'origImageUrl' contains the URL of the original-size\nimage.\n", "docstring": {"block_comment": "Extracts parameters from webmap.", "line_comment": ["See if we can get an original size image", "Test that this URL is valid"]}, "docstring_tokens": ["URL", "to", "arcgis", "items", "e", ".", "g", ".", "http", ":", "//", "www", ".", "arcgis", ".", "com", "/", "sharing", "/", "content", "/", "items", "/"], "sample_id": 336, "prompt_tokens": ["<javascript>", "<param>", "arcgisUrl"], "comment_type": "param", "sentence_id": 1}
{"id": "21004151", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, paramsDeferred, origImageUrlDeferred) {\n            var deferreds = {};\n            deferreds.params = paramsDeferred || $.Deferred();\n            deferreds.origImageUrl = origImageUrlDeferred || $.Deferred();\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"?f=json\", function (data) {\n                    var normalizedData = {}, imageUrl, iExt;\n                    if (!data || data.error) {\n                        deferreds.params.reject();\n                        deferreds.origImageUrl.resolve();\n                        return;\n                    }\n\n                    normalizedData.title = data.title;\n                    normalizedData.splashText = data.snippet;\n                    normalizedData.helpText = data.description;\n                    normalizedData = $.extend(normalizedData, parseConfigInfo.parseAccessConfig(data.licenseInfo));\n                    deferreds.params.resolve(normalizedData);\n\n                    // See if we can get an original-size image\n                    imageUrl = data.thumbnail;\n                    if (imageUrl) {\n                        iExt = imageUrl.lastIndexOf(\".\");\n                        if (iExt >= 0) {\n                            imageUrl = imageUrl.substring(0, iExt) + \"_orig\" + imageUrl.substr(iExt);\n                        } else {\n                            imageUrl = imageUrl + \"_orig\";\n                        }\n                        imageUrl = arcgisUrl + webmapId + \"/info/\" + imageUrl;\n\n                        // Test that this URL is valid\n                        fetchConfigInfo.testURL(imageUrl, function (isOK) {\n                            deferreds.origImageUrl.resolve(isOK\n                                ? imageUrl\n                                : null);\n                        });\n                    } else {\n                        deferreds.origImageUrl.resolve();\n                    }\n                });\n            } else {\n                deferreds.params.resolve({});\n                deferreds.origImageUrl.resolve();\n            }\n\n            return deferreds;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "paramsDeferred", ",", "origImageUrlDeferred", ")", "{", "var", "deferreds", "=", "{", "}", ";", "deferreds", ".", "params", "=", "paramsDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "deferreds", ".", "origImageUrl", "=", "origImageUrlDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "var", "normalizedData", "=", "{", "}", ",", "imageUrl", ",", "iExt", ";", "if", "(", "!", "data", "||", "data", ".", "error", ")", "{", "deferreds", ".", "params", ".", "reject", "(", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "return", ";", "}", "normalizedData", ".", "title", "=", "data", ".", "title", ";", "normalizedData", ".", "splashText", "=", "data", ".", "snippet", ";", "normalizedData", ".", "helpText", "=", "data", ".", "description", ";", "normalizedData", "=", "$", ".", "extend", "(", "normalizedData", ",", "parseConfigInfo", ".", "parseAccessConfig", "(", "data", ".", "licenseInfo", ")", ")", ";", "deferreds", ".", "params", ".", "resolve", "(", "normalizedData", ")", ";", "// See if we can get an original-size image", "imageUrl", "=", "data", ".", "thumbnail", ";", "if", "(", "imageUrl", ")", "{", "iExt", "=", "imageUrl", ".", "lastIndexOf", "(", "\".\"", ")", ";", "if", "(", "iExt", ">=", "0", ")", "{", "imageUrl", "=", "imageUrl", ".", "substring", "(", "0", ",", "iExt", ")", "+", "\"_orig\"", "+", "imageUrl", ".", "substr", "(", "iExt", ")", ";", "}", "else", "{", "imageUrl", "=", "imageUrl", "+", "\"_orig\"", ";", "}", "imageUrl", "=", "arcgisUrl", "+", "webmapId", "+", "\"/info/\"", "+", "imageUrl", ";", "// Test that this URL is valid", "fetchConfigInfo", ".", "testURL", "(", "imageUrl", ",", "function", "(", "isOK", ")", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", "isOK", "?", "imageUrl", ":", "null", ")", ";", "}", ")", ";", "}", "else", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferreds", ".", "params", ".", "resolve", "(", "{", "}", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "return", "deferreds", ";", "}"], "original_docstring": "\nExtracts parameters from webmap.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [paramsDeferred] Deferred to use for parameters fetch notification; if not supplied, function\ncreates one\n@param {object} [origImageUrlDeferred] Deferred to use for original-size version of the webmap's thumbnail fetch\nnotification; if not supplied, function creates one\n@return {object} Object with properties params and origImageUrl that contain the supplied (or created)\nparamsDeferred and origImageUrlDeferred Deferreds, respectively, for when the app's configuration parameters are\nready to use and when the original-size version of the webmap's thumbnail has been checked and is ready to use;\nsuccessful resolution of 'params' includes object with title, splashText, helpText, contribLevels,\nsurveyorNameField, bestPhotoField; successful resolution of 'origImageUrl' contains the URL of the original-size\nimage.\n", "docstring": {"block_comment": "Extracts parameters from webmap.", "line_comment": ["See if we can get an original size image", "Test that this URL is valid"]}, "docstring_tokens": ["Id", "of", "webmap"], "sample_id": 336, "prompt_tokens": ["<javascript>", "<param>", "webmapId"], "comment_type": "param", "sentence_id": 2}
{"id": "21004151", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, paramsDeferred, origImageUrlDeferred) {\n            var deferreds = {};\n            deferreds.params = paramsDeferred || $.Deferred();\n            deferreds.origImageUrl = origImageUrlDeferred || $.Deferred();\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"?f=json\", function (data) {\n                    var normalizedData = {}, imageUrl, iExt;\n                    if (!data || data.error) {\n                        deferreds.params.reject();\n                        deferreds.origImageUrl.resolve();\n                        return;\n                    }\n\n                    normalizedData.title = data.title;\n                    normalizedData.splashText = data.snippet;\n                    normalizedData.helpText = data.description;\n                    normalizedData = $.extend(normalizedData, parseConfigInfo.parseAccessConfig(data.licenseInfo));\n                    deferreds.params.resolve(normalizedData);\n\n                    // See if we can get an original-size image\n                    imageUrl = data.thumbnail;\n                    if (imageUrl) {\n                        iExt = imageUrl.lastIndexOf(\".\");\n                        if (iExt >= 0) {\n                            imageUrl = imageUrl.substring(0, iExt) + \"_orig\" + imageUrl.substr(iExt);\n                        } else {\n                            imageUrl = imageUrl + \"_orig\";\n                        }\n                        imageUrl = arcgisUrl + webmapId + \"/info/\" + imageUrl;\n\n                        // Test that this URL is valid\n                        fetchConfigInfo.testURL(imageUrl, function (isOK) {\n                            deferreds.origImageUrl.resolve(isOK\n                                ? imageUrl\n                                : null);\n                        });\n                    } else {\n                        deferreds.origImageUrl.resolve();\n                    }\n                });\n            } else {\n                deferreds.params.resolve({});\n                deferreds.origImageUrl.resolve();\n            }\n\n            return deferreds;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "paramsDeferred", ",", "origImageUrlDeferred", ")", "{", "var", "deferreds", "=", "{", "}", ";", "deferreds", ".", "params", "=", "paramsDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "deferreds", ".", "origImageUrl", "=", "origImageUrlDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "var", "normalizedData", "=", "{", "}", ",", "imageUrl", ",", "iExt", ";", "if", "(", "!", "data", "||", "data", ".", "error", ")", "{", "deferreds", ".", "params", ".", "reject", "(", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "return", ";", "}", "normalizedData", ".", "title", "=", "data", ".", "title", ";", "normalizedData", ".", "splashText", "=", "data", ".", "snippet", ";", "normalizedData", ".", "helpText", "=", "data", ".", "description", ";", "normalizedData", "=", "$", ".", "extend", "(", "normalizedData", ",", "parseConfigInfo", ".", "parseAccessConfig", "(", "data", ".", "licenseInfo", ")", ")", ";", "deferreds", ".", "params", ".", "resolve", "(", "normalizedData", ")", ";", "// See if we can get an original-size image", "imageUrl", "=", "data", ".", "thumbnail", ";", "if", "(", "imageUrl", ")", "{", "iExt", "=", "imageUrl", ".", "lastIndexOf", "(", "\".\"", ")", ";", "if", "(", "iExt", ">=", "0", ")", "{", "imageUrl", "=", "imageUrl", ".", "substring", "(", "0", ",", "iExt", ")", "+", "\"_orig\"", "+", "imageUrl", ".", "substr", "(", "iExt", ")", ";", "}", "else", "{", "imageUrl", "=", "imageUrl", "+", "\"_orig\"", ";", "}", "imageUrl", "=", "arcgisUrl", "+", "webmapId", "+", "\"/info/\"", "+", "imageUrl", ";", "// Test that this URL is valid", "fetchConfigInfo", ".", "testURL", "(", "imageUrl", ",", "function", "(", "isOK", ")", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", "isOK", "?", "imageUrl", ":", "null", ")", ";", "}", ")", ";", "}", "else", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferreds", ".", "params", ".", "resolve", "(", "{", "}", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "return", "deferreds", ";", "}"], "original_docstring": "\nExtracts parameters from webmap.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [paramsDeferred] Deferred to use for parameters fetch notification; if not supplied, function\ncreates one\n@param {object} [origImageUrlDeferred] Deferred to use for original-size version of the webmap's thumbnail fetch\nnotification; if not supplied, function creates one\n@return {object} Object with properties params and origImageUrl that contain the supplied (or created)\nparamsDeferred and origImageUrlDeferred Deferreds, respectively, for when the app's configuration parameters are\nready to use and when the original-size version of the webmap's thumbnail has been checked and is ready to use;\nsuccessful resolution of 'params' includes object with title, splashText, helpText, contribLevels,\nsurveyorNameField, bestPhotoField; successful resolution of 'origImageUrl' contains the URL of the original-size\nimage.\n", "docstring": {"block_comment": "Extracts parameters from webmap.", "line_comment": ["See if we can get an original size image", "Test that this URL is valid"]}, "docstring_tokens": ["Deferred", "to", "use", "for", "parameters", "fetch", "notification", ";", "if", "not", "supplied", "function"], "sample_id": 336, "prompt_tokens": ["<javascript>", "<param>", "paramsDeferred"], "comment_type": "param", "sentence_id": 3}
{"id": "21004151", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, paramsDeferred, origImageUrlDeferred) {\n            var deferreds = {};\n            deferreds.params = paramsDeferred || $.Deferred();\n            deferreds.origImageUrl = origImageUrlDeferred || $.Deferred();\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"?f=json\", function (data) {\n                    var normalizedData = {}, imageUrl, iExt;\n                    if (!data || data.error) {\n                        deferreds.params.reject();\n                        deferreds.origImageUrl.resolve();\n                        return;\n                    }\n\n                    normalizedData.title = data.title;\n                    normalizedData.splashText = data.snippet;\n                    normalizedData.helpText = data.description;\n                    normalizedData = $.extend(normalizedData, parseConfigInfo.parseAccessConfig(data.licenseInfo));\n                    deferreds.params.resolve(normalizedData);\n\n                    // See if we can get an original-size image\n                    imageUrl = data.thumbnail;\n                    if (imageUrl) {\n                        iExt = imageUrl.lastIndexOf(\".\");\n                        if (iExt >= 0) {\n                            imageUrl = imageUrl.substring(0, iExt) + \"_orig\" + imageUrl.substr(iExt);\n                        } else {\n                            imageUrl = imageUrl + \"_orig\";\n                        }\n                        imageUrl = arcgisUrl + webmapId + \"/info/\" + imageUrl;\n\n                        // Test that this URL is valid\n                        fetchConfigInfo.testURL(imageUrl, function (isOK) {\n                            deferreds.origImageUrl.resolve(isOK\n                                ? imageUrl\n                                : null);\n                        });\n                    } else {\n                        deferreds.origImageUrl.resolve();\n                    }\n                });\n            } else {\n                deferreds.params.resolve({});\n                deferreds.origImageUrl.resolve();\n            }\n\n            return deferreds;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "paramsDeferred", ",", "origImageUrlDeferred", ")", "{", "var", "deferreds", "=", "{", "}", ";", "deferreds", ".", "params", "=", "paramsDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "deferreds", ".", "origImageUrl", "=", "origImageUrlDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "var", "normalizedData", "=", "{", "}", ",", "imageUrl", ",", "iExt", ";", "if", "(", "!", "data", "||", "data", ".", "error", ")", "{", "deferreds", ".", "params", ".", "reject", "(", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "return", ";", "}", "normalizedData", ".", "title", "=", "data", ".", "title", ";", "normalizedData", ".", "splashText", "=", "data", ".", "snippet", ";", "normalizedData", ".", "helpText", "=", "data", ".", "description", ";", "normalizedData", "=", "$", ".", "extend", "(", "normalizedData", ",", "parseConfigInfo", ".", "parseAccessConfig", "(", "data", ".", "licenseInfo", ")", ")", ";", "deferreds", ".", "params", ".", "resolve", "(", "normalizedData", ")", ";", "// See if we can get an original-size image", "imageUrl", "=", "data", ".", "thumbnail", ";", "if", "(", "imageUrl", ")", "{", "iExt", "=", "imageUrl", ".", "lastIndexOf", "(", "\".\"", ")", ";", "if", "(", "iExt", ">=", "0", ")", "{", "imageUrl", "=", "imageUrl", ".", "substring", "(", "0", ",", "iExt", ")", "+", "\"_orig\"", "+", "imageUrl", ".", "substr", "(", "iExt", ")", ";", "}", "else", "{", "imageUrl", "=", "imageUrl", "+", "\"_orig\"", ";", "}", "imageUrl", "=", "arcgisUrl", "+", "webmapId", "+", "\"/info/\"", "+", "imageUrl", ";", "// Test that this URL is valid", "fetchConfigInfo", ".", "testURL", "(", "imageUrl", ",", "function", "(", "isOK", ")", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", "isOK", "?", "imageUrl", ":", "null", ")", ";", "}", ")", ";", "}", "else", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferreds", ".", "params", ".", "resolve", "(", "{", "}", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "return", "deferreds", ";", "}"], "original_docstring": "\nExtracts parameters from webmap.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [paramsDeferred] Deferred to use for parameters fetch notification; if not supplied, function\ncreates one\n@param {object} [origImageUrlDeferred] Deferred to use for original-size version of the webmap's thumbnail fetch\nnotification; if not supplied, function creates one\n@return {object} Object with properties params and origImageUrl that contain the supplied (or created)\nparamsDeferred and origImageUrlDeferred Deferreds, respectively, for when the app's configuration parameters are\nready to use and when the original-size version of the webmap's thumbnail has been checked and is ready to use;\nsuccessful resolution of 'params' includes object with title, splashText, helpText, contribLevels,\nsurveyorNameField, bestPhotoField; successful resolution of 'origImageUrl' contains the URL of the original-size\nimage.\n", "docstring": {"block_comment": "Extracts parameters from webmap.", "line_comment": ["See if we can get an original size image", "Test that this URL is valid"]}, "docstring_tokens": ["Deferred", "to", "use", "for", "original", "-", "size", "version", "of", "the", "webmap", "s", "thumbnail", "fetch"], "sample_id": 336, "prompt_tokens": ["<javascript>", "<param>", "origImageUrlDeferred"], "comment_type": "param", "sentence_id": 4}
{"id": "21004151", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, webmapId, paramsDeferred, origImageUrlDeferred) {\n            var deferreds = {};\n            deferreds.params = paramsDeferred || $.Deferred();\n            deferreds.origImageUrl = origImageUrlDeferred || $.Deferred();\n\n            if (parseConfigInfo.isUsableString(webmapId)) {\n                $.getJSON(arcgisUrl + webmapId + \"?f=json\", function (data) {\n                    var normalizedData = {}, imageUrl, iExt;\n                    if (!data || data.error) {\n                        deferreds.params.reject();\n                        deferreds.origImageUrl.resolve();\n                        return;\n                    }\n\n                    normalizedData.title = data.title;\n                    normalizedData.splashText = data.snippet;\n                    normalizedData.helpText = data.description;\n                    normalizedData = $.extend(normalizedData, parseConfigInfo.parseAccessConfig(data.licenseInfo));\n                    deferreds.params.resolve(normalizedData);\n\n                    // See if we can get an original-size image\n                    imageUrl = data.thumbnail;\n                    if (imageUrl) {\n                        iExt = imageUrl.lastIndexOf(\".\");\n                        if (iExt >= 0) {\n                            imageUrl = imageUrl.substring(0, iExt) + \"_orig\" + imageUrl.substr(iExt);\n                        } else {\n                            imageUrl = imageUrl + \"_orig\";\n                        }\n                        imageUrl = arcgisUrl + webmapId + \"/info/\" + imageUrl;\n\n                        // Test that this URL is valid\n                        fetchConfigInfo.testURL(imageUrl, function (isOK) {\n                            deferreds.origImageUrl.resolve(isOK\n                                ? imageUrl\n                                : null);\n                        });\n                    } else {\n                        deferreds.origImageUrl.resolve();\n                    }\n                });\n            } else {\n                deferreds.params.resolve({});\n                deferreds.origImageUrl.resolve();\n            }\n\n            return deferreds;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "webmapId", ",", "paramsDeferred", ",", "origImageUrlDeferred", ")", "{", "var", "deferreds", "=", "{", "}", ";", "deferreds", ".", "params", "=", "paramsDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "deferreds", ".", "origImageUrl", "=", "origImageUrlDeferred", "||", "$", ".", "Deferred", "(", ")", ";", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "webmapId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "webmapId", "+", "\"?f=json\"", ",", "function", "(", "data", ")", "{", "var", "normalizedData", "=", "{", "}", ",", "imageUrl", ",", "iExt", ";", "if", "(", "!", "data", "||", "data", ".", "error", ")", "{", "deferreds", ".", "params", ".", "reject", "(", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "return", ";", "}", "normalizedData", ".", "title", "=", "data", ".", "title", ";", "normalizedData", ".", "splashText", "=", "data", ".", "snippet", ";", "normalizedData", ".", "helpText", "=", "data", ".", "description", ";", "normalizedData", "=", "$", ".", "extend", "(", "normalizedData", ",", "parseConfigInfo", ".", "parseAccessConfig", "(", "data", ".", "licenseInfo", ")", ")", ";", "deferreds", ".", "params", ".", "resolve", "(", "normalizedData", ")", ";", "// See if we can get an original-size image", "imageUrl", "=", "data", ".", "thumbnail", ";", "if", "(", "imageUrl", ")", "{", "iExt", "=", "imageUrl", ".", "lastIndexOf", "(", "\".\"", ")", ";", "if", "(", "iExt", ">=", "0", ")", "{", "imageUrl", "=", "imageUrl", ".", "substring", "(", "0", ",", "iExt", ")", "+", "\"_orig\"", "+", "imageUrl", ".", "substr", "(", "iExt", ")", ";", "}", "else", "{", "imageUrl", "=", "imageUrl", "+", "\"_orig\"", ";", "}", "imageUrl", "=", "arcgisUrl", "+", "webmapId", "+", "\"/info/\"", "+", "imageUrl", ";", "// Test that this URL is valid", "fetchConfigInfo", ".", "testURL", "(", "imageUrl", ",", "function", "(", "isOK", ")", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", "isOK", "?", "imageUrl", ":", "null", ")", ";", "}", ")", ";", "}", "else", "{", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "}", ")", ";", "}", "else", "{", "deferreds", ".", "params", ".", "resolve", "(", "{", "}", ")", ";", "deferreds", ".", "origImageUrl", ".", "resolve", "(", ")", ";", "}", "return", "deferreds", ";", "}"], "original_docstring": "\nExtracts parameters from webmap.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} webmapId Id of webmap\n@param {object} [paramsDeferred] Deferred to use for parameters fetch notification; if not supplied, function\ncreates one\n@param {object} [origImageUrlDeferred] Deferred to use for original-size version of the webmap's thumbnail fetch\nnotification; if not supplied, function creates one\n@return {object} Object with properties params and origImageUrl that contain the supplied (or created)\nparamsDeferred and origImageUrlDeferred Deferreds, respectively, for when the app's configuration parameters are\nready to use and when the original-size version of the webmap's thumbnail has been checked and is ready to use;\nsuccessful resolution of 'params' includes object with title, splashText, helpText, contribLevels,\nsurveyorNameField, bestPhotoField; successful resolution of 'origImageUrl' contains the URL of the original-size\nimage.\n", "docstring": {"block_comment": "Extracts parameters from webmap.", "line_comment": ["See if we can get an original size image", "Test that this URL is valid"]}, "docstring_tokens": ["Object", "with", "properties", "params", "and", "origImageUrl", "that", "contain", "the", "supplied", "(", "or", "created", ")"], "sample_id": 336, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 5}
{"id": "21004152", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, appId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(appId)) {\n                $.getJSON(arcgisUrl + appId + \"/data?f=json\", function (data) {\n                    deferred.resolve((data && data.values) || {});\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "appId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "appId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "appId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app in the ArcGIS Online environment.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} appId AGOL id of application\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\napp's data section contents\n", "docstring": {"block_comment": "Extracts parameters from app in the ArcGIS Online environment.", "line_comment": null}, "docstring_tokens": ["Extracts", "parameters", "from", "app", "in", "the", "ArcGIS", "Online", "environment", "."], "sample_id": 337, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004152", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, appId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(appId)) {\n                $.getJSON(arcgisUrl + appId + \"/data?f=json\", function (data) {\n                    deferred.resolve((data && data.values) || {});\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "appId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "appId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "appId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app in the ArcGIS Online environment.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} appId AGOL id of application\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\napp's data section contents\n", "docstring": {"block_comment": "Extracts parameters from app in the ArcGIS Online environment.", "line_comment": null}, "docstring_tokens": ["URL", "to", "arcgis", "items", "e", ".", "g", ".", "http", ":", "//", "www", ".", "arcgis", ".", "com", "/", "sharing", "/", "content", "/", "items", "/"], "sample_id": 337, "prompt_tokens": ["<javascript>", "<param>", "arcgisUrl"], "comment_type": "param", "sentence_id": 1}
{"id": "21004152", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, appId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(appId)) {\n                $.getJSON(arcgisUrl + appId + \"/data?f=json\", function (data) {\n                    deferred.resolve((data && data.values) || {});\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "appId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "appId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "appId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app in the ArcGIS Online environment.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} appId AGOL id of application\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\napp's data section contents\n", "docstring": {"block_comment": "Extracts parameters from app in the ArcGIS Online environment.", "line_comment": null}, "docstring_tokens": ["AGOL", "id", "of", "application"], "sample_id": 337, "prompt_tokens": ["<javascript>", "<param>", "appId"], "comment_type": "param", "sentence_id": 2}
{"id": "21004152", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, appId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(appId)) {\n                $.getJSON(arcgisUrl + appId + \"/data?f=json\", function (data) {\n                    deferred.resolve((data && data.values) || {});\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "appId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "appId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "appId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app in the ArcGIS Online environment.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} appId AGOL id of application\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\napp's data section contents\n", "docstring": {"block_comment": "Extracts parameters from app in the ArcGIS Online environment.", "line_comment": null}, "docstring_tokens": ["Deferred", "to", "use", "for", "fetch", "notification", ";", "if", "not", "supplied", "function", "creates", "one"], "sample_id": 337, "prompt_tokens": ["<javascript>", "<param>", "deferred"], "comment_type": "param", "sentence_id": 3}
{"id": "21004152", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (arcgisUrl, appId, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            if (parseConfigInfo.isUsableString(appId)) {\n                $.getJSON(arcgisUrl + appId + \"/data?f=json\", function (data) {\n                    deferred.resolve((data && data.values) || {});\n                });\n            } else {\n                deferred.resolve({});\n            }\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "arcgisUrl", ",", "appId", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "if", "(", "parseConfigInfo", ".", "isUsableString", "(", "appId", ")", ")", "{", "$", ".", "getJSON", "(", "arcgisUrl", "+", "appId", "+", "\"/data?f=json\"", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "}", "else", "{", "deferred", ".", "resolve", "(", "{", "}", ")", ";", "}", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app in the ArcGIS Online environment.\n@param {string} arcgisUrl URL to arcgis items, e.g., \"http://www.arcgis.com/sharing/content/items/\"\n@param {string} appId AGOL id of application\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\napp's data section contents\n", "docstring": {"block_comment": "Extracts parameters from app in the ArcGIS Online environment.", "line_comment": null}, "docstring_tokens": ["Deferred", "indicating", "when", "parameters", "are", "ready", ";", "successful", "resolution", "includes", "object", "with"], "sample_id": 337, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 4}
{"id": "21004153", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (filename, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            $.getJSON(filename, function (data) {\n                deferred.resolve((data && data.values) || {});\n            });\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "filename", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "$", ".", "getJSON", "(", "filename", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app's configuration file \"js/configuration.json\".\n@param {string} filename Path to JSON configuration file\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\nfile's contents\n", "docstring": {"block_comment": "Extracts parameters from app s configuration file  js configuration.json .", "line_comment": null}, "docstring_tokens": ["Extracts", "parameters", "from", "app", "s", "configuration", "file", "js", "configuration", ".", "json", "."], "sample_id": 338, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004153", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (filename, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            $.getJSON(filename, function (data) {\n                deferred.resolve((data && data.values) || {});\n            });\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "filename", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "$", ".", "getJSON", "(", "filename", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app's configuration file \"js/configuration.json\".\n@param {string} filename Path to JSON configuration file\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\nfile's contents\n", "docstring": {"block_comment": "Extracts parameters from app s configuration file  js configuration.json .", "line_comment": null}, "docstring_tokens": ["Path", "to", "JSON", "configuration", "file"], "sample_id": 338, "prompt_tokens": ["<javascript>", "<param>", "filename"], "comment_type": "param", "sentence_id": 1}
{"id": "21004153", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (filename, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            $.getJSON(filename, function (data) {\n                deferred.resolve((data && data.values) || {});\n            });\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "filename", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "$", ".", "getJSON", "(", "filename", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app's configuration file \"js/configuration.json\".\n@param {string} filename Path to JSON configuration file\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\nfile's contents\n", "docstring": {"block_comment": "Extracts parameters from app s configuration file  js configuration.json .", "line_comment": null}, "docstring_tokens": ["Deferred", "to", "use", "for", "fetch", "notification", ";", "if", "not", "supplied", "function", "creates", "one"], "sample_id": 338, "prompt_tokens": ["<javascript>", "<param>", "deferred"], "comment_type": "param", "sentence_id": 2}
{"id": "21004153", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (filename, deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n\n            $.getJSON(filename, function (data) {\n                deferred.resolve((data && data.values) || {});\n            });\n\n            return deferred;\n        }", "code_tokens": ["function", "(", "filename", ",", "deferred", ")", "{", "if", "(", "!", "deferred", ")", "{", "deferred", "=", "$", ".", "Deferred", "(", ")", ";", "}", "$", ".", "getJSON", "(", "filename", ",", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "(", "data", "&&", "data", ".", "values", ")", "||", "{", "}", ")", ";", "}", ")", ";", "return", "deferred", ";", "}"], "original_docstring": "\nExtracts parameters from app's configuration file \"js/configuration.json\".\n@param {string} filename Path to JSON configuration file\n@param {object} [deferred] Deferred to use for fetch notification; if not supplied, function creates one\n@return {object} Deferred indicating when parameters are ready; successful resolution includes object with\nfile's contents\n", "docstring": {"block_comment": "Extracts parameters from app s configuration file  js configuration.json .", "line_comment": null}, "docstring_tokens": ["Deferred", "indicating", "when", "parameters", "are", "ready", ";", "successful", "resolution", "includes", "object", "with"], "sample_id": 338, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 3}
{"id": "21004154", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function () {\n            var params = {}, paramsString = window.location.search;\n            if (paramsString.length > 0 && paramsString[0] === \"?\") {\n                paramsString = paramsString.substring(1).split(\"&\");\n                $.map(paramsString, function (item) {\n                    var paramParts = item.split(\"=\");\n                    params[paramParts[0].toLowerCase()] = paramParts[1] || null;\n                });\n            }\n            return params;\n        }", "code_tokens": ["function", "(", ")", "{", "var", "params", "=", "{", "}", ",", "paramsString", "=", "window", ".", "location", ".", "search", ";", "if", "(", "paramsString", ".", "length", ">", "0", "&&", "paramsString", "[", "0", "]", "===", "\"?\"", ")", "{", "paramsString", "=", "paramsString", ".", "substring", "(", "1", ")", ".", "split", "(", "\"&\"", ")", ";", "$", ".", "map", "(", "paramsString", ",", "function", "(", "item", ")", "{", "var", "paramParts", "=", "item", ".", "split", "(", "\"=\"", ")", ";", "params", "[", "paramParts", "[", "0", "]", ".", "toLowerCase", "(", ")", "]", "=", "paramParts", "[", "1", "]", "||", "null", ";", "}", ")", ";", "}", "return", "params", ";", "}"], "original_docstring": "--------------------------------------------------------------------------------------------------------------------// \nExtracts parameters from app's location URL.\n@return {object} Parameters and values; a value is null if the parameter does not have a value assignment in the URL\n", "docstring": {"block_comment": "Extracts parameters from app s location URL.", "line_comment": null}, "docstring_tokens": ["Extracts", "parameters", "from", "app", "s", "location", "URL", "."], "sample_id": 339, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004154", "repo": "Esri/photo-survey", "path": "js/app/fetchConfigInfo.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function () {\n            var params = {}, paramsString = window.location.search;\n            if (paramsString.length > 0 && paramsString[0] === \"?\") {\n                paramsString = paramsString.substring(1).split(\"&\");\n                $.map(paramsString, function (item) {\n                    var paramParts = item.split(\"=\");\n                    params[paramParts[0].toLowerCase()] = paramParts[1] || null;\n                });\n            }\n            return params;\n        }", "code_tokens": ["function", "(", ")", "{", "var", "params", "=", "{", "}", ",", "paramsString", "=", "window", ".", "location", ".", "search", ";", "if", "(", "paramsString", ".", "length", ">", "0", "&&", "paramsString", "[", "0", "]", "===", "\"?\"", ")", "{", "paramsString", "=", "paramsString", ".", "substring", "(", "1", ")", ".", "split", "(", "\"&\"", ")", ";", "$", ".", "map", "(", "paramsString", ",", "function", "(", "item", ")", "{", "var", "paramParts", "=", "item", ".", "split", "(", "\"=\"", ")", ";", "params", "[", "paramParts", "[", "0", "]", ".", "toLowerCase", "(", ")", "]", "=", "paramParts", "[", "1", "]", "||", "null", ";", "}", ")", ";", "}", "return", "params", ";", "}"], "original_docstring": "--------------------------------------------------------------------------------------------------------------------// \nExtracts parameters from app's location URL.\n@return {object} Parameters and values; a value is null if the parameter does not have a value assignment in the URL\n", "docstring": {"block_comment": "Extracts parameters from app s location URL.", "line_comment": null}, "docstring_tokens": ["Parameters", "and", "values", ";", "a", "value", "is", "null", "if", "the", "parameter", "does", "not", "have", "a", "value", "assignment", "in", "the", "URL"], "sample_id": 339, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004160", "repo": "sdnwiselab/onos", "path": "web/gui/src/main/webapp/app/view/topo/topoProtectedIntentOverlay.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function () {\n                // Must return true to consume ESC, false otherwise.\n                return tpis.cancelHighlights();\n            }", "code_tokens": ["function", "(", ")", "{", "// Must return true to consume ESC, false otherwise.", "return", "tpis", ".", "cancelHighlights", "(", ")", ";", "}"], "original_docstring": "hook for handling escape key", "docstring": {"block_comment": "hook for handling escape key", "line_comment": ["Must return true to consume ESC, false otherwise."]}, "docstring_tokens": ["hook", "for", "handling", "escape", "key"], "sample_id": 340, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004161", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, config) {\n    \n    if(!definition.init) {\n      throw(\"Plugin definition for jQuery.\"+name+\" missing init method\");\n    }\n\n    jQuery.fn[name] = function(arg) {\n      \n      if(definition[arg]) {\n        return definition[arg].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else if(typeof arg === \"object\" || !arg) {\n        var opt = jQuery.extend(config || {}, arg);\n        return definition.init.call(this, opt);\n      } else {\n        throw(\"Method \"+arg+\" does not exist on jQuery.\"+name);\n      }\n\n    }\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "config", ")", "{", "if", "(", "!", "definition", ".", "init", ")", "{", "throw", "(", "\"Plugin definition for jQuery.\"", "+", "name", "+", "\" missing init method\"", ")", ";", "}", "jQuery", ".", "fn", "[", "name", "]", "=", "function", "(", "arg", ")", "{", "if", "(", "definition", "[", "arg", "]", ")", "{", "return", "definition", "[", "arg", "]", ".", "apply", "(", "this", ",", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "arguments", ",", "1", ")", ")", ";", "}", "else", "if", "(", "typeof", "arg", "===", "\"object\"", "||", "!", "arg", ")", "{", "var", "opt", "=", "jQuery", ".", "extend", "(", "config", "||", "{", "}", ",", "arg", ")", ";", "return", "definition", ".", "init", ".", "call", "(", "this", ",", "opt", ")", ";", "}", "else", "{", "throw", "(", "\"Method \"", "+", "arg", "+", "\" does not exist on jQuery.\"", "+", "name", ")", ";", "}", "}", "}"], "original_docstring": "\ndefine a jquery plugin\n\n@method plugin\n@param {String} name plugin name as it will be used to access the plugin\non the jquery resultset\n@param {Object} definition object literal defining methods of the plugin\n@param {Object} config object literal with default plugin config\n", "docstring": {"block_comment": "define a jquery plugin", "line_comment": null}, "docstring_tokens": ["define", "a", "jquery", "plugin"], "sample_id": 341, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004161", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, config) {\n    \n    if(!definition.init) {\n      throw(\"Plugin definition for jQuery.\"+name+\" missing init method\");\n    }\n\n    jQuery.fn[name] = function(arg) {\n      \n      if(definition[arg]) {\n        return definition[arg].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else if(typeof arg === \"object\" || !arg) {\n        var opt = jQuery.extend(config || {}, arg);\n        return definition.init.call(this, opt);\n      } else {\n        throw(\"Method \"+arg+\" does not exist on jQuery.\"+name);\n      }\n\n    }\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "config", ")", "{", "if", "(", "!", "definition", ".", "init", ")", "{", "throw", "(", "\"Plugin definition for jQuery.\"", "+", "name", "+", "\" missing init method\"", ")", ";", "}", "jQuery", ".", "fn", "[", "name", "]", "=", "function", "(", "arg", ")", "{", "if", "(", "definition", "[", "arg", "]", ")", "{", "return", "definition", "[", "arg", "]", ".", "apply", "(", "this", ",", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "arguments", ",", "1", ")", ")", ";", "}", "else", "if", "(", "typeof", "arg", "===", "\"object\"", "||", "!", "arg", ")", "{", "var", "opt", "=", "jQuery", ".", "extend", "(", "config", "||", "{", "}", ",", "arg", ")", ";", "return", "definition", ".", "init", ".", "call", "(", "this", ",", "opt", ")", ";", "}", "else", "{", "throw", "(", "\"Method \"", "+", "arg", "+", "\" does not exist on jQuery.\"", "+", "name", ")", ";", "}", "}", "}"], "original_docstring": "\ndefine a jquery plugin\n\n@method plugin\n@param {String} name plugin name as it will be used to access the plugin\non the jquery resultset\n@param {Object} definition object literal defining methods of the plugin\n@param {Object} config object literal with default plugin config\n", "docstring": {"block_comment": "define a jquery plugin", "line_comment": null}, "docstring_tokens": ["plugin", "name", "as", "it", "will", "be", "used", "to", "access", "the", "plugin"], "sample_id": 341, "prompt_tokens": ["<javascript>", "<param>", "name"], "comment_type": "param", "sentence_id": 1}
{"id": "21004161", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, config) {\n    \n    if(!definition.init) {\n      throw(\"Plugin definition for jQuery.\"+name+\" missing init method\");\n    }\n\n    jQuery.fn[name] = function(arg) {\n      \n      if(definition[arg]) {\n        return definition[arg].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else if(typeof arg === \"object\" || !arg) {\n        var opt = jQuery.extend(config || {}, arg);\n        return definition.init.call(this, opt);\n      } else {\n        throw(\"Method \"+arg+\" does not exist on jQuery.\"+name);\n      }\n\n    }\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "config", ")", "{", "if", "(", "!", "definition", ".", "init", ")", "{", "throw", "(", "\"Plugin definition for jQuery.\"", "+", "name", "+", "\" missing init method\"", ")", ";", "}", "jQuery", ".", "fn", "[", "name", "]", "=", "function", "(", "arg", ")", "{", "if", "(", "definition", "[", "arg", "]", ")", "{", "return", "definition", "[", "arg", "]", ".", "apply", "(", "this", ",", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "arguments", ",", "1", ")", ")", ";", "}", "else", "if", "(", "typeof", "arg", "===", "\"object\"", "||", "!", "arg", ")", "{", "var", "opt", "=", "jQuery", ".", "extend", "(", "config", "||", "{", "}", ",", "arg", ")", ";", "return", "definition", ".", "init", ".", "call", "(", "this", ",", "opt", ")", ";", "}", "else", "{", "throw", "(", "\"Method \"", "+", "arg", "+", "\" does not exist on jQuery.\"", "+", "name", ")", ";", "}", "}", "}"], "original_docstring": "\ndefine a jquery plugin\n\n@method plugin\n@param {String} name plugin name as it will be used to access the plugin\non the jquery resultset\n@param {Object} definition object literal defining methods of the plugin\n@param {Object} config object literal with default plugin config\n", "docstring": {"block_comment": "define a jquery plugin", "line_comment": null}, "docstring_tokens": ["object", "literal", "defining", "methods", "of", "the", "plugin"], "sample_id": 341, "prompt_tokens": ["<javascript>", "<param>", "definition"], "comment_type": "param", "sentence_id": 2}
{"id": "21004161", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, config) {\n    \n    if(!definition.init) {\n      throw(\"Plugin definition for jQuery.\"+name+\" missing init method\");\n    }\n\n    jQuery.fn[name] = function(arg) {\n      \n      if(definition[arg]) {\n        return definition[arg].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else if(typeof arg === \"object\" || !arg) {\n        var opt = jQuery.extend(config || {}, arg);\n        return definition.init.call(this, opt);\n      } else {\n        throw(\"Method \"+arg+\" does not exist on jQuery.\"+name);\n      }\n\n    }\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "config", ")", "{", "if", "(", "!", "definition", ".", "init", ")", "{", "throw", "(", "\"Plugin definition for jQuery.\"", "+", "name", "+", "\" missing init method\"", ")", ";", "}", "jQuery", ".", "fn", "[", "name", "]", "=", "function", "(", "arg", ")", "{", "if", "(", "definition", "[", "arg", "]", ")", "{", "return", "definition", "[", "arg", "]", ".", "apply", "(", "this", ",", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "arguments", ",", "1", ")", ")", ";", "}", "else", "if", "(", "typeof", "arg", "===", "\"object\"", "||", "!", "arg", ")", "{", "var", "opt", "=", "jQuery", ".", "extend", "(", "config", "||", "{", "}", ",", "arg", ")", ";", "return", "definition", ".", "init", ".", "call", "(", "this", ",", "opt", ")", ";", "}", "else", "{", "throw", "(", "\"Method \"", "+", "arg", "+", "\" does not exist on jQuery.\"", "+", "name", ")", ";", "}", "}", "}"], "original_docstring": "\ndefine a jquery plugin\n\n@method plugin\n@param {String} name plugin name as it will be used to access the plugin\non the jquery resultset\n@param {Object} definition object literal defining methods of the plugin\n@param {Object} config object literal with default plugin config\n", "docstring": {"block_comment": "define a jquery plugin", "line_comment": null}, "docstring_tokens": ["object", "literal", "with", "default", "plugin", "config"], "sample_id": 341, "prompt_tokens": ["<javascript>", "<param>", "config"], "comment_type": "param", "sentence_id": 3}
{"id": "21004162", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(callback, interval) {\n      this.cancel();\n      this._timeout = setTimeout(callback, interval);\n    }", "code_tokens": ["function", "(", "callback", ",", "interval", ")", "{", "this", ".", "cancel", "(", ")", ";", "this", ".", "_timeout", "=", "setTimeout", "(", "callback", ",", "interval", ")", ";", "}"], "original_docstring": "\nReset / start the timeout\n@method set\n@param {Function} callback\n@param {Number} interval trigger in N ms\n", "docstring": {"block_comment": "Reset   start the timeout", "line_comment": null}, "docstring_tokens": ["Reset", "start", "the", "timeout"], "sample_id": 342, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004162", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(callback, interval) {\n      this.cancel();\n      this._timeout = setTimeout(callback, interval);\n    }", "code_tokens": ["function", "(", "callback", ",", "interval", ")", "{", "this", ".", "cancel", "(", ")", ";", "this", ".", "_timeout", "=", "setTimeout", "(", "callback", ",", "interval", ")", ";", "}"], "original_docstring": "\nReset / start the timeout\n@method set\n@param {Function} callback\n@param {Number} interval trigger in N ms\n", "docstring": {"block_comment": "Reset   start the timeout", "line_comment": null}, "docstring_tokens": ["trigger", "in", "N", "ms"], "sample_id": 342, "prompt_tokens": ["<javascript>", "<param>", "interval"], "comment_type": "param", "sentence_id": 1}
{"id": "21004163", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, config) {\n      if(!this._loaders[id])\n        throw(\"Could not find suitable loader for data id \"+id+\", are you certain it's assigned?\");\n\n      var loader = this.get(this._loaders[id]);\n      return new loader(id, config || {});\n    }", "code_tokens": ["function", "(", "id", ",", "config", ")", "{", "if", "(", "!", "this", ".", "_loaders", "[", "id", "]", ")", "throw", "(", "\"Could not find suitable loader for data id \"", "+", "id", "+", "\", are you certain it's assigned?\"", ")", ";", "var", "loader", "=", "this", ".", "get", "(", "this", ".", "_loaders", "[", "id", "]", ")", ";", "return", "new", "loader", "(", "id", ",", "config", "||", "{", "}", ")", ";", "}"], "original_docstring": "\nget loader linked to data id via __link__\n@method loader\n@param {String} id data_id\n@returns {Object} loader instance of loader\n", "docstring": {"block_comment": "get loader linked to data id via __link__", "line_comment": null}, "docstring_tokens": ["get", "loader", "linked", "to", "data", "id", "via", "__link__"], "sample_id": 343, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004163", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, config) {\n      if(!this._loaders[id])\n        throw(\"Could not find suitable loader for data id \"+id+\", are you certain it's assigned?\");\n\n      var loader = this.get(this._loaders[id]);\n      return new loader(id, config || {});\n    }", "code_tokens": ["function", "(", "id", ",", "config", ")", "{", "if", "(", "!", "this", ".", "_loaders", "[", "id", "]", ")", "throw", "(", "\"Could not find suitable loader for data id \"", "+", "id", "+", "\", are you certain it's assigned?\"", ")", ";", "var", "loader", "=", "this", ".", "get", "(", "this", ".", "_loaders", "[", "id", "]", ")", ";", "return", "new", "loader", "(", "id", ",", "config", "||", "{", "}", ")", ";", "}"], "original_docstring": "\nget loader linked to data id via __link__\n@method loader\n@param {String} id data_id\n@returns {Object} loader instance of loader\n", "docstring": {"block_comment": "get loader linked to data id via __link__", "line_comment": null}, "docstring_tokens": ["{", "Object", "}", "loader", "instance", "of", "loader"], "sample_id": 343, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004164", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, loaderName) {\n      \n      // this will error if loaderName is not registered\n      var loader = this.get(loaderName);\n      \n      // link loader\n      this._loaders[id] = loaderName;\n\n    }", "code_tokens": ["function", "(", "id", ",", "loaderName", ")", "{", "// this will error if loaderName is not registered", "var", "loader", "=", "this", ".", "get", "(", "loaderName", ")", ";", "// link loader", "this", ".", "_loaders", "[", "id", "]", "=", "loaderName", ";", "}"], "original_docstring": "\nassign loader to data id\n@method assign\n@param {String} id data id\n@param {String} loaderName name that you registered the loader under\n", "docstring": {"block_comment": "assign loader to data id", "line_comment": ["this will error if loaderName is not registered", "link loader"]}, "docstring_tokens": ["assign", "loader", "to", "data", "id"], "sample_id": 344, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004164", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, loaderName) {\n      \n      // this will error if loaderName is not registered\n      var loader = this.get(loaderName);\n      \n      // link loader\n      this._loaders[id] = loaderName;\n\n    }", "code_tokens": ["function", "(", "id", ",", "loaderName", ")", "{", "// this will error if loaderName is not registered", "var", "loader", "=", "this", ".", "get", "(", "loaderName", ")", ";", "// link loader", "this", ".", "_loaders", "[", "id", "]", "=", "loaderName", ";", "}"], "original_docstring": "\nassign loader to data id\n@method assign\n@param {String} id data id\n@param {String} loaderName name that you registered the loader under\n", "docstring": {"block_comment": "assign loader to data id", "line_comment": ["this will error if loaderName is not registered", "link loader"]}, "docstring_tokens": ["name", "that", "you", "registered", "the", "loader", "under"], "sample_id": 344, "prompt_tokens": ["<javascript>", "<param>", "loaderName"], "comment_type": "param", "sentence_id": 1}
{"id": "21004165", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id) {\n      return (typeof this._loaders[id] != \"undefined\")\n    }", "code_tokens": ["function", "(", "id", ")", "{", "return", "(", "typeof", "this", ".", "_loaders", "[", "id", "]", "!=", "\"undefined\"", ")", "}"], "original_docstring": "\ncheck if data id has been assigned loader\n@method assigned\n@param {String} id data id\n@returns {Boolean} assigned true if data id has been assigned loader, false if not\n", "docstring": {"block_comment": "check if data id has been assigned loader", "line_comment": null}, "docstring_tokens": ["check", "if", "data", "id", "has", "been", "assigned", "loader"], "sample_id": 345, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004165", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id) {\n      return (typeof this._loaders[id] != \"undefined\")\n    }", "code_tokens": ["function", "(", "id", ")", "{", "return", "(", "typeof", "this", ".", "_loaders", "[", "id", "]", "!=", "\"undefined\"", ")", "}"], "original_docstring": "\ncheck if data id has been assigned loader\n@method assigned\n@param {String} id data id\n@returns {Boolean} assigned true if data id has been assigned loader, false if not\n", "docstring": {"block_comment": "check if data id has been assigned loader", "line_comment": null}, "docstring_tokens": ["{", "Boolean", "}", "assigned", "true", "if", "data", "id", "has", "been", "assigned", "loader", "false", "if", "not"], "sample_id": 345, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004166", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, config) {\n    \n    var callback = tc.u.get(config, \"callback\");\n\n    // check if data is already loaded\n    if(this._data[id] && !tc.u.get(config, \"reload\")) {\n      var payload = {id:id, data:this._data[id]}\n      $(this).trigger(\"load-\"+id, payload);\n      if(callback)\n        callback(payload)\n      return;\n    }\n\n    // attach callback to load event\n    if(callback) {\n      $(this).on(\"load-\"+id, function(ev, payload) { callback(payload) }); \n    }\n\n    // check if data is currently being loaded\n    if(this._loading[id]) {\n      return;\n    }\n\n    // data is not loaded AND not currently loading, attempt to load data\n\n    // in order to load data we need to find a suitable loader for it\n\n    var loader = this.loaders.loader(id, config);\n    this._loading[id] = new Date().getTime()\n    loader.load(\n      {\n        success : function(data) {\n          twentyc.data.set(id, data);\n          twentyc.data._loading[id] = false;\n          $(twentyc.data).trigger(\"load\", { id:id, data:data} );\n          $(twentyc.data).trigger(\"load-\"+id, { id:id, data:data }); \n          $(twentyc.data).off(\"load-\"+id);\n        }\n      }\n    );\n  }", "code_tokens": ["function", "(", "id", ",", "config", ")", "{", "var", "callback", "=", "tc", ".", "u", ".", "get", "(", "config", ",", "\"callback\"", ")", ";", "// check if data is already loaded", "if", "(", "this", ".", "_data", "[", "id", "]", "&&", "!", "tc", ".", "u", ".", "get", "(", "config", ",", "\"reload\"", ")", ")", "{", "var", "payload", "=", "{", "id", ":", "id", ",", "data", ":", "this", ".", "_data", "[", "id", "]", "}", "$", "(", "this", ")", ".", "trigger", "(", "\"load-\"", "+", "id", ",", "payload", ")", ";", "if", "(", "callback", ")", "callback", "(", "payload", ")", "return", ";", "}", "// attach callback to load event", "if", "(", "callback", ")", "{", "$", "(", "this", ")", ".", "on", "(", "\"load-\"", "+", "id", ",", "function", "(", "ev", ",", "payload", ")", "{", "callback", "(", "payload", ")", "}", ")", ";", "}", "// check if data is currently being loaded", "if", "(", "this", ".", "_loading", "[", "id", "]", ")", "{", "return", ";", "}", "// data is not loaded AND not currently loading, attempt to load data", "// in order to load data we need to find a suitable loader for it", "var", "loader", "=", "this", ".", "loaders", ".", "loader", "(", "id", ",", "config", ")", ";", "this", ".", "_loading", "[", "id", "]", "=", "new", "Date", "(", ")", ".", "getTime", "(", ")", "loader", ".", "load", "(", "{", "success", ":", "function", "(", "data", ")", "{", "twentyc", ".", "data", ".", "set", "(", "id", ",", "data", ")", ";", "twentyc", ".", "data", ".", "_loading", "[", "id", "]", "=", "false", ";", "$", "(", "twentyc", ".", "data", ")", ".", "trigger", "(", "\"load\"", ",", "{", "id", ":", "id", ",", "data", ":", "data", "}", ")", ";", "$", "(", "twentyc", ".", "data", ")", ".", "trigger", "(", "\"load-\"", "+", "id", ",", "{", "id", ":", "id", ",", "data", ":", "data", "}", ")", ";", "$", "(", "twentyc", ".", "data", ")", ".", "off", "(", "\"load-\"", "+", "id", ")", ";", "}", "}", ")", ";", "}"], "original_docstring": "\nretrieve data from server. at this point this expects a json\nstring response, with the actual data keyed at the id you provided\n\n##example(s)\n\nexamples/data.load.js\n\n@method load\n@param {String} id data identification key\n@param {Object} [config] object literal holding options\n@param {Function} [config.callback] called when data is available\n@param {Boolean} [config.reload] if true data will be re-fetched even if already loaded\n", "docstring": {"block_comment": "retrieve data from server. at this point this expects a json \nstring response, with the actual data keyed at the id you provided \n  example s  \nexamples data.load.js", "line_comment": ["check if data is already loaded", "attach callback to load event", "check if data is currently being loaded", "data is not loaded AND not currently loading, attempt to load data", "in order to load data we need to find a suitable loader for it"]}, "docstring_tokens": ["retrieve", "data", "from", "server", ".", "at", "this", "point", "this", "expects", "a", "json", "string", "response", "with", "the", "actual", "data", "keyed", "at", "the", "id", "you", "provided", "example", "s", "examples", "data", ".", "load", ".", "js"], "sample_id": 346, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004166", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, config) {\n    \n    var callback = tc.u.get(config, \"callback\");\n\n    // check if data is already loaded\n    if(this._data[id] && !tc.u.get(config, \"reload\")) {\n      var payload = {id:id, data:this._data[id]}\n      $(this).trigger(\"load-\"+id, payload);\n      if(callback)\n        callback(payload)\n      return;\n    }\n\n    // attach callback to load event\n    if(callback) {\n      $(this).on(\"load-\"+id, function(ev, payload) { callback(payload) }); \n    }\n\n    // check if data is currently being loaded\n    if(this._loading[id]) {\n      return;\n    }\n\n    // data is not loaded AND not currently loading, attempt to load data\n\n    // in order to load data we need to find a suitable loader for it\n\n    var loader = this.loaders.loader(id, config);\n    this._loading[id] = new Date().getTime()\n    loader.load(\n      {\n        success : function(data) {\n          twentyc.data.set(id, data);\n          twentyc.data._loading[id] = false;\n          $(twentyc.data).trigger(\"load\", { id:id, data:data} );\n          $(twentyc.data).trigger(\"load-\"+id, { id:id, data:data }); \n          $(twentyc.data).off(\"load-\"+id);\n        }\n      }\n    );\n  }", "code_tokens": ["function", "(", "id", ",", "config", ")", "{", "var", "callback", "=", "tc", ".", "u", ".", "get", "(", "config", ",", "\"callback\"", ")", ";", "// check if data is already loaded", "if", "(", "this", ".", "_data", "[", "id", "]", "&&", "!", "tc", ".", "u", ".", "get", "(", "config", ",", "\"reload\"", ")", ")", "{", "var", "payload", "=", "{", "id", ":", "id", ",", "data", ":", "this", ".", "_data", "[", "id", "]", "}", "$", "(", "this", ")", ".", "trigger", "(", "\"load-\"", "+", "id", ",", "payload", ")", ";", "if", "(", "callback", ")", "callback", "(", "payload", ")", "return", ";", "}", "// attach callback to load event", "if", "(", "callback", ")", "{", "$", "(", "this", ")", ".", "on", "(", "\"load-\"", "+", "id", ",", "function", "(", "ev", ",", "payload", ")", "{", "callback", "(", "payload", ")", "}", ")", ";", "}", "// check if data is currently being loaded", "if", "(", "this", ".", "_loading", "[", "id", "]", ")", "{", "return", ";", "}", "// data is not loaded AND not currently loading, attempt to load data", "// in order to load data we need to find a suitable loader for it", "var", "loader", "=", "this", ".", "loaders", ".", "loader", "(", "id", ",", "config", ")", ";", "this", ".", "_loading", "[", "id", "]", "=", "new", "Date", "(", ")", ".", "getTime", "(", ")", "loader", ".", "load", "(", "{", "success", ":", "function", "(", "data", ")", "{", "twentyc", ".", "data", ".", "set", "(", "id", ",", "data", ")", ";", "twentyc", ".", "data", ".", "_loading", "[", "id", "]", "=", "false", ";", "$", "(", "twentyc", ".", "data", ")", ".", "trigger", "(", "\"load\"", ",", "{", "id", ":", "id", ",", "data", ":", "data", "}", ")", ";", "$", "(", "twentyc", ".", "data", ")", ".", "trigger", "(", "\"load-\"", "+", "id", ",", "{", "id", ":", "id", ",", "data", ":", "data", "}", ")", ";", "$", "(", "twentyc", ".", "data", ")", ".", "off", "(", "\"load-\"", "+", "id", ")", ";", "}", "}", ")", ";", "}"], "original_docstring": "\nretrieve data from server. at this point this expects a json\nstring response, with the actual data keyed at the id you provided\n\n##example(s)\n\nexamples/data.load.js\n\n@method load\n@param {String} id data identification key\n@param {Object} [config] object literal holding options\n@param {Function} [config.callback] called when data is available\n@param {Boolean} [config.reload] if true data will be re-fetched even if already loaded\n", "docstring": {"block_comment": "retrieve data from server. at this point this expects a json \nstring response, with the actual data keyed at the id you provided \n  example s  \nexamples data.load.js", "line_comment": ["check if data is already loaded", "attach callback to load event", "check if data is currently being loaded", "data is not loaded AND not currently loading, attempt to load data", "in order to load data we need to find a suitable loader for it"]}, "docstring_tokens": ["data", "identification", "key"], "sample_id": 346, "prompt_tokens": ["<javascript>", "<param>", "id"], "comment_type": "param", "sentence_id": 1}
{"id": "21004166", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, config) {\n    \n    var callback = tc.u.get(config, \"callback\");\n\n    // check if data is already loaded\n    if(this._data[id] && !tc.u.get(config, \"reload\")) {\n      var payload = {id:id, data:this._data[id]}\n      $(this).trigger(\"load-\"+id, payload);\n      if(callback)\n        callback(payload)\n      return;\n    }\n\n    // attach callback to load event\n    if(callback) {\n      $(this).on(\"load-\"+id, function(ev, payload) { callback(payload) }); \n    }\n\n    // check if data is currently being loaded\n    if(this._loading[id]) {\n      return;\n    }\n\n    // data is not loaded AND not currently loading, attempt to load data\n\n    // in order to load data we need to find a suitable loader for it\n\n    var loader = this.loaders.loader(id, config);\n    this._loading[id] = new Date().getTime()\n    loader.load(\n      {\n        success : function(data) {\n          twentyc.data.set(id, data);\n          twentyc.data._loading[id] = false;\n          $(twentyc.data).trigger(\"load\", { id:id, data:data} );\n          $(twentyc.data).trigger(\"load-\"+id, { id:id, data:data }); \n          $(twentyc.data).off(\"load-\"+id);\n        }\n      }\n    );\n  }", "code_tokens": ["function", "(", "id", ",", "config", ")", "{", "var", "callback", "=", "tc", ".", "u", ".", "get", "(", "config", ",", "\"callback\"", ")", ";", "// check if data is already loaded", "if", "(", "this", ".", "_data", "[", "id", "]", "&&", "!", "tc", ".", "u", ".", "get", "(", "config", ",", "\"reload\"", ")", ")", "{", "var", "payload", "=", "{", "id", ":", "id", ",", "data", ":", "this", ".", "_data", "[", "id", "]", "}", "$", "(", "this", ")", ".", "trigger", "(", "\"load-\"", "+", "id", ",", "payload", ")", ";", "if", "(", "callback", ")", "callback", "(", "payload", ")", "return", ";", "}", "// attach callback to load event", "if", "(", "callback", ")", "{", "$", "(", "this", ")", ".", "on", "(", "\"load-\"", "+", "id", ",", "function", "(", "ev", ",", "payload", ")", "{", "callback", "(", "payload", ")", "}", ")", ";", "}", "// check if data is currently being loaded", "if", "(", "this", ".", "_loading", "[", "id", "]", ")", "{", "return", ";", "}", "// data is not loaded AND not currently loading, attempt to load data", "// in order to load data we need to find a suitable loader for it", "var", "loader", "=", "this", ".", "loaders", ".", "loader", "(", "id", ",", "config", ")", ";", "this", ".", "_loading", "[", "id", "]", "=", "new", "Date", "(", ")", ".", "getTime", "(", ")", "loader", ".", "load", "(", "{", "success", ":", "function", "(", "data", ")", "{", "twentyc", ".", "data", ".", "set", "(", "id", ",", "data", ")", ";", "twentyc", ".", "data", ".", "_loading", "[", "id", "]", "=", "false", ";", "$", "(", "twentyc", ".", "data", ")", ".", "trigger", "(", "\"load\"", ",", "{", "id", ":", "id", ",", "data", ":", "data", "}", ")", ";", "$", "(", "twentyc", ".", "data", ")", ".", "trigger", "(", "\"load-\"", "+", "id", ",", "{", "id", ":", "id", ",", "data", ":", "data", "}", ")", ";", "$", "(", "twentyc", ".", "data", ")", ".", "off", "(", "\"load-\"", "+", "id", ")", ";", "}", "}", ")", ";", "}"], "original_docstring": "\nretrieve data from server. at this point this expects a json\nstring response, with the actual data keyed at the id you provided\n\n##example(s)\n\nexamples/data.load.js\n\n@method load\n@param {String} id data identification key\n@param {Object} [config] object literal holding options\n@param {Function} [config.callback] called when data is available\n@param {Boolean} [config.reload] if true data will be re-fetched even if already loaded\n", "docstring": {"block_comment": "retrieve data from server. at this point this expects a json \nstring response, with the actual data keyed at the id you provided \n  example s  \nexamples data.load.js", "line_comment": ["check if data is already loaded", "attach callback to load event", "check if data is currently being loaded", "data is not loaded AND not currently loading, attempt to load data", "in order to load data we need to find a suitable loader for it"]}, "docstring_tokens": ["object", "literal", "holding", "options"], "sample_id": 346, "prompt_tokens": ["<javascript>", "<param>", "config"], "comment_type": "param", "sentence_id": 2}
{"id": "21004167", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, data) {\n    var existing = this.get(id);\n    $.extend(existing, data);\n    this.set(id, existing);\n  }", "code_tokens": ["function", "(", "id", ",", "data", ")", "{", "var", "existing", "=", "this", ".", "get", "(", "id", ")", ";", "$", ".", "extend", "(", "existing", ",", "data", ")", ";", "this", ".", "set", "(", "id", ",", "existing", ")", ";", "}"], "original_docstring": "\nupdate existing dataset with additional data\n\n@method update\n@param {String} id data id\n@param {Object} data data to update\n", "docstring": {"block_comment": "update existing dataset with additional data", "line_comment": null}, "docstring_tokens": ["update", "existing", "dataset", "with", "additional", "data"], "sample_id": 347, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004167", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id, data) {\n    var existing = this.get(id);\n    $.extend(existing, data);\n    this.set(id, existing);\n  }", "code_tokens": ["function", "(", "id", ",", "data", ")", "{", "var", "existing", "=", "this", ".", "get", "(", "id", ")", ";", "$", ".", "extend", "(", "existing", ",", "data", ")", ";", "this", ".", "set", "(", "id", ",", "existing", ")", ";", "}"], "original_docstring": "\nupdate existing dataset with additional data\n\n@method update\n@param {String} id data id\n@param {Object} data data to update\n", "docstring": {"block_comment": "update existing dataset with additional data", "line_comment": null}, "docstring_tokens": ["data", "to", "update"], "sample_id": 347, "prompt_tokens": ["<javascript>", "<param>", "data"], "comment_type": "param", "sentence_id": 1}
{"id": "21004168", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id) {\n    return (typeof this._data[id] == \"object\");\n  }", "code_tokens": ["function", "(", "id", ")", "{", "return", "(", "typeof", "this", ".", "_data", "[", "id", "]", "==", "\"object\"", ")", ";", "}"], "original_docstring": "\ncheck if dataset with specified id exists at all\n\n@method has\n@param {String} id data id\n@returns {Boolean} has true if dataset exists, false if not\n", "docstring": {"block_comment": "check if dataset with specified id exists at all", "line_comment": null}, "docstring_tokens": ["check", "if", "dataset", "with", "specified", "id", "exists", "at", "all"], "sample_id": 348, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004168", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id) {\n    return (typeof this._data[id] == \"object\");\n  }", "code_tokens": ["function", "(", "id", ")", "{", "return", "(", "typeof", "this", ".", "_data", "[", "id", "]", "==", "\"object\"", ")", ";", "}"], "original_docstring": "\ncheck if dataset with specified id exists at all\n\n@method has\n@param {String} id data id\n@returns {Boolean} has true if dataset exists, false if not\n", "docstring": {"block_comment": "check if dataset with specified id exists at all", "line_comment": null}, "docstring_tokens": ["{", "Boolean", "}", "has", "true", "if", "dataset", "exists", "false", "if", "not"], "sample_id": 348, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004169", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(id) {\n    return tc.u.get(this._data, id, {})\n  }", "code_tokens": ["function", "(", "id", ")", "{", "return", "tc", ".", "u", ".", "get", "(", "this", ".", "_data", ",", "id", ",", "{", "}", ")", "}"], "original_docstring": "\nattempts to retrieve and return a data set\n\n##example(s)\n\nexamples/data.load.js\n\n@method get\n@param {String} id data id\n@returns {Object} data\n", "docstring": {"block_comment": "attempts to retrieve and return a data set \n  example s  \nexamples data.load.js", "line_comment": null}, "docstring_tokens": ["attempts", "to", "retrieve", "and", "return", "a", "data", "set", "example", "s", "examples", "data", ".", "load", ".", "js"], "sample_id": 349, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004170", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(namespace) {\n    var tokens = namespace.split(\".\"),\n        i,\n        t,\n        container=window;\n\n    for(i = 0; i < tokens.length; i++) {\n      t = tokens[i];\n      if(typeof container[t] == \"undefined\") {\n        container[t] = {}\n      }\n      container = container[t];\n    }\n    return container;\n  }", "code_tokens": ["function", "(", "namespace", ")", "{", "var", "tokens", "=", "namespace", ".", "split", "(", "\".\"", ")", ",", "i", ",", "t", ",", "container", "=", "window", ";", "for", "(", "i", "=", "0", ";", "i", "<", "tokens", ".", "length", ";", "i", "++", ")", "{", "t", "=", "tokens", "[", "i", "]", ";", "if", "(", "typeof", "container", "[", "t", "]", "==", "\"undefined\"", ")", "{", "container", "[", "t", "]", "=", "{", "}", "}", "container", "=", "container", "[", "t", "]", ";", "}", "return", "container", ";", "}"], "original_docstring": "\nrequires a namespace exist, any keys that do not exist will\nbe created as object literals\n\n@method require_namespace\n@param {String} namespace \".\" separated namespace\n", "docstring": {"block_comment": "requires a namespace exist, any keys that do not exist will \nbe created as object literals", "line_comment": null}, "docstring_tokens": ["requires", "a", "namespace", "exist", "any", "keys", "that", "do", "not", "exist", "will", "be", "created", "as", "object", "literals"], "sample_id": 350, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004170", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(namespace) {\n    var tokens = namespace.split(\".\"),\n        i,\n        t,\n        container=window;\n\n    for(i = 0; i < tokens.length; i++) {\n      t = tokens[i];\n      if(typeof container[t] == \"undefined\") {\n        container[t] = {}\n      }\n      container = container[t];\n    }\n    return container;\n  }", "code_tokens": ["function", "(", "namespace", ")", "{", "var", "tokens", "=", "namespace", ".", "split", "(", "\".\"", ")", ",", "i", ",", "t", ",", "container", "=", "window", ";", "for", "(", "i", "=", "0", ";", "i", "<", "tokens", ".", "length", ";", "i", "++", ")", "{", "t", "=", "tokens", "[", "i", "]", ";", "if", "(", "typeof", "container", "[", "t", "]", "==", "\"undefined\"", ")", "{", "container", "[", "t", "]", "=", "{", "}", "}", "container", "=", "container", "[", "t", "]", ";", "}", "return", "container", ";", "}"], "original_docstring": "\nrequires a namespace exist, any keys that do not exist will\nbe created as object literals\n\n@method require_namespace\n@param {String} namespace \".\" separated namespace\n", "docstring": {"block_comment": "requires a namespace exist, any keys that do not exist will \nbe created as object literals", "line_comment": null}, "docstring_tokens": [".", "separated", "namespace"], "sample_id": 350, "prompt_tokens": ["<javascript>", "<param>", "namespace"], "comment_type": "param", "sentence_id": 1}
{"id": "21004171", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(obj, key, dflt) {\n    if(!obj || obj[key] == undefined)\n      return dflt;\n    return obj[key]\n  }", "code_tokens": ["function", "(", "obj", ",", "key", ",", "dflt", ")", "{", "if", "(", "!", "obj", "||", "obj", "[", "key", "]", "==", "undefined", ")", "return", "dflt", ";", "return", "obj", "[", "key", "]", "}"], "original_docstring": "\nretrieve value from object literal - allows you to pass null or undefined\nas the object and will return null if you do\n\n@method get\n@param {Object} obj\n@param {String) key\n@param {Mixed} [default] return this if obj is null or key does not exist\n@returns {Mixed} value\n", "docstring": {"block_comment": "retrieve value from object literal   allows you to pass null or undefined \nas the object and will return null if you do", "line_comment": null}, "docstring_tokens": ["retrieve", "value", "from", "object", "literal", "allows", "you", "to", "pass", "null", "or", "undefined", "as", "the", "object", "and", "will", "return", "null", "if", "you", "do"], "sample_id": 351, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004172", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name) {\n      return (typeof this._classes[name] == \"function\")\n    }", "code_tokens": ["function", "(", "name", ")", "{", "return", "(", "typeof", "this", ".", "_classes", "[", "name", "]", "==", "\"function\"", ")", "}"], "original_docstring": "\nSee if a class constructor for the specified name exists\n@method has\n@param {String} name class name\n@returns {Boolean} exists\n", "docstring": {"block_comment": "See if a class constructor for the specified name exists", "line_comment": null}, "docstring_tokens": ["See", "if", "a", "class", "constructor", "for", "the", "specified", "name", "exists"], "sample_id": 352, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004173", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name) {\n      if(typeof this._classes[name] != \"function\") \n        throw(\"Trying to retrieve class unknown to this Registry: \"+name);\n      return this._classes[name];\n    }", "code_tokens": ["function", "(", "name", ")", "{", "if", "(", "typeof", "this", ".", "_classes", "[", "name", "]", "!=", "\"function\"", ")", "throw", "(", "\"Trying to retrieve class unknown to this Registry: \"", "+", "name", ")", ";", "return", "this", ".", "_classes", "[", "name", "]", ";", "}"], "original_docstring": "\nget a registered class constructor\n@method get\n@param {String} name class name\n@returns {Function} class ctor of registered class\n", "docstring": {"block_comment": "get a registered class constructor", "line_comment": null}, "docstring_tokens": ["get", "a", "registered", "class", "constructor"], "sample_id": 353, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004173", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name) {\n      if(typeof this._classes[name] != \"function\") \n        throw(\"Trying to retrieve class unknown to this Registry: \"+name);\n      return this._classes[name];\n    }", "code_tokens": ["function", "(", "name", ")", "{", "if", "(", "typeof", "this", ".", "_classes", "[", "name", "]", "!=", "\"function\"", ")", "throw", "(", "\"Trying to retrieve class unknown to this Registry: \"", "+", "name", ")", ";", "return", "this", ".", "_classes", "[", "name", "]", ";", "}"], "original_docstring": "\nget a registered class constructor\n@method get\n@param {String} name class name\n@returns {Function} class ctor of registered class\n", "docstring": {"block_comment": "get a registered class constructor", "line_comment": null}, "docstring_tokens": ["{", "Function", "}", "class", "ctor", "of", "registered", "class"], "sample_id": 353, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004174", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, extend) {\n      if(this._classes[name] != undefined) {\n        throw(\"Class with name '\"+name+\"' already exists - name must be unique in the Registry\");\n      }\n      if(extend && typeof this._classes[extend] != \"function\") {\n        throw(\"Trying to extend from class unknown to this Registry: \"+extend);\n      }\n      if(extend)\n        this._classes[name] = twentyc.cls.extend(name, definition, this._classes[extend]);\n      else\n        this._classes[name] = twentyc.cls.define(name, definition);\n      return this._classes[name];\n    }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "extend", ")", "{", "if", "(", "this", ".", "_classes", "[", "name", "]", "!=", "undefined", ")", "{", "throw", "(", "\"Class with name '\"", "+", "name", "+", "\"' already exists - name must be unique in the Registry\"", ")", ";", "}", "if", "(", "extend", "&&", "typeof", "this", ".", "_classes", "[", "extend", "]", "!=", "\"function\"", ")", "{", "throw", "(", "\"Trying to extend from class unknown to this Registry: \"", "+", "extend", ")", ";", "}", "if", "(", "extend", ")", "this", ".", "_classes", "[", "name", "]", "=", "twentyc", ".", "cls", ".", "extend", "(", "name", ",", "definition", ",", "this", ".", "_classes", "[", "extend", "]", ")", ";", "else", "this", ".", "_classes", "[", "name", "]", "=", "twentyc", ".", "cls", ".", "define", "(", "name", ",", "definition", ")", ";", "return", "this", ".", "_classes", "[", "name", "]", ";", "}"], "original_docstring": "\nregister a new class - look at twentyc.cls.define and twentyc.cls.extend for param\nexplanation\n@method register\n@param {String} name class name\n@param {Object} definition class definition\n@param {String} extend if passed, extend this class from this class (needs to exist in the Registry)\n@returns {Function} class ctor of the newly created class\n", "docstring": {"block_comment": "register a new class   look at twentyc.cls.define and twentyc.cls.extend for param \nexplanation", "line_comment": null}, "docstring_tokens": ["register", "a", "new", "class", "look", "at", "twentyc", ".", "cls", ".", "define", "and", "twentyc", ".", "cls", ".", "extend", "for", "param", "explanation"], "sample_id": 354, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004174", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, extend) {\n      if(this._classes[name] != undefined) {\n        throw(\"Class with name '\"+name+\"' already exists - name must be unique in the Registry\");\n      }\n      if(extend && typeof this._classes[extend] != \"function\") {\n        throw(\"Trying to extend from class unknown to this Registry: \"+extend);\n      }\n      if(extend)\n        this._classes[name] = twentyc.cls.extend(name, definition, this._classes[extend]);\n      else\n        this._classes[name] = twentyc.cls.define(name, definition);\n      return this._classes[name];\n    }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "extend", ")", "{", "if", "(", "this", ".", "_classes", "[", "name", "]", "!=", "undefined", ")", "{", "throw", "(", "\"Class with name '\"", "+", "name", "+", "\"' already exists - name must be unique in the Registry\"", ")", ";", "}", "if", "(", "extend", "&&", "typeof", "this", ".", "_classes", "[", "extend", "]", "!=", "\"function\"", ")", "{", "throw", "(", "\"Trying to extend from class unknown to this Registry: \"", "+", "extend", ")", ";", "}", "if", "(", "extend", ")", "this", ".", "_classes", "[", "name", "]", "=", "twentyc", ".", "cls", ".", "extend", "(", "name", ",", "definition", ",", "this", ".", "_classes", "[", "extend", "]", ")", ";", "else", "this", ".", "_classes", "[", "name", "]", "=", "twentyc", ".", "cls", ".", "define", "(", "name", ",", "definition", ")", ";", "return", "this", ".", "_classes", "[", "name", "]", ";", "}"], "original_docstring": "\nregister a new class - look at twentyc.cls.define and twentyc.cls.extend for param\nexplanation\n@method register\n@param {String} name class name\n@param {Object} definition class definition\n@param {String} extend if passed, extend this class from this class (needs to exist in the Registry)\n@returns {Function} class ctor of the newly created class\n", "docstring": {"block_comment": "register a new class   look at twentyc.cls.define and twentyc.cls.extend for param \nexplanation", "line_comment": null}, "docstring_tokens": ["if", "passed", "extend", "this", "class", "from", "this", "class", "(", "needs", "to", "exist", "in", "the", "Registry", ")"], "sample_id": 354, "prompt_tokens": ["<javascript>", "<param>", "extend"], "comment_type": "param", "sentence_id": 1}
{"id": "21004174", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, extend) {\n      if(this._classes[name] != undefined) {\n        throw(\"Class with name '\"+name+\"' already exists - name must be unique in the Registry\");\n      }\n      if(extend && typeof this._classes[extend] != \"function\") {\n        throw(\"Trying to extend from class unknown to this Registry: \"+extend);\n      }\n      if(extend)\n        this._classes[name] = twentyc.cls.extend(name, definition, this._classes[extend]);\n      else\n        this._classes[name] = twentyc.cls.define(name, definition);\n      return this._classes[name];\n    }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "extend", ")", "{", "if", "(", "this", ".", "_classes", "[", "name", "]", "!=", "undefined", ")", "{", "throw", "(", "\"Class with name '\"", "+", "name", "+", "\"' already exists - name must be unique in the Registry\"", ")", ";", "}", "if", "(", "extend", "&&", "typeof", "this", ".", "_classes", "[", "extend", "]", "!=", "\"function\"", ")", "{", "throw", "(", "\"Trying to extend from class unknown to this Registry: \"", "+", "extend", ")", ";", "}", "if", "(", "extend", ")", "this", ".", "_classes", "[", "name", "]", "=", "twentyc", ".", "cls", ".", "extend", "(", "name", ",", "definition", ",", "this", ".", "_classes", "[", "extend", "]", ")", ";", "else", "this", ".", "_classes", "[", "name", "]", "=", "twentyc", ".", "cls", ".", "define", "(", "name", ",", "definition", ")", ";", "return", "this", ".", "_classes", "[", "name", "]", ";", "}"], "original_docstring": "\nregister a new class - look at twentyc.cls.define and twentyc.cls.extend for param\nexplanation\n@method register\n@param {String} name class name\n@param {Object} definition class definition\n@param {String} extend if passed, extend this class from this class (needs to exist in the Registry)\n@returns {Function} class ctor of the newly created class\n", "docstring": {"block_comment": "register a new class   look at twentyc.cls.define and twentyc.cls.extend for param \nexplanation", "line_comment": null}, "docstring_tokens": ["{", "Function", "}", "class", "ctor", "of", "the", "newly", "created", "class"], "sample_id": 354, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004175", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(destClass, methodName, method) {\n    \n    // create reference to old method\n    if(destClass.prototype[methodName])\n      destClass.prototype[destClass.prototype._meta.name+\"_\"+methodName] = destClass.prototype[methodName];\n    \n    // override\n    destClass.prototype[methodName] = method;\n\n  }", "code_tokens": ["function", "(", "destClass", ",", "methodName", ",", "method", ")", "{", "// create reference to old method", "if", "(", "destClass", ".", "prototype", "[", "methodName", "]", ")", "destClass", ".", "prototype", "[", "destClass", ".", "prototype", ".", "_meta", ".", "name", "+", "\"_\"", "+", "methodName", "]", "=", "destClass", ".", "prototype", "[", "methodName", "]", ";", "// override", "destClass", ".", "prototype", "[", "methodName", "]", "=", "method", ";", "}"], "original_docstring": "\noverrides a method on the provided class\n\n@method override\n@param {Function} destClass A class created via __twentyc.cls.define__ or __twentyc.cls.extend__\n@param {String} methodName name of method that you wish to override\n@param {Function} method new method\n", "docstring": {"block_comment": "overrides a method on the provided class", "line_comment": ["create reference to old method", "override"]}, "docstring_tokens": ["overrides", "a", "method", "on", "the", "provided", "class"], "sample_id": 355, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004175", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(destClass, methodName, method) {\n    \n    // create reference to old method\n    if(destClass.prototype[methodName])\n      destClass.prototype[destClass.prototype._meta.name+\"_\"+methodName] = destClass.prototype[methodName];\n    \n    // override\n    destClass.prototype[methodName] = method;\n\n  }", "code_tokens": ["function", "(", "destClass", ",", "methodName", ",", "method", ")", "{", "// create reference to old method", "if", "(", "destClass", ".", "prototype", "[", "methodName", "]", ")", "destClass", ".", "prototype", "[", "destClass", ".", "prototype", ".", "_meta", ".", "name", "+", "\"_\"", "+", "methodName", "]", "=", "destClass", ".", "prototype", "[", "methodName", "]", ";", "// override", "destClass", ".", "prototype", "[", "methodName", "]", "=", "method", ";", "}"], "original_docstring": "\noverrides a method on the provided class\n\n@method override\n@param {Function} destClass A class created via __twentyc.cls.define__ or __twentyc.cls.extend__\n@param {String} methodName name of method that you wish to override\n@param {Function} method new method\n", "docstring": {"block_comment": "overrides a method on the provided class", "line_comment": ["create reference to old method", "override"]}, "docstring_tokens": ["A", "class", "created", "via", "__twentyc", ".", "cls", ".", "define__", "or", "__twentyc", ".", "cls", ".", "extend__"], "sample_id": 355, "prompt_tokens": ["<javascript>", "<param>", "destClass"], "comment_type": "param", "sentence_id": 1}
{"id": "21004175", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(destClass, methodName, method) {\n    \n    // create reference to old method\n    if(destClass.prototype[methodName])\n      destClass.prototype[destClass.prototype._meta.name+\"_\"+methodName] = destClass.prototype[methodName];\n    \n    // override\n    destClass.prototype[methodName] = method;\n\n  }", "code_tokens": ["function", "(", "destClass", ",", "methodName", ",", "method", ")", "{", "// create reference to old method", "if", "(", "destClass", ".", "prototype", "[", "methodName", "]", ")", "destClass", ".", "prototype", "[", "destClass", ".", "prototype", ".", "_meta", ".", "name", "+", "\"_\"", "+", "methodName", "]", "=", "destClass", ".", "prototype", "[", "methodName", "]", ";", "// override", "destClass", ".", "prototype", "[", "methodName", "]", "=", "method", ";", "}"], "original_docstring": "\noverrides a method on the provided class\n\n@method override\n@param {Function} destClass A class created via __twentyc.cls.define__ or __twentyc.cls.extend__\n@param {String} methodName name of method that you wish to override\n@param {Function} method new method\n", "docstring": {"block_comment": "overrides a method on the provided class", "line_comment": ["create reference to old method", "override"]}, "docstring_tokens": ["name", "of", "method", "that", "you", "wish", "to", "override"], "sample_id": 355, "prompt_tokens": ["<javascript>", "<param>", "methodName"], "comment_type": "param", "sentence_id": 2}
{"id": "21004176", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, parent) {\n    \n    var k;\n    name = twentyc.cls.make_name(name);\n    \n    if(typeof(definition[name]) == \"function\") {\n      // a constructor has been provided\n      var ctor = definition[name]\n      delete definition[name]\n    } else {\n      // no constructor provided, substitute empty constructor\n      var ctor = function(){\n        parent.apply(this, arguments)\n      };\n    }\n\n    // cycle through parent prototype and copy to class prototype\n    for(k in parent.prototype) {\n      ctor.prototype[k] = parent.prototype[k]\n    }\n\n    // cycle through definition and copy to class prototype\n    for(k in definition) {\n      if(typeof(ctor.prototype[k]) == \"function\") {\n        // function was already defined by parent, store backref\n        ctor.prototype[parent.prototype._meta.name+\"_\"+k] = parent.prototype[k];\n      }\n      ctor.prototype[k] = definition[k]\n    }\n    \n    // reference parent constructor\n    ctor.prototype[parent.prototype._meta.name] = parent\n\n    // create meta information\n    ctor.prototype._meta = {\n      \"name\" : name,\n      \"parent\" : parent\n    }\n\n    return ctor\n\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "parent", ")", "{", "var", "k", ";", "name", "=", "twentyc", ".", "cls", ".", "make_name", "(", "name", ")", ";", "if", "(", "typeof", "(", "definition", "[", "name", "]", ")", "==", "\"function\"", ")", "{", "// a constructor has been provided", "var", "ctor", "=", "definition", "[", "name", "]", "delete", "definition", "[", "name", "]", "}", "else", "{", "// no constructor provided, substitute empty constructor", "var", "ctor", "=", "function", "(", ")", "{", "parent", ".", "apply", "(", "this", ",", "arguments", ")", "}", ";", "}", "// cycle through parent prototype and copy to class prototype", "for", "(", "k", "in", "parent", ".", "prototype", ")", "{", "ctor", ".", "prototype", "[", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", "}", "// cycle through definition and copy to class prototype", "for", "(", "k", "in", "definition", ")", "{", "if", "(", "typeof", "(", "ctor", ".", "prototype", "[", "k", "]", ")", "==", "\"function\"", ")", "{", "// function was already defined by parent, store backref", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "+", "\"_\"", "+", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", ";", "}", "ctor", ".", "prototype", "[", "k", "]", "=", "definition", "[", "k", "]", "}", "// reference parent constructor", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "]", "=", "parent", "// create meta information", "ctor", ".", "prototype", ".", "_meta", "=", "{", "\"name\"", ":", "name", ",", "\"parent\"", ":", "parent", "}", "return", "ctor", "}"], "original_docstring": "\nextend an existing class with new properties and functions\n\nif a function is defined that already exists on the parent class\nthis function will be overwritten and a reference to the original\nfunction will be provided at parentClassName_functionName\n\nyou may define a constructor in the definition by using the class\nname you provide at __name__\n\nNote that if the name you provide is not a valid variable name\nit will be passed through twentyc.cls.make_name to make it valid\n\n##examples\n\n* extend and instantiate a class: examples/cls.extend.js\n* handling method override: examples/cls.extend.method-override.js\n\n@method extend\n@param {String} name name or unqiue identifier of the new class\n@param {Object} definition object literal of properties and functions that you wish define or redefine\n@param {Function} [parent] constructor of class\nthat you wish to extend, if omitted an empty function will be substituted\n@returns {Function} dest constructor of new class\n", "docstring": {"block_comment": "extend an existing class with new properties and functions \nif a function is defined that already exists on the parent class \nthis function will be overwritten and a reference to the original \nfunction will be provided at parentClassName_functionName \nyou may define a constructor in the definition by using the class \nname you provide at __name__ \nNote that if the name you provide is not a valid variable name \nit will be passed through twentyc.cls.make_name to make it valid \n  examples \nextend and instantiate a class  examples cls.extend.js \nhandling method override  examples cls.extend.method override.js", "line_comment": ["a constructor has been provided", "no constructor provided, substitute empty constructor", "cycle through parent prototype and copy to class prototype", "cycle through definition and copy to class prototype", "function was already defined by parent, store backref", "reference parent constructor", "create meta information"]}, "docstring_tokens": ["extend", "an", "existing", "class", "with", "new", "properties", "and", "functions", "if", "a", "function", "is", "defined", "that", "already", "exists", "on", "the", "parent", "class", "this", "function", "will", "be", "overwritten", "and", "a", "reference", "to", "the", "original", "function", "will", "be", "provided", "at", "parentClassName_functionName", "you", "may", "define", "a", "constructor", "in", "the", "definition", "by", "using", "the", "class", "name", "you", "provide", "at", "__name__", "Note", "that", "if", "the", "name", "you", "provide", "is", "not", "a", "valid", "variable", "name", "it", "will", "be", "passed", "through", "twentyc", ".", "cls", ".", "make_name", "to", "make", "it", "valid", "examples", "extend", "and", "instantiate", "a", "class", "examples", "cls", ".", "extend", ".", "js", "handling", "method", "override", "examples", "cls", ".", "extend", ".", "method", "override", ".", "js"], "sample_id": 356, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004176", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, parent) {\n    \n    var k;\n    name = twentyc.cls.make_name(name);\n    \n    if(typeof(definition[name]) == \"function\") {\n      // a constructor has been provided\n      var ctor = definition[name]\n      delete definition[name]\n    } else {\n      // no constructor provided, substitute empty constructor\n      var ctor = function(){\n        parent.apply(this, arguments)\n      };\n    }\n\n    // cycle through parent prototype and copy to class prototype\n    for(k in parent.prototype) {\n      ctor.prototype[k] = parent.prototype[k]\n    }\n\n    // cycle through definition and copy to class prototype\n    for(k in definition) {\n      if(typeof(ctor.prototype[k]) == \"function\") {\n        // function was already defined by parent, store backref\n        ctor.prototype[parent.prototype._meta.name+\"_\"+k] = parent.prototype[k];\n      }\n      ctor.prototype[k] = definition[k]\n    }\n    \n    // reference parent constructor\n    ctor.prototype[parent.prototype._meta.name] = parent\n\n    // create meta information\n    ctor.prototype._meta = {\n      \"name\" : name,\n      \"parent\" : parent\n    }\n\n    return ctor\n\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "parent", ")", "{", "var", "k", ";", "name", "=", "twentyc", ".", "cls", ".", "make_name", "(", "name", ")", ";", "if", "(", "typeof", "(", "definition", "[", "name", "]", ")", "==", "\"function\"", ")", "{", "// a constructor has been provided", "var", "ctor", "=", "definition", "[", "name", "]", "delete", "definition", "[", "name", "]", "}", "else", "{", "// no constructor provided, substitute empty constructor", "var", "ctor", "=", "function", "(", ")", "{", "parent", ".", "apply", "(", "this", ",", "arguments", ")", "}", ";", "}", "// cycle through parent prototype and copy to class prototype", "for", "(", "k", "in", "parent", ".", "prototype", ")", "{", "ctor", ".", "prototype", "[", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", "}", "// cycle through definition and copy to class prototype", "for", "(", "k", "in", "definition", ")", "{", "if", "(", "typeof", "(", "ctor", ".", "prototype", "[", "k", "]", ")", "==", "\"function\"", ")", "{", "// function was already defined by parent, store backref", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "+", "\"_\"", "+", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", ";", "}", "ctor", ".", "prototype", "[", "k", "]", "=", "definition", "[", "k", "]", "}", "// reference parent constructor", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "]", "=", "parent", "// create meta information", "ctor", ".", "prototype", ".", "_meta", "=", "{", "\"name\"", ":", "name", ",", "\"parent\"", ":", "parent", "}", "return", "ctor", "}"], "original_docstring": "\nextend an existing class with new properties and functions\n\nif a function is defined that already exists on the parent class\nthis function will be overwritten and a reference to the original\nfunction will be provided at parentClassName_functionName\n\nyou may define a constructor in the definition by using the class\nname you provide at __name__\n\nNote that if the name you provide is not a valid variable name\nit will be passed through twentyc.cls.make_name to make it valid\n\n##examples\n\n* extend and instantiate a class: examples/cls.extend.js\n* handling method override: examples/cls.extend.method-override.js\n\n@method extend\n@param {String} name name or unqiue identifier of the new class\n@param {Object} definition object literal of properties and functions that you wish define or redefine\n@param {Function} [parent] constructor of class\nthat you wish to extend, if omitted an empty function will be substituted\n@returns {Function} dest constructor of new class\n", "docstring": {"block_comment": "extend an existing class with new properties and functions \nif a function is defined that already exists on the parent class \nthis function will be overwritten and a reference to the original \nfunction will be provided at parentClassName_functionName \nyou may define a constructor in the definition by using the class \nname you provide at __name__ \nNote that if the name you provide is not a valid variable name \nit will be passed through twentyc.cls.make_name to make it valid \n  examples \nextend and instantiate a class  examples cls.extend.js \nhandling method override  examples cls.extend.method override.js", "line_comment": ["a constructor has been provided", "no constructor provided, substitute empty constructor", "cycle through parent prototype and copy to class prototype", "cycle through definition and copy to class prototype", "function was already defined by parent, store backref", "reference parent constructor", "create meta information"]}, "docstring_tokens": ["name", "or", "unqiue", "identifier", "of", "the", "new", "class"], "sample_id": 356, "prompt_tokens": ["<javascript>", "<param>", "name"], "comment_type": "param", "sentence_id": 1}
{"id": "21004176", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, parent) {\n    \n    var k;\n    name = twentyc.cls.make_name(name);\n    \n    if(typeof(definition[name]) == \"function\") {\n      // a constructor has been provided\n      var ctor = definition[name]\n      delete definition[name]\n    } else {\n      // no constructor provided, substitute empty constructor\n      var ctor = function(){\n        parent.apply(this, arguments)\n      };\n    }\n\n    // cycle through parent prototype and copy to class prototype\n    for(k in parent.prototype) {\n      ctor.prototype[k] = parent.prototype[k]\n    }\n\n    // cycle through definition and copy to class prototype\n    for(k in definition) {\n      if(typeof(ctor.prototype[k]) == \"function\") {\n        // function was already defined by parent, store backref\n        ctor.prototype[parent.prototype._meta.name+\"_\"+k] = parent.prototype[k];\n      }\n      ctor.prototype[k] = definition[k]\n    }\n    \n    // reference parent constructor\n    ctor.prototype[parent.prototype._meta.name] = parent\n\n    // create meta information\n    ctor.prototype._meta = {\n      \"name\" : name,\n      \"parent\" : parent\n    }\n\n    return ctor\n\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "parent", ")", "{", "var", "k", ";", "name", "=", "twentyc", ".", "cls", ".", "make_name", "(", "name", ")", ";", "if", "(", "typeof", "(", "definition", "[", "name", "]", ")", "==", "\"function\"", ")", "{", "// a constructor has been provided", "var", "ctor", "=", "definition", "[", "name", "]", "delete", "definition", "[", "name", "]", "}", "else", "{", "// no constructor provided, substitute empty constructor", "var", "ctor", "=", "function", "(", ")", "{", "parent", ".", "apply", "(", "this", ",", "arguments", ")", "}", ";", "}", "// cycle through parent prototype and copy to class prototype", "for", "(", "k", "in", "parent", ".", "prototype", ")", "{", "ctor", ".", "prototype", "[", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", "}", "// cycle through definition and copy to class prototype", "for", "(", "k", "in", "definition", ")", "{", "if", "(", "typeof", "(", "ctor", ".", "prototype", "[", "k", "]", ")", "==", "\"function\"", ")", "{", "// function was already defined by parent, store backref", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "+", "\"_\"", "+", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", ";", "}", "ctor", ".", "prototype", "[", "k", "]", "=", "definition", "[", "k", "]", "}", "// reference parent constructor", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "]", "=", "parent", "// create meta information", "ctor", ".", "prototype", ".", "_meta", "=", "{", "\"name\"", ":", "name", ",", "\"parent\"", ":", "parent", "}", "return", "ctor", "}"], "original_docstring": "\nextend an existing class with new properties and functions\n\nif a function is defined that already exists on the parent class\nthis function will be overwritten and a reference to the original\nfunction will be provided at parentClassName_functionName\n\nyou may define a constructor in the definition by using the class\nname you provide at __name__\n\nNote that if the name you provide is not a valid variable name\nit will be passed through twentyc.cls.make_name to make it valid\n\n##examples\n\n* extend and instantiate a class: examples/cls.extend.js\n* handling method override: examples/cls.extend.method-override.js\n\n@method extend\n@param {String} name name or unqiue identifier of the new class\n@param {Object} definition object literal of properties and functions that you wish define or redefine\n@param {Function} [parent] constructor of class\nthat you wish to extend, if omitted an empty function will be substituted\n@returns {Function} dest constructor of new class\n", "docstring": {"block_comment": "extend an existing class with new properties and functions \nif a function is defined that already exists on the parent class \nthis function will be overwritten and a reference to the original \nfunction will be provided at parentClassName_functionName \nyou may define a constructor in the definition by using the class \nname you provide at __name__ \nNote that if the name you provide is not a valid variable name \nit will be passed through twentyc.cls.make_name to make it valid \n  examples \nextend and instantiate a class  examples cls.extend.js \nhandling method override  examples cls.extend.method override.js", "line_comment": ["a constructor has been provided", "no constructor provided, substitute empty constructor", "cycle through parent prototype and copy to class prototype", "cycle through definition and copy to class prototype", "function was already defined by parent, store backref", "reference parent constructor", "create meta information"]}, "docstring_tokens": ["object", "literal", "of", "properties", "and", "functions", "that", "you", "wish", "define", "or", "redefine"], "sample_id": 356, "prompt_tokens": ["<javascript>", "<param>", "definition"], "comment_type": "param", "sentence_id": 2}
{"id": "21004176", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, parent) {\n    \n    var k;\n    name = twentyc.cls.make_name(name);\n    \n    if(typeof(definition[name]) == \"function\") {\n      // a constructor has been provided\n      var ctor = definition[name]\n      delete definition[name]\n    } else {\n      // no constructor provided, substitute empty constructor\n      var ctor = function(){\n        parent.apply(this, arguments)\n      };\n    }\n\n    // cycle through parent prototype and copy to class prototype\n    for(k in parent.prototype) {\n      ctor.prototype[k] = parent.prototype[k]\n    }\n\n    // cycle through definition and copy to class prototype\n    for(k in definition) {\n      if(typeof(ctor.prototype[k]) == \"function\") {\n        // function was already defined by parent, store backref\n        ctor.prototype[parent.prototype._meta.name+\"_\"+k] = parent.prototype[k];\n      }\n      ctor.prototype[k] = definition[k]\n    }\n    \n    // reference parent constructor\n    ctor.prototype[parent.prototype._meta.name] = parent\n\n    // create meta information\n    ctor.prototype._meta = {\n      \"name\" : name,\n      \"parent\" : parent\n    }\n\n    return ctor\n\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "parent", ")", "{", "var", "k", ";", "name", "=", "twentyc", ".", "cls", ".", "make_name", "(", "name", ")", ";", "if", "(", "typeof", "(", "definition", "[", "name", "]", ")", "==", "\"function\"", ")", "{", "// a constructor has been provided", "var", "ctor", "=", "definition", "[", "name", "]", "delete", "definition", "[", "name", "]", "}", "else", "{", "// no constructor provided, substitute empty constructor", "var", "ctor", "=", "function", "(", ")", "{", "parent", ".", "apply", "(", "this", ",", "arguments", ")", "}", ";", "}", "// cycle through parent prototype and copy to class prototype", "for", "(", "k", "in", "parent", ".", "prototype", ")", "{", "ctor", ".", "prototype", "[", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", "}", "// cycle through definition and copy to class prototype", "for", "(", "k", "in", "definition", ")", "{", "if", "(", "typeof", "(", "ctor", ".", "prototype", "[", "k", "]", ")", "==", "\"function\"", ")", "{", "// function was already defined by parent, store backref", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "+", "\"_\"", "+", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", ";", "}", "ctor", ".", "prototype", "[", "k", "]", "=", "definition", "[", "k", "]", "}", "// reference parent constructor", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "]", "=", "parent", "// create meta information", "ctor", ".", "prototype", ".", "_meta", "=", "{", "\"name\"", ":", "name", ",", "\"parent\"", ":", "parent", "}", "return", "ctor", "}"], "original_docstring": "\nextend an existing class with new properties and functions\n\nif a function is defined that already exists on the parent class\nthis function will be overwritten and a reference to the original\nfunction will be provided at parentClassName_functionName\n\nyou may define a constructor in the definition by using the class\nname you provide at __name__\n\nNote that if the name you provide is not a valid variable name\nit will be passed through twentyc.cls.make_name to make it valid\n\n##examples\n\n* extend and instantiate a class: examples/cls.extend.js\n* handling method override: examples/cls.extend.method-override.js\n\n@method extend\n@param {String} name name or unqiue identifier of the new class\n@param {Object} definition object literal of properties and functions that you wish define or redefine\n@param {Function} [parent] constructor of class\nthat you wish to extend, if omitted an empty function will be substituted\n@returns {Function} dest constructor of new class\n", "docstring": {"block_comment": "extend an existing class with new properties and functions \nif a function is defined that already exists on the parent class \nthis function will be overwritten and a reference to the original \nfunction will be provided at parentClassName_functionName \nyou may define a constructor in the definition by using the class \nname you provide at __name__ \nNote that if the name you provide is not a valid variable name \nit will be passed through twentyc.cls.make_name to make it valid \n  examples \nextend and instantiate a class  examples cls.extend.js \nhandling method override  examples cls.extend.method override.js", "line_comment": ["a constructor has been provided", "no constructor provided, substitute empty constructor", "cycle through parent prototype and copy to class prototype", "cycle through definition and copy to class prototype", "function was already defined by parent, store backref", "reference parent constructor", "create meta information"]}, "docstring_tokens": ["constructor", "of", "class"], "sample_id": 356, "prompt_tokens": ["<javascript>", "<param>", "parent"], "comment_type": "param", "sentence_id": 3}
{"id": "21004176", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name, definition, parent) {\n    \n    var k;\n    name = twentyc.cls.make_name(name);\n    \n    if(typeof(definition[name]) == \"function\") {\n      // a constructor has been provided\n      var ctor = definition[name]\n      delete definition[name]\n    } else {\n      // no constructor provided, substitute empty constructor\n      var ctor = function(){\n        parent.apply(this, arguments)\n      };\n    }\n\n    // cycle through parent prototype and copy to class prototype\n    for(k in parent.prototype) {\n      ctor.prototype[k] = parent.prototype[k]\n    }\n\n    // cycle through definition and copy to class prototype\n    for(k in definition) {\n      if(typeof(ctor.prototype[k]) == \"function\") {\n        // function was already defined by parent, store backref\n        ctor.prototype[parent.prototype._meta.name+\"_\"+k] = parent.prototype[k];\n      }\n      ctor.prototype[k] = definition[k]\n    }\n    \n    // reference parent constructor\n    ctor.prototype[parent.prototype._meta.name] = parent\n\n    // create meta information\n    ctor.prototype._meta = {\n      \"name\" : name,\n      \"parent\" : parent\n    }\n\n    return ctor\n\n\n  }", "code_tokens": ["function", "(", "name", ",", "definition", ",", "parent", ")", "{", "var", "k", ";", "name", "=", "twentyc", ".", "cls", ".", "make_name", "(", "name", ")", ";", "if", "(", "typeof", "(", "definition", "[", "name", "]", ")", "==", "\"function\"", ")", "{", "// a constructor has been provided", "var", "ctor", "=", "definition", "[", "name", "]", "delete", "definition", "[", "name", "]", "}", "else", "{", "// no constructor provided, substitute empty constructor", "var", "ctor", "=", "function", "(", ")", "{", "parent", ".", "apply", "(", "this", ",", "arguments", ")", "}", ";", "}", "// cycle through parent prototype and copy to class prototype", "for", "(", "k", "in", "parent", ".", "prototype", ")", "{", "ctor", ".", "prototype", "[", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", "}", "// cycle through definition and copy to class prototype", "for", "(", "k", "in", "definition", ")", "{", "if", "(", "typeof", "(", "ctor", ".", "prototype", "[", "k", "]", ")", "==", "\"function\"", ")", "{", "// function was already defined by parent, store backref", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "+", "\"_\"", "+", "k", "]", "=", "parent", ".", "prototype", "[", "k", "]", ";", "}", "ctor", ".", "prototype", "[", "k", "]", "=", "definition", "[", "k", "]", "}", "// reference parent constructor", "ctor", ".", "prototype", "[", "parent", ".", "prototype", ".", "_meta", ".", "name", "]", "=", "parent", "// create meta information", "ctor", ".", "prototype", ".", "_meta", "=", "{", "\"name\"", ":", "name", ",", "\"parent\"", ":", "parent", "}", "return", "ctor", "}"], "original_docstring": "\nextend an existing class with new properties and functions\n\nif a function is defined that already exists on the parent class\nthis function will be overwritten and a reference to the original\nfunction will be provided at parentClassName_functionName\n\nyou may define a constructor in the definition by using the class\nname you provide at __name__\n\nNote that if the name you provide is not a valid variable name\nit will be passed through twentyc.cls.make_name to make it valid\n\n##examples\n\n* extend and instantiate a class: examples/cls.extend.js\n* handling method override: examples/cls.extend.method-override.js\n\n@method extend\n@param {String} name name or unqiue identifier of the new class\n@param {Object} definition object literal of properties and functions that you wish define or redefine\n@param {Function} [parent] constructor of class\nthat you wish to extend, if omitted an empty function will be substituted\n@returns {Function} dest constructor of new class\n", "docstring": {"block_comment": "extend an existing class with new properties and functions \nif a function is defined that already exists on the parent class \nthis function will be overwritten and a reference to the original \nfunction will be provided at parentClassName_functionName \nyou may define a constructor in the definition by using the class \nname you provide at __name__ \nNote that if the name you provide is not a valid variable name \nit will be passed through twentyc.cls.make_name to make it valid \n  examples \nextend and instantiate a class  examples cls.extend.js \nhandling method override  examples cls.extend.method override.js", "line_comment": ["a constructor has been provided", "no constructor provided, substitute empty constructor", "cycle through parent prototype and copy to class prototype", "cycle through definition and copy to class prototype", "function was already defined by parent, store backref", "reference parent constructor", "create meta information"]}, "docstring_tokens": ["{", "Function", "}", "dest", "constructor", "of", "new", "class"], "sample_id": 356, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 4}
{"id": "21004177", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(){\n        parent.apply(this, arguments)\n      }", "code_tokens": ["function", "(", ")", "{", "parent", ".", "apply", "(", "this", ",", "arguments", ")", "}"], "original_docstring": "no constructor provided, substitute empty constructor", "docstring": {"block_comment": "no constructor provided, substitute empty constructor", "line_comment": null}, "docstring_tokens": ["no", "constructor", "provided", "substitute", "empty", "constructor"], "sample_id": 357, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004179", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name) {\n    var i, names = name.split(/[-\\s]/);\n    for(i = 0; i < names.length; i++) {\n      if(i > 0)\n        names[i] = names[i].charAt(0).toUpperCase() + names[i].slice(1);\n    }\n    return names.join(\"\");\n  }", "code_tokens": ["function", "(", "name", ")", "{", "var", "i", ",", "names", "=", "name", ".", "split", "(", "/", "[-\\s]", "/", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "names", ".", "length", ";", "i", "++", ")", "{", "if", "(", "i", ">", "0", ")", "names", "[", "i", "]", "=", "names", "[", "i", "]", ".", "charAt", "(", "0", ")", ".", "toUpperCase", "(", ")", "+", "names", "[", "i", "]", ".", "slice", "(", "1", ")", ";", "}", "return", "names", ".", "join", "(", "\"\"", ")", ";", "}"], "original_docstring": "\nconverts a string into a standardized class name, replacing\ninvalid characters with valid ones.\n\ntwentyc.cls.make_name(\"class-a\"); // classA\ntwentyc.cls.make_name(\"class a b\"); // classAB\ntwentyc.cls.make_name(\"Class-A_B\"); // ClassA_B\n\n@method make_name\n@param {String} name base name\n@returns {String} class_name changed name\n", "docstring": {"block_comment": "converts a string into a standardized class name, replacing \ninvalid characters with valid ones. \ntwentyc.cls.make_name  class a       classA \ntwentyc.cls.make_name  class a b       classAB \ntwentyc.cls.make_name  Class A_B       ClassA_B", "line_comment": null}, "docstring_tokens": ["converts", "a", "string", "into", "a", "standardized", "class", "name", "replacing", "invalid", "characters", "with", "valid", "ones", ".", "twentyc", ".", "cls", ".", "make_name", "class", "a", "classA", "twentyc", ".", "cls", ".", "make_name", "class", "a", "b", "classAB", "twentyc", ".", "cls", ".", "make_name", "Class", "A_B", "ClassA_B"], "sample_id": 358, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004179", "repo": "20c/js-core", "path": "dist/twentyc.core.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(name) {\n    var i, names = name.split(/[-\\s]/);\n    for(i = 0; i < names.length; i++) {\n      if(i > 0)\n        names[i] = names[i].charAt(0).toUpperCase() + names[i].slice(1);\n    }\n    return names.join(\"\");\n  }", "code_tokens": ["function", "(", "name", ")", "{", "var", "i", ",", "names", "=", "name", ".", "split", "(", "/", "[-\\s]", "/", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "names", ".", "length", ";", "i", "++", ")", "{", "if", "(", "i", ">", "0", ")", "names", "[", "i", "]", "=", "names", "[", "i", "]", ".", "charAt", "(", "0", ")", ".", "toUpperCase", "(", ")", "+", "names", "[", "i", "]", ".", "slice", "(", "1", ")", ";", "}", "return", "names", ".", "join", "(", "\"\"", ")", ";", "}"], "original_docstring": "\nconverts a string into a standardized class name, replacing\ninvalid characters with valid ones.\n\ntwentyc.cls.make_name(\"class-a\"); // classA\ntwentyc.cls.make_name(\"class a b\"); // classAB\ntwentyc.cls.make_name(\"Class-A_B\"); // ClassA_B\n\n@method make_name\n@param {String} name base name\n@returns {String} class_name changed name\n", "docstring": {"block_comment": "converts a string into a standardized class name, replacing \ninvalid characters with valid ones. \ntwentyc.cls.make_name  class a       classA \ntwentyc.cls.make_name  class a b       classAB \ntwentyc.cls.make_name  Class A_B       ClassA_B", "line_comment": null}, "docstring_tokens": ["{", "String", "}", "class_name", "changed", "name"], "sample_id": 358, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004180", "repo": "freedomjs/freedom", "path": "demo/customchannel/friend.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function () {\n  'use strict';\n}", "code_tokens": ["function", "(", ")", "{", "'use strict'", ";", "}"], "original_docstring": "Also provide an interface with an explicit API.", "docstring": {"block_comment": "Also provide an interface with an explicit API.", "line_comment": null}, "docstring_tokens": ["Also", "provide", "an", "interface", "with", "an", "explicit", "API", "."], "sample_id": 359, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004181", "repo": "lhy0719/xhtBlog", "path": "src/main/webapp/ui/ace/assets/js/uncompressed/jquery.easypiechart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(el, options) {\n\tvar cachedBackground;\n\tvar canvas = document.createElement('canvas');\n\n\tel.appendChild(canvas);\n\n\tif (typeof(G_vmlCanvasManager) !== 'undefined') {\n\t\tG_vmlCanvasManager.initElement(canvas);\n\t}\n\n\tvar ctx = canvas.getContext('2d');\n\n\tcanvas.width = canvas.height = options.size;\n\n\t// canvas on retina devices\n\tvar scaleBy = 1;\n\tif (window.devicePixelRatio > 1) {\n\t\tscaleBy = window.devicePixelRatio;\n\t\tcanvas.style.width = canvas.style.height = [options.size, 'px'].join('');\n\t\tcanvas.width = canvas.height = options.size * scaleBy;\n\t\tctx.scale(scaleBy, scaleBy);\n\t}\n\n\t// move 0,0 coordinates to the center\n\tctx.translate(options.size / 2, options.size / 2);\n\n\t// rotate canvas -90deg\n\tctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);\n\n\tvar radius = (options.size - options.lineWidth) / 2;\n\tif (options.scaleColor && options.scaleLength) {\n\t\tradius -= options.scaleLength + 2; // 2 is the distance between scale and bar\n\t}\n\n\t// IE polyfill for Date\n\tDate.now = Date.now || function() {\n\t\treturn +(new Date());\n\t};\n\n\t/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */\n\tvar drawCircle = function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t};\n\n\t/**\n\t * Draw the scale of the chart\n\t */\n\tvar drawScale = function() {\n\t\tvar offset;\n\t\tvar length;\n\n\t\tctx.lineWidth = 1;\n\t\tctx.fillStyle = options.scaleColor;\n\n\t\tctx.save();\n\t\tfor (var i = 24; i > 0; --i) {\n\t\t\tif (i % 6 === 0) {\n\t\t\t\tlength = options.scaleLength;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\tlength = options.scaleLength * 0.6;\n\t\t\t\toffset = options.scaleLength - length;\n\t\t\t}\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\n\t\t\tctx.rotate(Math.PI / 12);\n\t\t}\n\t\tctx.restore();\n\t};\n\n\t/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */\n\tvar reqAnimationFrame = (function() {\n\t\treturn  window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t}());\n\n\t/**\n\t * Draw the background of the plugin including the scale and the track\n\t */\n\tvar drawBackground = function() {\n\t\tif(options.scaleColor) drawScale();\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.lineWidth, 1);\n\t};\n\n  /**\n    * Canvas accessor\n   */\n  this.getCanvas = function() {\n    return canvas;\n  };\n  \n  /**\n    * Canvas 2D context 'ctx' accessor\n   */\n  this.getCtx = function() {\n    return ctx;\n  };\n\n\t/**\n\t * Clear the complete canvas\n\t */\n\tthis.clear = function() {\n\t\tctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);\n\t};\n\n\t/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */\n\tthis.draw = function(percent) {\n\t\t// do we need to render a background\n\t\tif (!!options.scaleColor || !!options.trackColor) {\n\t\t\t// getImageData and putImageData are supported\n\t\t\tif (ctx.getImageData && ctx.putImageData) {\n\t\t\t\tif (!cachedBackground) {\n\t\t\t\t\tdrawBackground();\n\t\t\t\t\tcachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);\n\t\t\t\t} else {\n\t\t\t\t\tctx.putImageData(cachedBackground, 0, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t\tdrawBackground();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tctx.lineCap = options.lineCap;\n\n\t\t// if barcolor is a function execute it and pass the percent as a value\n\t\tvar color;\n\t\tif (typeof(options.barColor) === 'function') {\n\t\t\tcolor = options.barColor(percent);\n\t\t} else {\n\t\t\tcolor = options.barColor;\n\t\t}\n\n\t\t// draw bar\n\t\tdrawCircle(color, options.lineWidth, percent / 100);\n\t}.bind(this);\n\n\t/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */\n\tthis.animate = function(from, to) {\n\t\tvar startTime = Date.now();\n\t\toptions.onStart(from, to);\n\t\tvar animation = function() {\n\t\t\tvar process = Math.min(Date.now() - startTime, options.animate.duration);\n\t\t\tvar currentValue = options.easing(this, process, from, to - from, options.animate.duration);\n\t\t\tthis.draw(currentValue);\n\t\t\toptions.onStep(from, to, currentValue);\n\t\t\tif (process >= options.animate.duration) {\n\t\t\t\toptions.onStop(from, to);\n\t\t\t} else {\n\t\t\t\treqAnimationFrame(animation);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\treqAnimationFrame(animation);\n\t}.bind(this);\n}", "code_tokens": ["function", "(", "el", ",", "options", ")", "{", "var", "cachedBackground", ";", "var", "canvas", "=", "document", ".", "createElement", "(", "'canvas'", ")", ";", "el", ".", "appendChild", "(", "canvas", ")", ";", "if", "(", "typeof", "(", "G_vmlCanvasManager", ")", "!==", "'undefined'", ")", "{", "G_vmlCanvasManager", ".", "initElement", "(", "canvas", ")", ";", "}", "var", "ctx", "=", "canvas", ".", "getContext", "(", "'2d'", ")", ";", "canvas", ".", "width", "=", "canvas", ".", "height", "=", "options", ".", "size", ";", "// canvas on retina devices", "var", "scaleBy", "=", "1", ";", "if", "(", "window", ".", "devicePixelRatio", ">", "1", ")", "{", "scaleBy", "=", "window", ".", "devicePixelRatio", ";", "canvas", ".", "style", ".", "width", "=", "canvas", ".", "style", ".", "height", "=", "[", "options", ".", "size", ",", "'px'", "]", ".", "join", "(", "''", ")", ";", "canvas", ".", "width", "=", "canvas", ".", "height", "=", "options", ".", "size", "*", "scaleBy", ";", "ctx", ".", "scale", "(", "scaleBy", ",", "scaleBy", ")", ";", "}", "// move 0,0 coordinates to the center", "ctx", ".", "translate", "(", "options", ".", "size", "/", "2", ",", "options", ".", "size", "/", "2", ")", ";", "// rotate canvas -90deg", "ctx", ".", "rotate", "(", "(", "-", "1", "/", "2", "+", "options", ".", "rotate", "/", "180", ")", "*", "Math", ".", "PI", ")", ";", "var", "radius", "=", "(", "options", ".", "size", "-", "options", ".", "lineWidth", ")", "/", "2", ";", "if", "(", "options", ".", "scaleColor", "&&", "options", ".", "scaleLength", ")", "{", "radius", "-=", "options", ".", "scaleLength", "+", "2", ";", "// 2 is the distance between scale and bar", "}", "// IE polyfill for Date", "Date", ".", "now", "=", "Date", ".", "now", "||", "function", "(", ")", "{", "return", "+", "(", "new", "Date", "(", ")", ")", ";", "}", ";", "/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */", "var", "drawCircle", "=", "function", "(", "color", ",", "lineWidth", ",", "percent", ")", "{", "percent", "=", "Math", ".", "min", "(", "Math", ".", "max", "(", "-", "1", ",", "percent", "||", "0", ")", ",", "1", ")", ";", "var", "isNegative", "=", "percent", "<=", "0", "?", "true", ":", "false", ";", "ctx", ".", "beginPath", "(", ")", ";", "ctx", ".", "arc", "(", "0", ",", "0", ",", "radius", ",", "0", ",", "Math", ".", "PI", "*", "2", "*", "percent", ",", "isNegative", ")", ";", "ctx", ".", "strokeStyle", "=", "color", ";", "ctx", ".", "lineWidth", "=", "lineWidth", ";", "ctx", ".", "stroke", "(", ")", ";", "}", ";", "/**\n\t * Draw the scale of the chart\n\t */", "var", "drawScale", "=", "function", "(", ")", "{", "var", "offset", ";", "var", "length", ";", "ctx", ".", "lineWidth", "=", "1", ";", "ctx", ".", "fillStyle", "=", "options", ".", "scaleColor", ";", "ctx", ".", "save", "(", ")", ";", "for", "(", "var", "i", "=", "24", ";", "i", ">", "0", ";", "--", "i", ")", "{", "if", "(", "i", "%", "6", "===", "0", ")", "{", "length", "=", "options", ".", "scaleLength", ";", "offset", "=", "0", ";", "}", "else", "{", "length", "=", "options", ".", "scaleLength", "*", "0.6", ";", "offset", "=", "options", ".", "scaleLength", "-", "length", ";", "}", "ctx", ".", "fillRect", "(", "-", "options", ".", "size", "/", "2", "+", "offset", ",", "0", ",", "length", ",", "1", ")", ";", "ctx", ".", "rotate", "(", "Math", ".", "PI", "/", "12", ")", ";", "}", "ctx", ".", "restore", "(", ")", ";", "}", ";", "/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */", "var", "reqAnimationFrame", "=", "(", "function", "(", ")", "{", "return", "window", ".", "requestAnimationFrame", "||", "window", ".", "webkitRequestAnimationFrame", "||", "window", ".", "mozRequestAnimationFrame", "||", "function", "(", "callback", ")", "{", "window", ".", "setTimeout", "(", "callback", ",", "1000", "/", "60", ")", ";", "}", ";", "}", "(", ")", ")", ";", "/**\n\t * Draw the background of the plugin including the scale and the track\n\t */", "var", "drawBackground", "=", "function", "(", ")", "{", "if", "(", "options", ".", "scaleColor", ")", "drawScale", "(", ")", ";", "if", "(", "options", ".", "trackColor", ")", "drawCircle", "(", "options", ".", "trackColor", ",", "options", ".", "lineWidth", ",", "1", ")", ";", "}", ";", "/**\n    * Canvas accessor\n   */", "this", ".", "getCanvas", "=", "function", "(", ")", "{", "return", "canvas", ";", "}", ";", "/**\n    * Canvas 2D context 'ctx' accessor\n   */", "this", ".", "getCtx", "=", "function", "(", ")", "{", "return", "ctx", ";", "}", ";", "/**\n\t * Clear the complete canvas\n\t */", "this", ".", "clear", "=", "function", "(", ")", "{", "ctx", ".", "clearRect", "(", "options", ".", "size", "/", "-", "2", ",", "options", ".", "size", "/", "-", "2", ",", "options", ".", "size", ",", "options", ".", "size", ")", ";", "}", ";", "/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */", "this", ".", "draw", "=", "function", "(", "percent", ")", "{", "// do we need to render a background", "if", "(", "!", "!", "options", ".", "scaleColor", "||", "!", "!", "options", ".", "trackColor", ")", "{", "// getImageData and putImageData are supported", "if", "(", "ctx", ".", "getImageData", "&&", "ctx", ".", "putImageData", ")", "{", "if", "(", "!", "cachedBackground", ")", "{", "drawBackground", "(", ")", ";", "cachedBackground", "=", "ctx", ".", "getImageData", "(", "0", ",", "0", ",", "options", ".", "size", "*", "scaleBy", ",", "options", ".", "size", "*", "scaleBy", ")", ";", "}", "else", "{", "ctx", ".", "putImageData", "(", "cachedBackground", ",", "0", ",", "0", ")", ";", "}", "}", "else", "{", "this", ".", "clear", "(", ")", ";", "drawBackground", "(", ")", ";", "}", "}", "else", "{", "this", ".", "clear", "(", ")", ";", "}", "ctx", ".", "lineCap", "=", "options", ".", "lineCap", ";", "// if barcolor is a function execute it and pass the percent as a value", "var", "color", ";", "if", "(", "typeof", "(", "options", ".", "barColor", ")", "===", "'function'", ")", "{", "color", "=", "options", ".", "barColor", "(", "percent", ")", ";", "}", "else", "{", "color", "=", "options", ".", "barColor", ";", "}", "// draw bar", "drawCircle", "(", "color", ",", "options", ".", "lineWidth", ",", "percent", "/", "100", ")", ";", "}", ".", "bind", "(", "this", ")", ";", "/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */", "this", ".", "animate", "=", "function", "(", "from", ",", "to", ")", "{", "var", "startTime", "=", "Date", ".", "now", "(", ")", ";", "options", ".", "onStart", "(", "from", ",", "to", ")", ";", "var", "animation", "=", "function", "(", ")", "{", "var", "process", "=", "Math", ".", "min", "(", "Date", ".", "now", "(", ")", "-", "startTime", ",", "options", ".", "animate", ".", "duration", ")", ";", "var", "currentValue", "=", "options", ".", "easing", "(", "this", ",", "process", ",", "from", ",", "to", "-", "from", ",", "options", ".", "animate", ".", "duration", ")", ";", "this", ".", "draw", "(", "currentValue", ")", ";", "options", ".", "onStep", "(", "from", ",", "to", ",", "currentValue", ")", ";", "if", "(", "process", ">=", "options", ".", "animate", ".", "duration", ")", "{", "options", ".", "onStop", "(", "from", ",", "to", ")", ";", "}", "else", "{", "reqAnimationFrame", "(", "animation", ")", ";", "}", "}", ".", "bind", "(", "this", ")", ";", "reqAnimationFrame", "(", "animation", ")", ";", "}", ".", "bind", "(", "this", ")", ";", "}"], "original_docstring": "\nRenderer to render the chart on a canvas object\n@param {DOMElement} el      DOM element to host the canvas (root of the plugin)\n@param {object}     options options object of the plugin\n", "docstring": {"block_comment": "Renderer to render the chart on a canvas object", "line_comment": ["canvas on retina devices", "move 0,0 coordinates to the center", "rotate canvas  90deg", "2 is the distance between scale and bar", "IE polyfill for Date", "Draw a circle around the center of the canvas \n param  strong  color     Valid CSS color string \n param  number  lineWidth Width of the line in px \n param  number  percent   Percentage to draw  float between  1 and 1 ", "Draw the scale of the chart", "Request animation frame wrapper with polyfill \n return  function  Request animation frame method or timeout fallback", "Draw the background of the plugin including the scale and the track", "Canvas accessor", "Canvas 2D context  ctx  accessor", "Clear the complete canvas", "Draw the complete chart \n param  number  percent Percent shown by the chart between  100 and 100", "do we need to render a background", "getImageData and putImageData are supported", "if barcolor is a function execute it and pass the percent as a value", "draw bar", "Animate from some percent to some other percentage \n param  number  from Starting percentage \n param  number  to   Final percentage"]}, "docstring_tokens": ["Renderer", "to", "render", "the", "chart", "on", "a", "canvas", "object"], "sample_id": 360, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004181", "repo": "lhy0719/xhtBlog", "path": "src/main/webapp/ui/ace/assets/js/uncompressed/jquery.easypiechart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(el, options) {\n\tvar cachedBackground;\n\tvar canvas = document.createElement('canvas');\n\n\tel.appendChild(canvas);\n\n\tif (typeof(G_vmlCanvasManager) !== 'undefined') {\n\t\tG_vmlCanvasManager.initElement(canvas);\n\t}\n\n\tvar ctx = canvas.getContext('2d');\n\n\tcanvas.width = canvas.height = options.size;\n\n\t// canvas on retina devices\n\tvar scaleBy = 1;\n\tif (window.devicePixelRatio > 1) {\n\t\tscaleBy = window.devicePixelRatio;\n\t\tcanvas.style.width = canvas.style.height = [options.size, 'px'].join('');\n\t\tcanvas.width = canvas.height = options.size * scaleBy;\n\t\tctx.scale(scaleBy, scaleBy);\n\t}\n\n\t// move 0,0 coordinates to the center\n\tctx.translate(options.size / 2, options.size / 2);\n\n\t// rotate canvas -90deg\n\tctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);\n\n\tvar radius = (options.size - options.lineWidth) / 2;\n\tif (options.scaleColor && options.scaleLength) {\n\t\tradius -= options.scaleLength + 2; // 2 is the distance between scale and bar\n\t}\n\n\t// IE polyfill for Date\n\tDate.now = Date.now || function() {\n\t\treturn +(new Date());\n\t};\n\n\t/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */\n\tvar drawCircle = function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t};\n\n\t/**\n\t * Draw the scale of the chart\n\t */\n\tvar drawScale = function() {\n\t\tvar offset;\n\t\tvar length;\n\n\t\tctx.lineWidth = 1;\n\t\tctx.fillStyle = options.scaleColor;\n\n\t\tctx.save();\n\t\tfor (var i = 24; i > 0; --i) {\n\t\t\tif (i % 6 === 0) {\n\t\t\t\tlength = options.scaleLength;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\tlength = options.scaleLength * 0.6;\n\t\t\t\toffset = options.scaleLength - length;\n\t\t\t}\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\n\t\t\tctx.rotate(Math.PI / 12);\n\t\t}\n\t\tctx.restore();\n\t};\n\n\t/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */\n\tvar reqAnimationFrame = (function() {\n\t\treturn  window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t}());\n\n\t/**\n\t * Draw the background of the plugin including the scale and the track\n\t */\n\tvar drawBackground = function() {\n\t\tif(options.scaleColor) drawScale();\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.lineWidth, 1);\n\t};\n\n  /**\n    * Canvas accessor\n   */\n  this.getCanvas = function() {\n    return canvas;\n  };\n  \n  /**\n    * Canvas 2D context 'ctx' accessor\n   */\n  this.getCtx = function() {\n    return ctx;\n  };\n\n\t/**\n\t * Clear the complete canvas\n\t */\n\tthis.clear = function() {\n\t\tctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);\n\t};\n\n\t/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */\n\tthis.draw = function(percent) {\n\t\t// do we need to render a background\n\t\tif (!!options.scaleColor || !!options.trackColor) {\n\t\t\t// getImageData and putImageData are supported\n\t\t\tif (ctx.getImageData && ctx.putImageData) {\n\t\t\t\tif (!cachedBackground) {\n\t\t\t\t\tdrawBackground();\n\t\t\t\t\tcachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);\n\t\t\t\t} else {\n\t\t\t\t\tctx.putImageData(cachedBackground, 0, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t\tdrawBackground();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tctx.lineCap = options.lineCap;\n\n\t\t// if barcolor is a function execute it and pass the percent as a value\n\t\tvar color;\n\t\tif (typeof(options.barColor) === 'function') {\n\t\t\tcolor = options.barColor(percent);\n\t\t} else {\n\t\t\tcolor = options.barColor;\n\t\t}\n\n\t\t// draw bar\n\t\tdrawCircle(color, options.lineWidth, percent / 100);\n\t}.bind(this);\n\n\t/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */\n\tthis.animate = function(from, to) {\n\t\tvar startTime = Date.now();\n\t\toptions.onStart(from, to);\n\t\tvar animation = function() {\n\t\t\tvar process = Math.min(Date.now() - startTime, options.animate.duration);\n\t\t\tvar currentValue = options.easing(this, process, from, to - from, options.animate.duration);\n\t\t\tthis.draw(currentValue);\n\t\t\toptions.onStep(from, to, currentValue);\n\t\t\tif (process >= options.animate.duration) {\n\t\t\t\toptions.onStop(from, to);\n\t\t\t} else {\n\t\t\t\treqAnimationFrame(animation);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\treqAnimationFrame(animation);\n\t}.bind(this);\n}", "code_tokens": ["function", "(", "el", ",", "options", ")", "{", "var", "cachedBackground", ";", "var", "canvas", "=", "document", ".", "createElement", "(", "'canvas'", ")", ";", "el", ".", "appendChild", "(", "canvas", ")", ";", "if", "(", "typeof", "(", "G_vmlCanvasManager", ")", "!==", "'undefined'", ")", "{", "G_vmlCanvasManager", ".", "initElement", "(", "canvas", ")", ";", "}", "var", "ctx", "=", "canvas", ".", "getContext", "(", "'2d'", ")", ";", "canvas", ".", "width", "=", "canvas", ".", "height", "=", "options", ".", "size", ";", "// canvas on retina devices", "var", "scaleBy", "=", "1", ";", "if", "(", "window", ".", "devicePixelRatio", ">", "1", ")", "{", "scaleBy", "=", "window", ".", "devicePixelRatio", ";", "canvas", ".", "style", ".", "width", "=", "canvas", ".", "style", ".", "height", "=", "[", "options", ".", "size", ",", "'px'", "]", ".", "join", "(", "''", ")", ";", "canvas", ".", "width", "=", "canvas", ".", "height", "=", "options", ".", "size", "*", "scaleBy", ";", "ctx", ".", "scale", "(", "scaleBy", ",", "scaleBy", ")", ";", "}", "// move 0,0 coordinates to the center", "ctx", ".", "translate", "(", "options", ".", "size", "/", "2", ",", "options", ".", "size", "/", "2", ")", ";", "// rotate canvas -90deg", "ctx", ".", "rotate", "(", "(", "-", "1", "/", "2", "+", "options", ".", "rotate", "/", "180", ")", "*", "Math", ".", "PI", ")", ";", "var", "radius", "=", "(", "options", ".", "size", "-", "options", ".", "lineWidth", ")", "/", "2", ";", "if", "(", "options", ".", "scaleColor", "&&", "options", ".", "scaleLength", ")", "{", "radius", "-=", "options", ".", "scaleLength", "+", "2", ";", "// 2 is the distance between scale and bar", "}", "// IE polyfill for Date", "Date", ".", "now", "=", "Date", ".", "now", "||", "function", "(", ")", "{", "return", "+", "(", "new", "Date", "(", ")", ")", ";", "}", ";", "/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */", "var", "drawCircle", "=", "function", "(", "color", ",", "lineWidth", ",", "percent", ")", "{", "percent", "=", "Math", ".", "min", "(", "Math", ".", "max", "(", "-", "1", ",", "percent", "||", "0", ")", ",", "1", ")", ";", "var", "isNegative", "=", "percent", "<=", "0", "?", "true", ":", "false", ";", "ctx", ".", "beginPath", "(", ")", ";", "ctx", ".", "arc", "(", "0", ",", "0", ",", "radius", ",", "0", ",", "Math", ".", "PI", "*", "2", "*", "percent", ",", "isNegative", ")", ";", "ctx", ".", "strokeStyle", "=", "color", ";", "ctx", ".", "lineWidth", "=", "lineWidth", ";", "ctx", ".", "stroke", "(", ")", ";", "}", ";", "/**\n\t * Draw the scale of the chart\n\t */", "var", "drawScale", "=", "function", "(", ")", "{", "var", "offset", ";", "var", "length", ";", "ctx", ".", "lineWidth", "=", "1", ";", "ctx", ".", "fillStyle", "=", "options", ".", "scaleColor", ";", "ctx", ".", "save", "(", ")", ";", "for", "(", "var", "i", "=", "24", ";", "i", ">", "0", ";", "--", "i", ")", "{", "if", "(", "i", "%", "6", "===", "0", ")", "{", "length", "=", "options", ".", "scaleLength", ";", "offset", "=", "0", ";", "}", "else", "{", "length", "=", "options", ".", "scaleLength", "*", "0.6", ";", "offset", "=", "options", ".", "scaleLength", "-", "length", ";", "}", "ctx", ".", "fillRect", "(", "-", "options", ".", "size", "/", "2", "+", "offset", ",", "0", ",", "length", ",", "1", ")", ";", "ctx", ".", "rotate", "(", "Math", ".", "PI", "/", "12", ")", ";", "}", "ctx", ".", "restore", "(", ")", ";", "}", ";", "/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */", "var", "reqAnimationFrame", "=", "(", "function", "(", ")", "{", "return", "window", ".", "requestAnimationFrame", "||", "window", ".", "webkitRequestAnimationFrame", "||", "window", ".", "mozRequestAnimationFrame", "||", "function", "(", "callback", ")", "{", "window", ".", "setTimeout", "(", "callback", ",", "1000", "/", "60", ")", ";", "}", ";", "}", "(", ")", ")", ";", "/**\n\t * Draw the background of the plugin including the scale and the track\n\t */", "var", "drawBackground", "=", "function", "(", ")", "{", "if", "(", "options", ".", "scaleColor", ")", "drawScale", "(", ")", ";", "if", "(", "options", ".", "trackColor", ")", "drawCircle", "(", "options", ".", "trackColor", ",", "options", ".", "lineWidth", ",", "1", ")", ";", "}", ";", "/**\n    * Canvas accessor\n   */", "this", ".", "getCanvas", "=", "function", "(", ")", "{", "return", "canvas", ";", "}", ";", "/**\n    * Canvas 2D context 'ctx' accessor\n   */", "this", ".", "getCtx", "=", "function", "(", ")", "{", "return", "ctx", ";", "}", ";", "/**\n\t * Clear the complete canvas\n\t */", "this", ".", "clear", "=", "function", "(", ")", "{", "ctx", ".", "clearRect", "(", "options", ".", "size", "/", "-", "2", ",", "options", ".", "size", "/", "-", "2", ",", "options", ".", "size", ",", "options", ".", "size", ")", ";", "}", ";", "/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */", "this", ".", "draw", "=", "function", "(", "percent", ")", "{", "// do we need to render a background", "if", "(", "!", "!", "options", ".", "scaleColor", "||", "!", "!", "options", ".", "trackColor", ")", "{", "// getImageData and putImageData are supported", "if", "(", "ctx", ".", "getImageData", "&&", "ctx", ".", "putImageData", ")", "{", "if", "(", "!", "cachedBackground", ")", "{", "drawBackground", "(", ")", ";", "cachedBackground", "=", "ctx", ".", "getImageData", "(", "0", ",", "0", ",", "options", ".", "size", "*", "scaleBy", ",", "options", ".", "size", "*", "scaleBy", ")", ";", "}", "else", "{", "ctx", ".", "putImageData", "(", "cachedBackground", ",", "0", ",", "0", ")", ";", "}", "}", "else", "{", "this", ".", "clear", "(", ")", ";", "drawBackground", "(", ")", ";", "}", "}", "else", "{", "this", ".", "clear", "(", ")", ";", "}", "ctx", ".", "lineCap", "=", "options", ".", "lineCap", ";", "// if barcolor is a function execute it and pass the percent as a value", "var", "color", ";", "if", "(", "typeof", "(", "options", ".", "barColor", ")", "===", "'function'", ")", "{", "color", "=", "options", ".", "barColor", "(", "percent", ")", ";", "}", "else", "{", "color", "=", "options", ".", "barColor", ";", "}", "// draw bar", "drawCircle", "(", "color", ",", "options", ".", "lineWidth", ",", "percent", "/", "100", ")", ";", "}", ".", "bind", "(", "this", ")", ";", "/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */", "this", ".", "animate", "=", "function", "(", "from", ",", "to", ")", "{", "var", "startTime", "=", "Date", ".", "now", "(", ")", ";", "options", ".", "onStart", "(", "from", ",", "to", ")", ";", "var", "animation", "=", "function", "(", ")", "{", "var", "process", "=", "Math", ".", "min", "(", "Date", ".", "now", "(", ")", "-", "startTime", ",", "options", ".", "animate", ".", "duration", ")", ";", "var", "currentValue", "=", "options", ".", "easing", "(", "this", ",", "process", ",", "from", ",", "to", "-", "from", ",", "options", ".", "animate", ".", "duration", ")", ";", "this", ".", "draw", "(", "currentValue", ")", ";", "options", ".", "onStep", "(", "from", ",", "to", ",", "currentValue", ")", ";", "if", "(", "process", ">=", "options", ".", "animate", ".", "duration", ")", "{", "options", ".", "onStop", "(", "from", ",", "to", ")", ";", "}", "else", "{", "reqAnimationFrame", "(", "animation", ")", ";", "}", "}", ".", "bind", "(", "this", ")", ";", "reqAnimationFrame", "(", "animation", ")", ";", "}", ".", "bind", "(", "this", ")", ";", "}"], "original_docstring": "\nRenderer to render the chart on a canvas object\n@param {DOMElement} el      DOM element to host the canvas (root of the plugin)\n@param {object}     options options object of the plugin\n", "docstring": {"block_comment": "Renderer to render the chart on a canvas object", "line_comment": ["canvas on retina devices", "move 0,0 coordinates to the center", "rotate canvas  90deg", "2 is the distance between scale and bar", "IE polyfill for Date", "Draw a circle around the center of the canvas \n param  strong  color     Valid CSS color string \n param  number  lineWidth Width of the line in px \n param  number  percent   Percentage to draw  float between  1 and 1 ", "Draw the scale of the chart", "Request animation frame wrapper with polyfill \n return  function  Request animation frame method or timeout fallback", "Draw the background of the plugin including the scale and the track", "Canvas accessor", "Canvas 2D context  ctx  accessor", "Clear the complete canvas", "Draw the complete chart \n param  number  percent Percent shown by the chart between  100 and 100", "do we need to render a background", "getImageData and putImageData are supported", "if barcolor is a function execute it and pass the percent as a value", "draw bar", "Animate from some percent to some other percentage \n param  number  from Starting percentage \n param  number  to   Final percentage"]}, "docstring_tokens": ["DOM", "element", "to", "host", "the", "canvas", "(", "root", "of", "the", "plugin", ")"], "sample_id": 360, "prompt_tokens": ["<javascript>", "<param>", "el"], "comment_type": "param", "sentence_id": 1}
{"id": "21004182", "repo": "lhy0719/xhtBlog", "path": "src/main/webapp/ui/ace/assets/js/uncompressed/jquery.easypiechart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n\t\tif(options.scaleColor) drawScale();\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.lineWidth, 1);\n\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "options", ".", "scaleColor", ")", "drawScale", "(", ")", ";", "if", "(", "options", ".", "trackColor", ")", "drawCircle", "(", "options", ".", "trackColor", ",", "options", ".", "lineWidth", ",", "1", ")", ";", "}"], "original_docstring": "\nDraw the background of the plugin including the scale and the track\n", "docstring": {"block_comment": "Draw the background of the plugin including the scale and the track", "line_comment": null}, "docstring_tokens": ["Draw", "the", "background", "of", "the", "plugin", "including", "the", "scale", "and", "the", "track"], "sample_id": 361, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004183", "repo": "lhy0719/xhtBlog", "path": "src/main/webapp/ui/ace/assets/js/uncompressed/jquery.easypiechart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n\t\tvar offset;\n\t\tvar length;\n\n\t\tctx.lineWidth = 1;\n\t\tctx.fillStyle = options.scaleColor;\n\n\t\tctx.save();\n\t\tfor (var i = 24; i > 0; --i) {\n\t\t\tif (i % 6 === 0) {\n\t\t\t\tlength = options.scaleLength;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\tlength = options.scaleLength * 0.6;\n\t\t\t\toffset = options.scaleLength - length;\n\t\t\t}\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\n\t\t\tctx.rotate(Math.PI / 12);\n\t\t}\n\t\tctx.restore();\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "offset", ";", "var", "length", ";", "ctx", ".", "lineWidth", "=", "1", ";", "ctx", ".", "fillStyle", "=", "options", ".", "scaleColor", ";", "ctx", ".", "save", "(", ")", ";", "for", "(", "var", "i", "=", "24", ";", "i", ">", "0", ";", "--", "i", ")", "{", "if", "(", "i", "%", "6", "===", "0", ")", "{", "length", "=", "options", ".", "scaleLength", ";", "offset", "=", "0", ";", "}", "else", "{", "length", "=", "options", ".", "scaleLength", "*", "0.6", ";", "offset", "=", "options", ".", "scaleLength", "-", "length", ";", "}", "ctx", ".", "fillRect", "(", "-", "options", ".", "size", "/", "2", "+", "offset", ",", "0", ",", "length", ",", "1", ")", ";", "ctx", ".", "rotate", "(", "Math", ".", "PI", "/", "12", ")", ";", "}", "ctx", ".", "restore", "(", ")", ";", "}"], "original_docstring": "\nDraw the scale of the chart\n", "docstring": {"block_comment": "Draw the scale of the chart", "line_comment": null}, "docstring_tokens": ["Draw", "the", "scale", "of", "the", "chart"], "sample_id": 362, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004184", "repo": "lhy0719/xhtBlog", "path": "src/main/webapp/ui/ace/assets/js/uncompressed/jquery.easypiechart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t}", "code_tokens": ["function", "(", "color", ",", "lineWidth", ",", "percent", ")", "{", "percent", "=", "Math", ".", "min", "(", "Math", ".", "max", "(", "-", "1", ",", "percent", "||", "0", ")", ",", "1", ")", ";", "var", "isNegative", "=", "percent", "<=", "0", "?", "true", ":", "false", ";", "ctx", ".", "beginPath", "(", ")", ";", "ctx", ".", "arc", "(", "0", ",", "0", ",", "radius", ",", "0", ",", "Math", ".", "PI", "*", "2", "*", "percent", ",", "isNegative", ")", ";", "ctx", ".", "strokeStyle", "=", "color", ";", "ctx", ".", "lineWidth", "=", "lineWidth", ";", "ctx", ".", "stroke", "(", ")", ";", "}"], "original_docstring": "\nDraw a circle around the center of the canvas\n@param {strong} color     Valid CSS color string\n@param {number} lineWidth Width of the line in px\n@param {number} percent   Percentage to draw (float between -1 and 1)\n", "docstring": {"block_comment": "Draw a circle around the center of the canvas", "line_comment": null}, "docstring_tokens": ["Draw", "a", "circle", "around", "the", "center", "of", "the", "canvas"], "sample_id": 363, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004184", "repo": "lhy0719/xhtBlog", "path": "src/main/webapp/ui/ace/assets/js/uncompressed/jquery.easypiechart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t}", "code_tokens": ["function", "(", "color", ",", "lineWidth", ",", "percent", ")", "{", "percent", "=", "Math", ".", "min", "(", "Math", ".", "max", "(", "-", "1", ",", "percent", "||", "0", ")", ",", "1", ")", ";", "var", "isNegative", "=", "percent", "<=", "0", "?", "true", ":", "false", ";", "ctx", ".", "beginPath", "(", ")", ";", "ctx", ".", "arc", "(", "0", ",", "0", ",", "radius", ",", "0", ",", "Math", ".", "PI", "*", "2", "*", "percent", ",", "isNegative", ")", ";", "ctx", ".", "strokeStyle", "=", "color", ";", "ctx", ".", "lineWidth", "=", "lineWidth", ";", "ctx", ".", "stroke", "(", ")", ";", "}"], "original_docstring": "\nDraw a circle around the center of the canvas\n@param {strong} color     Valid CSS color string\n@param {number} lineWidth Width of the line in px\n@param {number} percent   Percentage to draw (float between -1 and 1)\n", "docstring": {"block_comment": "Draw a circle around the center of the canvas", "line_comment": null}, "docstring_tokens": ["Valid", "CSS", "color", "string"], "sample_id": 363, "prompt_tokens": ["<javascript>", "<param>", "color"], "comment_type": "param", "sentence_id": 1}
{"id": "21004184", "repo": "lhy0719/xhtBlog", "path": "src/main/webapp/ui/ace/assets/js/uncompressed/jquery.easypiechart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t}", "code_tokens": ["function", "(", "color", ",", "lineWidth", ",", "percent", ")", "{", "percent", "=", "Math", ".", "min", "(", "Math", ".", "max", "(", "-", "1", ",", "percent", "||", "0", ")", ",", "1", ")", ";", "var", "isNegative", "=", "percent", "<=", "0", "?", "true", ":", "false", ";", "ctx", ".", "beginPath", "(", ")", ";", "ctx", ".", "arc", "(", "0", ",", "0", ",", "radius", ",", "0", ",", "Math", ".", "PI", "*", "2", "*", "percent", ",", "isNegative", ")", ";", "ctx", ".", "strokeStyle", "=", "color", ";", "ctx", ".", "lineWidth", "=", "lineWidth", ";", "ctx", ".", "stroke", "(", ")", ";", "}"], "original_docstring": "\nDraw a circle around the center of the canvas\n@param {strong} color     Valid CSS color string\n@param {number} lineWidth Width of the line in px\n@param {number} percent   Percentage to draw (float between -1 and 1)\n", "docstring": {"block_comment": "Draw a circle around the center of the canvas", "line_comment": null}, "docstring_tokens": ["Width", "of", "the", "line", "in", "px"], "sample_id": 363, "prompt_tokens": ["<javascript>", "<param>", "lineWidth"], "comment_type": "param", "sentence_id": 2}
{"id": "21004184", "repo": "lhy0719/xhtBlog", "path": "src/main/webapp/ui/ace/assets/js/uncompressed/jquery.easypiechart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t}", "code_tokens": ["function", "(", "color", ",", "lineWidth", ",", "percent", ")", "{", "percent", "=", "Math", ".", "min", "(", "Math", ".", "max", "(", "-", "1", ",", "percent", "||", "0", ")", ",", "1", ")", ";", "var", "isNegative", "=", "percent", "<=", "0", "?", "true", ":", "false", ";", "ctx", ".", "beginPath", "(", ")", ";", "ctx", ".", "arc", "(", "0", ",", "0", ",", "radius", ",", "0", ",", "Math", ".", "PI", "*", "2", "*", "percent", ",", "isNegative", ")", ";", "ctx", ".", "strokeStyle", "=", "color", ";", "ctx", ".", "lineWidth", "=", "lineWidth", ";", "ctx", ".", "stroke", "(", ")", ";", "}"], "original_docstring": "\nDraw a circle around the center of the canvas\n@param {strong} color     Valid CSS color string\n@param {number} lineWidth Width of the line in px\n@param {number} percent   Percentage to draw (float between -1 and 1)\n", "docstring": {"block_comment": "Draw a circle around the center of the canvas", "line_comment": null}, "docstring_tokens": ["Percentage", "to", "draw", "(", "float", "between", "-", "1", "and", "1", ")"], "sample_id": 363, "prompt_tokens": ["<javascript>", "<param>", "percent"], "comment_type": "param", "sentence_id": 3}
{"id": "21004185", "repo": "Hasreon/Hasreon", "path": "client/js-libs/jxs.js", "language": "JavaScript", "license": "artistic-2.0", "func_name": "", "code": "function (url,callback,format,method, opt) {\n\t\tvar http = this.init(); //The XMLHttpRequest object is recreated at every call - to defeat Cache problem in IE\n\t\tif(!http||!url) return;\n\t\t//XML Format need this for some Mozilla Browsers\n\t\tif (http.overrideMimeType) http.overrideMimeType('text/xml');\n\n\t\tif(!method) method = \"GET\";//Default method is GET\n\t\tif(!format) format = \"text\";//Default return type is 'text'\n\t\tif(!opt) opt = {};\n\t\tformat = format.toLowerCase();\n\t\tmethod = method.toUpperCase();\n\t\t\n\t\t//Kill the Cache problem in IE.\n\t\tvar now = \"uid=\" + new Date().getTime();\n\t\turl += (url.indexOf(\"?\")+1) ? \"&\" : \"?\";\n\t\turl += now;\n\n\t\tvar parameters = null;\n\n\t\tif(method==\"POST\") {\n\t\t\tvar parts = url.split(\"\\?\");\n\t\t\turl = parts[0];\n\t\t\tparameters = parts[1];\n\t\t}\n\t\thttp.open(method, url, true);\n\n\t\tif(method==\"POST\") {\n\t\t\thttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t\t\thttp.setRequestHeader(\"Content-length\", parameters.length);\n\t\t\thttp.setRequestHeader(\"Connection\", \"close\");\n\t\t}\n\n\t\tvar ths = this;// Closure\n\t\tif(opt.handler) { //If a custom handler is defined, use it\n\t\t\thttp.onreadystatechange = function() { opt.handler(http); };\n\t\t} else {\n\t\t\thttp.onreadystatechange = function () {//Call a function when the state changes.\n\t\t\t\tif (http.readyState == 4) {//Ready State will be 4 when the document is loaded.\n\t\t\t\t\tif(http.status == 200) {\n\t\t\t\t\t\tvar result = \"\";\n\t\t\t\t\t\tif(http.responseText) result = http.responseText;\n\t\t\t\t\t\t//If the return is in JSON format, eval the result before returning it.\n\t\t\t\t\t\tif(format.charAt(0) == \"j\") {\n\t\t\t\t\t\t\t//\\n's in JSON string, when evaluated will create errors in IE\n\t\t\t\t\t\t\tresult = result.replace(/[\\n\\r]/g,\"\");\n\t\t\t\t\t\t\tresult = eval('('+result+')');\n\n\t\t\t\t\t\t} else if(format.charAt(0) == \"x\") { //XML Return\n\t\t\t\t\t\t\tresult = http.responseXML;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//Give the data to the callback function.\n\t\t\t\t\t\tif(callback) callback(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(opt.loadingIndicator) document.getElementsByTagName(\"body\")[0].removeChild(opt.loadingIndicator); //Remove the loading indicator\n\t\t\t\t\t\tif(opt.loading) document.getElementById(opt.loading).style.display=\"none\"; //Hide the given loading indicator.\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(error) error(http.status);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\thttp.send(parameters);\n\t}", "code_tokens": ["function", "(", "url", ",", "callback", ",", "format", ",", "method", ",", "opt", ")", "{", "var", "http", "=", "this", ".", "init", "(", ")", ";", "//The XMLHttpRequest object is recreated at every call - to defeat Cache problem in IE", "if", "(", "!", "http", "||", "!", "url", ")", "return", ";", "//XML Format need this for some Mozilla Browsers", "if", "(", "http", ".", "overrideMimeType", ")", "http", ".", "overrideMimeType", "(", "'text/xml'", ")", ";", "if", "(", "!", "method", ")", "method", "=", "\"GET\"", ";", "//Default method is GET", "if", "(", "!", "format", ")", "format", "=", "\"text\"", ";", "//Default return type is 'text'", "if", "(", "!", "opt", ")", "opt", "=", "{", "}", ";", "format", "=", "format", ".", "toLowerCase", "(", ")", ";", "method", "=", "method", ".", "toUpperCase", "(", ")", ";", "//Kill the Cache problem in IE.", "var", "now", "=", "\"uid=\"", "+", "new", "Date", "(", ")", ".", "getTime", "(", ")", ";", "url", "+=", "(", "url", ".", "indexOf", "(", "\"?\"", ")", "+", "1", ")", "?", "\"&\"", ":", "\"?\"", ";", "url", "+=", "now", ";", "var", "parameters", "=", "null", ";", "if", "(", "method", "==", "\"POST\"", ")", "{", "var", "parts", "=", "url", ".", "split", "(", "\"\\?\"", ")", ";", "url", "=", "parts", "[", "0", "]", ";", "parameters", "=", "parts", "[", "1", "]", ";", "}", "http", ".", "open", "(", "method", ",", "url", ",", "true", ")", ";", "if", "(", "method", "==", "\"POST\"", ")", "{", "http", ".", "setRequestHeader", "(", "\"Content-type\"", ",", "\"application/x-www-form-urlencoded\"", ")", ";", "http", ".", "setRequestHeader", "(", "\"Content-length\"", ",", "parameters", ".", "length", ")", ";", "http", ".", "setRequestHeader", "(", "\"Connection\"", ",", "\"close\"", ")", ";", "}", "var", "ths", "=", "this", ";", "// Closure", "if", "(", "opt", ".", "handler", ")", "{", "//If a custom handler is defined, use it", "http", ".", "onreadystatechange", "=", "function", "(", ")", "{", "opt", ".", "handler", "(", "http", ")", ";", "}", ";", "}", "else", "{", "http", ".", "onreadystatechange", "=", "function", "(", ")", "{", "//Call a function when the state changes.", "if", "(", "http", ".", "readyState", "==", "4", ")", "{", "//Ready State will be 4 when the document is loaded.", "if", "(", "http", ".", "status", "==", "200", ")", "{", "var", "result", "=", "\"\"", ";", "if", "(", "http", ".", "responseText", ")", "result", "=", "http", ".", "responseText", ";", "//If the return is in JSON format, eval the result before returning it.", "if", "(", "format", ".", "charAt", "(", "0", ")", "==", "\"j\"", ")", "{", "//\\n's in JSON string, when evaluated will create errors in IE", "result", "=", "result", ".", "replace", "(", "/", "[\\n\\r]", "/", "g", ",", "\"\"", ")", ";", "result", "=", "eval", "(", "'('", "+", "result", "+", "')'", ")", ";", "}", "else", "if", "(", "format", ".", "charAt", "(", "0", ")", "==", "\"x\"", ")", "{", "//XML Return", "result", "=", "http", ".", "responseXML", ";", "}", "//Give the data to the callback function.", "if", "(", "callback", ")", "callback", "(", "result", ")", ";", "}", "else", "{", "if", "(", "opt", ".", "loadingIndicator", ")", "document", ".", "getElementsByTagName", "(", "\"body\"", ")", "[", "0", "]", ".", "removeChild", "(", "opt", ".", "loadingIndicator", ")", ";", "//Remove the loading indicator", "if", "(", "opt", ".", "loading", ")", "document", ".", "getElementById", "(", "opt", ".", "loading", ")", ".", "style", ".", "display", "=", "\"none\"", ";", "//Hide the given loading indicator.", "if", "(", "error", ")", "error", "(", "http", ".", "status", ")", ";", "}", "}", "}", "}", "http", ".", "send", "(", "parameters", ")", ";", "}"], "original_docstring": "This function is called from the user's script. Arguments - url\t- The url of the serverside script that is to be called. Append all the arguments to this url - eg. 'get_data.php?id=5&car=benz' callback - Function that must be called once the data is ready. format - The return type for this function. Could be 'xml','json' or 'text'. If it is json, the string will be 'eval'ed before returning it. Default:'text' method - GET or POST. Default 'GET'", "docstring": {"block_comment": "This function is called from the user s script. Arguments   url   The url of the serverside script that is to be called. Append all the arguments to this url   eg.  get_data.php id 5 car benz  callback   Function that must be called once the data is ready. format   The return type for this function. Could be  xml , json  or  text . If it is json, the string will be  eval ed before returning it. Default  text  method   GET or POST. Default  GET ", "line_comment": ["The XMLHttpRequest object is recreated at every call   to defeat Cache problem in IE", "XML Format need this for some Mozilla Browsers", "Default method is GET", "Default return type is  text ", "Kill the Cache problem in IE.", "Closure", "If a custom handler is defined, use it", "Call a function when the state changes.", "Ready State will be 4 when the document is loaded.", "If the return is in JSON format, eval the result before returning it.", "\\n s in JSON string, when evaluated will create errors in IE", "XML Return", "Give the data to the callback function.", "Remove the loading indicator", "Hide the given loading indicator."]}, "docstring_tokens": ["This", "function", "is", "called", "from", "the", "user", "s", "script", ".", "Arguments", "url", "The", "url", "of", "the", "serverside", "script", "that", "is", "to", "be", "called", ".", "Append", "all", "the", "arguments", "to", "this", "url", "eg", ".", "get_data", ".", "php", "id", "5", "car", "benz", "callback", "Function", "that", "must", "be", "called", "once", "the", "data", "is", "ready", ".", "format", "The", "return", "type", "for", "this", "function", ".", "Could", "be", "xml", "json", "or", "text", ".", "If", "it", "is", "json", "the", "string", "will", "be", "eval", "ed", "before", "returning", "it", ".", "Default", "text", "method", "GET", "or", "POST", ".", "Default", "GET"], "sample_id": 364, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004186", "repo": "Hasreon/Hasreon", "path": "client/js-libs/jxs.js", "language": "JavaScript", "license": "artistic-2.0", "func_name": "", "code": "function() {\n\t\tvar http = false;\n\t\t//Use IE's ActiveX items to load the file.\n\t\tif(typeof ActiveXObject != 'undefined') {\n\t\t\ttry {http = new ActiveXObject(\"Msxml2.XMLHTTP\");}\n\t\t\tcatch (e) {\n\t\t\t\ttry {http = new ActiveXObject(\"Microsoft.XMLHTTP\");}\n\t\t\t\tcatch (E) {http = false;}\n\t\t\t}\n\t\t//If ActiveX is not available, use the XMLHttpRequest of Firefox/Mozilla etc. to load the document.\n\t\t} else if (window.XMLHttpRequest) {\n\t\t\ttry {http = new XMLHttpRequest();}\n\t\t\tcatch (e) {http = false;}\n\t\t}\n\t\treturn http;\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "http", "=", "false", ";", "//Use IE's ActiveX items to load the file.", "if", "(", "typeof", "ActiveXObject", "!=", "'undefined'", ")", "{", "try", "{", "http", "=", "new", "ActiveXObject", "(", "\"Msxml2.XMLHTTP\"", ")", ";", "}", "catch", "(", "e", ")", "{", "try", "{", "http", "=", "new", "ActiveXObject", "(", "\"Microsoft.XMLHTTP\"", ")", ";", "}", "catch", "(", "E", ")", "{", "http", "=", "false", ";", "}", "}", "//If ActiveX is not available, use the XMLHttpRequest of Firefox/Mozilla etc. to load the document.", "}", "else", "if", "(", "window", ".", "XMLHttpRequest", ")", "{", "try", "{", "http", "=", "new", "XMLHttpRequest", "(", ")", ";", "}", "catch", "(", "e", ")", "{", "http", "=", "false", ";", "}", "}", "return", "http", ";", "}"], "original_docstring": "Create a xmlHttpRequest object - this is the constructor.", "docstring": {"block_comment": "Create a xmlHttpRequest object   this is the constructor.", "line_comment": ["Use IE s ActiveX items to load the file.", "If ActiveX is not available, use the XMLHttpRequest of Firefox Mozilla etc. to load the document."]}, "docstring_tokens": ["Create", "a", "xmlHttpRequest", "object", "this", "is", "the", "constructor", "."], "sample_id": 365, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004187", "repo": "jlabarbera11/TouchOfMath", "path": "display.js", "language": "JavaScript", "license": "bsd-2-clause", "func_name": "", "code": "function(index)\n            {\n                var elementWidth = getWidth($(this));\n                \n                if(elementWidth > width)\n                {\n                    width = elementWidth;\n                }\n            }", "code_tokens": ["function", "(", "index", ")", "{", "var", "elementWidth", "=", "getWidth", "(", "$", "(", "this", ")", ")", ";", "if", "(", "elementWidth", ">", "width", ")", "{", "width", "=", "elementWidth", ";", "}", "}"], "original_docstring": "Use the width of the widest equation", "docstring": {"block_comment": "Use the width of the widest equation", "line_comment": null}, "docstring_tokens": ["Use", "the", "width", "of", "the", "widest", "equation"], "sample_id": 366, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004189", "repo": "nicksagona/pop-spider", "path": "app/data/assets/js/scripts.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(id) {\n    var div = document.getElementById(id);\n    if (div != null) {\n        if (div.style.display == 'none') {\n            div.style.display = 'table-row';\n        } else {\n            div.style.display = 'none';\n        }\n    }\n}", "code_tokens": ["function", "(", "id", ")", "{", "var", "div", "=", "document", ".", "getElementById", "(", "id", ")", ";", "if", "(", "div", "!=", "null", ")", "{", "if", "(", "div", ".", "style", ".", "display", "==", "'none'", ")", "{", "div", ".", "style", ".", "display", "=", "'table-row'", ";", "}", "else", "{", "div", ".", "style", ".", "display", "=", "'none'", ";", "}", "}", "}"], "original_docstring": "\nScripts for pop-spider\n", "docstring": {"block_comment": "Scripts for pop spider", "line_comment": null}, "docstring_tokens": ["Scripts", "for", "pop", "spider"], "sample_id": 367, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004190", "repo": "garious/yoink", "path": "jsok/opt-parse.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function() {\n        var builder = [this.banner, '', this.options_title],\n            shorts = false, longest = 0, rule;\n        var rules = build_rules(this.filters, this._rules);\n        for(var i = 0; i < rules.length; i++) {\n            rule = rules[i];\n            // Quick-analyze the options.\n            if(rule['short']) shorts = true;\n            if(rule.decl.length > longest) longest = rule.decl.length;\n        }\n        for(i = 0; i < rules.length; i++) {\n            var text;\n            rule = rules[i];\n            if(shorts) {\n                if(rule['short']) text = spaces(2) + rule['short'] + ', ';\n                else text = spaces(6);\n            }\n            text += spaces(rule.decl, longest) + spaces(3);\n            text += rule.desc;\n            builder.push(text);\n        }\n        return builder.join('\\n');\n    }", "code_tokens": ["function", "(", ")", "{", "var", "builder", "=", "[", "this", ".", "banner", ",", "''", ",", "this", ".", "options_title", "]", ",", "shorts", "=", "false", ",", "longest", "=", "0", ",", "rule", ";", "var", "rules", "=", "build_rules", "(", "this", ".", "filters", ",", "this", ".", "_rules", ")", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "rules", ".", "length", ";", "i", "++", ")", "{", "rule", "=", "rules", "[", "i", "]", ";", "// Quick-analyze the options.", "if", "(", "rule", "[", "'short'", "]", ")", "shorts", "=", "true", ";", "if", "(", "rule", ".", "decl", ".", "length", ">", "longest", ")", "longest", "=", "rule", ".", "decl", ".", "length", ";", "}", "for", "(", "i", "=", "0", ";", "i", "<", "rules", ".", "length", ";", "i", "++", ")", "{", "var", "text", ";", "rule", "=", "rules", "[", "i", "]", ";", "if", "(", "shorts", ")", "{", "if", "(", "rule", "[", "'short'", "]", ")", "text", "=", "spaces", "(", "2", ")", "+", "rule", "[", "'short'", "]", "+", "', '", ";", "else", "text", "=", "spaces", "(", "6", ")", ";", "}", "text", "+=", "spaces", "(", "rule", ".", "decl", ",", "longest", ")", "+", "spaces", "(", "3", ")", ";", "text", "+=", "rule", ".", "desc", ";", "builder", ".", "push", "(", "text", ")", ";", "}", "return", "builder", ".", "join", "(", "'\\n'", ")", ";", "}"], "original_docstring": "Returns a string representation of this OptionParser instance.", "docstring": {"block_comment": "Returns a string representation of this OptionParser instance.", "line_comment": ["Quick analyze the options."]}, "docstring_tokens": ["Returns", "a", "string", "representation", "of", "this", "OptionParser", "instance", "."], "sample_id": 368, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004191", "repo": "garious/yoink", "path": "jsok/opt-parse.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function() {\n        return build_rules(this.filters, this._rules);\n    }", "code_tokens": ["function", "(", ")", "{", "return", "build_rules", "(", "this", ".", "filters", ",", "this", ".", "_rules", ")", ";", "}"], "original_docstring": "Returns an Array with all defined option rules", "docstring": {"block_comment": "Returns an Array with all defined option rules", "line_comment": null}, "docstring_tokens": ["Returns", "an", "Array", "with", "all", "defined", "option", "rules"], "sample_id": 369, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004192", "repo": "garious/yoink", "path": "jsok/opt-parse.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(args) {\n        var result = [], callback;\n        var rules = build_rules(this.filters, this._rules);\n        var tokens = args.concat([]);\n        while((token = tokens.shift()) && this._halt === false) {\n            if(LONG_SWITCH_RE.test(token) || SHORT_SWITCH_RE.test(token)) {\n                var arg = undefined;\n                // The token is a long or a short switch. Get the corresponding\n                // rule, filter and handle it. Pass the switch to the default\n                // handler if no rule matched.\n                for(var i = 0; i < rules.length; i++) {\n                    var rule = rules[i];\n                    if(rule['long'] === token || rule['short'] === token) {\n                        if(rule.filter !== undefined) {\n                            arg = tokens.shift();\n                            if(!LONG_SWITCH_RE.test(arg) && !SHORT_SWITCH_RE.test(arg)) {\n                                try {\n                                    arg = rule.filter(arg);\n                                } catch(e) {\n                                    throw OptError(token + ': ' + e.toString());\n                                }\n                            } else if(rule.optional_arg) {\n                                tokens.unshift(arg);\n                            } else {\n                                throw OptError('Expected switch argument.');\n                            }\n                        }\n                        callback = this.on_switches[rule.name];\n                        if (!callback) callback = this.on_switches['*'];\n                        if(callback) callback.apply(this, [rule.name, arg]);\n                        break;\n                    }\n                }\n                if(i === rules.length) this.default_handler.apply(this, [token]);\n            } else {\n                // Did not match long or short switch. Parse the token as a\n                // normal argument.\n                callback = this.on_args[result.length];\n                result.push(token);\n                if(callback) callback.apply(this, [token]);\n            }\n        }\n        return this._halt ? this.on_halt.apply(this, []) : result;\n    }", "code_tokens": ["function", "(", "args", ")", "{", "var", "result", "=", "[", "]", ",", "callback", ";", "var", "rules", "=", "build_rules", "(", "this", ".", "filters", ",", "this", ".", "_rules", ")", ";", "var", "tokens", "=", "args", ".", "concat", "(", "[", "]", ")", ";", "while", "(", "(", "token", "=", "tokens", ".", "shift", "(", ")", ")", "&&", "this", ".", "_halt", "===", "false", ")", "{", "if", "(", "LONG_SWITCH_RE", ".", "test", "(", "token", ")", "||", "SHORT_SWITCH_RE", ".", "test", "(", "token", ")", ")", "{", "var", "arg", "=", "undefined", ";", "// The token is a long or a short switch. Get the corresponding", "// rule, filter and handle it. Pass the switch to the default", "// handler if no rule matched.", "for", "(", "var", "i", "=", "0", ";", "i", "<", "rules", ".", "length", ";", "i", "++", ")", "{", "var", "rule", "=", "rules", "[", "i", "]", ";", "if", "(", "rule", "[", "'long'", "]", "===", "token", "||", "rule", "[", "'short'", "]", "===", "token", ")", "{", "if", "(", "rule", ".", "filter", "!==", "undefined", ")", "{", "arg", "=", "tokens", ".", "shift", "(", ")", ";", "if", "(", "!", "LONG_SWITCH_RE", ".", "test", "(", "arg", ")", "&&", "!", "SHORT_SWITCH_RE", ".", "test", "(", "arg", ")", ")", "{", "try", "{", "arg", "=", "rule", ".", "filter", "(", "arg", ")", ";", "}", "catch", "(", "e", ")", "{", "throw", "OptError", "(", "token", "+", "': '", "+", "e", ".", "toString", "(", ")", ")", ";", "}", "}", "else", "if", "(", "rule", ".", "optional_arg", ")", "{", "tokens", ".", "unshift", "(", "arg", ")", ";", "}", "else", "{", "throw", "OptError", "(", "'Expected switch argument.'", ")", ";", "}", "}", "callback", "=", "this", ".", "on_switches", "[", "rule", ".", "name", "]", ";", "if", "(", "!", "callback", ")", "callback", "=", "this", ".", "on_switches", "[", "'*'", "]", ";", "if", "(", "callback", ")", "callback", ".", "apply", "(", "this", ",", "[", "rule", ".", "name", ",", "arg", "]", ")", ";", "break", ";", "}", "}", "if", "(", "i", "===", "rules", ".", "length", ")", "this", ".", "default_handler", ".", "apply", "(", "this", ",", "[", "token", "]", ")", ";", "}", "else", "{", "// Did not match long or short switch. Parse the token as a", "// normal argument.", "callback", "=", "this", ".", "on_args", "[", "result", ".", "length", "]", ";", "result", ".", "push", "(", "token", ")", ";", "if", "(", "callback", ")", "callback", ".", "apply", "(", "this", ",", "[", "token", "]", ")", ";", "}", "}", "return", "this", ".", "_halt", "?", "this", ".", "on_halt", ".", "apply", "(", "this", ",", "[", "]", ")", ":", "result", ";", "}"], "original_docstring": "Parses specified args. Returns remaining arguments.", "docstring": {"block_comment": "Parses specified args. Returns remaining arguments.", "line_comment": ["The token is a long or a short switch. Get the corresponding", "rule, filter and handle it. Pass the switch to the default", "handler if no rule matched.", "Did not match long or short switch. Parse the token as a", "normal argument."]}, "docstring_tokens": ["Parses", "specified", "args", ".", "Returns", "remaining", "arguments", "."], "sample_id": 370, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004193", "repo": "garious/yoink", "path": "jsok/opt-parse.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(value, fn) {\n        if(value.constructor === Function ) {\n            this.default_handler = value;\n        } else if(value.constructor === Number) {\n            this.on_args[value] = fn;\n        } else {\n            this.on_switches[value] = fn;\n        }\n    }", "code_tokens": ["function", "(", "value", ",", "fn", ")", "{", "if", "(", "value", ".", "constructor", "===", "Function", ")", "{", "this", ".", "default_handler", "=", "value", ";", "}", "else", "if", "(", "value", ".", "constructor", "===", "Number", ")", "{", "this", ".", "on_args", "[", "value", "]", "=", "fn", ";", "}", "else", "{", "this", ".", "on_switches", "[", "value", "]", "=", "fn", ";", "}", "}"], "original_docstring": "Adds args and switchs handler.", "docstring": {"block_comment": "Adds args and switchs handler.", "line_comment": null}, "docstring_tokens": ["Adds", "args", "and", "switchs", "handler", "."], "sample_id": 371, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004194", "repo": "cedricpinson/osgjs", "path": "sources/osg/TextureManager.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        if (this._orphanedTextureObjects.length) return this._orphanedTextureObjects.pop();\n\n        return undefined;\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "_orphanedTextureObjects", ".", "length", ")", "return", "this", ".", "_orphanedTextureObjects", ".", "pop", "(", ")", ";", "return", "undefined", ";", "}"], "original_docstring": "get texture object from pool", "docstring": {"block_comment": "get texture object from pool", "line_comment": null}, "docstring_tokens": ["get", "texture", "object", "from", "pool"], "sample_id": 372, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004195", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\n    // Message listeners are currently distinguised by whether they contain\n    // the appropriate JSON in their request.\n    chrome.extension.onMessage.addListener(\n      function(request, sender, sendResponse) {\n        if (request.privlyOriginalURL !== undefined) {\n          readingProcess.sendApplicationInjectionUrlResponse(request, sender, sendResponse);\n          return;\n        }\n      });\n\n    // When the active tab changes we must update the tab's content script for\n    // the current operation mode of the modal button.\n    chrome.tabs.onActivated.addListener(function(activeInfo) {\n      chrome.tabs.get(activeInfo.tabId, readingProcess.tabChange);\n    });\n    chrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {\n      chrome.tabs.get(tabId, readingProcess.tabChange);\n    });\n\n    // Respond to every request to start the content script.\n    chrome.runtime.onMessage.addListener(\n      function(request, sender, sendResponse) {\n        if (request.ask === \"shouldStartPrivly?\") {\n          if(modalButton.badgeText !== \"off\") {\n            sendResponse({tell: \"yes\"});\n          }\n        }\n    });\n  }", "code_tokens": ["function", "(", ")", "{", "// Message listeners are currently distinguised by whether they contain", "// the appropriate JSON in their request.", "chrome", ".", "extension", ".", "onMessage", ".", "addListener", "(", "function", "(", "request", ",", "sender", ",", "sendResponse", ")", "{", "if", "(", "request", ".", "privlyOriginalURL", "!==", "undefined", ")", "{", "readingProcess", ".", "sendApplicationInjectionUrlResponse", "(", "request", ",", "sender", ",", "sendResponse", ")", ";", "return", ";", "}", "}", ")", ";", "// When the active tab changes we must update the tab's content script for", "// the current operation mode of the modal button.", "chrome", ".", "tabs", ".", "onActivated", ".", "addListener", "(", "function", "(", "activeInfo", ")", "{", "chrome", ".", "tabs", ".", "get", "(", "activeInfo", ".", "tabId", ",", "readingProcess", ".", "tabChange", ")", ";", "}", ")", ";", "chrome", ".", "tabs", ".", "onUpdated", ".", "addListener", "(", "function", "(", "tabId", ",", "changeInfo", ",", "tab", ")", "{", "chrome", ".", "tabs", ".", "get", "(", "tabId", ",", "readingProcess", ".", "tabChange", ")", ";", "}", ")", ";", "// Respond to every request to start the content script.", "chrome", ".", "runtime", ".", "onMessage", ".", "addListener", "(", "function", "(", "request", ",", "sender", ",", "sendResponse", ")", "{", "if", "(", "request", ".", "ask", "===", "\"shouldStartPrivly?\"", ")", "{", "if", "(", "modalButton", ".", "badgeText", "!==", "\"off\"", ")", "{", "sendResponse", "(", "{", "tell", ":", "\"yes\"", "}", ")", ";", "}", "}", "}", ")", ";", "}"], "original_docstring": "\nMonitor tabs and messages to facilitate reading injected content.\n", "docstring": {"block_comment": "Monitor tabs and messages to facilitate reading injected content.", "line_comment": ["Message listeners are currently distinguised by whether they contain", "the appropriate JSON in their request.", "When the active tab changes we must update the tab s content script for", "the current operation mode of the modal button.", "Respond to every request to start the content script."]}, "docstring_tokens": ["Monitor", "tabs", "and", "messages", "to", "facilitate", "reading", "injected", "content", "."], "sample_id": 373, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004196", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(request, sender, sendResponse) {\n    var url = request.privlyOriginalURL;\n    var response, path;\n\n    // Deprecated app specification parameter\n    var pattern = /privlyInjectableApplication\\=/i;\n    url = url.replace(pattern, \"privlyApp=\");\n\n    if( url.indexOf(\"privlyApp=Message\") > 0 ) {\n      path = \"privly-applications/Message/show.html?privlyOriginalURL=\";\n    } else if( url.indexOf(\"privlyApp=ZeroBin\") > 0) {\n      path = \"privly-applications/Message/show.html?privlyOriginalURL=\"; // Deprecated\n    } else if( url.indexOf(\"privlyApp=PlainPost\") > 0) {\n      path = \"privly-applications/PlainPost/show.html?privlyOriginalURL=\";\n    } else if( url.indexOf(\"https://priv.ly\") === 0 ) {\n      path = \"privly-applications/PlainPost/show.html?privlyOriginalURL=\"; // Deprecated\n    } else {\n      sendResponse({}); // Don't inject unknown apps\n      return;\n    }\n    response = chrome.extension.getURL(path) + encodeURIComponent(url);\n    sendResponse( {privlyApplicationURL: response} );\n  }", "code_tokens": ["function", "(", "request", ",", "sender", ",", "sendResponse", ")", "{", "var", "url", "=", "request", ".", "privlyOriginalURL", ";", "var", "response", ",", "path", ";", "// Deprecated app specification parameter", "var", "pattern", "=", "/", "privlyInjectableApplication\\=", "/", "i", ";", "url", "=", "url", ".", "replace", "(", "pattern", ",", "\"privlyApp=\"", ")", ";", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=Message\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/Message/show.html?privlyOriginalURL=\"", ";", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=ZeroBin\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/Message/show.html?privlyOriginalURL=\"", ";", "// Deprecated", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=PlainPost\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/PlainPost/show.html?privlyOriginalURL=\"", ";", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"https://priv.ly\"", ")", "===", "0", ")", "{", "path", "=", "\"privly-applications/PlainPost/show.html?privlyOriginalURL=\"", ";", "// Deprecated", "}", "else", "{", "sendResponse", "(", "{", "}", ")", ";", "// Don't inject unknown apps", "return", ";", "}", "response", "=", "chrome", ".", "extension", ".", "getURL", "(", "path", ")", "+", "encodeURIComponent", "(", "url", ")", ";", "sendResponse", "(", "{", "privlyApplicationURL", ":", "response", "}", ")", ";", "}"], "original_docstring": "\nGives the URL to inject an iframe if it is a known application.\n\n@param {object} request The json request object sent by the content scrpt.\n@param {object} sender The sender of the message.\n@param {function} sendResponse The callback function of the message from\nthe content script.\n\n", "docstring": {"block_comment": "Gives the URL to inject an iframe if it is a known application.", "line_comment": [null, null, null, "Don t inject unknown apps"]}, "docstring_tokens": ["Gives", "the", "URL", "to", "inject", "an", "iframe", "if", "it", "is", "a", "known", "application", "."], "sample_id": 374, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004196", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(request, sender, sendResponse) {\n    var url = request.privlyOriginalURL;\n    var response, path;\n\n    // Deprecated app specification parameter\n    var pattern = /privlyInjectableApplication\\=/i;\n    url = url.replace(pattern, \"privlyApp=\");\n\n    if( url.indexOf(\"privlyApp=Message\") > 0 ) {\n      path = \"privly-applications/Message/show.html?privlyOriginalURL=\";\n    } else if( url.indexOf(\"privlyApp=ZeroBin\") > 0) {\n      path = \"privly-applications/Message/show.html?privlyOriginalURL=\"; // Deprecated\n    } else if( url.indexOf(\"privlyApp=PlainPost\") > 0) {\n      path = \"privly-applications/PlainPost/show.html?privlyOriginalURL=\";\n    } else if( url.indexOf(\"https://priv.ly\") === 0 ) {\n      path = \"privly-applications/PlainPost/show.html?privlyOriginalURL=\"; // Deprecated\n    } else {\n      sendResponse({}); // Don't inject unknown apps\n      return;\n    }\n    response = chrome.extension.getURL(path) + encodeURIComponent(url);\n    sendResponse( {privlyApplicationURL: response} );\n  }", "code_tokens": ["function", "(", "request", ",", "sender", ",", "sendResponse", ")", "{", "var", "url", "=", "request", ".", "privlyOriginalURL", ";", "var", "response", ",", "path", ";", "// Deprecated app specification parameter", "var", "pattern", "=", "/", "privlyInjectableApplication\\=", "/", "i", ";", "url", "=", "url", ".", "replace", "(", "pattern", ",", "\"privlyApp=\"", ")", ";", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=Message\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/Message/show.html?privlyOriginalURL=\"", ";", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=ZeroBin\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/Message/show.html?privlyOriginalURL=\"", ";", "// Deprecated", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=PlainPost\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/PlainPost/show.html?privlyOriginalURL=\"", ";", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"https://priv.ly\"", ")", "===", "0", ")", "{", "path", "=", "\"privly-applications/PlainPost/show.html?privlyOriginalURL=\"", ";", "// Deprecated", "}", "else", "{", "sendResponse", "(", "{", "}", ")", ";", "// Don't inject unknown apps", "return", ";", "}", "response", "=", "chrome", ".", "extension", ".", "getURL", "(", "path", ")", "+", "encodeURIComponent", "(", "url", ")", ";", "sendResponse", "(", "{", "privlyApplicationURL", ":", "response", "}", ")", ";", "}"], "original_docstring": "\nGives the URL to inject an iframe if it is a known application.\n\n@param {object} request The json request object sent by the content scrpt.\n@param {object} sender The sender of the message.\n@param {function} sendResponse The callback function of the message from\nthe content script.\n\n", "docstring": {"block_comment": "Gives the URL to inject an iframe if it is a known application.", "line_comment": [null, null, null, "Don t inject unknown apps"]}, "docstring_tokens": ["The", "json", "request", "object", "sent", "by", "the", "content", "scrpt", "."], "sample_id": 374, "prompt_tokens": ["<javascript>", "<param>", "request"], "comment_type": "param", "sentence_id": 1}
{"id": "21004196", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(request, sender, sendResponse) {\n    var url = request.privlyOriginalURL;\n    var response, path;\n\n    // Deprecated app specification parameter\n    var pattern = /privlyInjectableApplication\\=/i;\n    url = url.replace(pattern, \"privlyApp=\");\n\n    if( url.indexOf(\"privlyApp=Message\") > 0 ) {\n      path = \"privly-applications/Message/show.html?privlyOriginalURL=\";\n    } else if( url.indexOf(\"privlyApp=ZeroBin\") > 0) {\n      path = \"privly-applications/Message/show.html?privlyOriginalURL=\"; // Deprecated\n    } else if( url.indexOf(\"privlyApp=PlainPost\") > 0) {\n      path = \"privly-applications/PlainPost/show.html?privlyOriginalURL=\";\n    } else if( url.indexOf(\"https://priv.ly\") === 0 ) {\n      path = \"privly-applications/PlainPost/show.html?privlyOriginalURL=\"; // Deprecated\n    } else {\n      sendResponse({}); // Don't inject unknown apps\n      return;\n    }\n    response = chrome.extension.getURL(path) + encodeURIComponent(url);\n    sendResponse( {privlyApplicationURL: response} );\n  }", "code_tokens": ["function", "(", "request", ",", "sender", ",", "sendResponse", ")", "{", "var", "url", "=", "request", ".", "privlyOriginalURL", ";", "var", "response", ",", "path", ";", "// Deprecated app specification parameter", "var", "pattern", "=", "/", "privlyInjectableApplication\\=", "/", "i", ";", "url", "=", "url", ".", "replace", "(", "pattern", ",", "\"privlyApp=\"", ")", ";", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=Message\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/Message/show.html?privlyOriginalURL=\"", ";", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=ZeroBin\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/Message/show.html?privlyOriginalURL=\"", ";", "// Deprecated", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=PlainPost\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/PlainPost/show.html?privlyOriginalURL=\"", ";", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"https://priv.ly\"", ")", "===", "0", ")", "{", "path", "=", "\"privly-applications/PlainPost/show.html?privlyOriginalURL=\"", ";", "// Deprecated", "}", "else", "{", "sendResponse", "(", "{", "}", ")", ";", "// Don't inject unknown apps", "return", ";", "}", "response", "=", "chrome", ".", "extension", ".", "getURL", "(", "path", ")", "+", "encodeURIComponent", "(", "url", ")", ";", "sendResponse", "(", "{", "privlyApplicationURL", ":", "response", "}", ")", ";", "}"], "original_docstring": "\nGives the URL to inject an iframe if it is a known application.\n\n@param {object} request The json request object sent by the content scrpt.\n@param {object} sender The sender of the message.\n@param {function} sendResponse The callback function of the message from\nthe content script.\n\n", "docstring": {"block_comment": "Gives the URL to inject an iframe if it is a known application.", "line_comment": [null, null, null, "Don t inject unknown apps"]}, "docstring_tokens": ["The", "sender", "of", "the", "message", "."], "sample_id": 374, "prompt_tokens": ["<javascript>", "<param>", "sender"], "comment_type": "param", "sentence_id": 2}
{"id": "21004196", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(request, sender, sendResponse) {\n    var url = request.privlyOriginalURL;\n    var response, path;\n\n    // Deprecated app specification parameter\n    var pattern = /privlyInjectableApplication\\=/i;\n    url = url.replace(pattern, \"privlyApp=\");\n\n    if( url.indexOf(\"privlyApp=Message\") > 0 ) {\n      path = \"privly-applications/Message/show.html?privlyOriginalURL=\";\n    } else if( url.indexOf(\"privlyApp=ZeroBin\") > 0) {\n      path = \"privly-applications/Message/show.html?privlyOriginalURL=\"; // Deprecated\n    } else if( url.indexOf(\"privlyApp=PlainPost\") > 0) {\n      path = \"privly-applications/PlainPost/show.html?privlyOriginalURL=\";\n    } else if( url.indexOf(\"https://priv.ly\") === 0 ) {\n      path = \"privly-applications/PlainPost/show.html?privlyOriginalURL=\"; // Deprecated\n    } else {\n      sendResponse({}); // Don't inject unknown apps\n      return;\n    }\n    response = chrome.extension.getURL(path) + encodeURIComponent(url);\n    sendResponse( {privlyApplicationURL: response} );\n  }", "code_tokens": ["function", "(", "request", ",", "sender", ",", "sendResponse", ")", "{", "var", "url", "=", "request", ".", "privlyOriginalURL", ";", "var", "response", ",", "path", ";", "// Deprecated app specification parameter", "var", "pattern", "=", "/", "privlyInjectableApplication\\=", "/", "i", ";", "url", "=", "url", ".", "replace", "(", "pattern", ",", "\"privlyApp=\"", ")", ";", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=Message\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/Message/show.html?privlyOriginalURL=\"", ";", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=ZeroBin\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/Message/show.html?privlyOriginalURL=\"", ";", "// Deprecated", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"privlyApp=PlainPost\"", ")", ">", "0", ")", "{", "path", "=", "\"privly-applications/PlainPost/show.html?privlyOriginalURL=\"", ";", "}", "else", "if", "(", "url", ".", "indexOf", "(", "\"https://priv.ly\"", ")", "===", "0", ")", "{", "path", "=", "\"privly-applications/PlainPost/show.html?privlyOriginalURL=\"", ";", "// Deprecated", "}", "else", "{", "sendResponse", "(", "{", "}", ")", ";", "// Don't inject unknown apps", "return", ";", "}", "response", "=", "chrome", ".", "extension", ".", "getURL", "(", "path", ")", "+", "encodeURIComponent", "(", "url", ")", ";", "sendResponse", "(", "{", "privlyApplicationURL", ":", "response", "}", ")", ";", "}"], "original_docstring": "\nGives the URL to inject an iframe if it is a known application.\n\n@param {object} request The json request object sent by the content scrpt.\n@param {object} sender The sender of the message.\n@param {function} sendResponse The callback function of the message from\nthe content script.\n\n", "docstring": {"block_comment": "Gives the URL to inject an iframe if it is a known application.", "line_comment": [null, null, null, "Don t inject unknown apps"]}, "docstring_tokens": ["The", "callback", "function", "of", "the", "message", "from"], "sample_id": 374, "prompt_tokens": ["<javascript>", "<param>", "sendResponse"], "comment_type": "param", "sentence_id": 3}
{"id": "21004197", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tabs) {\n\n    // Facilitate modifying an array of tabs by recursively\n    // calling this function on every tab.\n    if ( typeof tabs.length !== \"undefined\" ) {\n      for( var i = 0; i < tabs.length; i++){\n        readingProcess.tabChange(tabs[i]);\n      }\n      return;\n    }\n  }", "code_tokens": ["function", "(", "tabs", ")", "{", "// Facilitate modifying an array of tabs by recursively", "// calling this function on every tab.", "if", "(", "typeof", "tabs", ".", "length", "!==", "\"undefined\"", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "tabs", ".", "length", ";", "i", "++", ")", "{", "readingProcess", ".", "tabChange", "(", "tabs", "[", "i", "]", ")", ";", "}", "return", ";", "}", "}"], "original_docstring": "\nHelper for updating multiple tabs simultaneously. Relies on\nthe readingProcess.tabChange function.\n\n@param {[tab,...]} tabs The array of tabs that\nneeds to be sent the operation mode and user's whitelist.\n", "docstring": {"block_comment": "Helper for updating multiple tabs simultaneously. Relies on \nthe readingProcess.tabChange function.", "line_comment": ["Facilitate modifying an array of tabs by recursively", "calling this function on every tab."]}, "docstring_tokens": ["Helper", "for", "updating", "multiple", "tabs", "simultaneously", ".", "Relies", "on", "the", "readingProcess", ".", "tabChange", "function", "."], "sample_id": 375, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004197", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tabs) {\n\n    // Facilitate modifying an array of tabs by recursively\n    // calling this function on every tab.\n    if ( typeof tabs.length !== \"undefined\" ) {\n      for( var i = 0; i < tabs.length; i++){\n        readingProcess.tabChange(tabs[i]);\n      }\n      return;\n    }\n  }", "code_tokens": ["function", "(", "tabs", ")", "{", "// Facilitate modifying an array of tabs by recursively", "// calling this function on every tab.", "if", "(", "typeof", "tabs", ".", "length", "!==", "\"undefined\"", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "tabs", ".", "length", ";", "i", "++", ")", "{", "readingProcess", ".", "tabChange", "(", "tabs", "[", "i", "]", ")", ";", "}", "return", ";", "}", "}"], "original_docstring": "\nHelper for updating multiple tabs simultaneously. Relies on\nthe readingProcess.tabChange function.\n\n@param {[tab,...]} tabs The array of tabs that\nneeds to be sent the operation mode and user's whitelist.\n", "docstring": {"block_comment": "Helper for updating multiple tabs simultaneously. Relies on \nthe readingProcess.tabChange function.", "line_comment": ["Facilitate modifying an array of tabs by recursively", "calling this function on every tab."]}, "docstring_tokens": ["The", "array", "of", "tabs", "that"], "sample_id": 375, "prompt_tokens": ["<javascript>", "<param>", "tabs"], "comment_type": "param", "sentence_id": 1}
{"id": "21004198", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tab) {\n\n    if (tab.status !== \"complete\" ||\n        tab.title === \"New Tab\" ||          // Solves hard to replicate error\n        (tab.url.indexOf(\"http\") !== 0 &&\n         tab.url.indexOf(\"file\") !== 0)) {\n           return;\n    }\n\n    readingProcess.updateContentScriptWhitelist(tab.id);\n    if( modalButton.badgeText === \"off\" ) {\n      readingProcess.deactivateContentInjectionScript(tab.id);\n    } else {\n      readingProcess.activateContentInjectionScript(tab.id);\n    }\n\n  }", "code_tokens": ["function", "(", "tab", ")", "{", "if", "(", "tab", ".", "status", "!==", "\"complete\"", "||", "tab", ".", "title", "===", "\"New Tab\"", "||", "// Solves hard to replicate error", "(", "tab", ".", "url", ".", "indexOf", "(", "\"http\"", ")", "!==", "0", "&&", "tab", ".", "url", ".", "indexOf", "(", "\"file\"", ")", "!==", "0", ")", ")", "{", "return", ";", "}", "readingProcess", ".", "updateContentScriptWhitelist", "(", "tab", ".", "id", ")", ";", "if", "(", "modalButton", ".", "badgeText", "===", "\"off\"", ")", "{", "readingProcess", ".", "deactivateContentInjectionScript", "(", "tab", ".", "id", ")", ";", "}", "else", "{", "readingProcess", ".", "activateContentInjectionScript", "(", "tab", ".", "id", ")", ";", "}", "}"], "original_docstring": "\nCallback assigns content script state according to the modal button.\n\n@param {tab} tab The tab that\nneeds to be sent the operation mode and user's whitelist.\n", "docstring": {"block_comment": "Callback assigns content script state according to the modal button.", "line_comment": ["Solves hard to replicate error"]}, "docstring_tokens": ["Callback", "assigns", "content", "script", "state", "according", "to", "the", "modal", "button", "."], "sample_id": 376, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004198", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tab) {\n\n    if (tab.status !== \"complete\" ||\n        tab.title === \"New Tab\" ||          // Solves hard to replicate error\n        (tab.url.indexOf(\"http\") !== 0 &&\n         tab.url.indexOf(\"file\") !== 0)) {\n           return;\n    }\n\n    readingProcess.updateContentScriptWhitelist(tab.id);\n    if( modalButton.badgeText === \"off\" ) {\n      readingProcess.deactivateContentInjectionScript(tab.id);\n    } else {\n      readingProcess.activateContentInjectionScript(tab.id);\n    }\n\n  }", "code_tokens": ["function", "(", "tab", ")", "{", "if", "(", "tab", ".", "status", "!==", "\"complete\"", "||", "tab", ".", "title", "===", "\"New Tab\"", "||", "// Solves hard to replicate error", "(", "tab", ".", "url", ".", "indexOf", "(", "\"http\"", ")", "!==", "0", "&&", "tab", ".", "url", ".", "indexOf", "(", "\"file\"", ")", "!==", "0", ")", ")", "{", "return", ";", "}", "readingProcess", ".", "updateContentScriptWhitelist", "(", "tab", ".", "id", ")", ";", "if", "(", "modalButton", ".", "badgeText", "===", "\"off\"", ")", "{", "readingProcess", ".", "deactivateContentInjectionScript", "(", "tab", ".", "id", ")", ";", "}", "else", "{", "readingProcess", ".", "activateContentInjectionScript", "(", "tab", ".", "id", ")", ";", "}", "}"], "original_docstring": "\nCallback assigns content script state according to the modal button.\n\n@param {tab} tab The tab that\nneeds to be sent the operation mode and user's whitelist.\n", "docstring": {"block_comment": "Callback assigns content script state according to the modal button.", "line_comment": ["Solves hard to replicate error"]}, "docstring_tokens": ["The", "tab", "that"], "sample_id": 376, "prompt_tokens": ["<javascript>", "<param>", "tab"], "comment_type": "param", "sentence_id": 1}
{"id": "21004199", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tabId) {\n    var user_whitelist_regexp = ls.getItem(\"user_whitelist_regexp\");\n    if (!user_whitelist_regexp) {\n      return;\n    }\n    chrome.tabs.executeScript(tabId, {\n        code: \"if(typeof privly != 'undefined'){privly.updateWhitelist('\"+user_whitelist_regexp+\"');}\",\n        allFrames: true\n    });\n  }", "code_tokens": ["function", "(", "tabId", ")", "{", "var", "user_whitelist_regexp", "=", "ls", ".", "getItem", "(", "\"user_whitelist_regexp\"", ")", ";", "if", "(", "!", "user_whitelist_regexp", ")", "{", "return", ";", "}", "chrome", ".", "tabs", ".", "executeScript", "(", "tabId", ",", "{", "code", ":", "\"if(typeof privly != 'undefined'){privly.updateWhitelist('\"", "+", "user_whitelist_regexp", "+", "\"');}\"", ",", "allFrames", ":", "true", "}", ")", ";", "}"], "original_docstring": "\nNotifies content script of additions to injection whitelist. This list is\nassigned from the options page.\n\n@param {integer} tabId The integer identifier of the tab who needs to be told\nthe updated whitelist.\n\n", "docstring": {"block_comment": "Notifies content script of additions to injection whitelist. This list is \nassigned from the options page.", "line_comment": null}, "docstring_tokens": ["Notifies", "content", "script", "of", "additions", "to", "injection", "whitelist", ".", "This", "list", "is", "assigned", "from", "the", "options", "page", "."], "sample_id": 377, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004199", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tabId) {\n    var user_whitelist_regexp = ls.getItem(\"user_whitelist_regexp\");\n    if (!user_whitelist_regexp) {\n      return;\n    }\n    chrome.tabs.executeScript(tabId, {\n        code: \"if(typeof privly != 'undefined'){privly.updateWhitelist('\"+user_whitelist_regexp+\"');}\",\n        allFrames: true\n    });\n  }", "code_tokens": ["function", "(", "tabId", ")", "{", "var", "user_whitelist_regexp", "=", "ls", ".", "getItem", "(", "\"user_whitelist_regexp\"", ")", ";", "if", "(", "!", "user_whitelist_regexp", ")", "{", "return", ";", "}", "chrome", ".", "tabs", ".", "executeScript", "(", "tabId", ",", "{", "code", ":", "\"if(typeof privly != 'undefined'){privly.updateWhitelist('\"", "+", "user_whitelist_regexp", "+", "\"');}\"", ",", "allFrames", ":", "true", "}", ")", ";", "}"], "original_docstring": "\nNotifies content script of additions to injection whitelist. This list is\nassigned from the options page.\n\n@param {integer} tabId The integer identifier of the tab who needs to be told\nthe updated whitelist.\n\n", "docstring": {"block_comment": "Notifies content script of additions to injection whitelist. This list is \nassigned from the options page.", "line_comment": null}, "docstring_tokens": ["The", "integer", "identifier", "of", "the", "tab", "who", "needs", "to", "be", "told"], "sample_id": 377, "prompt_tokens": ["<javascript>", "<param>", "tabId"], "comment_type": "param", "sentence_id": 1}
{"id": "21004200", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tabId) {\n    chrome.tabs.executeScript(tabId, {\n        code: \"if(typeof privly != 'undefined'){privly.stop();}\",\n        allFrames: true\n    });\n  }", "code_tokens": ["function", "(", "tabId", ")", "{", "chrome", ".", "tabs", ".", "executeScript", "(", "tabId", ",", "{", "code", ":", "\"if(typeof privly != 'undefined'){privly.stop();}\"", ",", "allFrames", ":", "true", "}", ")", ";", "}"], "original_docstring": "\nIf the content script has been injected, this will ask it to not run.\n\n@param {tab} tabId The integer identifier of the tab who needs to stop\nrunning the content script.\n\n@see readingProcess.activateContentInjectionScript\n", "docstring": {"block_comment": "If the content script has been injected, this will ask it to not run.", "line_comment": null}, "docstring_tokens": ["If", "the", "content", "script", "has", "been", "injected", "this", "will", "ask", "it", "to", "not", "run", "."], "sample_id": 378, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004200", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tabId) {\n    chrome.tabs.executeScript(tabId, {\n        code: \"if(typeof privly != 'undefined'){privly.stop();}\",\n        allFrames: true\n    });\n  }", "code_tokens": ["function", "(", "tabId", ")", "{", "chrome", ".", "tabs", ".", "executeScript", "(", "tabId", ",", "{", "code", ":", "\"if(typeof privly != 'undefined'){privly.stop();}\"", ",", "allFrames", ":", "true", "}", ")", ";", "}"], "original_docstring": "\nIf the content script has been injected, this will ask it to not run.\n\n@param {tab} tabId The integer identifier of the tab who needs to stop\nrunning the content script.\n\n@see readingProcess.activateContentInjectionScript\n", "docstring": {"block_comment": "If the content script has been injected, this will ask it to not run.", "line_comment": null}, "docstring_tokens": ["The", "integer", "identifier", "of", "the", "tab", "who", "needs", "to", "stop"], "sample_id": 378, "prompt_tokens": ["<javascript>", "<param>", "tabId"], "comment_type": "param", "sentence_id": 1}
{"id": "21004201", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (tabId) {\n    chrome.tabs.executeScript(tabId, {\n        code: \"if(typeof privly != 'undefined'){privly.start();}\",\n        allFrames: true\n    });\n  }", "code_tokens": ["function", "(", "tabId", ")", "{", "chrome", ".", "tabs", ".", "executeScript", "(", "tabId", ",", "{", "code", ":", "\"if(typeof privly != 'undefined'){privly.start();}\"", ",", "allFrames", ":", "true", "}", ")", ";", "}"], "original_docstring": "\nIf the content script has been injected, this will ask it to run.\n\n@param {tab} tabId The integer identifier of the tab to activate with\nthe content script.\n\n@see readingProcess.deactivateContentInjectionScript\n", "docstring": {"block_comment": "If the content script has been injected, this will ask it to run.", "line_comment": null}, "docstring_tokens": ["If", "the", "content", "script", "has", "been", "injected", "this", "will", "ask", "it", "to", "run", "."], "sample_id": 379, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004201", "repo": "hitesh96db/privly-chrome", "path": "javascripts/background_scripts/reading_process.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (tabId) {\n    chrome.tabs.executeScript(tabId, {\n        code: \"if(typeof privly != 'undefined'){privly.start();}\",\n        allFrames: true\n    });\n  }", "code_tokens": ["function", "(", "tabId", ")", "{", "chrome", ".", "tabs", ".", "executeScript", "(", "tabId", ",", "{", "code", ":", "\"if(typeof privly != 'undefined'){privly.start();}\"", ",", "allFrames", ":", "true", "}", ")", ";", "}"], "original_docstring": "\nIf the content script has been injected, this will ask it to run.\n\n@param {tab} tabId The integer identifier of the tab to activate with\nthe content script.\n\n@see readingProcess.deactivateContentInjectionScript\n", "docstring": {"block_comment": "If the content script has been injected, this will ask it to run.", "line_comment": null}, "docstring_tokens": ["The", "integer", "identifier", "of", "the", "tab", "to", "activate", "with"], "sample_id": 379, "prompt_tokens": ["<javascript>", "<param>", "tabId"], "comment_type": "param", "sentence_id": 1}
{"id": "21004202", "repo": "darksmo/jquery-weekscheduler-widget", "path": "test/weekSchedulerWidget_test.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (markupName) {\n    return function () {\n        // append dropdown widget to qunit-fixture\n        var $fixture = $('#qunit-fixture');\n\n        $fixture.append(commonFixtures[markupName]);\n    };\n  }", "code_tokens": ["function", "(", "markupName", ")", "{", "return", "function", "(", ")", "{", "// append dropdown widget to qunit-fixture", "var", "$fixture", "=", "$", "(", "'#qunit-fixture'", ")", ";", "$fixture", ".", "append", "(", "commonFixtures", "[", "markupName", "]", ")", ";", "}", ";", "}"], "original_docstring": "/*\nSome helpers here...\n", "docstring": {"block_comment": "Some helpers here...", "line_comment": ["append dropdown widget to qunit fixture"]}, "docstring_tokens": ["Some", "helpers", "here", "..."], "sample_id": 380, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004218", "repo": "ljhsai/pomelo", "path": "lib/common/service/sessionService.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(session) {\n  EventEmitter.call(this);\n  clone(session, this, FRONTEND_SESSION_FIELDS);\n  // deep copy for settings\n  this.settings = dclone(session.settings);\n  this.__session__ = session;\n}", "code_tokens": ["function", "(", "session", ")", "{", "EventEmitter", ".", "call", "(", "this", ")", ";", "clone", "(", "session", ",", "this", ",", "FRONTEND_SESSION_FIELDS", ")", ";", "// deep copy for settings", "this", ".", "settings", "=", "dclone", "(", "session", ".", "settings", ")", ";", "this", ".", "__session__", "=", "session", ";", "}"], "original_docstring": "\nFrontend session for frontend server.\n", "docstring": {"block_comment": "Frontend session for frontend server.", "line_comment": ["deep copy for settings"]}, "docstring_tokens": ["Frontend", "session", "for", "frontend", "server", "."], "sample_id": 381, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004219", "repo": "ljhsai/pomelo", "path": "lib/common/service/sessionService.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(sid, frontendId, socket, service) {\n  EventEmitter.call(this);\n  this.id = sid;          // r\n  this.frontendId = frontendId; // r\n  this.uid = null;        // r\n  this.settings = {};\n\n  // private\n  this.__socket__ = socket;\n  this.__sessionService__ = service;\n  this.__state__ = ST_INITED;\n}", "code_tokens": ["function", "(", "sid", ",", "frontendId", ",", "socket", ",", "service", ")", "{", "EventEmitter", ".", "call", "(", "this", ")", ";", "this", ".", "id", "=", "sid", ";", "// r", "this", ".", "frontendId", "=", "frontendId", ";", "// r", "this", ".", "uid", "=", "null", ";", "// r", "this", ".", "settings", "=", "{", "}", ";", "// private", "this", ".", "__socket__", "=", "socket", ";", "this", ".", "__sessionService__", "=", "service", ";", "this", ".", "__state__", "=", "ST_INITED", ";", "}"], "original_docstring": "\nSession maintains the relationship between client connection and user information.\nThere is a session associated with each client connection. And it should bind to a\nuser id after the client passes the identification.\n\nSession is created in frontend server and should not be accessed in handler.\nThere is a proxy class called BackendSession in backend servers and FrontendSession\nin frontend servers.\n", "docstring": {"block_comment": "Session maintains the relationship between client connection and user information. \nThere is a session associated with each client connection. And it should bind to a \nuser id after the client passes the identification. \nSession is created in frontend server and should not be accessed in handler. \nThere is a proxy class called BackendSession in backend servers and FrontendSession \nin frontend servers.", "line_comment": ["r", "r", "r", "private"]}, "docstring_tokens": ["Session", "maintains", "the", "relationship", "between", "client", "connection", "and", "user", "information", ".", "There", "is", "a", "session", "associated", "with", "each", "client", "connection", ".", "And", "it", "should", "bind", "to", "a", "user", "id", "after", "the", "client", "passes", "the", "identification", ".", "Session", "is", "created", "in", "frontend", "server", "and", "should", "not", "be", "accessed", "in", "handler", ".", "There", "is", "a", "proxy", "class", "called", "BackendSession", "in", "backend", "servers", "and", "FrontendSession", "in", "frontend", "servers", "."], "sample_id": 382, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004220", "repo": "ljhsai/pomelo", "path": "lib/common/service/sessionService.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(service, session, msg) {\n  session.send(msg);\n\n  return true;\n}", "code_tokens": ["function", "(", "service", ",", "session", ",", "msg", ")", "{", "session", ".", "send", "(", "msg", ")", ";", "return", "true", ";", "}"], "original_docstring": "\nSend message to the client that associated with the session.\n\n@api private\n", "docstring": {"block_comment": "Send message to the client that associated with the session.", "line_comment": null}, "docstring_tokens": ["Send", "message", "to", "the", "client", "that", "associated", "with", "the", "session", "."], "sample_id": 383, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004221", "repo": "ljhsai/pomelo", "path": "lib/common/service/sessionService.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(opts) {\n  opts = opts || {};\n  this.singleSession = opts.singleSession;\n  this.sessions = {};     // sid -> session\n  this.uidMap = {};       // uid -> sessions\n}", "code_tokens": ["function", "(", "opts", ")", "{", "opts", "=", "opts", "||", "{", "}", ";", "this", ".", "singleSession", "=", "opts", ".", "singleSession", ";", "this", ".", "sessions", "=", "{", "}", ";", "// sid -> session", "this", ".", "uidMap", "=", "{", "}", ";", "// uid -> sessions", "}"], "original_docstring": "\nSession service maintains the internal session for each client connection.\n\nSession service is created by session component and is only\n<b>available</b> in frontend servers. You can access the service by\n`app.get('sessionService')` or `app.sessionService` in frontend servers.\n\n@param {Object} opts constructor parameters\n@class\n@constructor\n", "docstring": {"block_comment": "Session service maintains the internal session for each client connection. \nSession service is created by session component and is only \navailable in frontend servers. You can access the service by \n app.get  sessionService    or  app.sessionService  in frontend servers.", "line_comment": ["sid    session", "uid    sessions"]}, "docstring_tokens": ["Session", "service", "maintains", "the", "internal", "session", "for", "each", "client", "connection", ".", "Session", "service", "is", "created", "by", "session", "component", "and", "is", "only", "available", "in", "frontend", "servers", ".", "You", "can", "access", "the", "service", "by", "app", ".", "get", "sessionService", "or", "app", ".", "sessionService", "in", "frontend", "servers", "."], "sample_id": 384, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004222", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\n        var _this = this,\n            base = this.__base();\n\n        if (this.revision === 'HEAD') return base;\n\n        return Q.all(this.paths.map(function(path) {\n                return QFS.exists(PATH.resolve(_this.root, _this.target, path))\n                    .then(function(exists) {\n                        return exists && _this.getInfo(path)\n                            .then(function(info) {\n                                return String(info.revision) === String(_this.revision);\n                            });\n                });\n\n            }))\n            .then(function(checks) {\n\n                return checks.reduce(function(cur, prev) {\n                    return cur && prev;\n                }, true) || base;\n\n            });\n\n    }", "code_tokens": ["function", "(", ")", "{", "var", "_this", "=", "this", ",", "base", "=", "this", ".", "__base", "(", ")", ";", "if", "(", "this", ".", "revision", "===", "'HEAD'", ")", "return", "base", ";", "return", "Q", ".", "all", "(", "this", ".", "paths", ".", "map", "(", "function", "(", "path", ")", "{", "return", "QFS", ".", "exists", "(", "PATH", ".", "resolve", "(", "_this", ".", "root", ",", "_this", ".", "target", ",", "path", ")", ")", ".", "then", "(", "function", "(", "exists", ")", "{", "return", "exists", "&&", "_this", ".", "getInfo", "(", "path", ")", ".", "then", "(", "function", "(", "info", ")", "{", "return", "String", "(", "info", ".", "revision", ")", "===", "String", "(", "_this", ".", "revision", ")", ";", "}", ")", ";", "}", ")", ";", "}", ")", ")", ".", "then", "(", "function", "(", "checks", ")", "{", "return", "checks", ".", "reduce", "(", "function", "(", "cur", ",", "prev", ")", "{", "return", "cur", "&&", "prev", ";", "}", ",", "true", ")", "||", "base", ";", "}", ")", ";", "}"], "original_docstring": "\nCheck validity of node.\n\nUse output of `svn info` to check revision property.\nIf revision is the same as in config on all paths then\nreturn promised true.\n\n@return {Promise * Boolean}\n", "docstring": {"block_comment": "Check validity of node. \nUse output of  svn info  to check revision property. \nIf revision is the same as in config on all paths then \nreturn promised true.", "line_comment": null}, "docstring_tokens": ["Check", "validity", "of", "node", ".", "Use", "output", "of", "svn", "info", "to", "check", "revision", "property", ".", "If", "revision", "is", "the", "same", "as", "in", "config", "on", "all", "paths", "then", "return", "promised", "true", "."], "sample_id": 385, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004223", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(o) {\n        this.__base(o);\n        this.paths = Array.isArray(o.paths)? o.paths : [o.paths || ''];\n        this.revision = o.revision || 'HEAD';\n    }", "code_tokens": ["function", "(", "o", ")", "{", "this", ".", "__base", "(", "o", ")", ";", "this", ".", "paths", "=", "Array", ".", "isArray", "(", "o", ".", "paths", ")", "?", "o", ".", "paths", ":", "[", "o", ".", "paths", "||", "''", "]", ";", "this", ".", "revision", "=", "o", ".", "revision", "||", "'HEAD'", ";", "}"], "original_docstring": "\nSvnLibraryNode instance constructor.\n\n@class SvnLibraryNode\n@constructs\n@param {Object} o  Node options.\n@param {String} o.root      Project root path.\n@param {String} o.target    Library path.\n@param {String} o.url       Repository URL.\n@param {String[]} [o.paths=['']]  Paths to checkout.\n@param {String} [o.revision='HEAD']  Revision to checkout.\n", "docstring": {"block_comment": "SvnLibraryNode instance constructor.", "line_comment": null}, "docstring_tokens": ["SvnLibraryNode", "instance", "constructor", "."], "sample_id": 386, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004224", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(o) {\n        this.__base(o);\n        this.treeish = o.treeish;\n        this.branch = o.branch || 'master';\n        this.origin = o.origin || 'origin';\n    }", "code_tokens": ["function", "(", "o", ")", "{", "this", ".", "__base", "(", "o", ")", ";", "this", ".", "treeish", "=", "o", ".", "treeish", ";", "this", ".", "branch", "=", "o", ".", "branch", "||", "'master'", ";", "this", ".", "origin", "=", "o", ".", "origin", "||", "'origin'", ";", "}"], "original_docstring": "\nGitLibraryNode instance constructor.\n\n@class GitLibraryNode\n@constructs\n@param {Object} o  Node options.\n@param {String} o.root      Project root path.\n@param {String} o.target    Library path.\n@param {String} o.url       Repository URL.\n@param {String[]} [o.paths=['']]  Paths to checkout.\n@param {String} [o.treeish]  Treeish (commit hash or tag) to checkout.\n@param {String} [o.branch='master'] Branch to checkout.\n@param {String} [o.origin='origin'] Remote name.\n", "docstring": {"block_comment": "GitLibraryNode instance constructor.", "line_comment": null}, "docstring_tokens": ["GitLibraryNode", "instance", "constructor", "."], "sample_id": 387, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004225", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path) {\n\n        var _this = this,\n            target = PATH.resolve(this.root, this.target, path),\n            repo = joinUrlPath(this.url, path);\n\n        return QFS.exists(target)\n            .then(function(exists) {\n\n                var cmd = exists?\n                        _this.getUpdateCmd(repo, target) :\n                        _this.getInitialCheckoutCmd(repo, target),\n                    d = Q.defer();\n\n                _this.log(cmd);\n\n                CP.exec(cmd, function(err, stdout, stderr) {\n                    stdout && _this.log(stdout);\n                    stderr && _this.log(stderr);\n\n                    if (err) return d.reject(err);\n\n                    _this.lastRunTime = Date.now();\n                    d.resolve();\n                });\n\n                return d.promise;\n\n            });\n\n    }", "code_tokens": ["function", "(", "path", ")", "{", "var", "_this", "=", "this", ",", "target", "=", "PATH", ".", "resolve", "(", "this", ".", "root", ",", "this", ".", "target", ",", "path", ")", ",", "repo", "=", "joinUrlPath", "(", "this", ".", "url", ",", "path", ")", ";", "return", "QFS", ".", "exists", "(", "target", ")", ".", "then", "(", "function", "(", "exists", ")", "{", "var", "cmd", "=", "exists", "?", "_this", ".", "getUpdateCmd", "(", "repo", ",", "target", ")", ":", "_this", ".", "getInitialCheckoutCmd", "(", "repo", ",", "target", ")", ",", "d", "=", "Q", ".", "defer", "(", ")", ";", "_this", ".", "log", "(", "cmd", ")", ";", "CP", ".", "exec", "(", "cmd", ",", "function", "(", "err", ",", "stdout", ",", "stderr", ")", "{", "stdout", "&&", "_this", ".", "log", "(", "stdout", ")", ";", "stderr", "&&", "_this", ".", "log", "(", "stderr", ")", ";", "if", "(", "err", ")", "return", "d", ".", "reject", "(", "err", ")", ";", "_this", ".", "lastRunTime", "=", "Date", ".", "now", "(", ")", ";", "d", ".", "resolve", "(", ")", ";", "}", ")", ";", "return", "d", ".", "promise", ";", "}", ")", ";", "}"], "original_docstring": "/* jshint +W098 \nCheckout or update single repository path.\n\n@param {String} path  Repository path to checkout / update.\n@return {Promise * Undefined}\n", "docstring": {"block_comment": "jshint  W098 \nCheckout or update single repository path.", "line_comment": null}, "docstring_tokens": ["jshint", "W098", "Checkout", "or", "update", "single", "repository", "path", "."], "sample_id": 388, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004225", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(path) {\n\n        var _this = this,\n            target = PATH.resolve(this.root, this.target, path),\n            repo = joinUrlPath(this.url, path);\n\n        return QFS.exists(target)\n            .then(function(exists) {\n\n                var cmd = exists?\n                        _this.getUpdateCmd(repo, target) :\n                        _this.getInitialCheckoutCmd(repo, target),\n                    d = Q.defer();\n\n                _this.log(cmd);\n\n                CP.exec(cmd, function(err, stdout, stderr) {\n                    stdout && _this.log(stdout);\n                    stderr && _this.log(stderr);\n\n                    if (err) return d.reject(err);\n\n                    _this.lastRunTime = Date.now();\n                    d.resolve();\n                });\n\n                return d.promise;\n\n            });\n\n    }", "code_tokens": ["function", "(", "path", ")", "{", "var", "_this", "=", "this", ",", "target", "=", "PATH", ".", "resolve", "(", "this", ".", "root", ",", "this", ".", "target", ",", "path", ")", ",", "repo", "=", "joinUrlPath", "(", "this", ".", "url", ",", "path", ")", ";", "return", "QFS", ".", "exists", "(", "target", ")", ".", "then", "(", "function", "(", "exists", ")", "{", "var", "cmd", "=", "exists", "?", "_this", ".", "getUpdateCmd", "(", "repo", ",", "target", ")", ":", "_this", ".", "getInitialCheckoutCmd", "(", "repo", ",", "target", ")", ",", "d", "=", "Q", ".", "defer", "(", ")", ";", "_this", ".", "log", "(", "cmd", ")", ";", "CP", ".", "exec", "(", "cmd", ",", "function", "(", "err", ",", "stdout", ",", "stderr", ")", "{", "stdout", "&&", "_this", ".", "log", "(", "stdout", ")", ";", "stderr", "&&", "_this", ".", "log", "(", "stderr", ")", ";", "if", "(", "err", ")", "return", "d", ".", "reject", "(", "err", ")", ";", "_this", ".", "lastRunTime", "=", "Date", ".", "now", "(", ")", ";", "d", ".", "resolve", "(", ")", ";", "}", ")", ";", "return", "d", ".", "promise", ";", "}", ")", ";", "}"], "original_docstring": "/* jshint +W098 \nCheckout or update single repository path.\n\n@param {String} path  Repository path to checkout / update.\n@return {Promise * Undefined}\n", "docstring": {"block_comment": "jshint  W098 \nCheckout or update single repository path.", "line_comment": null}, "docstring_tokens": ["Repository", "path", "to", "checkout", "/", "update", "."], "sample_id": 388, "prompt_tokens": ["<javascript>", "<param>", "path"], "comment_type": "param", "sentence_id": 1}
{"id": "21004226", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(url, target) {\n        throw new Error('getInitialCheckoutCmd() not implemented!');\n    }", "code_tokens": ["function", "(", "url", ",", "target", ")", "{", "throw", "new", "Error", "(", "'getInitialCheckoutCmd() not implemented!'", ")", ";", "}"], "original_docstring": "/* jshint -W098 \nStub for getUpdateCmd(), throws.\n\n@param {String} url  Repository url.\n@param {String} target  Repository checkout path.\n@throws {Error}\n", "docstring": {"block_comment": "jshint  W098 \nStub for getUpdateCmd  , throws.", "line_comment": null}, "docstring_tokens": ["jshint", "W098", "Stub", "for", "getUpdateCmd", "throws", "."], "sample_id": 389, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004226", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(url, target) {\n        throw new Error('getInitialCheckoutCmd() not implemented!');\n    }", "code_tokens": ["function", "(", "url", ",", "target", ")", "{", "throw", "new", "Error", "(", "'getInitialCheckoutCmd() not implemented!'", ")", ";", "}"], "original_docstring": "/* jshint -W098 \nStub for getUpdateCmd(), throws.\n\n@param {String} url  Repository url.\n@param {String} target  Repository checkout path.\n@throws {Error}\n", "docstring": {"block_comment": "jshint  W098 \nStub for getUpdateCmd  , throws.", "line_comment": null}, "docstring_tokens": ["Repository", "checkout", "path", "."], "sample_id": 389, "prompt_tokens": ["<javascript>", "<param>", "target"], "comment_type": "param", "sentence_id": 1}
{"id": "21004228", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        return Q.resolve(this.lastRunTime && this.timeout && (Date.now() - this.lastRunTime <= this.timeout));\n    }", "code_tokens": ["function", "(", ")", "{", "return", "Q", ".", "resolve", "(", "this", ".", "lastRunTime", "&&", "this", ".", "timeout", "&&", "(", "Date", ".", "now", "(", ")", "-", "this", ".", "lastRunTime", "<=", "this", ".", "timeout", ")", ")", ";", "}"], "original_docstring": "\nCheck validity of node.\n\n@return {Promise * Boolean}\n", "docstring": {"block_comment": "Check validity of node.", "line_comment": null}, "docstring_tokens": ["Check", "validity", "of", "node", "."], "sample_id": 390, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004229", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(o) {\n        this.__base(o);\n        this.url = o.url;\n        this.paths = [''];\n        this.timeout = typeof o.timeout !== 'undefined'? Number(o.timeout) : SCM_VALIDITY_TIMEOUT;\n    }", "code_tokens": ["function", "(", "o", ")", "{", "this", ".", "__base", "(", "o", ")", ";", "this", ".", "url", "=", "o", ".", "url", ";", "this", ".", "paths", "=", "[", "''", "]", ";", "this", ".", "timeout", "=", "typeof", "o", ".", "timeout", "!==", "'undefined'", "?", "Number", "(", "o", ".", "timeout", ")", ":", "SCM_VALIDITY_TIMEOUT", ";", "}"], "original_docstring": "\nScmLibraryNode instance constructor.\n\n@class ScmLibraryNode\n@constructs\n@param {Object} o  Node options.\n@param {String} o.root      Project root path.\n@param {String} o.target    Library path.\n@param {String} o.url       Repository URL.\n@param {String[]} [o.paths=['']]  Paths to checkout.\n", "docstring": {"block_comment": "ScmLibraryNode instance constructor.", "line_comment": null}, "docstring_tokens": ["ScmLibraryNode", "instance", "constructor", "."], "sample_id": 391, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004231", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(o) {\n        this.__base(o);\n        this.relative = o.relative;\n    }", "code_tokens": ["function", "(", "o", ")", "{", "this", ".", "__base", "(", "o", ")", ";", "this", ".", "relative", "=", "o", ".", "relative", ";", "}"], "original_docstring": "\nSymlinkLibraryNode instance constructor.\n\n@class SymlinkLibraryNode\n@constructs\n@param {Object} o  Node options.\n@param {String} o.root      Project root path.\n@param {String} o.target    Library path.\n@param {String} o.relative  Symlink path.\n", "docstring": {"block_comment": "SymlinkLibraryNode instance constructor.", "line_comment": null}, "docstring_tokens": ["SymlinkLibraryNode", "instance", "constructor", "."], "sample_id": 392, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004232", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        return PATH.resolve(this.root, this.target);\n    }", "code_tokens": ["function", "(", ")", "{", "return", "PATH", ".", "resolve", "(", "this", ".", "root", ",", "this", ".", "target", ")", ";", "}"], "original_docstring": "\nGet absolute path to library.\n\n@return {String}\n", "docstring": {"block_comment": "Get absolute path to library.", "line_comment": null}, "docstring_tokens": ["Get", "absolute", "path", "to", "library", "."], "sample_id": 393, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004233", "repo": "bem-archive/bem-tools", "path": "lib/nodes/lib.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(o) {\n        this.__base(o);\n        this.root = o.root;\n        this.target = o.target;\n        this.npmPackages = o.npmPackages === undefined? ['package.json']: o.npmPackages;\n    }", "code_tokens": ["function", "(", "o", ")", "{", "this", ".", "__base", "(", "o", ")", ";", "this", ".", "root", "=", "o", ".", "root", ";", "this", ".", "target", "=", "o", ".", "target", ";", "this", ".", "npmPackages", "=", "o", ".", "npmPackages", "===", "undefined", "?", "[", "'package.json'", "]", ":", "o", ".", "npmPackages", ";", "}"], "original_docstring": "\nLibraryNode instance constructor.\n\n@class LibraryNode\n@constructs\n@param {Object} o  Node options.\n@param {String} o.root    Project root path.\n@param {String} o.target  Library path.\n", "docstring": {"block_comment": "LibraryNode instance constructor.", "line_comment": null}, "docstring_tokens": ["LibraryNode", "instance", "constructor", "."], "sample_id": 394, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004234", "repo": "back1992/cr", "path": "plugins/system/t3/admin/thememagic/js/thememagic.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\t\tthis.initCPanel();\n\t\t\tthis.initCacheSource();\n\t\t\tthis.initThemeAction();\n\t\t\tthis.initModalDialog();\n\t\t\tthis.initRadioGroup();\n\t\t}", "code_tokens": ["function", "(", ")", "{", "this", ".", "initCPanel", "(", ")", ";", "this", ".", "initCacheSource", "(", ")", ";", "this", ".", "initThemeAction", "(", ")", ";", "this", ".", "initModalDialog", "(", ")", ";", "this", ".", "initRadioGroup", "(", ")", ";", "}"], "original_docstring": "cache the original link", "docstring": {"block_comment": "cache the original link", "line_comment": null}, "docstring_tokens": ["cache", "the", "original", "link"], "sample_id": 395, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004235", "repo": "the-dani/kunnandidagen", "path": "administrator/components/com_unitehcarousel/assets/admin.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\tif(ajaxHideButtonID){\n\t\t\tjQuery(\"#\"+ajaxHideButtonID).show();\n\t\t\tajaxHideButtonID = null;\n\t\t}\t\t\n\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "ajaxHideButtonID", ")", "{", "jQuery", "(", "\"#\"", "+", "ajaxHideButtonID", ")", ".", "show", "(", ")", ";", "ajaxHideButtonID", "=", "null", ";", "}", "}"], "original_docstring": "\nif exist ajax button, show it, and remove the button id.\n", "docstring": {"block_comment": "if exist ajax button, show it, and remove the button id.", "line_comment": null}, "docstring_tokens": ["if", "exist", "ajax", "button", "show", "it", "and", "remove", "the", "button", "id", "."], "sample_id": 396, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004236", "repo": "the-dani/kunnandidagen", "path": "administrator/components/com_unitehcarousel/assets/admin.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\tif(ajaxHideButtonID)\n\t\t\tjQuery(\"#\"+ajaxHideButtonID).hide();\n\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "ajaxHideButtonID", ")", "jQuery", "(", "\"#\"", "+", "ajaxHideButtonID", ")", ".", "hide", "(", ")", ";", "}"], "original_docstring": "\nif exist ajax button to hide, hide it.\n", "docstring": {"block_comment": "if exist ajax button to hide, hide it.", "line_comment": null}, "docstring_tokens": ["if", "exist", "ajax", "button", "to", "hide", "hide", "it", "."], "sample_id": 397, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004237", "repo": "the-dani/kunnandidagen", "path": "administrator/components/com_unitehcarousel/assets/admin.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\tif(ajaxLoaderID){\n\t\t\tjQuery(\"#\"+ajaxLoaderID).hide();\n\t\t\tajaxLoaderID = null;\n\t\t}\n\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "ajaxLoaderID", ")", "{", "jQuery", "(", "\"#\"", "+", "ajaxLoaderID", ")", ".", "hide", "(", ")", ";", "ajaxLoaderID", "=", "null", ";", "}", "}"], "original_docstring": "\nhide and remove ajax loader. next time has to be set again before \"ajaxRequest\" function.\n", "docstring": {"block_comment": "hide and remove ajax loader. next time has to be set again before  ajaxRequest  function.", "line_comment": null}, "docstring_tokens": ["hide", "and", "remove", "ajax", "loader", ".", "next", "time", "has", "to", "be", "set", "again", "before", "ajaxRequest", "function", "."], "sample_id": 398, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004238", "repo": "the-dani/kunnandidagen", "path": "administrator/components/com_unitehcarousel/assets/admin.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\tif(ajaxLoaderID)\n\t\t\tjQuery(\"#\"+ajaxLoaderID).show();\n\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "ajaxLoaderID", ")", "jQuery", "(", "\"#\"", "+", "ajaxLoaderID", ")", ".", "show", "(", ")", ";", "}"], "original_docstring": "\nshow loader on ajax actions\n", "docstring": {"block_comment": "show loader on ajax actions", "line_comment": null}, "docstring_tokens": ["show", "loader", "on", "ajax", "actions"], "sample_id": 399, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004239", "repo": "the-dani/kunnandidagen", "path": "administrator/components/com_unitehcarousel/assets/admin.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\tjQuery(\".mycheckbox_check\").click(function(){\n\t\t\tvar strChecked = this.checked?\"true\":\"false\";\n\t\t\tjQuery(this).siblings(\".mycheckbox_input\").val(strChecked);\n\t\t});\n\t}", "code_tokens": ["function", "(", ")", "{", "jQuery", "(", "\".mycheckbox_check\"", ")", ".", "click", "(", "function", "(", ")", "{", "var", "strChecked", "=", "this", ".", "checked", "?", "\"true\"", ":", "\"false\"", ";", "jQuery", "(", "this", ")", ".", "siblings", "(", "\".mycheckbox_input\"", ")", ".", "val", "(", "strChecked", ")", ";", "}", ")", ";", "}"], "original_docstring": "\ninit checkbox form field\n", "docstring": {"block_comment": "init checkbox form field", "line_comment": null}, "docstring_tokens": ["init", "checkbox", "form", "field"], "sample_id": 400, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004240", "repo": "the-dani/kunnandidagen", "path": "administrator/components/com_unitehcarousel/assets/admin.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\t//appent div to the body\n\t\tvar fields = jQuery(\"input.color-picker\");\n\t\tif(fields.length == 0)\t\n\t\t\treturn(false);\n\t\t\n\t\tjQuery(\"body\").append(\"<div id='farbtastic_wrapper' class='farbtastic_wrapper' style='display:none;'><div id='farb_picker'></div></div>\");\n\t\t\n\t\tvar picker = jQuery.farbtastic('#farb_picker');\n\t\tvar wrapper = jQuery(\"#farbtastic_wrapper\");\n\t\t \n\t\tfields.each(function(){\n\t\t\tpicker.linkTo(this);\n\t\t});\n\t\t\n\t\tfields.focus(function(){\n\t\t\twrapper.show();\n\t\t\tpicker.linkTo(this);\n\t\t\tvar input = jQuery(this);\n\t\t\tvar offset = input.offset();\n\t\t\t\n\t\t\t//set picker position\n\t\t\twrapper.css({\n\t\t\t\t\"left\":offset.left + input.width()+20,\n\t\t\t\t\"top\":offset.top - wrapper.height() + 150\n\t\t\t});\n\t\t\t\n\t\t}).click(function(){\t\t\t\n\t\t\treturn(false);\t//prevent body click\n\t\t});\n\t\t\n\t\twrapper.click(function(){\n\t\t\treturn(false);\t//prevent body click\n\t\t});\n\t\t\n\t\tjQuery(\"body\").click(function(){\n\t\t\twrapper.hide();\n\t\t});\n\t}", "code_tokens": ["function", "(", ")", "{", "//appent div to the body", "var", "fields", "=", "jQuery", "(", "\"input.color-picker\"", ")", ";", "if", "(", "fields", ".", "length", "==", "0", ")", "return", "(", "false", ")", ";", "jQuery", "(", "\"body\"", ")", ".", "append", "(", "\"<div id='farbtastic_wrapper' class='farbtastic_wrapper' style='display:none;'><div id='farb_picker'></div></div>\"", ")", ";", "var", "picker", "=", "jQuery", ".", "farbtastic", "(", "'#farb_picker'", ")", ";", "var", "wrapper", "=", "jQuery", "(", "\"#farbtastic_wrapper\"", ")", ";", "fields", ".", "each", "(", "function", "(", ")", "{", "picker", ".", "linkTo", "(", "this", ")", ";", "}", ")", ";", "fields", ".", "focus", "(", "function", "(", ")", "{", "wrapper", ".", "show", "(", ")", ";", "picker", ".", "linkTo", "(", "this", ")", ";", "var", "input", "=", "jQuery", "(", "this", ")", ";", "var", "offset", "=", "input", ".", "offset", "(", ")", ";", "//set picker position", "wrapper", ".", "css", "(", "{", "\"left\"", ":", "offset", ".", "left", "+", "input", ".", "width", "(", ")", "+", "20", ",", "\"top\"", ":", "offset", ".", "top", "-", "wrapper", ".", "height", "(", ")", "+", "150", "}", ")", ";", "}", ")", ".", "click", "(", "function", "(", ")", "{", "return", "(", "false", ")", ";", "//prevent body click", "}", ")", ";", "wrapper", ".", "click", "(", "function", "(", ")", "{", "return", "(", "false", ")", ";", "//prevent body click", "}", ")", ";", "jQuery", "(", "\"body\"", ")", ".", "click", "(", "function", "(", ")", "{", "wrapper", ".", "hide", "(", ")", ";", "}", ")", ";", "}"], "original_docstring": "\ninit color pickers input\n", "docstring": {"block_comment": "init color pickers input", "line_comment": ["appent div to the body", "set picker position", "prevent body click", "prevent body click"]}, "docstring_tokens": ["init", "color", "pickers", "input"], "sample_id": 401, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004241", "repo": "mikel-egana-aranguren/SADI-Galaxy-Docker", "path": "galaxy-dist/static/scripts/mvc/ui/ui-options.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(value) {\n        if (typeof value === 'string') {\n            value = [value];\n        }\n        for (var i in value) {\n            if (this.$el.find('input[value=\"' + value[i] + '\"]').length > 0) {\n                return true;\n            }\n        }\n        return false;\n    }", "code_tokens": ["function", "(", "value", ")", "{", "if", "(", "typeof", "value", "===", "'string'", ")", "{", "value", "=", "[", "value", "]", ";", "}", "for", "(", "var", "i", "in", "value", ")", "{", "if", "(", "this", ".", "$el", ".", "find", "(", "'input[value=\"'", "+", "value", "[", "i", "]", "+", "'\"]'", ")", ".", "length", ">", "0", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}"], "original_docstring": "check if selected value exists (or any if multiple)", "docstring": {"block_comment": "check if selected value exists  or any if multiple ", "line_comment": null}, "docstring_tokens": ["check", "if", "selected", "value", "exists", "or", "any", "if", "multiple"], "sample_id": 402, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004242", "repo": "aoimedia/kirby-range-slider", "path": "assets/js/rangeslider.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function($, $field) {\n    'use strict';\n    var self = this;\n\n    /* Cache jQuery objects */\n    this.$field   = $field;\n    this.$wrapper = $field.parent();\n    this.$slider  = $field.siblings().find('.js-rangeslider-slider');\n    this.$display = $field.siblings().find('.js-rangeslider-display');\n\n    /* Cache DOM elements */\n    this.slider = self.$slider.get(0);\n\n    /* State & config */\n    this.isActive = false;\n    this.config = {\n        min:     self.$field.data('min'),\n        max:     self.$field.data('max'),\n        step:    self.$field.data('step'),\n        prefix:  self.$field.data('prefix') || '',\n        postfix: self.$field.data('postfix') || ''\n    };\n\n    /**\n     * Initialization.\n     *\n     * @since 1.0.0\n     */\n    this.init = function() {\n        /* Initialize display width */\n        self.initDisplayWidth();\n\n        /* Initialize noUiSlider */\n        self.initNoUiSlider();\n    };\n\n    /**\n     * Initialize the displays min-width.\n     *\n     * @since 1.0.0\n     */\n    this.initDisplayWidth = function() {\n        var testNumber = Math.floor(parseFloat(self.config.max)) + parseFloat(self.config.step),\n            testText   = '' + self.config.prefix + testNumber + self.config.postfix,\n            width;\n\n        self.$display.text(testText);\n        width = self.$display.outerWidth() + 10;\n\n        self.$display.parent().css({\n            minWidth: width + 'px',\n            flex: '0 0 ' + width + 'px'\n        });\n    };\n\n    /**\n     * Initialize noUiSlider.\n     *\n     * @since 1.0.0\n     */\n    this.initNoUiSlider = function() {\n        noUiSlider.create(self.slider, {\n            start: self.$field.val(),\n            range: {\n                min: self.config.min,\n                max: self.config.max\n            },\n            step: self.config.step,\n            connect: 'lower',\n            format: wNumb({\n                decimals: self.calculateDecimals(),\n                mark: '.',\n                prefix: self.config.prefix,\n                postfix: self.config.postfix\n            })\n        });\n\n        /* Bind slider change handler */\n        self.slider.noUiSlider.on('update', function(values, handle, unencoded) {\n            self.$field.val(unencoded);\n            self.$display.text(values[handle]);\n        });\n\n        /* Enable active state on interaction */\n        self.$slider.find('.noUi-handle').on('mousedown', self.setActiveState);\n        self.slider.noUiSlider.on('slide', self.setActiveState);\n\n        /* disable active state */\n        self.slider.noUiSlider.on('change', self.unsetActiveState);\n    };\n\n    /**\n     * Calculate the number of decimals based on the `step` setting.\n     *\n     * @since 1.0.0\n     * @return integer\n     */\n    this.calculateDecimals = function() {\n        if (self.config.step % 1 === 0) {\n            return 0;\n        }\n        else {\n            return self.config.step.toString().split('.')[1].length;\n        }\n    };\n\n    /**\n     * Enable the active state.\n     *\n     * @since 1.0.0\n     */\n    this.setActiveState = function() {\n        if (self.isActive === false) {\n            self.isActive = true;\n            self.attachActiveStateStyles();\n        }\n    };\n\n    /**\n     * Disable the active state.\n     *\n     * @since 1.0.0\n     */\n    this.unsetActiveState = function() {\n        if (self.isActive === true) {\n            self.isActive = false;\n            self.detachActiveStateStyles();\n        }\n    };\n\n    /**\n     * Attach active state indicator class.\n     *\n     * @since 1.0.0\n     */\n    this.attachActiveStateStyles = function() {\n        self.$wrapper.addClass('rangeslider-active');\n    };\n\n    /**\n     * Detach active state indicator class.\n     *\n     * @since 1.0.0\n     */\n    this.detachActiveStateStyles = function() {\n        self.$wrapper.removeClass('rangeslider-active');\n    };\n\n    return this.init();\n}", "code_tokens": ["function", "(", "$", ",", "$field", ")", "{", "'use strict'", ";", "var", "self", "=", "this", ";", "/* Cache jQuery objects */", "this", ".", "$field", "=", "$field", ";", "this", ".", "$wrapper", "=", "$field", ".", "parent", "(", ")", ";", "this", ".", "$slider", "=", "$field", ".", "siblings", "(", ")", ".", "find", "(", "'.js-rangeslider-slider'", ")", ";", "this", ".", "$display", "=", "$field", ".", "siblings", "(", ")", ".", "find", "(", "'.js-rangeslider-display'", ")", ";", "/* Cache DOM elements */", "this", ".", "slider", "=", "self", ".", "$slider", ".", "get", "(", "0", ")", ";", "/* State & config */", "this", ".", "isActive", "=", "false", ";", "this", ".", "config", "=", "{", "min", ":", "self", ".", "$field", ".", "data", "(", "'min'", ")", ",", "max", ":", "self", ".", "$field", ".", "data", "(", "'max'", ")", ",", "step", ":", "self", ".", "$field", ".", "data", "(", "'step'", ")", ",", "prefix", ":", "self", ".", "$field", ".", "data", "(", "'prefix'", ")", "||", "''", ",", "postfix", ":", "self", ".", "$field", ".", "data", "(", "'postfix'", ")", "||", "''", "}", ";", "/**\n     * Initialization.\n     *\n     * @since 1.0.0\n     */", "this", ".", "init", "=", "function", "(", ")", "{", "/* Initialize display width */", "self", ".", "initDisplayWidth", "(", ")", ";", "/* Initialize noUiSlider */", "self", ".", "initNoUiSlider", "(", ")", ";", "}", ";", "/**\n     * Initialize the displays min-width.\n     *\n     * @since 1.0.0\n     */", "this", ".", "initDisplayWidth", "=", "function", "(", ")", "{", "var", "testNumber", "=", "Math", ".", "floor", "(", "parseFloat", "(", "self", ".", "config", ".", "max", ")", ")", "+", "parseFloat", "(", "self", ".", "config", ".", "step", ")", ",", "testText", "=", "''", "+", "self", ".", "config", ".", "prefix", "+", "testNumber", "+", "self", ".", "config", ".", "postfix", ",", "width", ";", "self", ".", "$display", ".", "text", "(", "testText", ")", ";", "width", "=", "self", ".", "$display", ".", "outerWidth", "(", ")", "+", "10", ";", "self", ".", "$display", ".", "parent", "(", ")", ".", "css", "(", "{", "minWidth", ":", "width", "+", "'px'", ",", "flex", ":", "'0 0 '", "+", "width", "+", "'px'", "}", ")", ";", "}", ";", "/**\n     * Initialize noUiSlider.\n     *\n     * @since 1.0.0\n     */", "this", ".", "initNoUiSlider", "=", "function", "(", ")", "{", "noUiSlider", ".", "create", "(", "self", ".", "slider", ",", "{", "start", ":", "self", ".", "$field", ".", "val", "(", ")", ",", "range", ":", "{", "min", ":", "self", ".", "config", ".", "min", ",", "max", ":", "self", ".", "config", ".", "max", "}", ",", "step", ":", "self", ".", "config", ".", "step", ",", "connect", ":", "'lower'", ",", "format", ":", "wNumb", "(", "{", "decimals", ":", "self", ".", "calculateDecimals", "(", ")", ",", "mark", ":", "'.'", ",", "prefix", ":", "self", ".", "config", ".", "prefix", ",", "postfix", ":", "self", ".", "config", ".", "postfix", "}", ")", "}", ")", ";", "/* Bind slider change handler */", "self", ".", "slider", ".", "noUiSlider", ".", "on", "(", "'update'", ",", "function", "(", "values", ",", "handle", ",", "unencoded", ")", "{", "self", ".", "$field", ".", "val", "(", "unencoded", ")", ";", "self", ".", "$display", ".", "text", "(", "values", "[", "handle", "]", ")", ";", "}", ")", ";", "/* Enable active state on interaction */", "self", ".", "$slider", ".", "find", "(", "'.noUi-handle'", ")", ".", "on", "(", "'mousedown'", ",", "self", ".", "setActiveState", ")", ";", "self", ".", "slider", ".", "noUiSlider", ".", "on", "(", "'slide'", ",", "self", ".", "setActiveState", ")", ";", "/* disable active state */", "self", ".", "slider", ".", "noUiSlider", ".", "on", "(", "'change'", ",", "self", ".", "unsetActiveState", ")", ";", "}", ";", "/**\n     * Calculate the number of decimals based on the `step` setting.\n     *\n     * @since 1.0.0\n     * @return integer\n     */", "this", ".", "calculateDecimals", "=", "function", "(", ")", "{", "if", "(", "self", ".", "config", ".", "step", "%", "1", "===", "0", ")", "{", "return", "0", ";", "}", "else", "{", "return", "self", ".", "config", ".", "step", ".", "toString", "(", ")", ".", "split", "(", "'.'", ")", "[", "1", "]", ".", "length", ";", "}", "}", ";", "/**\n     * Enable the active state.\n     *\n     * @since 1.0.0\n     */", "this", ".", "setActiveState", "=", "function", "(", ")", "{", "if", "(", "self", ".", "isActive", "===", "false", ")", "{", "self", ".", "isActive", "=", "true", ";", "self", ".", "attachActiveStateStyles", "(", ")", ";", "}", "}", ";", "/**\n     * Disable the active state.\n     *\n     * @since 1.0.0\n     */", "this", ".", "unsetActiveState", "=", "function", "(", ")", "{", "if", "(", "self", ".", "isActive", "===", "true", ")", "{", "self", ".", "isActive", "=", "false", ";", "self", ".", "detachActiveStateStyles", "(", ")", ";", "}", "}", ";", "/**\n     * Attach active state indicator class.\n     *\n     * @since 1.0.0\n     */", "this", ".", "attachActiveStateStyles", "=", "function", "(", ")", "{", "self", ".", "$wrapper", ".", "addClass", "(", "'rangeslider-active'", ")", ";", "}", ";", "/**\n     * Detach active state indicator class.\n     *\n     * @since 1.0.0\n     */", "this", ".", "detachActiveStateStyles", "=", "function", "(", ")", "{", "self", ".", "$wrapper", ".", "removeClass", "(", "'rangeslider-active'", ")", ";", "}", ";", "return", "this", ".", "init", "(", ")", ";", "}"], "original_docstring": "\nRange Slider Field for Kirby 2\n\n@version   1.1.0\n@author    Jonas D\u00f6bertin <hello@jd-powered.net>\n@copyright Jonas D\u00f6bertin <hello@jd-powered.net>\n@link      https://github.com/JonasDoebertin/kirby-range-slider\n@license   GNU GPL v3.0 <http://opensource.org/licenses/GPL-3.0>\n \nRange Slider Field\n\n@since 1.0.0\n", "docstring": {"block_comment": "Range Slider Field for Kirby 2", "line_comment": ["Cache jQuery objects", "Cache DOM elements", "State   config", "Initialization. \n since 1.0.0", "Initialize display width", "Initialize noUiSlider", "Initialize the displays min width. \n since 1.0.0", "Initialize noUiSlider. \n since 1.0.0", "Bind slider change handler", "Enable active state on interaction", "disable active state", "Calculate the number of decimals based on the  step  setting. \n since 1.0.0 \n return integer", "Enable the active state. \n since 1.0.0", "Disable the active state. \n since 1.0.0", "Attach active state indicator class. \n since 1.0.0", "Detach active state indicator class. \n since 1.0.0"]}, "docstring_tokens": ["Range", "Slider", "Field", "for", "Kirby", "2"], "sample_id": 403, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004243", "repo": "ging/vish_editor", "path": "js/VISH.Object.Webapp.Handler.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(score,origin){\n\t\tif((typeof origin == \"undefined\")||(typeof _validOrigins[origin] == \"undefined\")||(_validOrigins[origin][\"wappScore\"]!=true)){\n\t\t\treturn false; //WAPP not allowed to set score\n\t\t}\n\n\t\tvar params = {};\n\t\tparams.objectiveId = _validOrigins[origin].wappId;\n\t\tif(typeof score == \"number\"){\n\t\t\tparams.score = score/100;\n\t\t}\n\t\t\n\t\tV.EventsNotifier.notifyEvent(V.Constant.Event.onNewObjectiveScore,params,false);\n\n\t\treturn true;\n\t}", "code_tokens": ["function", "(", "score", ",", "origin", ")", "{", "if", "(", "(", "typeof", "origin", "==", "\"undefined\"", ")", "||", "(", "typeof", "_validOrigins", "[", "origin", "]", "==", "\"undefined\"", ")", "||", "(", "_validOrigins", "[", "origin", "]", "[", "\"wappScore\"", "]", "!=", "true", ")", ")", "{", "return", "false", ";", "//WAPP not allowed to set score", "}", "var", "params", "=", "{", "}", ";", "params", ".", "objectiveId", "=", "_validOrigins", "[", "origin", "]", ".", "wappId", ";", "if", "(", "typeof", "score", "==", "\"number\"", ")", "{", "params", ".", "score", "=", "score", "/", "100", ";", "}", "V", ".", "EventsNotifier", ".", "notifyEvent", "(", "V", ".", "Constant", ".", "Event", ".", "onNewObjectiveScore", ",", "params", ",", "false", ")", ";", "return", "true", ";", "}"], "original_docstring": "/*\nscore should be a number in a 0-100 scale.\n", "docstring": {"block_comment": "score should be a number in a 0 100 scale.", "line_comment": ["WAPP not allowed to set score"]}, "docstring_tokens": ["score", "should", "be", "a", "number", "in", "a", "0", "100", "scale", "."], "sample_id": 404, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004244", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(order){\n            var self = this,\n                elem = self.element,\n                options = self.options,\n                headers = elem.find('thead tr:first').children('th');\n            \n            \n            if(order == undefined){\n                //get\n                var ret = [];\n                headers.each(function(){\n                    var header = this.getAttribute(options.dataHeader);\n                    if(header == null){\n                        //the attr is missing so grab the text and use that\n                        header = $(this).text();\n                    }\n                    \n                    ret.push(header);\n                    \n                });\n                \n                return ret;\n                \n            }else{\n                //set\n                //headers and order have to match up\n                if(order.length != headers.length){\n                    \n                    return self;\n                }\n                for(var i = 0, length = order.length; i < length; i++){\n                   \n                   var start = headers.filter('['+ options.dataHeader +'='+ order[i] +']').index();\n                   if(start != -1){\n                        \n                        self.startIndex = start;\n                        \n                        self.currentColumnCollection = self._getCells(self.element[0], start).array;\n\n                        self._swapCol(i);\n                    }\n                    \n                    \n                }\n                return self;\n            }\n        }", "code_tokens": ["function", "(", "order", ")", "{", "var", "self", "=", "this", ",", "elem", "=", "self", ".", "element", ",", "options", "=", "self", ".", "options", ",", "headers", "=", "elem", ".", "find", "(", "'thead tr:first'", ")", ".", "children", "(", "'th'", ")", ";", "if", "(", "order", "==", "undefined", ")", "{", "//get", "var", "ret", "=", "[", "]", ";", "headers", ".", "each", "(", "function", "(", ")", "{", "var", "header", "=", "this", ".", "getAttribute", "(", "options", ".", "dataHeader", ")", ";", "if", "(", "header", "==", "null", ")", "{", "//the attr is missing so grab the text and use that", "header", "=", "$", "(", "this", ")", ".", "text", "(", ")", ";", "}", "ret", ".", "push", "(", "header", ")", ";", "}", ")", ";", "return", "ret", ";", "}", "else", "{", "//set", "//headers and order have to match up", "if", "(", "order", ".", "length", "!=", "headers", ".", "length", ")", "{", "return", "self", ";", "}", "for", "(", "var", "i", "=", "0", ",", "length", "=", "order", ".", "length", ";", "i", "<", "length", ";", "i", "++", ")", "{", "var", "start", "=", "headers", ".", "filter", "(", "'['", "+", "options", ".", "dataHeader", "+", "'='", "+", "order", "[", "i", "]", "+", "']'", ")", ".", "index", "(", ")", ";", "if", "(", "start", "!=", "-", "1", ")", "{", "self", ".", "startIndex", "=", "start", ";", "self", ".", "currentColumnCollection", "=", "self", ".", "_getCells", "(", "self", ".", "element", "[", "0", "]", ",", "start", ")", ".", "array", ";", "self", ".", "_swapCol", "(", "i", ")", ";", "}", "}", "return", "self", ";", "}", "}"], "original_docstring": "/*\nget / set the current order of the cols\n", "docstring": {"block_comment": "get   set the current order of the cols", "line_comment": ["get", "the attr is missing so grab the text and use that", "set", "headers and order have to match up"]}, "docstring_tokens": ["get", "set", "the", "current", "order", "of", "the", "cols"], "sample_id": 405, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004245", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(){\n            //TODO: cache this when the option is set\n            var regex = new RegExp(\"(?:^|\\\\s)\" + this.options.placeholder + \"(?!\\\\S)\",'g');\n            //remove placeholder class\n            //dont use jquery.fn.removeClass for performance reasons\n            for(var i = 0, length = this.currentColumnCollection.length; i < length; i++){\n                var td = this.currentColumnCollection[i];\n                \n                td.className = td.className.replace(regex,'')\n            }\n            \n            return this;\n\n        }", "code_tokens": ["function", "(", ")", "{", "//TODO: cache this when the option is set", "var", "regex", "=", "new", "RegExp", "(", "\"(?:^|\\\\s)\"", "+", "this", ".", "options", ".", "placeholder", "+", "\"(?!\\\\S)\"", ",", "'g'", ")", ";", "//remove placeholder class", "//dont use jquery.fn.removeClass for performance reasons", "for", "(", "var", "i", "=", "0", ",", "length", "=", "this", ".", "currentColumnCollection", ".", "length", ";", "i", "<", "length", ";", "i", "++", ")", "{", "var", "td", "=", "this", ".", "currentColumnCollection", "[", "i", "]", ";", "td", ".", "className", "=", "td", ".", "className", ".", "replace", "(", "regex", ",", "''", ")", "}", "return", "this", ";", "}"], "original_docstring": "/*\ncalled when drag start is finished\n", "docstring": {"block_comment": "called when drag start is finished", "line_comment": [null, "remove placeholder class", "dont use jquery.fn.removeClass for performance reasons"]}, "docstring_tokens": ["called", "when", "drag", "start", "is", "finished"], "sample_id": 406, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004246", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function( to ){\n            \n            //cant swap if same position\n            if(to == this.startIndex){\n                return false;\n            }\n            \n            var from = this.startIndex;\n            this.endIndex = to;\n            //this col cant be moved past me\n            var th = this.element.find('th').eq( to );\n            //check on th\n            if( th.hasClass( this.options.boundary ) == true ){\n                return false;\n            }\n            //check handle element\n            if( th.find( '.' + this.options.handle ).hasClass( this.options.boundary ) == true ){\n                return false;\n            }\n            \n            if( this._eventHelper('beforeChange',{}) === false ){\n                return false;\n            };\n            \n            \n            if(from < to) {\n                //console.log('move right');\n                for(var i = from; i < to; i++) {\n                    var row2 = this._getCells(this.element[0],i+1);\n                //  console.log(row2)\n                for(var j = 0, length = row2.array.length; j < length; j++){\n                    this._swapCells(this.currentColumnCollection[j],row2.array[j]);\n                }\n            }\n        } else {\n                //console.log('move left');\n                for(var i = from; i > to; i--) {\n                    var row2 = this._getCells(this.element[0],i-1);\n                    for(var j = 0, length = row2.array.length; j < length; j++){\n                        this._swapCells(row2.array[j],this.currentColumnCollection[j]);\n                    }\n                }\n            }\n            this._eventHelper('change',{});\n            \n            this.startIndex = this.endIndex;\n        }", "code_tokens": ["function", "(", "to", ")", "{", "//cant swap if same position", "if", "(", "to", "==", "this", ".", "startIndex", ")", "{", "return", "false", ";", "}", "var", "from", "=", "this", ".", "startIndex", ";", "this", ".", "endIndex", "=", "to", ";", "//this col cant be moved past me", "var", "th", "=", "this", ".", "element", ".", "find", "(", "'th'", ")", ".", "eq", "(", "to", ")", ";", "//check on th", "if", "(", "th", ".", "hasClass", "(", "this", ".", "options", ".", "boundary", ")", "==", "true", ")", "{", "return", "false", ";", "}", "//check handle element", "if", "(", "th", ".", "find", "(", "'.'", "+", "this", ".", "options", ".", "handle", ")", ".", "hasClass", "(", "this", ".", "options", ".", "boundary", ")", "==", "true", ")", "{", "return", "false", ";", "}", "if", "(", "this", ".", "_eventHelper", "(", "'beforeChange'", ",", "{", "}", ")", "===", "false", ")", "{", "return", "false", ";", "}", ";", "if", "(", "from", "<", "to", ")", "{", "//console.log('move right');", "for", "(", "var", "i", "=", "from", ";", "i", "<", "to", ";", "i", "++", ")", "{", "var", "row2", "=", "this", ".", "_getCells", "(", "this", ".", "element", "[", "0", "]", ",", "i", "+", "1", ")", ";", "//  console.log(row2)", "for", "(", "var", "j", "=", "0", ",", "length", "=", "row2", ".", "array", ".", "length", ";", "j", "<", "length", ";", "j", "++", ")", "{", "this", ".", "_swapCells", "(", "this", ".", "currentColumnCollection", "[", "j", "]", ",", "row2", ".", "array", "[", "j", "]", ")", ";", "}", "}", "}", "else", "{", "//console.log('move left');", "for", "(", "var", "i", "=", "from", ";", "i", ">", "to", ";", "i", "--", ")", "{", "var", "row2", "=", "this", ".", "_getCells", "(", "this", ".", "element", "[", "0", "]", ",", "i", "-", "1", ")", ";", "for", "(", "var", "j", "=", "0", ",", "length", "=", "row2", ".", "array", ".", "length", ";", "j", "<", "length", ";", "j", "++", ")", "{", "this", ".", "_swapCells", "(", "row2", ".", "array", "[", "j", "]", ",", "this", ".", "currentColumnCollection", "[", "j", "]", ")", ";", "}", "}", "}", "this", ".", "_eventHelper", "(", "'change'", ",", "{", "}", ")", ";", "this", ".", "startIndex", "=", "this", ".", "endIndex", ";", "}"], "original_docstring": "/*\nmove column left or right\n", "docstring": {"block_comment": "move column left or right", "line_comment": ["cant swap if same position", "this col cant be moved past me", "check on th", "check handle element", "console.log  move right   ", "console.log row2 ", "console.log  move left   "]}, "docstring_tokens": ["move", "column", "left", "or", "right"], "sample_id": 407, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004247", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(index){\n            //console.log('index of col '+index);\n            //drag display is just simple html\n            \n            var target, \n                cells,\n                clone,\n                tr,\n                i,\n                length,\n                $table = this.element,\n                self = this,\n                eIndex = self.tableElemIndex,\n                placholderClassnames = ' ' + this.options.placeholder;;\n            \n                //BUG: IE thinks that this table is disabled, dont know how that happend\n            self.dragDisplay = $('<table '+self._getElementAttributes($table[0])+'></table>')\n                .addClass('dragtable-drag-col');\n                \n            //start and end are the same to start out with\n            self.startIndex = self.endIndex = index;\n            \n\n            cells = self._getCells($table[0], index);\n            self.currentColumnCollection = cells.array;\n            \n            //################################\n            \n            //TODO: convert to for in // its faster than each\n            $.each(cells.semantic,function(k,collection){\n                //dont bother processing if there is nothing here\n                \n                if(collection.length == 0){\n                    return;\n                }\n                \n                if ( k == '0' ){\n                    target = document.createElement('thead');\n                    self.dragDisplay[0].appendChild(target);\n\n                }else if ( k == 1 ) { \n                    target = document.createElement('tbody');\n                    self.dragDisplay[0].appendChild(target);\n\n                }else {\n                    target = document.createElement('tfoot');\n                    self.dragDisplay[0].appendChild(target);\n                }\n\n                for(i = 0,length = collection.length; i < length; i++){\n                    \n                    clone = collection[i].cloneNode(true);\n                    collection[i].className+=placholderClassnames;\n                    tr = document.createElement('tr');\n                    tr.appendChild(clone);\n\n                    target.appendChild(tr);\n                    \n                }\n            });\n\n\n            this._setCurrentColumnCollectionOffset();\n\n\n            self.dragDisplay  = $('<div class=\"dragtable-drag-wrapper\"></div>').append(self.dragDisplay)\n            return self.dragDisplay;\n        }", "code_tokens": ["function", "(", "index", ")", "{", "//console.log('index of col '+index);", "//drag display is just simple html", "var", "target", ",", "cells", ",", "clone", ",", "tr", ",", "i", ",", "length", ",", "$table", "=", "this", ".", "element", ",", "self", "=", "this", ",", "eIndex", "=", "self", ".", "tableElemIndex", ",", "placholderClassnames", "=", "' '", "+", "this", ".", "options", ".", "placeholder", ";", ";", "//BUG: IE thinks that this table is disabled, dont know how that happend", "self", ".", "dragDisplay", "=", "$", "(", "'<table '", "+", "self", ".", "_getElementAttributes", "(", "$table", "[", "0", "]", ")", "+", "'></table>'", ")", ".", "addClass", "(", "'dragtable-drag-col'", ")", ";", "//start and end are the same to start out with", "self", ".", "startIndex", "=", "self", ".", "endIndex", "=", "index", ";", "cells", "=", "self", ".", "_getCells", "(", "$table", "[", "0", "]", ",", "index", ")", ";", "self", ".", "currentColumnCollection", "=", "cells", ".", "array", ";", "//################################", "//TODO: convert to for in // its faster than each", "$", ".", "each", "(", "cells", ".", "semantic", ",", "function", "(", "k", ",", "collection", ")", "{", "//dont bother processing if there is nothing here", "if", "(", "collection", ".", "length", "==", "0", ")", "{", "return", ";", "}", "if", "(", "k", "==", "'0'", ")", "{", "target", "=", "document", ".", "createElement", "(", "'thead'", ")", ";", "self", ".", "dragDisplay", "[", "0", "]", ".", "appendChild", "(", "target", ")", ";", "}", "else", "if", "(", "k", "==", "1", ")", "{", "target", "=", "document", ".", "createElement", "(", "'tbody'", ")", ";", "self", ".", "dragDisplay", "[", "0", "]", ".", "appendChild", "(", "target", ")", ";", "}", "else", "{", "target", "=", "document", ".", "createElement", "(", "'tfoot'", ")", ";", "self", ".", "dragDisplay", "[", "0", "]", ".", "appendChild", "(", "target", ")", ";", "}", "for", "(", "i", "=", "0", ",", "length", "=", "collection", ".", "length", ";", "i", "<", "length", ";", "i", "++", ")", "{", "clone", "=", "collection", "[", "i", "]", ".", "cloneNode", "(", "true", ")", ";", "collection", "[", "i", "]", ".", "className", "+=", "placholderClassnames", ";", "tr", "=", "document", ".", "createElement", "(", "'tr'", ")", ";", "tr", ".", "appendChild", "(", "clone", ")", ";", "target", ".", "appendChild", "(", "tr", ")", ";", "}", "}", ")", ";", "this", ".", "_setCurrentColumnCollectionOffset", "(", ")", ";", "self", ".", "dragDisplay", "=", "$", "(", "'<div class=\"dragtable-drag-wrapper\"></div>'", ")", ".", "append", "(", "self", ".", "dragDisplay", ")", "return", "self", ".", "dragDisplay", ";", "}"], "original_docstring": "/*\nbuild copy of table and attach the selected col to it, also removes the select col out of the table\n@returns copy of table with the selected col\n\npopulates self.dragDisplay\nTODO: name this something better, like select col or get dragDisplay\n\n", "docstring": {"block_comment": "build copy of table and attach the selected col to it, also removes the select col out of the table", "line_comment": ["console.log  index of col   index  ", "drag display is just simple html", null, "start and end are the same to start out with", null, null, "dont bother processing if there is nothing here"]}, "docstring_tokens": ["build", "copy", "of", "table", "and", "attach", "the", "selected", "col", "to", "it", "also", "removes", "the", "select", "col", "out", "of", "the", "table"], "sample_id": 408, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004247", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(index){\n            //console.log('index of col '+index);\n            //drag display is just simple html\n            \n            var target, \n                cells,\n                clone,\n                tr,\n                i,\n                length,\n                $table = this.element,\n                self = this,\n                eIndex = self.tableElemIndex,\n                placholderClassnames = ' ' + this.options.placeholder;;\n            \n                //BUG: IE thinks that this table is disabled, dont know how that happend\n            self.dragDisplay = $('<table '+self._getElementAttributes($table[0])+'></table>')\n                .addClass('dragtable-drag-col');\n                \n            //start and end are the same to start out with\n            self.startIndex = self.endIndex = index;\n            \n\n            cells = self._getCells($table[0], index);\n            self.currentColumnCollection = cells.array;\n            \n            //################################\n            \n            //TODO: convert to for in // its faster than each\n            $.each(cells.semantic,function(k,collection){\n                //dont bother processing if there is nothing here\n                \n                if(collection.length == 0){\n                    return;\n                }\n                \n                if ( k == '0' ){\n                    target = document.createElement('thead');\n                    self.dragDisplay[0].appendChild(target);\n\n                }else if ( k == 1 ) { \n                    target = document.createElement('tbody');\n                    self.dragDisplay[0].appendChild(target);\n\n                }else {\n                    target = document.createElement('tfoot');\n                    self.dragDisplay[0].appendChild(target);\n                }\n\n                for(i = 0,length = collection.length; i < length; i++){\n                    \n                    clone = collection[i].cloneNode(true);\n                    collection[i].className+=placholderClassnames;\n                    tr = document.createElement('tr');\n                    tr.appendChild(clone);\n\n                    target.appendChild(tr);\n                    \n                }\n            });\n\n\n            this._setCurrentColumnCollectionOffset();\n\n\n            self.dragDisplay  = $('<div class=\"dragtable-drag-wrapper\"></div>').append(self.dragDisplay)\n            return self.dragDisplay;\n        }", "code_tokens": ["function", "(", "index", ")", "{", "//console.log('index of col '+index);", "//drag display is just simple html", "var", "target", ",", "cells", ",", "clone", ",", "tr", ",", "i", ",", "length", ",", "$table", "=", "this", ".", "element", ",", "self", "=", "this", ",", "eIndex", "=", "self", ".", "tableElemIndex", ",", "placholderClassnames", "=", "' '", "+", "this", ".", "options", ".", "placeholder", ";", ";", "//BUG: IE thinks that this table is disabled, dont know how that happend", "self", ".", "dragDisplay", "=", "$", "(", "'<table '", "+", "self", ".", "_getElementAttributes", "(", "$table", "[", "0", "]", ")", "+", "'></table>'", ")", ".", "addClass", "(", "'dragtable-drag-col'", ")", ";", "//start and end are the same to start out with", "self", ".", "startIndex", "=", "self", ".", "endIndex", "=", "index", ";", "cells", "=", "self", ".", "_getCells", "(", "$table", "[", "0", "]", ",", "index", ")", ";", "self", ".", "currentColumnCollection", "=", "cells", ".", "array", ";", "//################################", "//TODO: convert to for in // its faster than each", "$", ".", "each", "(", "cells", ".", "semantic", ",", "function", "(", "k", ",", "collection", ")", "{", "//dont bother processing if there is nothing here", "if", "(", "collection", ".", "length", "==", "0", ")", "{", "return", ";", "}", "if", "(", "k", "==", "'0'", ")", "{", "target", "=", "document", ".", "createElement", "(", "'thead'", ")", ";", "self", ".", "dragDisplay", "[", "0", "]", ".", "appendChild", "(", "target", ")", ";", "}", "else", "if", "(", "k", "==", "1", ")", "{", "target", "=", "document", ".", "createElement", "(", "'tbody'", ")", ";", "self", ".", "dragDisplay", "[", "0", "]", ".", "appendChild", "(", "target", ")", ";", "}", "else", "{", "target", "=", "document", ".", "createElement", "(", "'tfoot'", ")", ";", "self", ".", "dragDisplay", "[", "0", "]", ".", "appendChild", "(", "target", ")", ";", "}", "for", "(", "i", "=", "0", ",", "length", "=", "collection", ".", "length", ";", "i", "<", "length", ";", "i", "++", ")", "{", "clone", "=", "collection", "[", "i", "]", ".", "cloneNode", "(", "true", ")", ";", "collection", "[", "i", "]", ".", "className", "+=", "placholderClassnames", ";", "tr", "=", "document", ".", "createElement", "(", "'tr'", ")", ";", "tr", ".", "appendChild", "(", "clone", ")", ";", "target", ".", "appendChild", "(", "tr", ")", ";", "}", "}", ")", ";", "this", ".", "_setCurrentColumnCollectionOffset", "(", ")", ";", "self", ".", "dragDisplay", "=", "$", "(", "'<div class=\"dragtable-drag-wrapper\"></div>'", ")", ".", "append", "(", "self", ".", "dragDisplay", ")", "return", "self", ".", "dragDisplay", ";", "}"], "original_docstring": "/*\nbuild copy of table and attach the selected col to it, also removes the select col out of the table\n@returns copy of table with the selected col\n\npopulates self.dragDisplay\nTODO: name this something better, like select col or get dragDisplay\n\n", "docstring": {"block_comment": "build copy of table and attach the selected col to it, also removes the select col out of the table", "line_comment": ["console.log  index of col   index  ", "drag display is just simple html", null, "start and end are the same to start out with", null, null, "dont bother processing if there is nothing here"]}, "docstring_tokens": ["copy", "of", "table", "with", "the", "selected", "col"], "sample_id": 408, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004248", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(eventName ,eventObj, additionalData){\n\n            return this._trigger( \n                eventName, \n                eventObj, \n                $.extend({\n                    column: this.currentColumnCollection,\n                    order: this.order(),\n                    startIndex: this.startIndex,\n                    endIndex: this.endIndex,\n                    dragDisplay: this.dragDisplay,\n                    columnOffset: this.currentColumnCollectionOffset            \n                },additionalData)\n                );\n        }", "code_tokens": ["function", "(", "eventName", ",", "eventObj", ",", "additionalData", ")", "{", "return", "this", ".", "_trigger", "(", "eventName", ",", "eventObj", ",", "$", ".", "extend", "(", "{", "column", ":", "this", ".", "currentColumnCollection", ",", "order", ":", "this", ".", "order", "(", ")", ",", "startIndex", ":", "this", ".", "startIndex", ",", "endIndex", ":", "this", ".", "endIndex", ",", "dragDisplay", ":", "this", ".", "dragDisplay", ",", "columnOffset", ":", "this", ".", "currentColumnCollectionOffset", "}", ",", "additionalData", ")", ")", ";", "}"], "original_docstring": "/*\nused to trigger optional events\n", "docstring": {"block_comment": "used to trigger optional events", "line_comment": null}, "docstring_tokens": ["used", "to", "trigger", "optional", "events"], "sample_id": 409, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004249", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(a, b) {\n            a.parentNode.insertBefore(b, a);\n        }", "code_tokens": ["function", "(", "a", ",", "b", ")", "{", "a", ".", "parentNode", ".", "insertBefore", "(", "b", ",", "a", ")", ";", "}"], "original_docstring": "/*\nfaster than swap nodes\nonly works if a b parent are the same, works great for columns\n", "docstring": {"block_comment": "faster than swap nodes \nonly works if a b parent are the same, works great for columns", "line_comment": null}, "docstring_tokens": ["faster", "than", "swap", "nodes", "only", "works", "if", "a", "b", "parent", "are", "the", "same", "works", "great", "for", "columns"], "sample_id": 410, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004250", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(element){\n            \n            var attrsString = [],\n                attrs = element.attributes,\n                i = 0,\n                length = attrs.length;\n\n            for( ; i < length; i++) {\n                attrsString.push( attrs[i].nodeName + '=\"' + attrs[i].value+'\"' );\n            }\n            return attrsString.join(' ');\n        }", "code_tokens": ["function", "(", "element", ")", "{", "var", "attrsString", "=", "[", "]", ",", "attrs", "=", "element", ".", "attributes", ",", "i", "=", "0", ",", "length", "=", "attrs", ".", "length", ";", "for", "(", ";", "i", "<", "length", ";", "i", "++", ")", "{", "attrsString", ".", "push", "(", "attrs", "[", "i", "]", ".", "nodeName", "+", "'=\"'", "+", "attrs", "[", "i", "]", ".", "value", "+", "'\"'", ")", ";", "}", "return", "attrsString", ".", "join", "(", "' '", ")", ";", "}"], "original_docstring": "/*\nreturns all element attrs in a string key=\"value\" key2=\"value\"\n", "docstring": {"block_comment": "returns all element attrs in a string key  value  key2  value ", "line_comment": null}, "docstring_tokens": ["returns", "all", "element", "attrs", "in", "a", "string", "key", "value", "key2", "value"], "sample_id": 411, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004251", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function( elem, index ){\n            //console.time('getcells');\n            var td,\n                parentNodeName,\n                ei = this.tableElemIndex,\n                //TODO: clean up this format \n                tds = {\n                    //store where the cells came from\n                    'semantic':{\n                        '0': [],//head throws error if ei.head or ei['head']\n                        '1': [],//body\n                        '2': []//footer\n                    },\n                    //keep a ref in a flat array for easy access\n                    'array':[]\n                },\n                //cache regex, reduces looking up the chain\n                theadRegex = this.theadRegex,\n                tbodyRegex = this.tbodyRegex,\n                tfootRegex = this.tfootRegex,\n\n                \n                tdsSemanticHead = tds.semantic[ei.head],\n                tdsSemanticBody = tds.semantic[ei.body],\n                tdsSemanticFoot = tds.semantic[ei.foot];\n                \n            //console.log(index);\n            //check does this col exsist\n            if(index <= -1 || typeof elem.rows[0].cells[index] == undefined){\n                return tds;\n            }\n            \n            for(var i = 0, length = elem.rows.length; i < length; i++){\n                \n                td = elem.rows[i].cells[index];\n                \n                //if the row has no cells dont error out;\n                if( td == undefined ){\n                    continue;\n                }\n                \n                parentNodeName = td.parentNode.parentNode.nodeName;\n                tds.array.push(td);\n                //faster to leave out ^ and $ in the regular expression\n                if( tbodyRegex.test( parentNodeName ) ){\n                    \n                    tdsSemanticBody.push( td );\n                    \n                }else if( theadRegex.test( parentNodeName ) ){\n                    \n                    tdsSemanticHead.push( td );\n                    \n                }else if( this.tfootRegex.test( parentNodeName ) ){\n                    \n                    tdsSemanticFoot.push( td );\n                }\n                \n                \n            }\n\n            return tds;\n        }", "code_tokens": ["function", "(", "elem", ",", "index", ")", "{", "//console.time('getcells');", "var", "td", ",", "parentNodeName", ",", "ei", "=", "this", ".", "tableElemIndex", ",", "//TODO: clean up this format ", "tds", "=", "{", "//store where the cells came from", "'semantic'", ":", "{", "'0'", ":", "[", "]", ",", "//head throws error if ei.head or ei['head']", "'1'", ":", "[", "]", ",", "//body", "'2'", ":", "[", "]", "//footer", "}", ",", "//keep a ref in a flat array for easy access", "'array'", ":", "[", "]", "}", ",", "//cache regex, reduces looking up the chain", "theadRegex", "=", "this", ".", "theadRegex", ",", "tbodyRegex", "=", "this", ".", "tbodyRegex", ",", "tfootRegex", "=", "this", ".", "tfootRegex", ",", "tdsSemanticHead", "=", "tds", ".", "semantic", "[", "ei", ".", "head", "]", ",", "tdsSemanticBody", "=", "tds", ".", "semantic", "[", "ei", ".", "body", "]", ",", "tdsSemanticFoot", "=", "tds", ".", "semantic", "[", "ei", ".", "foot", "]", ";", "//console.log(index);", "//check does this col exsist", "if", "(", "index", "<=", "-", "1", "||", "typeof", "elem", ".", "rows", "[", "0", "]", ".", "cells", "[", "index", "]", "==", "undefined", ")", "{", "return", "tds", ";", "}", "for", "(", "var", "i", "=", "0", ",", "length", "=", "elem", ".", "rows", ".", "length", ";", "i", "<", "length", ";", "i", "++", ")", "{", "td", "=", "elem", ".", "rows", "[", "i", "]", ".", "cells", "[", "index", "]", ";", "//if the row has no cells dont error out;", "if", "(", "td", "==", "undefined", ")", "{", "continue", ";", "}", "parentNodeName", "=", "td", ".", "parentNode", ".", "parentNode", ".", "nodeName", ";", "tds", ".", "array", ".", "push", "(", "td", ")", ";", "//faster to leave out ^ and $ in the regular expression", "if", "(", "tbodyRegex", ".", "test", "(", "parentNodeName", ")", ")", "{", "tdsSemanticBody", ".", "push", "(", "td", ")", ";", "}", "else", "if", "(", "theadRegex", ".", "test", "(", "parentNodeName", ")", ")", "{", "tdsSemanticHead", ".", "push", "(", "td", ")", ";", "}", "else", "if", "(", "this", ".", "tfootRegex", ".", "test", "(", "parentNodeName", ")", ")", "{", "tdsSemanticFoot", ".", "push", "(", "td", ")", ";", "}", "}", "return", "tds", ";", "}"], "original_docstring": "/*\nget the selected index cell out of table row\nneeds to work as fast as possible. and performance gains in this method are worth the time\nbecause its used to build the drag display and get the cells on col swap\nhttp://jsperf.com/binary-regex-vs-string-equality/4\n", "docstring": {"block_comment": "get the selected index cell out of table row \nneeds to work as fast as possible. and performance gains in this method are worth the time \nbecause its used to build the drag display and get the cells on col swap", "line_comment": ["console.time  getcells   ", null, "store where the cells came from", "head throws error if ei.head or ei  head  ", "body", "footer", "keep a ref in a flat array for easy access", "cache regex, reduces looking up the chain", "console.log index  ", "check does this col exsist", "if the row has no cells dont error out ", "faster to leave out   and   in the regular expression"]}, "docstring_tokens": ["get", "the", "selected", "index", "cell", "out", "of", "table", "row", "needs", "to", "work", "as", "fast", "as", "possible", ".", "and", "performance", "gains", "in", "this", "method", "are", "worth", "the", "time", "because", "its", "used", "to", "build", "the", "drag", "display", "and", "get", "the", "cells", "on", "col", "swap"], "sample_id": 412, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004252", "repo": "ms123s/simpl4-src", "path": "surface2/js/libs/jquery.dragtable.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function( e ){\n            //call this first, catch any drag display issues\n            this._start( e )\n            \n            var self = this,\n                o = self.options,\n                prevMouseX = e.pageX,\n                dragDisplayWidth = self.dragDisplay.outerWidth(),\n                halfDragDisplayWidth = dragDisplayWidth / 2,\n                appendTargetOP = o.appendTarget.offsetParent()[0],\n                scroll = o.scroll,\n                //get the col count, used to contain col swap\n                colCount = self.element[ 0 ]\n                    .getElementsByTagName( 'thead' )[ 0 ]\n                    .getElementsByTagName( 'tr' )[ 0 ]\n                    .getElementsByTagName( 'th' )\n                    .length - 1;\n\n                $( document ).bind('mousemove.' + self.widgetEventPrefix, function( e ){\n                    var columnPos = self._setCurrentColumnCollectionOffset(),\n                        mouseXDiff = e.pageX - prevMouseX,\n                        appendTarget = o.appendTarget[0],\n                        left =  ( parseInt( self.dragDisplay[0].style.left ) + mouseXDiff  );\n                        self.dragDisplay.css( 'left', left )\n                    \n               /*\n                * when moving left and e.pageX and prevMouseX are the same it will trigger right when moving left\n                * \n                * it should only swap cols when the col dragging is half over the prev/next col\n                */                    \n                if( e.pageX  < prevMouseX ){\n                   //move left\n                   var threshold = columnPos.left - halfDragDisplayWidth;\n                   \n                   \n                   //scroll left\n                   if( left < ( appendTarget.clientWidth  - dragDisplayWidth ) && scroll == true ) {\n                    var scrollLeft =  appendTarget.scrollLeft + mouseXDiff\n                        /*\n                         * firefox does scroll the body with target being body but chome does\n                         */\n                         if( appendTarget.tagName == 'BODY' ) {\n                            window.scroll( window.scrollX + scrollLeft, window.scrollY );\n                        } else {\n                            appendTarget.scrollLeft = scrollLeft;\n                        }\n                        \n                    }\n                    \n                    \n                    if( left  < threshold ){\n                        self._swapCol(self.startIndex-1);\n                    }\n\n                }else{\n                 //move right\n                 var threshold = columnPos.left + halfDragDisplayWidth ;\n                 \n                    //scroll right\n                    if( left > (appendTarget.clientWidth - dragDisplayWidth ) && scroll == true ) {\n                        //console.log(  o.appendTarget[0].clientWidth + (e.pageX - prevMouseX))\n                        \n                        var scrollLeft =  appendTarget.scrollLeft + mouseXDiff\n                        /*\n                         * firefox does scroll the body with target being body but chome does\n                         */\n                         if( appendTarget.tagName == 'BODY' ) {\n                            window.scroll( window.scrollX + scrollLeft, window.scrollY );\n                        } else {\n                            appendTarget.scrollLeft = scrollLeft;\n                        }\n                        \n                    }\n                    \n                    //move to the right only if x is greater than threshold and the current col isn' the last one\n                    if( left  > threshold  && colCount != self.startIndex ){\n                        self._swapCol( self.startIndex + 1 );\n                    }\n                }\n                //update mouse position\n                prevMouseX = e.pageX;\n                \n            })\n            .one( 'mouseup.' + self.widgetEventPrefix ,function(e ){\n                self._stop( e );\n            });\n\n            }", "code_tokens": ["function", "(", "e", ")", "{", "//call this first, catch any drag display issues", "this", ".", "_start", "(", "e", ")", "var", "self", "=", "this", ",", "o", "=", "self", ".", "options", ",", "prevMouseX", "=", "e", ".", "pageX", ",", "dragDisplayWidth", "=", "self", ".", "dragDisplay", ".", "outerWidth", "(", ")", ",", "halfDragDisplayWidth", "=", "dragDisplayWidth", "/", "2", ",", "appendTargetOP", "=", "o", ".", "appendTarget", ".", "offsetParent", "(", ")", "[", "0", "]", ",", "scroll", "=", "o", ".", "scroll", ",", "//get the col count, used to contain col swap", "colCount", "=", "self", ".", "element", "[", "0", "]", ".", "getElementsByTagName", "(", "'thead'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "'tr'", ")", "[", "0", "]", ".", "getElementsByTagName", "(", "'th'", ")", ".", "length", "-", "1", ";", "$", "(", "document", ")", ".", "bind", "(", "'mousemove.'", "+", "self", ".", "widgetEventPrefix", ",", "function", "(", "e", ")", "{", "var", "columnPos", "=", "self", ".", "_setCurrentColumnCollectionOffset", "(", ")", ",", "mouseXDiff", "=", "e", ".", "pageX", "-", "prevMouseX", ",", "appendTarget", "=", "o", ".", "appendTarget", "[", "0", "]", ",", "left", "=", "(", "parseInt", "(", "self", ".", "dragDisplay", "[", "0", "]", ".", "style", ".", "left", ")", "+", "mouseXDiff", ")", ";", "self", ".", "dragDisplay", ".", "css", "(", "'left'", ",", "left", ")", "/*\n                * when moving left and e.pageX and prevMouseX are the same it will trigger right when moving left\n                * \n                * it should only swap cols when the col dragging is half over the prev/next col\n                */", "if", "(", "e", ".", "pageX", "<", "prevMouseX", ")", "{", "//move left", "var", "threshold", "=", "columnPos", ".", "left", "-", "halfDragDisplayWidth", ";", "//scroll left", "if", "(", "left", "<", "(", "appendTarget", ".", "clientWidth", "-", "dragDisplayWidth", ")", "&&", "scroll", "==", "true", ")", "{", "var", "scrollLeft", "=", "appendTarget", ".", "scrollLeft", "+", "mouseXDiff", "/*\n                         * firefox does scroll the body with target being body but chome does\n                         */", "if", "(", "appendTarget", ".", "tagName", "==", "'BODY'", ")", "{", "window", ".", "scroll", "(", "window", ".", "scrollX", "+", "scrollLeft", ",", "window", ".", "scrollY", ")", ";", "}", "else", "{", "appendTarget", ".", "scrollLeft", "=", "scrollLeft", ";", "}", "}", "if", "(", "left", "<", "threshold", ")", "{", "self", ".", "_swapCol", "(", "self", ".", "startIndex", "-", "1", ")", ";", "}", "}", "else", "{", "//move right", "var", "threshold", "=", "columnPos", ".", "left", "+", "halfDragDisplayWidth", ";", "//scroll right", "if", "(", "left", ">", "(", "appendTarget", ".", "clientWidth", "-", "dragDisplayWidth", ")", "&&", "scroll", "==", "true", ")", "{", "//console.log(  o.appendTarget[0].clientWidth + (e.pageX - prevMouseX))", "var", "scrollLeft", "=", "appendTarget", ".", "scrollLeft", "+", "mouseXDiff", "/*\n                         * firefox does scroll the body with target being body but chome does\n                         */", "if", "(", "appendTarget", ".", "tagName", "==", "'BODY'", ")", "{", "window", ".", "scroll", "(", "window", ".", "scrollX", "+", "scrollLeft", ",", "window", ".", "scrollY", ")", ";", "}", "else", "{", "appendTarget", ".", "scrollLeft", "=", "scrollLeft", ";", "}", "}", "//move to the right only if x is greater than threshold and the current col isn' the last one", "if", "(", "left", ">", "threshold", "&&", "colCount", "!=", "self", ".", "startIndex", ")", "{", "self", ".", "_swapCol", "(", "self", ".", "startIndex", "+", "1", ")", ";", "}", "}", "//update mouse position", "prevMouseX", "=", "e", ".", "pageX", ";", "}", ")", ".", "one", "(", "'mouseup.'", "+", "self", ".", "widgetEventPrefix", ",", "function", "(", "e", ")", "{", "self", ".", "_stop", "(", "e", ")", ";", "}", ")", ";", "}"], "original_docstring": "/*\ne.currentTarget is used for figuring out offsetLeft\ngetCol must be called before this is\n\n", "docstring": {"block_comment": "e.currentTarget is used for figuring out offsetLeft \ngetCol must be called before this is", "line_comment": ["call this first, catch any drag display issues", "get the col count, used to contain col swap", "when moving left and e.pageX and prevMouseX are the same it will trigger right when moving left \nit should only swap cols when the col dragging is half over the prev next col", "move left", "scroll left", "firefox does scroll the body with target being body but chome does", "move right", "scroll right", "console.log   o.appendTarget 0 .clientWidth    e.pageX   prevMouseX  ", "firefox does scroll the body with target being body but chome does", "move to the right only if x is greater than threshold and the current col isn  the last one", "update mouse position"]}, "docstring_tokens": ["e", ".", "currentTarget", "is", "used", "for", "figuring", "out", "offsetLeft", "getCol", "must", "be", "called", "before", "this", "is"], "sample_id": 413, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004254", "repo": "Farfetch/Buildionaire", "path": "packages/jQuery.1.11.2/Content/Scripts/jquery-1.11.2-vsdoc.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (hooks) {\n            var stop = hooks.stop;\n            delete hooks.stop;\n            stop(gotoEnd);\n        }", "code_tokens": ["function", "(", "hooks", ")", "{", "var", "stop", "=", "hooks", ".", "stop", ";", "delete", "hooks", ".", "stop", ";", "stop", "(", "gotoEnd", ")", ";", "}"], "original_docstring": "/ <summary> /     Stop the currently-running animation on the matched elements. /     &#10;1 - stop(clearQueue, jumpToEnd) /     &#10;2 - stop(queue, clearQueue, jumpToEnd) / </summary> / <param name=\"type\" type=\"String\"> /     The name of the queue in which to stop animations. / </param> / <param name=\"clearQueue\" type=\"Boolean\"> /     A Boolean indicating whether to remove queued animation as well. Defaults to false. / </param> / <param name=\"gotoEnd\" type=\"Boolean\"> /     A Boolean indicating whether to complete the current animation immediately. Defaults to false. / </param> / <returns type=\"jQuery\" />", "docstring": {"block_comment": "Stop the currently running animation on the matched elements.   \n1   stop clearQueue, jumpToEnd    \n2   stop queue, clearQueue, jumpToEnd              The name of the queue in which to stop animations.             A Boolean indicating whether to remove queued animation as well. Defaults to false.             A Boolean indicating whether to complete the current animation immediately. Defaults to false.", "line_comment": null}, "docstring_tokens": ["Stop", "the", "currently", "running", "animation", "on", "the", "matched", "elements", ".", "1", "stop", "clearQueue", "jumpToEnd", "2", "stop", "queue", "clearQueue", "jumpToEnd", "The", "name", "of", "the", "queue", "in", "which", "to", "stop", "animations", ".", "A", "Boolean", "indicating", "whether", "to", "remove", "queued", "animation", "as", "well", ".", "Defaults", "to", "false", ".", "A", "Boolean", "indicating", "whether", "to", "complete", "the", "current", "animation", "immediately", ".", "Defaults", "to", "false", "."], "sample_id": 414, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004255", "repo": "Farfetch/Buildionaire", "path": "packages/jQuery.1.11.2/Content/Scripts/jquery-1.11.2-vsdoc.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function () {\n\t\t\t    if (!(--count)) {\n\t\t\t        defer.resolveWith(elements, [elements]);\n\t\t\t    }\n\t\t\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "!", "(", "--", "count", ")", ")", "{", "defer", ".", "resolveWith", "(", "elements", ",", "[", "elements", "]", ")", ";", "}", "}"], "original_docstring": "/ <summary> /     Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished. / </summary> / <param name=\"type\" type=\"String\"> /     The type of queue that needs to be observed. / </param> / <param name=\"obj\" type=\"PlainObject\"> /     Object onto which the promise methods have to be attached / </param> / <returns type=\"Promise\" />", "docstring": {"block_comment": "Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.             The type of queue that needs to be observed.             Object onto which the promise methods have to be attached", "line_comment": null}, "docstring_tokens": ["Return", "a", "Promise", "object", "to", "observe", "when", "all", "actions", "of", "a", "certain", "type", "bound", "to", "the", "collection", "queued", "or", "not", "have", "finished", ".", "The", "type", "of", "queue", "that", "needs", "to", "be", "observed", ".", "Object", "onto", "which", "the", "promise", "methods", "have", "to", "be", "attached"], "sample_id": 415, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004256", "repo": "Farfetch/Buildionaire", "path": "packages/jQuery.1.11.2/Content/Scripts/jquery-1.11.2-vsdoc.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function () {\n\t\t\t    // Operate on a copy of prop so per-property easing won't be lost\n\t\t\t    var anim = Animation(this, jQuery.extend({}, prop), optall);\n\t\t\t    doAnimation.finish = function () {\n\t\t\t        anim.stop(true);\n\t\t\t    };\n\t\t\t    // Empty animations, or finishing resolves immediately\n\t\t\t    if (empty || jQuery._data(this, \"finish\")) {\n\t\t\t        anim.stop(true);\n\t\t\t    }\n\t\t\t}", "code_tokens": ["function", "(", ")", "{", "// Operate on a copy of prop so per-property easing won't be lost", "var", "anim", "=", "Animation", "(", "this", ",", "jQuery", ".", "extend", "(", "{", "}", ",", "prop", ")", ",", "optall", ")", ";", "doAnimation", ".", "finish", "=", "function", "(", ")", "{", "anim", ".", "stop", "(", "true", ")", ";", "}", ";", "// Empty animations, or finishing resolves immediately", "if", "(", "empty", "||", "jQuery", ".", "_data", "(", "this", ",", "\"finish\"", ")", ")", "{", "anim", ".", "stop", "(", "true", ")", ";", "}", "}"], "original_docstring": "/ <summary> /     Perform a custom animation of a set of CSS properties. /     &#10;1 - animate(properties, duration, easing, complete) /     &#10;2 - animate(properties, options) / </summary> / <param name=\"prop\" type=\"PlainObject\"> /     An object of CSS properties and values that the animation will move toward. / </param> / <param name=\"speed\" type=\"\"> /     A string or number determining how long the animation will run. / </param> / <param name=\"easing\" type=\"String\"> /     A string indicating which easing function to use for the transition. / </param> / <param name=\"callback\" type=\"Function\"> /     A function to call once the animation is complete. / </param> / <returns type=\"jQuery\" />", "docstring": {"block_comment": "Perform a custom animation of a set of CSS properties.   \n1   animate properties, duration, easing, complete    \n2   animate properties, options              An object of CSS properties and values that the animation will move toward.             A string or number determining how long the animation will run.             A string indicating which easing function to use for the transition.             A function to call once the animation is complete.", "line_comment": ["Operate on a copy of prop so per property easing won t be lost", "Empty animations, or finishing resolves immediately"]}, "docstring_tokens": ["Perform", "a", "custom", "animation", "of", "a", "set", "of", "CSS", "properties", ".", "1", "animate", "properties", "duration", "easing", "complete", "2", "animate", "properties", "options", "An", "object", "of", "CSS", "properties", "and", "values", "that", "the", "animation", "will", "move", "toward", ".", "A", "string", "or", "number", "determining", "how", "long", "the", "animation", "will", "run", ".", "A", "string", "indicating", "which", "easing", "function", "to", "use", "for", "the", "transition", ".", "A", "function", "to", "call", "once", "the", "animation", "is", "complete", "."], "sample_id": 416, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004257", "repo": "Farfetch/Buildionaire", "path": "packages/jQuery.1.11.2/Content/Scripts/jquery-1.11.2-vsdoc.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (i, contexts, values) {\n\t\t\t    return function (value) {\n\t\t\t        contexts[i] = this;\n\t\t\t        values[i] = arguments.length > 1 ? core_slice.call(arguments) : value;\n\t\t\t        if (values === progressValues) {\n\t\t\t            deferred.notifyWith(contexts, values);\n\t\t\t        } else if (!(--remaining)) {\n\t\t\t            deferred.resolveWith(contexts, values);\n\t\t\t        }\n\t\t\t    };\n\t\t\t}", "code_tokens": ["function", "(", "i", ",", "contexts", ",", "values", ")", "{", "return", "function", "(", "value", ")", "{", "contexts", "[", "i", "]", "=", "this", ";", "values", "[", "i", "]", "=", "arguments", ".", "length", ">", "1", "?", "core_slice", ".", "call", "(", "arguments", ")", ":", "value", ";", "if", "(", "values", "===", "progressValues", ")", "{", "deferred", ".", "notifyWith", "(", "contexts", ",", "values", ")", ";", "}", "else", "if", "(", "!", "(", "--", "remaining", ")", ")", "{", "deferred", ".", "resolveWith", "(", "contexts", ",", "values", ")", ";", "}", "}", ";", "}"], "original_docstring": "/ <summary> /     Provides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events. / </summary> / <param name=\"subordinate/*\" type=\"Deferred\"> /     One or more Deferred objects, or plain JavaScript objects. / </param> / <returns type=\"Promise\" />", "docstring": {"block_comment": "Provides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events.             One or more Deferred objects, or plain JavaScript objects.", "line_comment": null}, "docstring_tokens": ["Provides", "a", "way", "to", "execute", "callback", "functions", "based", "on", "one", "or", "more", "objects", "usually", "Deferred", "objects", "that", "represent", "asynchronous", "events", ".", "One", "or", "more", "Deferred", "objects", "or", "plain", "JavaScript", "objects", "."], "sample_id": 417, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004258", "repo": "Farfetch/Buildionaire", "path": "packages/jQuery.1.11.2/Content/Scripts/jquery-1.11.2-vsdoc.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function (key, value) {\n                // If value is a function, invoke it and return its value\n                value = jQuery.isFunction(value) ? value() : (value == null ? \"\" : value);\n                s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n            }", "code_tokens": ["function", "(", "key", ",", "value", ")", "{", "// If value is a function, invoke it and return its value", "value", "=", "jQuery", ".", "isFunction", "(", "value", ")", "?", "value", "(", ")", ":", "(", "value", "==", "null", "?", "\"\"", ":", "value", ")", ";", "s", "[", "s", ".", "length", "]", "=", "encodeURIComponent", "(", "key", ")", "+", "\"=\"", "+", "encodeURIComponent", "(", "value", ")", ";", "}"], "original_docstring": "/ <summary> /     Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request. /     &#10;1 - jQuery.param(obj) /     &#10;2 - jQuery.param(obj, traditional) / </summary> / <param name=\"a\" type=\"Object\"> /     An array or object to serialize. / </param> / <param name=\"traditional\" type=\"Boolean\"> /     A Boolean indicating whether to perform a traditional \"shallow\" serialization. / </param> / <returns type=\"String\" />", "docstring": {"block_comment": "Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.   \n1   jQuery.param obj    \n2   jQuery.param obj, traditional              An array or object to serialize.             A Boolean indicating whether to perform a traditional  shallow  serialization.", "line_comment": ["If value is a function, invoke it and return its value"]}, "docstring_tokens": ["Create", "a", "serialized", "representation", "of", "an", "array", "or", "object", "suitable", "for", "use", "in", "a", "URL", "query", "string", "or", "Ajax", "request", ".", "1", "jQuery", ".", "param", "obj", "2", "jQuery", ".", "param", "obj", "traditional", "An", "array", "or", "object", "to", "serialize", ".", "A", "Boolean", "indicating", "whether", "to", "perform", "a", "traditional", "shallow", "serialization", "."], "sample_id": 418, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004271", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        return this.checkbox ? this.checkbox.checked : false; \n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "checkbox", "?", "this", ".", "checkbox", ".", "checked", ":", "false", ";", "}"], "original_docstring": "\nReturns the checked status of the node. If the node was rendered with no\ncheckbox, it returns false.\n@return {Boolean} The checked flag.\n", "docstring": {"block_comment": "Returns the checked status of the node. If the node was rendered with no \ncheckbox, it returns false.", "line_comment": null}, "docstring_tokens": ["Returns", "the", "checked", "status", "of", "the", "node", ".", "If", "the", "node", "was", "rendered", "with", "no", "checkbox", "it", "returns", "false", "."], "sample_id": 419, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004271", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        return this.checkbox ? this.checkbox.checked : false; \n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "checkbox", "?", "this", ".", "checkbox", ".", "checked", ":", "false", ";", "}"], "original_docstring": "\nReturns the checked status of the node. If the node was rendered with no\ncheckbox, it returns false.\n@return {Boolean} The checked flag.\n", "docstring": {"block_comment": "Returns the checked status of the node. If the node was rendered with no \ncheckbox, it returns false.", "line_comment": null}, "docstring_tokens": ["The", "checked", "flag", "."], "sample_id": 419, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004272", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        return this.iconNode;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "iconNode", ";", "}"], "original_docstring": "\nReturns the icon &lt;img> element.\n@return {HtmlElement} The DOM image element.\n", "docstring": {"block_comment": "Returns the icon  img  element.", "line_comment": null}, "docstring_tokens": ["Returns", "the", "icon", "img", "element", "."], "sample_id": 420, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004272", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        return this.iconNode;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "iconNode", ";", "}"], "original_docstring": "\nReturns the icon &lt;img> element.\n@return {HtmlElement} The DOM image element.\n", "docstring": {"block_comment": "Returns the icon  img  element.", "line_comment": null}, "docstring_tokens": ["The", "DOM", "image", "element", "."], "sample_id": 420, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004273", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        return this.textNode;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "textNode", ";", "}"], "original_docstring": "\nReturns the text node.\n@return {HtmlNode} The DOM text node.\n", "docstring": {"block_comment": "Returns the text node.", "line_comment": null}, "docstring_tokens": ["Returns", "the", "text", "node", "."], "sample_id": 421, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004273", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        return this.textNode;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "textNode", ";", "}"], "original_docstring": "\nReturns the text node.\n@return {HtmlNode} The DOM text node.\n", "docstring": {"block_comment": "Returns the text node.", "line_comment": null}, "docstring_tokens": ["The", "DOM", "text", "node", "."], "sample_id": 421, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004274", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        return this.anchor;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "anchor", ";", "}"], "original_docstring": "\nReturns the &lt;a> element that provides focus for the node's UI.\n@return {HtmlElement} The DOM anchor element.\n", "docstring": {"block_comment": "Returns the  a  element that provides focus for the node s UI.", "line_comment": null}, "docstring_tokens": ["Returns", "the", "a", "element", "that", "provides", "focus", "for", "the", "node", "s", "UI", "."], "sample_id": 422, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004274", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        return this.anchor;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "anchor", ";", "}"], "original_docstring": "\nReturns the &lt;a> element that provides focus for the node's UI.\n@return {HtmlElement} The DOM anchor element.\n", "docstring": {"block_comment": "Returns the  a  element that provides focus for the node s UI.", "line_comment": null}, "docstring_tokens": ["The", "DOM", "anchor", "element", "."], "sample_id": 422, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004275", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(value){\n        var cb = this.checkbox;\n        if(cb){\n            cb.checked = (value === undefined ? !cb.checked : value);\n            this.onCheckChange();\n        }\n    }", "code_tokens": ["function", "(", "value", ")", "{", "var", "cb", "=", "this", ".", "checkbox", ";", "if", "(", "cb", ")", "{", "cb", ".", "checked", "=", "(", "value", "===", "undefined", "?", "!", "cb", ".", "checked", ":", "value", ")", ";", "this", ".", "onCheckChange", "(", ")", ";", "}", "}"], "original_docstring": "\nSets the checked status of the tree node to the passed value, or, if no value was passed,\ntoggles the checked status. If the node was rendered with no checkbox, this has no effect.\n@param {Boolean} (optional) The new checked status.\n", "docstring": {"block_comment": "Sets the checked status of the tree node to the passed value, or, if no value was passed, \ntoggles the checked status. If the node was rendered with no checkbox, this has no effect.", "line_comment": null}, "docstring_tokens": ["Sets", "the", "checked", "status", "of", "the", "tree", "node", "to", "the", "passed", "value", "or", "if", "no", "value", "was", "passed", "toggles", "the", "checked", "status", ".", "If", "the", "node", "was", "rendered", "with", "no", "checkbox", "this", "has", "no", "effect", "."], "sample_id": 423, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004276", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){ \n       setTimeout(function(){\n           this.dropping = false;\n       }.createDelegate(this), 50); \n    }", "code_tokens": ["function", "(", ")", "{", "setTimeout", "(", "function", "(", ")", "{", "this", ".", "dropping", "=", "false", ";", "}", ".", "createDelegate", "(", "this", ")", ",", "50", ")", ";", "}"], "original_docstring": "delayed drop so the click event doesn't get fired on a drop", "docstring": {"block_comment": "delayed drop so the click event doesn t get fired on a drop", "line_comment": null}, "docstring_tokens": ["delayed", "drop", "so", "the", "click", "event", "doesn", "t", "get", "fired", "on", "a", "drop"], "sample_id": 424, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004277", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        this.node.hidden = false;\n        if(this.wrap){\n            this.wrap.style.display = \"\";\n        } \n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "node", ".", "hidden", "=", "false", ";", "if", "(", "this", ".", "wrap", ")", "{", "this", ".", "wrap", ".", "style", ".", "display", "=", "\"\"", ";", "}", "}"], "original_docstring": "\nShows this node.\n", "docstring": {"block_comment": "Shows this node.", "line_comment": null}, "docstring_tokens": ["Shows", "this", "node", "."], "sample_id": 425, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004278", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(){\n        this.node.hidden = true;\n        if(this.wrap){\n            this.wrap.style.display = \"none\";\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "node", ".", "hidden", "=", "true", ";", "if", "(", "this", ".", "wrap", ")", "{", "this", ".", "wrap", ".", "style", ".", "display", "=", "\"none\"", ";", "}", "}"], "original_docstring": "\nHides this node.\n", "docstring": {"block_comment": "Hides this node.", "line_comment": null}, "docstring_tokens": ["Hides", "this", "node", "."], "sample_id": 426, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004279", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(cls){\n        if(this.elNode){\n            Ext.fly(this.elNode).removeClass(cls);  \n        }\n    }", "code_tokens": ["function", "(", "cls", ")", "{", "if", "(", "this", ".", "elNode", ")", "{", "Ext", ".", "fly", "(", "this", ".", "elNode", ")", ".", "removeClass", "(", "cls", ")", ";", "}", "}"], "original_docstring": "\nRemoves one or more CSS classes from the node's UI element.\n@param {String/Array} className The CSS class to remove, or an array of classes\n", "docstring": {"block_comment": "Removes one or more CSS classes from the node s UI element.", "line_comment": null}, "docstring_tokens": ["Removes", "one", "or", "more", "CSS", "classes", "from", "the", "node", "s", "UI", "element", "."], "sample_id": 427, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004280", "repo": "wangxin39/xstat", "path": "SupervisorSystem/WebContent/js/ext/widgets/tree/TreeNodeUI.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(cls){\n        if(this.elNode){\n            Ext.fly(this.elNode).addClass(cls);\n        }\n    }", "code_tokens": ["function", "(", "cls", ")", "{", "if", "(", "this", ".", "elNode", ")", "{", "Ext", ".", "fly", "(", "this", ".", "elNode", ")", ".", "addClass", "(", "cls", ")", ";", "}", "}"], "original_docstring": "\nAdds one or more CSS classes to the node's UI element.\nDuplicate classes are automatically filtered out.\n@param {String/Array} className The CSS class to add, or an array of classes\n", "docstring": {"block_comment": "Adds one or more CSS classes to the node s UI element. \nDuplicate classes are automatically filtered out.", "line_comment": null}, "docstring_tokens": ["Adds", "one", "or", "more", "CSS", "classes", "to", "the", "node", "s", "UI", "element", ".", "Duplicate", "classes", "are", "automatically", "filtered", "out", "."], "sample_id": 428, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004281", "repo": "comino/superJump", "path": "node_modules/mosca/node_modules/ascoltatori/test/mqtt_ascoltatore_spec.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(cb) {\n        mqttTestServer.close(cb);\n      }", "code_tokens": ["function", "(", "cb", ")", "{", "mqttTestServer", ".", "close", "(", "cb", ")", ";", "}"], "original_docstring": "Stop the MQTT server", "docstring": {"block_comment": "Stop the MQTT server", "line_comment": null}, "docstring_tokens": ["Stop", "the", "MQTT", "server"], "sample_id": 429, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004282", "repo": "comino/superJump", "path": "node_modules/mosca/node_modules/ascoltatori/test/mqtt_ascoltatore_spec.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(cb) {\n        mqttTestServer = new mosca.Server(moscaOpts, cb);\n      }", "code_tokens": ["function", "(", "cb", ")", "{", "mqttTestServer", "=", "new", "mosca", ".", "Server", "(", "moscaOpts", ",", "cb", ")", ";", "}"], "original_docstring": "Start the MQTT server", "docstring": {"block_comment": "Start the MQTT server", "line_comment": null}, "docstring_tokens": ["Start", "the", "MQTT", "server"], "sample_id": 430, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004283", "repo": "comino/superJump", "path": "node_modules/mosca/node_modules/ascoltatori/test/mqtt_ascoltatore_spec.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(cb) {\n        newClient.once('success', function() {\n          msgReceived = true;\n          cb();\n        });\n      \n        newClient.once('ready', function(){\n          newClient.publish('reconnect/test', 'blah');   \n        });\n      }", "code_tokens": ["function", "(", "cb", ")", "{", "newClient", ".", "once", "(", "'success'", ",", "function", "(", ")", "{", "msgReceived", "=", "true", ";", "cb", "(", ")", ";", "}", ")", ";", "newClient", ".", "once", "(", "'ready'", ",", "function", "(", ")", "{", "newClient", ".", "publish", "(", "'reconnect/test'", ",", "'blah'", ")", ";", "}", ")", ";", "}"], "original_docstring": "Setup listener and send message", "docstring": {"block_comment": "Setup listener and send message", "line_comment": null}, "docstring_tokens": ["Setup", "listener", "and", "send", "message"], "sample_id": 431, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004284", "repo": "sherdog/GitWitty", "path": "master/tmp/install_4d8110c1cce79/AddToMenu-v1.6.0/files/elements/plugins/system/nonumberelements/elements/toggler_1.2.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function()\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\tthis.togglers = document.getElements( '.nntoggler' );\n\t\t\tif ( !this.togglers.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnnScripts.overlay.open( 0.2 );\n\n\t\t\t( function() {\n\t\t\t\tself.form_elements = document.getElements( 'input, select' );\n\t\t\t\tself.initTogglers();\n\t\t\t} ).delay( 500 );\n\t\t}", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "this", ".", "togglers", "=", "document", ".", "getElements", "(", "'.nntoggler'", ")", ";", "if", "(", "!", "this", ".", "togglers", ".", "length", ")", "{", "return", ";", "}", "nnScripts", ".", "overlay", ".", "open", "(", "0.2", ")", ";", "(", "function", "(", ")", "{", "self", ".", "form_elements", "=", "document", ".", "getElements", "(", "'input, select'", ")", ";", "self", ".", "initTogglers", "(", ")", ";", "}", ")", ".", "delay", "(", "500", ")", ";", "}"], "original_docstring": "holds the div elements", "docstring": {"block_comment": "holds the div elements", "line_comment": null}, "docstring_tokens": ["holds", "the", "div", "elements"], "sample_id": 432, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004285", "repo": "beauhuber/vms", "path": "visitlog/onscreenkeyboard/jsKeyboard.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function (elem, keyboard) {\n        jsKeyboard.keyboard[\"default\"] = jsKeyboard.defaultKeyboard;\n        jsKeyboard.keyboardLayout = elem;\n\n        if (keyboard != null && keyboard != undefined)\n            jsKeyboard.generateKeyboard(keyboard);\n        else\n            jsKeyboard.generateKeyboard(\"default\");\n\n        jsKeyboard.addKeyDownEvent();\n\n        jsKeyboard.show();\n        $(':input').not('[type=\"reset\"]').not('[type=\"submit\"]').on('focus, click', function (e) {\n            jsKeyboard.currentElement = $(this);\n            jsKeyboard.currentElementCursorPosition = $(this).getCursorPosition();\n            console.log('keyboard is now focused on ' + jsKeyboard.currentElement.attr('name') + ' at pos(' + jsKeyboard.currentElementCursorPosition + ')');\n        });\n    }", "code_tokens": ["function", "(", "elem", ",", "keyboard", ")", "{", "jsKeyboard", ".", "keyboard", "[", "\"default\"", "]", "=", "jsKeyboard", ".", "defaultKeyboard", ";", "jsKeyboard", ".", "keyboardLayout", "=", "elem", ";", "if", "(", "keyboard", "!=", "null", "&&", "keyboard", "!=", "undefined", ")", "jsKeyboard", ".", "generateKeyboard", "(", "keyboard", ")", ";", "else", "jsKeyboard", ".", "generateKeyboard", "(", "\"default\"", ")", ";", "jsKeyboard", ".", "addKeyDownEvent", "(", ")", ";", "jsKeyboard", ".", "show", "(", ")", ";", "$", "(", "':input'", ")", ".", "not", "(", "'[type=\"reset\"]'", ")", ".", "not", "(", "'[type=\"submit\"]'", ")", ".", "on", "(", "'focus, click'", ",", "function", "(", "e", ")", "{", "jsKeyboard", ".", "currentElement", "=", "$", "(", "this", ")", ";", "jsKeyboard", ".", "currentElementCursorPosition", "=", "$", "(", "this", ")", ".", "getCursorPosition", "(", ")", ";", "console", ".", "log", "(", "'keyboard is now focused on '", "+", "jsKeyboard", ".", "currentElement", ".", "attr", "(", "'name'", ")", "+", "' at pos('", "+", "jsKeyboard", ".", "currentElementCursorPosition", "+", "')'", ")", ";", "}", ")", ";", "}"], "original_docstring": "different keyboards can be set to this variable in order to switch between keyboards easily.", "docstring": {"block_comment": "different keyboards can be set to this variable in order to switch between keyboards easily.", "line_comment": null}, "docstring_tokens": ["different", "keyboards", "can", "be", "set", "to", "this", "variable", "in", "order", "to", "switch", "between", "keyboards", "easily", "."], "sample_id": 433, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004293", "repo": "roberthafner/flowable-engine", "path": "modules/flowable-ui-modeler/flowable-ui-modeler-app/oryx-editor-code/scripts/kickstart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(url) {\n\n\t\t// prepare a script tag and place it in html head.\n\t\tvar head = document.getElementsByTagNameNS(XMLNS.XHTML, 'head')[0];\n\t\tvar s = document.createElementNS(XMLNS.XHTML, \"script\");\n\t\ts.setAttributeNS(XMLNS.XHTML, 'type', 'text/javascript');\n\t   \ts.src = Kickstart.PATH + url;\n\n\t\t//TODO macht es sinn, dass neue skript als letztes kind in den head\n\t\t// einzubinden (stichwort reihenfolge der skript tags)?\n\t   \thead.appendChild(s);\n\n\t\t// remember this url.\n\t\tKickstart.alreadyLoaded.push(url);\n\n\t\treturn true;\n\t}", "code_tokens": ["function", "(", "url", ")", "{", "// prepare a script tag and place it in html head.", "var", "head", "=", "document", ".", "getElementsByTagNameNS", "(", "XMLNS", ".", "XHTML", ",", "'head'", ")", "[", "0", "]", ";", "var", "s", "=", "document", ".", "createElementNS", "(", "XMLNS", ".", "XHTML", ",", "\"script\"", ")", ";", "s", ".", "setAttributeNS", "(", "XMLNS", ".", "XHTML", ",", "'type'", ",", "'text/javascript'", ")", ";", "s", ".", "src", "=", "Kickstart", ".", "PATH", "+", "url", ";", "//TODO macht es sinn, dass neue skript als letztes kind in den head", "// einzubinden (stichwort reihenfolge der skript tags)?", "head", ".", "appendChild", "(", "s", ")", ";", "// remember this url.", "Kickstart", ".", "alreadyLoaded", ".", "push", "(", "url", ")", ";", "return", "true", ";", "}"], "original_docstring": "\nLoads a js, regardless of whether it has only been already downloaded.\n@param {String} url the script to load.\n", "docstring": {"block_comment": "Loads a js, regardless of whether it has only been already downloaded.", "line_comment": ["prepare a script tag and place it in html head.", null, null, "remember this url."]}, "docstring_tokens": ["Loads", "a", "js", "regardless", "of", "whether", "it", "has", "only", "been", "already", "downloaded", "."], "sample_id": 434, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004293", "repo": "roberthafner/flowable-engine", "path": "modules/flowable-ui-modeler/flowable-ui-modeler-app/oryx-editor-code/scripts/kickstart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(url) {\n\n\t\t// prepare a script tag and place it in html head.\n\t\tvar head = document.getElementsByTagNameNS(XMLNS.XHTML, 'head')[0];\n\t\tvar s = document.createElementNS(XMLNS.XHTML, \"script\");\n\t\ts.setAttributeNS(XMLNS.XHTML, 'type', 'text/javascript');\n\t   \ts.src = Kickstart.PATH + url;\n\n\t\t//TODO macht es sinn, dass neue skript als letztes kind in den head\n\t\t// einzubinden (stichwort reihenfolge der skript tags)?\n\t   \thead.appendChild(s);\n\n\t\t// remember this url.\n\t\tKickstart.alreadyLoaded.push(url);\n\n\t\treturn true;\n\t}", "code_tokens": ["function", "(", "url", ")", "{", "// prepare a script tag and place it in html head.", "var", "head", "=", "document", ".", "getElementsByTagNameNS", "(", "XMLNS", ".", "XHTML", ",", "'head'", ")", "[", "0", "]", ";", "var", "s", "=", "document", ".", "createElementNS", "(", "XMLNS", ".", "XHTML", ",", "\"script\"", ")", ";", "s", ".", "setAttributeNS", "(", "XMLNS", ".", "XHTML", ",", "'type'", ",", "'text/javascript'", ")", ";", "s", ".", "src", "=", "Kickstart", ".", "PATH", "+", "url", ";", "//TODO macht es sinn, dass neue skript als letztes kind in den head", "// einzubinden (stichwort reihenfolge der skript tags)?", "head", ".", "appendChild", "(", "s", ")", ";", "// remember this url.", "Kickstart", ".", "alreadyLoaded", ".", "push", "(", "url", ")", ";", "return", "true", ";", "}"], "original_docstring": "\nLoads a js, regardless of whether it has only been already downloaded.\n@param {String} url the script to load.\n", "docstring": {"block_comment": "Loads a js, regardless of whether it has only been already downloaded.", "line_comment": ["prepare a script tag and place it in html head.", null, null, "remember this url."]}, "docstring_tokens": ["the", "script", "to", "load", "."], "sample_id": 434, "prompt_tokens": ["<javascript>", "<param>", "url"], "comment_type": "param", "sentence_id": 1}
{"id": "21004294", "repo": "roberthafner/flowable-engine", "path": "modules/flowable-ui-modeler/flowable-ui-modeler-app/oryx-editor-code/scripts/kickstart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(url) {\n\t\t// if not already loaded, include it.\n\t\tif(Kickstart.alreadyLoaded.member(url))\n\t\t\treturn false;\n\t\treturn Kickstart.include(url);\n\t}", "code_tokens": ["function", "(", "url", ")", "{", "// if not already loaded, include it.", "if", "(", "Kickstart", ".", "alreadyLoaded", ".", "member", "(", "url", ")", ")", "return", "false", ";", "return", "Kickstart", ".", "include", "(", "url", ")", ";", "}"], "original_docstring": "\nLoads a js, assuring that it has only been downloaded once.\n@param {String} url the script to load.\n", "docstring": {"block_comment": "Loads a js, assuring that it has only been downloaded once.", "line_comment": ["if not already loaded, include it."]}, "docstring_tokens": ["Loads", "a", "js", "assuring", "that", "it", "has", "only", "been", "downloaded", "once", "."], "sample_id": 435, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004294", "repo": "roberthafner/flowable-engine", "path": "modules/flowable-ui-modeler/flowable-ui-modeler-app/oryx-editor-code/scripts/kickstart.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function(url) {\n\t\t// if not already loaded, include it.\n\t\tif(Kickstart.alreadyLoaded.member(url))\n\t\t\treturn false;\n\t\treturn Kickstart.include(url);\n\t}", "code_tokens": ["function", "(", "url", ")", "{", "// if not already loaded, include it.", "if", "(", "Kickstart", ".", "alreadyLoaded", ".", "member", "(", "url", ")", ")", "return", "false", ";", "return", "Kickstart", ".", "include", "(", "url", ")", ";", "}"], "original_docstring": "\nLoads a js, assuring that it has only been downloaded once.\n@param {String} url the script to load.\n", "docstring": {"block_comment": "Loads a js, assuring that it has only been downloaded once.", "line_comment": ["if not already loaded, include it."]}, "docstring_tokens": ["the", "script", "to", "load", "."], "sample_id": 435, "prompt_tokens": ["<javascript>", "<param>", "url"], "comment_type": "param", "sentence_id": 1}
{"id": "21004295", "repo": "abdihaikal/angular.js", "path": "src/ngAnimate/animateQueue.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(element, bool) {\n        var argCount = arguments.length;\n\n        if (argCount === 0) {\n          // () - Global getter\n          bool = !!animationsEnabled;\n        } else {\n          var hasElement = isElement(element);\n\n          if (!hasElement) {\n            // (bool) - Global setter\n            bool = animationsEnabled = !!element;\n          } else {\n            var node = getDomNode(element);\n\n            if (argCount === 1) {\n              // (element) - Element getter\n              bool = !disabledElementsLookup.get(node);\n            } else {\n              // (element, bool) - Element setter\n              disabledElementsLookup.put(node, !bool);\n            }\n          }\n        }\n\n        return bool;\n      }", "code_tokens": ["function", "(", "element", ",", "bool", ")", "{", "var", "argCount", "=", "arguments", ".", "length", ";", "if", "(", "argCount", "===", "0", ")", "{", "// () - Global getter", "bool", "=", "!", "!", "animationsEnabled", ";", "}", "else", "{", "var", "hasElement", "=", "isElement", "(", "element", ")", ";", "if", "(", "!", "hasElement", ")", "{", "// (bool) - Global setter", "bool", "=", "animationsEnabled", "=", "!", "!", "element", ";", "}", "else", "{", "var", "node", "=", "getDomNode", "(", "element", ")", ";", "if", "(", "argCount", "===", "1", ")", "{", "// (element) - Element getter", "bool", "=", "!", "disabledElementsLookup", ".", "get", "(", "node", ")", ";", "}", "else", "{", "// (element, bool) - Element setter", "disabledElementsLookup", ".", "put", "(", "node", ",", "!", "bool", ")", ";", "}", "}", "}", "return", "bool", ";", "}"], "original_docstring": "this method has four signatures: () - global getter (bool) - global setter (element) - element getter (element, bool) - element setter<F37>", "docstring": {"block_comment": "this method has four signatures       global getter  bool    global setter  element    element getter  element, bool    element setter", "line_comment": ["     Global getter", " bool    Global setter", " element    Element getter", " element, bool    Element setter"]}, "docstring_tokens": ["this", "method", "has", "four", "signatures", "global", "getter", "bool", "global", "setter", "element", "element", "getter", "element", "bool", "element", "setter"], "sample_id": 436, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004296", "repo": "ACOKing/ArcherSys", "path": "owncloud-serv/apps/contacts/js/app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(c) {\n\t\t\t\t$('#x').val(c.x);\n\t\t\t\t$('#y').val(c.y);\n\t\t\t\t$('#w').val(c.w);\n\t\t\t\t$('#h').val(c.h);\n\t\t\t}", "code_tokens": ["function", "(", "c", ")", "{", "$", "(", "'#x'", ")", ".", "val", "(", "c", ".", "x", ")", ";", "$", "(", "'#y'", ")", ".", "val", "(", "c", ".", "y", ")", ";", "$", "(", "'#w'", ")", ".", "val", "(", "c", ".", "w", ")", ";", "$", "(", "'#h'", ")", ".", "val", "(", "c", ".", "h", ")", ";", "}"], "original_docstring": "Simple event handler, called from onChange and onSelect event handlers, as per the Jcrop invocation below", "docstring": {"block_comment": "Simple event handler, called from onChange and onSelect event handlers, as per the Jcrop invocation below", "line_comment": null}, "docstring_tokens": ["Simple", "event", "handler", "called", "from", "onChange", "and", "onSelect", "event", "handlers", "as", "per", "the", "Jcrop", "invocation", "below"], "sample_id": 437, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004297", "repo": "ACOKing/ArcherSys", "path": "owncloud-serv/apps/contacts/js/app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\t\t// If a contact is open we know which categories it's in\n\t\t\tif(this.currentid) {\n\t\t\t\tvar contact = this.contacts.findById(this.currentid);\n\t\t\t\tif(contact === null) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.$groups.find('optgroup,option:not([value=\"-1\"])').remove();\n\t\t\t\tvar addopts = '', rmopts = '';\n\t\t\t\t$.each(this.groups.categories, function(i, category) {\n\t\t\t\t\tif(contact.inGroup(category.name)) {\n\t\t\t\t\t\trmopts += '<option value=\"' + category.id + '\">' + category.name + '</option>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddopts += '<option value=\"' + category.id + '\">' + category.name + '</option>';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(addopts.length) {\n\t\t\t\t\t$(addopts).appendTo(this.$groups)\n\t\t\t\t\t.wrapAll('<optgroup data-action=\"add\" label=\"' + t('contacts', 'Add to...') + '\"/>');\n\t\t\t\t}\n\t\t\t\tif(rmopts.length) {\n\t\t\t\t\t$(rmopts).appendTo(this.$groups)\n\t\t\t\t\t.wrapAll('<optgroup data-action=\"remove\" label=\"' + t('contacts', 'Remove from...') + '\"/>');\n\t\t\t\t}\n\t\t\t} else if(this.contacts.getSelectedContacts().length > 0) { // Otherwise add all categories to both add and remove\n\t\t\t\tthis.$groups.find('optgroup,option:not([value=\"-1\"])').remove();\n\t\t\t\tvar addopts = '', rmopts = '';\n\t\t\t\t$.each(this.groups.categories, function(i, category) {\n\t\t\t\t\trmopts += '<option value=\"' + category.id + '\">' + category.name + '</option>';\n\t\t\t\t\taddopts += '<option value=\"' + category.id + '\">' + category.name + '</option>';\n\t\t\t\t});\n\t\t\t\t$(addopts).appendTo(this.$groups)\n\t\t\t\t\t.wrapAll('<optgroup data-action=\"add\" label=\"' + t('contacts', 'Add to...') + '\"/>');\n\t\t\t\t$(rmopts).appendTo(this.$groups)\n\t\t\t\t\t.wrapAll('<optgroup data-action=\"remove\" label=\"' + t('contacts', 'Remove from...') + '\"/>');\n\t\t\t} else {\n\t\t\t\t// 3rd option: No contact open, none checked, just show \"Add group...\"\n\t\t\t\tthis.$groups.find('optgroup,option:not([value=\"-1\"])').remove();\n\t\t\t}\n\t\t\t$('<option value=\"add\">' + t('contacts', 'Add group...') + '</option>').appendTo(this.$groups);\n\t\t\tthis.$groups.val(-1);\n\t\t}", "code_tokens": ["function", "(", ")", "{", "// If a contact is open we know which categories it's in", "if", "(", "this", ".", "currentid", ")", "{", "var", "contact", "=", "this", ".", "contacts", ".", "findById", "(", "this", ".", "currentid", ")", ";", "if", "(", "contact", "===", "null", ")", "{", "return", "false", ";", "}", "this", ".", "$groups", ".", "find", "(", "'optgroup,option:not([value=\"-1\"])'", ")", ".", "remove", "(", ")", ";", "var", "addopts", "=", "''", ",", "rmopts", "=", "''", ";", "$", ".", "each", "(", "this", ".", "groups", ".", "categories", ",", "function", "(", "i", ",", "category", ")", "{", "if", "(", "contact", ".", "inGroup", "(", "category", ".", "name", ")", ")", "{", "rmopts", "+=", "'<option value=\"'", "+", "category", ".", "id", "+", "'\">'", "+", "category", ".", "name", "+", "'</option>'", ";", "}", "else", "{", "addopts", "+=", "'<option value=\"'", "+", "category", ".", "id", "+", "'\">'", "+", "category", ".", "name", "+", "'</option>'", ";", "}", "}", ")", ";", "if", "(", "addopts", ".", "length", ")", "{", "$", "(", "addopts", ")", ".", "appendTo", "(", "this", ".", "$groups", ")", ".", "wrapAll", "(", "'<optgroup data-action=\"add\" label=\"'", "+", "t", "(", "'contacts'", ",", "'Add to...'", ")", "+", "'\"/>'", ")", ";", "}", "if", "(", "rmopts", ".", "length", ")", "{", "$", "(", "rmopts", ")", ".", "appendTo", "(", "this", ".", "$groups", ")", ".", "wrapAll", "(", "'<optgroup data-action=\"remove\" label=\"'", "+", "t", "(", "'contacts'", ",", "'Remove from...'", ")", "+", "'\"/>'", ")", ";", "}", "}", "else", "if", "(", "this", ".", "contacts", ".", "getSelectedContacts", "(", ")", ".", "length", ">", "0", ")", "{", "// Otherwise add all categories to both add and remove", "this", ".", "$groups", ".", "find", "(", "'optgroup,option:not([value=\"-1\"])'", ")", ".", "remove", "(", ")", ";", "var", "addopts", "=", "''", ",", "rmopts", "=", "''", ";", "$", ".", "each", "(", "this", ".", "groups", ".", "categories", ",", "function", "(", "i", ",", "category", ")", "{", "rmopts", "+=", "'<option value=\"'", "+", "category", ".", "id", "+", "'\">'", "+", "category", ".", "name", "+", "'</option>'", ";", "addopts", "+=", "'<option value=\"'", "+", "category", ".", "id", "+", "'\">'", "+", "category", ".", "name", "+", "'</option>'", ";", "}", ")", ";", "$", "(", "addopts", ")", ".", "appendTo", "(", "this", ".", "$groups", ")", ".", "wrapAll", "(", "'<optgroup data-action=\"add\" label=\"'", "+", "t", "(", "'contacts'", ",", "'Add to...'", ")", "+", "'\"/>'", ")", ";", "$", "(", "rmopts", ")", ".", "appendTo", "(", "this", ".", "$groups", ")", ".", "wrapAll", "(", "'<optgroup data-action=\"remove\" label=\"'", "+", "t", "(", "'contacts'", ",", "'Remove from...'", ")", "+", "'\"/>'", ")", ";", "}", "else", "{", "// 3rd option: No contact open, none checked, just show \"Add group...\"", "this", ".", "$groups", ".", "find", "(", "'optgroup,option:not([value=\"-1\"])'", ")", ".", "remove", "(", ")", ";", "}", "$", "(", "'<option value=\"add\">'", "+", "t", "(", "'contacts'", ",", "'Add group...'", ")", "+", "'</option>'", ")", ".", "appendTo", "(", "this", ".", "$groups", ")", ";", "this", ".", "$groups", ".", "val", "(", "-", "1", ")", ";", "}"], "original_docstring": "Build the select to add/remove from groups.", "docstring": {"block_comment": "Build the select to add remove from groups.", "line_comment": ["If a contact is open we know which categories it s in", "Otherwise add all categories to both add and remove", "3rd option  No contact open, none checked, just show  Add group... "]}, "docstring_tokens": ["Build", "the", "select", "to", "add", "remove", "from", "groups", "."], "sample_id": 438, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004298", "repo": "ACOKing/ArcherSys", "path": "owncloud-serv/apps/contacts/js/app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\t\tthis.showActions(false);\n\t\t}", "code_tokens": ["function", "(", ")", "{", "this", ".", "showActions", "(", "false", ")", ";", "}"], "original_docstring": "\nShow/hide elements in the header\n@param act An array of actions to show based on class name e.g ['add', 'delete']\n", "docstring": {"block_comment": "Show hide elements in the header", "line_comment": null}, "docstring_tokens": ["Show", "hide", "elements", "in", "the", "header"], "sample_id": 439, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004299", "repo": "ygol/odoo", "path": "addons/note/static/src/js/systray_activity_menu.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function (ev) {\n        if (ev.which === $.ui.keyCode.ENTER) {\n            this._saveNote();\n        }\n    }", "code_tokens": ["function", "(", "ev", ")", "{", "if", "(", "ev", ".", "which", "===", "$", ".", "ui", ".", "keyCode", ".", "ENTER", ")", "{", "this", ".", "_saveNote", "(", ")", ";", "}", "}"], "original_docstring": "\nHandling Enter key for quick create note.\n\n@private\n@param {KeyboardEvent} ev\n", "docstring": {"block_comment": "Handling Enter key for quick create note.", "line_comment": null}, "docstring_tokens": ["Handling", "Enter", "key", "for", "quick", "create", "note", "."], "sample_id": 440, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004300", "repo": "ygol/odoo", "path": "addons/note/static/src/js/systray_activity_menu.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function (ev) {\n        this._saveNote();\n    }", "code_tokens": ["function", "(", "ev", ")", "{", "this", ".", "_saveNote", "(", ")", ";", "}"], "original_docstring": "\nSaving note (quick create) and updating activity preview\n\n@private\n@param {MouseEvent} ev\n", "docstring": {"block_comment": "Saving note  quick create  and updating activity preview", "line_comment": null}, "docstring_tokens": ["Saving", "note", "quick", "create", "and", "updating", "activity", "preview"], "sample_id": 441, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004301", "repo": "ygol/odoo", "path": "addons/note/static/src/js/systray_activity_menu.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function (ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.noteDateTimeWidget.$input.click();\n    }", "code_tokens": ["function", "(", "ev", ")", "{", "ev", ".", "preventDefault", "(", ")", ";", "ev", ".", "stopPropagation", "(", ")", ";", "this", ".", "noteDateTimeWidget", ".", "$input", ".", "click", "(", ")", ";", "}"], "original_docstring": "\nOpens datetime picker for note.\nQuick FIX due to no option for set custom icon instead of caret in datepicker.\n\n@private\n@param {MouseEvent} ev\n", "docstring": {"block_comment": "Opens datetime picker for note. \nQuick FIX due to no option for set custom icon instead of caret in datepicker.", "line_comment": null}, "docstring_tokens": ["Opens", "datetime", "picker", "for", "note", ".", "Quick", "FIX", "due", "to", "no", "option", "for", "set", "custom", "icon", "instead", "of", "caret", "in", "datepicker", "."], "sample_id": 442, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004302", "repo": "ygol/odoo", "path": "addons/note/static/src/js/systray_activity_menu.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function (ev) {\n        ev.stopPropagation();\n    }", "code_tokens": ["function", "(", "ev", ")", "{", "ev", ".", "stopPropagation", "(", ")", ";", "}"], "original_docstring": "\nWhen focusing on input for new quick note systerm tray must be open.\nPreventing to close\n\n@private\n@param {MouseEvent} ev\n", "docstring": {"block_comment": "When focusing on input for new quick note systerm tray must be open. \nPreventing to close", "line_comment": null}, "docstring_tokens": ["When", "focusing", "on", "input", "for", "new", "quick", "note", "systerm", "tray", "must", "be", "open", ".", "Preventing", "to", "close"], "sample_id": 443, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004303", "repo": "ygol/odoo", "path": "addons/note/static/src/js/systray_activity_menu.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function (ev) {\n        var self = this;\n        ev.stopPropagation();\n        if (!this.noteDateTimeWidget){\n            this.noteDateTimeWidget = new datepicker.DateWidget(this, {useCurrent: true});\n        }\n        this.noteDateTimeWidget.appendTo(this.$('.o_note_datetime')).then(function() {\n            self.noteDateTimeWidget.$input.attr('placeholder', _t(\"Today\"));\n            self.noteDateTimeWidget.setValue(false);\n            self.$('.o_note_show, .o_note').toggleClass('d-none');\n            self.$('.o_note_input').val('').focus();\n        });\n    }", "code_tokens": ["function", "(", "ev", ")", "{", "var", "self", "=", "this", ";", "ev", ".", "stopPropagation", "(", ")", ";", "if", "(", "!", "this", ".", "noteDateTimeWidget", ")", "{", "this", ".", "noteDateTimeWidget", "=", "new", "datepicker", ".", "DateWidget", "(", "this", ",", "{", "useCurrent", ":", "true", "}", ")", ";", "}", "this", ".", "noteDateTimeWidget", ".", "appendTo", "(", "this", ".", "$", "(", "'.o_note_datetime'", ")", ")", ".", "then", "(", "function", "(", ")", "{", "self", ".", "noteDateTimeWidget", ".", "$input", ".", "attr", "(", "'placeholder'", ",", "_t", "(", "\"Today\"", ")", ")", ";", "self", ".", "noteDateTimeWidget", ".", "setValue", "(", "false", ")", ";", "self", ".", "$", "(", "'.o_note_show, .o_note'", ")", ".", "toggleClass", "(", "'d-none'", ")", ";", "self", ".", "$", "(", "'.o_note_input'", ")", ".", "val", "(", "''", ")", ".", "focus", "(", ")", ";", "}", ")", ";", "}"], "original_docstring": "\nWhen add new note button clicked, toggling quick note create view inside\nSystray activity view\n\n@private\n@param {MouseEvent} ev\n", "docstring": {"block_comment": "When add new note button clicked, toggling quick note create view inside \nSystray activity view", "line_comment": null}, "docstring_tokens": ["When", "add", "new", "note", "button", "clicked", "toggling", "quick", "note", "create", "view", "inside", "Systray", "activity", "view"], "sample_id": 444, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004304", "repo": "ygol/odoo", "path": "addons/note/static/src/js/systray_activity_menu.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function () {\n        var note = this.$('.o_note_input').val().trim();\n        if (! note) {\n            return;\n        }\n        var params = {'note': note};\n        var noteDateTime = this.noteDateTimeWidget.getValue();\n        if (noteDateTime) {\n            params = _.extend(params, {'date_deadline': noteDateTime});\n        } else {\n            params = _.extend(params, {'date_deadline': moment()});\n        }\n        this.$('.o_note_show').removeClass('d-none');\n        this.$('.o_note').addClass('d-none');\n        this._rpc({\n            route: '/note/new',\n            params: params,\n        }).then(this._updateActivityPreview.bind(this));\n    }", "code_tokens": ["function", "(", ")", "{", "var", "note", "=", "this", ".", "$", "(", "'.o_note_input'", ")", ".", "val", "(", ")", ".", "trim", "(", ")", ";", "if", "(", "!", "note", ")", "{", "return", ";", "}", "var", "params", "=", "{", "'note'", ":", "note", "}", ";", "var", "noteDateTime", "=", "this", ".", "noteDateTimeWidget", ".", "getValue", "(", ")", ";", "if", "(", "noteDateTime", ")", "{", "params", "=", "_", ".", "extend", "(", "params", ",", "{", "'date_deadline'", ":", "noteDateTime", "}", ")", ";", "}", "else", "{", "params", "=", "_", ".", "extend", "(", "params", ",", "{", "'date_deadline'", ":", "moment", "(", ")", "}", ")", ";", "}", "this", ".", "$", "(", "'.o_note_show'", ")", ".", "removeClass", "(", "'d-none'", ")", ";", "this", ".", "$", "(", "'.o_note'", ")", ".", "addClass", "(", "'d-none'", ")", ";", "this", ".", "_rpc", "(", "{", "route", ":", "'/note/new'", ",", "params", ":", "params", ",", "}", ")", ".", "then", "(", "this", ".", "_updateActivityPreview", ".", "bind", "(", "this", ")", ")", ";", "}"], "original_docstring": "\nSave the note to database using datepicker date and field as note\nBy default, when no datetime is set, it uses the current datetime.\n\n@private\n", "docstring": {"block_comment": "Save the note to database using datepicker date and field as note \nBy default, when no datetime is set, it uses the current datetime.", "line_comment": null}, "docstring_tokens": ["Save", "the", "note", "to", "database", "using", "datepicker", "date", "and", "field", "as", "note", "By", "default", "when", "no", "datetime", "is", "set", "it", "uses", "the", "current", "datetime", "."], "sample_id": 445, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004305", "repo": "ygol/odoo", "path": "addons/note/static/src/js/systray_activity_menu.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function () {\n        var self = this;\n        return this._super.apply(this, arguments).then(function () {\n            var reminderIndex = _.findIndex(self.activities, function (val) {\n                return val.model === 'note.note';\n            });\n            if (reminderIndex > 0) {\n                self.activities.splice(0, 0, self.activities.splice(reminderIndex, 1)[0]);\n            }\n        });\n    }", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "return", "this", ".", "_super", ".", "apply", "(", "this", ",", "arguments", ")", ".", "then", "(", "function", "(", ")", "{", "var", "reminderIndex", "=", "_", ".", "findIndex", "(", "self", ".", "activities", ",", "function", "(", "val", ")", "{", "return", "val", ".", "model", "===", "'note.note'", ";", "}", ")", ";", "if", "(", "reminderIndex", ">", "0", ")", "{", "self", ".", "activities", ".", "splice", "(", "0", ",", "0", ",", "self", ".", "activities", ".", "splice", "(", "reminderIndex", ",", "1", ")", "[", "0", "]", ")", ";", "}", "}", ")", ";", "}"], "original_docstring": "-------------------------------------------------- Private -------------------------------------------------- \nMoving notes at first place\n@override\n", "docstring": {"block_comment": "Private                                                    \nMoving notes at first place", "line_comment": null}, "docstring_tokens": ["Private", "Moving", "notes", "at", "first", "place"], "sample_id": 446, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004306", "repo": "norayr/unisubs", "path": "media/src/js/subtitle-editor/app.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function(key) {\n\t\treturn ((key === 46) || (key === 8));\n\t    }", "code_tokens": ["function", "(", "key", ")", "{", "return", "(", "(", "key", "===", "46", ")", "||", "(", "key", "===", "8", ")", ")", ";", "}"], "original_docstring": "Reset the lock timer.", "docstring": {"block_comment": "Reset the lock timer.", "line_comment": null}, "docstring_tokens": ["Reset", "the", "lock", "timer", "."], "sample_id": 447, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004307", "repo": "fabiencheylac/kolp", "path": "node_modules/ionic-angular/umd/components/select/select.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n                return this._disabled;\n            }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "_disabled", ";", "}"], "original_docstring": "\n\\@input {boolean} If true, the user cannot interact with this element.\n@return {?}\n", "docstring": {"block_comment": "\\ input  boolean  If true, the user cannot interact with this element.", "line_comment": null}, "docstring_tokens": ["\\", "input", "boolean", "If", "true", "the", "user", "cannot", "interact", "with", "this", "element", "."], "sample_id": 448, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004308", "repo": "fabiencheylac/kolp", "path": "node_modules/ionic-angular/umd/components/select/select.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n                return this._multi;\n            }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "_multi", ";", "}"], "original_docstring": "\n\\@input {boolean} If true, the element can accept multiple values.\n@return {?}\n", "docstring": {"block_comment": "\\ input  boolean  If true, the element can accept multiple values.", "line_comment": null}, "docstring_tokens": ["\\", "input", "boolean", "If", "true", "the", "element", "can", "accept", "multiple", "values", "."], "sample_id": 449, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004309", "repo": "lsuits/moodle", "path": "theme/snap/amd/src/course_conditionals-lazy.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(changedHTML, typeKey) {\n                                    if (!Object.keys(changedHTML).length) {\n                                        // There are no newly available elements which require updating.\n                                        return;\n                                    }\n                                    for (var i in changedHTML) {\n                                        var item = changedHTML[i];\n                                        var id = item.id ? item.id : item.number;\n                                        var html = item.html;\n                                        var baseSelector = '#' + typeKey + '-' + id;\n                                        $(baseSelector).replaceWith(html);\n                                    }\n                                }", "code_tokens": ["function", "(", "changedHTML", ",", "typeKey", ")", "{", "if", "(", "!", "Object", ".", "keys", "(", "changedHTML", ")", ".", "length", ")", "{", "// There are no newly available elements which require updating.", "return", ";", "}", "for", "(", "var", "i", "in", "changedHTML", ")", "{", "var", "item", "=", "changedHTML", "[", "i", "]", ";", "var", "id", "=", "item", ".", "id", "?", "item", ".", "id", ":", "item", ".", "number", ";", "var", "html", "=", "item", ".", "html", ";", "var", "baseSelector", "=", "'#'", "+", "typeKey", "+", "'-'", "+", "id", ";", "$", "(", "baseSelector", ")", ".", "replaceWith", "(", "html", ")", ";", "}", "}"], "original_docstring": "\nUpdate elements with newly available / unavailable html.\nElements can either be sections or modules.\n\n@param {object} availableHTML - response json\n@param {string} typeKey - string (either 'section' or 'module')\n", "docstring": {"block_comment": "Update elements with newly available   unavailable html. \nElements can either be sections or modules.", "line_comment": ["There are no newly available elements which require updating."]}, "docstring_tokens": ["Update", "elements", "with", "newly", "available", "unavailable", "html", ".", "Elements", "can", "either", "be", "sections", "or", "modules", "."], "sample_id": 450, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004309", "repo": "lsuits/moodle", "path": "theme/snap/amd/src/course_conditionals-lazy.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(changedHTML, typeKey) {\n                                    if (!Object.keys(changedHTML).length) {\n                                        // There are no newly available elements which require updating.\n                                        return;\n                                    }\n                                    for (var i in changedHTML) {\n                                        var item = changedHTML[i];\n                                        var id = item.id ? item.id : item.number;\n                                        var html = item.html;\n                                        var baseSelector = '#' + typeKey + '-' + id;\n                                        $(baseSelector).replaceWith(html);\n                                    }\n                                }", "code_tokens": ["function", "(", "changedHTML", ",", "typeKey", ")", "{", "if", "(", "!", "Object", ".", "keys", "(", "changedHTML", ")", ".", "length", ")", "{", "// There are no newly available elements which require updating.", "return", ";", "}", "for", "(", "var", "i", "in", "changedHTML", ")", "{", "var", "item", "=", "changedHTML", "[", "i", "]", ";", "var", "id", "=", "item", ".", "id", "?", "item", ".", "id", ":", "item", ".", "number", ";", "var", "html", "=", "item", ".", "html", ";", "var", "baseSelector", "=", "'#'", "+", "typeKey", "+", "'-'", "+", "id", ";", "$", "(", "baseSelector", ")", ".", "replaceWith", "(", "html", ")", ";", "}", "}"], "original_docstring": "\nUpdate elements with newly available / unavailable html.\nElements can either be sections or modules.\n\n@param {object} availableHTML - response json\n@param {string} typeKey - string (either 'section' or 'module')\n", "docstring": {"block_comment": "Update elements with newly available   unavailable html. \nElements can either be sections or modules.", "line_comment": ["There are no newly available elements which require updating."]}, "docstring_tokens": ["-", "string", "(", "either", "section", "or", "module", ")"], "sample_id": 450, "prompt_tokens": ["<javascript>", "<param>", "typeKey"], "comment_type": "param", "sentence_id": 1}
{"id": "21004310", "repo": "joshvote/portal-core", "path": "src/main/webapp/portal-core/js/portal/widgets/layout/AccordianDefault.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(comp) {\n        var me = this, owner = me.owner, toExpand, expanded, previousValue;\n\n        if (me.owner.items.getCount() === 1) {\n            // do not allow collapse if there is only one item\n            return false;\n        }\n\n        if (!me.processing) {\n            me.processing = true;\n            previousValue = owner.deferLayouts;\n            owner.deferLayouts = true;\n            //portal-core change\n            toExpand = comp.previousSibling(me.defaultQuery)\n                    || comp.nextSibling(me.defaultQuery);\n            //end portal-core change\n\n            // If we are allowing multi, and the \"toCollapse\" component is NOT\n            // the only expanded Component,\n            // then ask the box layout to collapse it to its header.\n            if (me.multi) {\n                expanded = me.getExpanded();\n\n                // If the collapsing Panel is the only expanded one, expand the\n                // following Component.\n                // All this is handling fill: true, so there must be at least\n                // one expanded,\n                if (expanded.length === 1) {\n                    toExpand.expand();\n                }\n\n            } else if (toExpand) {\n                toExpand.expand();\n            }\n            owner.deferLayouts = previousValue;\n            me.processing = false;\n        }\n    }", "code_tokens": ["function", "(", "comp", ")", "{", "var", "me", "=", "this", ",", "owner", "=", "me", ".", "owner", ",", "toExpand", ",", "expanded", ",", "previousValue", ";", "if", "(", "me", ".", "owner", ".", "items", ".", "getCount", "(", ")", "===", "1", ")", "{", "// do not allow collapse if there is only one item", "return", "false", ";", "}", "if", "(", "!", "me", ".", "processing", ")", "{", "me", ".", "processing", "=", "true", ";", "previousValue", "=", "owner", ".", "deferLayouts", ";", "owner", ".", "deferLayouts", "=", "true", ";", "//portal-core change", "toExpand", "=", "comp", ".", "previousSibling", "(", "me", ".", "defaultQuery", ")", "||", "comp", ".", "nextSibling", "(", "me", ".", "defaultQuery", ")", ";", "//end portal-core change", "// If we are allowing multi, and the \"toCollapse\" component is NOT", "// the only expanded Component,", "// then ask the box layout to collapse it to its header.", "if", "(", "me", ".", "multi", ")", "{", "expanded", "=", "me", ".", "getExpanded", "(", ")", ";", "// If the collapsing Panel is the only expanded one, expand the", "// following Component.", "// All this is handling fill: true, so there must be at least", "// one expanded,", "if", "(", "expanded", ".", "length", "===", "1", ")", "{", "toExpand", ".", "expand", "(", ")", ";", "}", "}", "else", "if", "(", "toExpand", ")", "{", "toExpand", ".", "expand", "(", ")", ";", "}", "owner", ".", "deferLayouts", "=", "previousValue", ";", "me", ".", "processing", "=", "false", ";", "}", "}"], "original_docstring": "\nOverride the default implementation with one that chooses the next expand\ntarget using our \"defaultQuery\"\n\nThis was overridden from the Ext 5.1.1 implementation. Future Ext versions\nmay require this to be reworked\n", "docstring": {"block_comment": "Override the default implementation with one that chooses the next expand \ntarget using our  defaultQuery  \nThis was overridden from the Ext 5.1.1 implementation. Future Ext versions \nmay require this to be reworked", "line_comment": ["do not allow collapse if there is only one item", "portal core change", "end portal core change", "If we are allowing multi, and the  toCollapse  component is NOT", "the only expanded Component,", "then ask the box layout to collapse it to its header.", "If the collapsing Panel is the only expanded one, expand the", "following Component.", "All this is handling fill  true, so there must be at least", "one expanded,"]}, "docstring_tokens": ["Override", "the", "default", "implementation", "with", "one", "that", "chooses", "the", "next", "expand", "target", "using", "our", "defaultQuery", "This", "was", "overridden", "from", "the", "Ext", "5", ".", "1", ".", "1", "implementation", ".", "Future", "Ext", "versions", "may", "require", "this", "to", "be", "reworked"], "sample_id": 451, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004311", "repo": "joshvote/portal-core", "path": "src/main/webapp/portal-core/js/portal/widgets/layout/AccordianDefault.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\n        if (Ext.isObject(this.originalAnimatePolicy)) {\n            this.animate = true;\n            this.animatePolicy = this.originalAnimatePolicy;\n            this.originalAnimatePolicy = null;\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "Ext", ".", "isObject", "(", "this", ".", "originalAnimatePolicy", ")", ")", "{", "this", ".", "animate", "=", "true", ";", "this", ".", "animatePolicy", "=", "this", ".", "originalAnimatePolicy", ";", "this", ".", "originalAnimatePolicy", "=", "null", ";", "}", "}"], "original_docstring": "\n\nResumes all future animations.\n\nThis function is not re-entrant\n", "docstring": {"block_comment": "Resumes all future animations. \nThis function is not re entrant", "line_comment": null}, "docstring_tokens": ["Resumes", "all", "future", "animations", ".", "This", "function", "is", "not", "re", "entrant"], "sample_id": 452, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004312", "repo": "joshvote/portal-core", "path": "src/main/webapp/portal-core/js/portal/widgets/layout/AccordianDefault.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function() {\n        this.animate = false;\n        this.originalAnimatePolicy = this.animatePolicy;\n        this.animatePolicy = null;\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "animate", "=", "false", ";", "this", ".", "originalAnimatePolicy", "=", "this", ".", "animatePolicy", ";", "this", ".", "animatePolicy", "=", "null", ";", "}"], "original_docstring": "\nStops all future animations running until resumeAnimations is called\n\nThis function is not re-entrant\n", "docstring": {"block_comment": "Stops all future animations running until resumeAnimations is called \nThis function is not re entrant", "line_comment": null}, "docstring_tokens": ["Stops", "all", "future", "animations", "running", "until", "resumeAnimations", "is", "called", "This", "function", "is", "not", "re", "entrant"], "sample_id": 453, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004313", "repo": "joshvote/portal-core", "path": "src/main/webapp/portal-core/js/portal/widgets/layout/AccordianDefault.js", "language": "JavaScript", "license": "gpl-3.0", "func_name": "", "code": "function(config) {\n        this.defaultQuery = '#' + config.defaultId;\n        this.callParent(arguments);\n    }", "code_tokens": ["function", "(", "config", ")", "{", "this", ".", "defaultQuery", "=", "'#'", "+", "config", ".", "defaultId", ";", "this", ".", "callParent", "(", "arguments", ")", ";", "}"], "original_docstring": "\nAdds the following config:\n\ndefaultId : String - itemId of the panel to always open when the current panel is collapsed\n", "docstring": {"block_comment": "Adds the following config  \ndefaultId   String   itemId of the panel to always open when the current panel is collapsed", "line_comment": null}, "docstring_tokens": ["Adds", "the", "following", "config", "defaultId", "String", "itemId", "of", "the", "panel", "to", "always", "open", "when", "the", "current", "panel", "is", "collapsed"], "sample_id": 454, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004315", "repo": "n054/chromeos-filesystems", "path": "webdavfs/js/main.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(url, callbacks) {\n  var onSuccess = callbacks.onSuccess || function() { };\n\n  var onError = callbacks.onError || function() {\n    console.error('Failed to mount.');\n  };\n\n  try {\n    window.webDAVFS = new WebDAVFS(url);\n  } catch(error) {\n    onError(error.message);\n    return;\n  }\n\n  // Register each of the event listeners to the file system provider.\n  for (var name in events) {\n    chrome.fileSystemProvider[name].addListener(events[name]);\n  }\n\n  // Mount the file system.\n  chrome.fileSystemProvider.mount(webDAVFS.options, onSuccess, onError);\n}", "code_tokens": ["function", "(", "url", ",", "callbacks", ")", "{", "var", "onSuccess", "=", "callbacks", ".", "onSuccess", "||", "function", "(", ")", "{", "}", ";", "var", "onError", "=", "callbacks", ".", "onError", "||", "function", "(", ")", "{", "console", ".", "error", "(", "'Failed to mount.'", ")", ";", "}", ";", "try", "{", "window", ".", "webDAVFS", "=", "new", "WebDAVFS", "(", "url", ")", ";", "}", "catch", "(", "error", ")", "{", "onError", "(", "error", ".", "message", ")", ";", "return", ";", "}", "// Register each of the event listeners to the file system provider.", "for", "(", "var", "name", "in", "events", ")", "{", "chrome", ".", "fileSystemProvider", "[", "name", "]", ".", "addListener", "(", "events", "[", "name", "]", ")", ";", "}", "// Mount the file system.", "chrome", ".", "fileSystemProvider", ".", "mount", "(", "webDAVFS", ".", "options", ",", "onSuccess", ",", "onError", ")", ";", "}"], "original_docstring": "\nMounts a new instance of the WebDAV provider that connects to the server at\nthe given URL.\n@param {string} url The URL of the server to connect to.\n@param {function=} callbacks.onSuccess Function to call if the server was\nmounted successfully.\n@param {function=} callbacks.onError Function to call if an error occured\nwhile attempting to mount the server.\n", "docstring": {"block_comment": "Mounts a new instance of the WebDAV provider that connects to the server at \nthe given URL.", "line_comment": ["Register each of the event listeners to the file system provider.", "Mount the file system."]}, "docstring_tokens": ["Mounts", "a", "new", "instance", "of", "the", "WebDAV", "provider", "that", "connects", "to", "the", "server", "at", "the", "given", "URL", "."], "sample_id": 455, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004315", "repo": "n054/chromeos-filesystems", "path": "webdavfs/js/main.js", "language": "JavaScript", "license": "bsd-3-clause", "func_name": "", "code": "function(url, callbacks) {\n  var onSuccess = callbacks.onSuccess || function() { };\n\n  var onError = callbacks.onError || function() {\n    console.error('Failed to mount.');\n  };\n\n  try {\n    window.webDAVFS = new WebDAVFS(url);\n  } catch(error) {\n    onError(error.message);\n    return;\n  }\n\n  // Register each of the event listeners to the file system provider.\n  for (var name in events) {\n    chrome.fileSystemProvider[name].addListener(events[name]);\n  }\n\n  // Mount the file system.\n  chrome.fileSystemProvider.mount(webDAVFS.options, onSuccess, onError);\n}", "code_tokens": ["function", "(", "url", ",", "callbacks", ")", "{", "var", "onSuccess", "=", "callbacks", ".", "onSuccess", "||", "function", "(", ")", "{", "}", ";", "var", "onError", "=", "callbacks", ".", "onError", "||", "function", "(", ")", "{", "console", ".", "error", "(", "'Failed to mount.'", ")", ";", "}", ";", "try", "{", "window", ".", "webDAVFS", "=", "new", "WebDAVFS", "(", "url", ")", ";", "}", "catch", "(", "error", ")", "{", "onError", "(", "error", ".", "message", ")", ";", "return", ";", "}", "// Register each of the event listeners to the file system provider.", "for", "(", "var", "name", "in", "events", ")", "{", "chrome", ".", "fileSystemProvider", "[", "name", "]", ".", "addListener", "(", "events", "[", "name", "]", ")", ";", "}", "// Mount the file system.", "chrome", ".", "fileSystemProvider", ".", "mount", "(", "webDAVFS", ".", "options", ",", "onSuccess", ",", "onError", ")", ";", "}"], "original_docstring": "\nMounts a new instance of the WebDAV provider that connects to the server at\nthe given URL.\n@param {string} url The URL of the server to connect to.\n@param {function=} callbacks.onSuccess Function to call if the server was\nmounted successfully.\n@param {function=} callbacks.onError Function to call if an error occured\nwhile attempting to mount the server.\n", "docstring": {"block_comment": "Mounts a new instance of the WebDAV provider that connects to the server at \nthe given URL.", "line_comment": ["Register each of the event listeners to the file system provider.", "Mount the file system."]}, "docstring_tokens": ["The", "URL", "of", "the", "server", "to", "connect", "to", "."], "sample_id": 455, "prompt_tokens": ["<javascript>", "<param>", "url"], "comment_type": "param", "sentence_id": 1}
{"id": "21004316", "repo": "seogi1004/cdnjs", "path": "ajax/libs/ractive/0.10.10-build-2/ractive.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (Parent, target, options) {\n    if (!options.css) { return; }\n\n    warnIfDebug(\"\\nThe css option is currently not supported on a per-instance basis and will be discarded. Instead, we recommend instantiating from a component definition with a css option.\\n\\nconst Component = Ractive.extend({\\n\\t...\\n\\tcss: '/* your css */',\\n\\t...\\n});\\n\\nconst componentInstance = new Component({ ... })\\n\\t\\t\");\n  }", "code_tokens": ["function", "(", "Parent", ",", "target", ",", "options", ")", "{", "if", "(", "!", "options", ".", "css", ")", "{", "return", ";", "}", "warnIfDebug", "(", "\"\\nThe css option is currently not supported on a per-instance basis and will be discarded. Instead, we recommend instantiating from a component definition with a css option.\\n\\nconst Component = Ractive.extend({\\n\\t...\\n\\tcss: '/* your css */',\\n\\t...\\n});\\n\\nconst componentInstance = new Component({ ... })\\n\\t\\t\"", ")", ";", "}"], "original_docstring": "Called when creating a new component instance", "docstring": {"block_comment": "Called when creating a new component instance", "line_comment": null}, "docstring_tokens": ["Called", "when", "creating", "a", "new", "component", "instance"], "sample_id": 456, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004317", "repo": "seogi1004/cdnjs", "path": "ajax/libs/ractive/0.10.10-build-2/ractive.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (Parent, proto, options, Child) {\n    Child._cssIds = gatherIds(Parent);\n\n    defineProperty(Child, 'cssData', {\n      configurable: true,\n      value: assign(create(Parent.cssData), options.cssData || {})\n    });\n\n    defineProperty(Child, '_cssModel', {\n      configurable: true,\n      value: new CSSModel(Child)\n    });\n\n    if (options.css) { initCSS(options, Child, proto); }\n  }", "code_tokens": ["function", "(", "Parent", ",", "proto", ",", "options", ",", "Child", ")", "{", "Child", ".", "_cssIds", "=", "gatherIds", "(", "Parent", ")", ";", "defineProperty", "(", "Child", ",", "'cssData'", ",", "{", "configurable", ":", "true", ",", "value", ":", "assign", "(", "create", "(", "Parent", ".", "cssData", ")", ",", "options", ".", "cssData", "||", "{", "}", ")", "}", ")", ";", "defineProperty", "(", "Child", ",", "'_cssModel'", ",", "{", "configurable", ":", "true", ",", "value", ":", "new", "CSSModel", "(", "Child", ")", "}", ")", ";", "if", "(", "options", ".", "css", ")", "{", "initCSS", "(", "options", ",", "Child", ",", "proto", ")", ";", "}", "}"], "original_docstring": "Called when creating a new component definition", "docstring": {"block_comment": "Called when creating a new component definition", "line_comment": null}, "docstring_tokens": ["Called", "when", "creating", "a", "new", "component", "definition"], "sample_id": 457, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004318", "repo": "seogi1004/cdnjs", "path": "ajax/libs/ractive/0.10.10-build-2/ractive.js", "language": "JavaScript", "license": "mit", "func_name": "detachWhenReady", "code": "function detachWhenReady(thing) {\n    batch.transitionManager.detachQueue.push(thing);\n  }", "code_tokens": ["function", "detachWhenReady", "(", "thing", ")", "{", "batch", ".", "transitionManager", ".", "detachQueue", ".", "push", "(", "thing", ")", ";", "}"], "original_docstring": "synchronise node detachments with transition ends", "docstring": {"block_comment": "synchronise node detachments with transition ends", "line_comment": null}, "docstring_tokens": ["synchronise", "node", "detachments", "with", "transition", "ends"], "sample_id": 458, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004319", "repo": "seogi1004/cdnjs", "path": "ajax/libs/ractive/0.10.10-build-2/ractive.js", "language": "JavaScript", "license": "mit", "func_name": "then", "code": "function then(onFulfilled, onRejected) {\n        var promise2 = new Promise$1(function (fulfill, reject) {\n          var processResolutionHandler = function (handler, handlers, forward) {\n            if (isFunction(handler)) {\n              handlers.push(function (p1result) {\n                try {\n                  resolve$1(promise2, handler(p1result), fulfill, reject);\n                } catch (err) {\n                  reject(err);\n                }\n              });\n            } else {\n              handlers.push(forward);\n            }\n          };\n\n          processResolutionHandler(onFulfilled, fulfilledHandlers, fulfill);\n          processResolutionHandler(onRejected, rejectedHandlers, reject);\n\n          if (state !== PENDING) {\n            wait(dispatchHandlers);\n          }\n        });\n        return promise2;\n      }", "code_tokens": ["function", "then", "(", "onFulfilled", ",", "onRejected", ")", "{", "var", "promise2", "=", "new", "Promise$1", "(", "function", "(", "fulfill", ",", "reject", ")", "{", "var", "processResolutionHandler", "=", "function", "(", "handler", ",", "handlers", ",", "forward", ")", "{", "if", "(", "isFunction", "(", "handler", ")", ")", "{", "handlers", ".", "push", "(", "function", "(", "p1result", ")", "{", "try", "{", "resolve$1", "(", "promise2", ",", "handler", "(", "p1result", ")", ",", "fulfill", ",", "reject", ")", ";", "}", "catch", "(", "err", ")", "{", "reject", "(", "err", ")", ";", "}", "}", ")", ";", "}", "else", "{", "handlers", ".", "push", "(", "forward", ")", ";", "}", "}", ";", "processResolutionHandler", "(", "onFulfilled", ",", "fulfilledHandlers", ",", "fulfill", ")", ";", "processResolutionHandler", "(", "onRejected", ",", "rejectedHandlers", ",", "reject", ")", ";", "if", "(", "state", "!==", "PENDING", ")", "{", "wait", "(", "dispatchHandlers", ")", ";", "}", "}", ")", ";", "return", "promise2", ";", "}"], "original_docstring": "`then()` returns a Promise - 2.2.7", "docstring": {"block_comment": " then    returns a Promise   2.2.7", "line_comment": null}, "docstring_tokens": ["then", "returns", "a", "Promise", "2", ".", "2", ".", "7"], "sample_id": 459, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004323", "repo": "Leeps-Lab/otree-redwood", "path": "polymer/node_modules/prismjs/components/prism-core.js", "language": "JavaScript", "license": "mit", "func_name": "DFS", "code": "function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}", "code_tokens": ["function", "DFS", "(", "o", ",", "callback", ",", "type", ",", "visited", ")", "{", "visited", "=", "visited", "||", "{", "}", ";", "var", "objId", "=", "_", ".", "util", ".", "objId", ";", "for", "(", "var", "i", "in", "o", ")", "{", "if", "(", "o", ".", "hasOwnProperty", "(", "i", ")", ")", "{", "callback", ".", "call", "(", "o", ",", "i", ",", "o", "[", "i", "]", ",", "type", "||", "i", ")", ";", "var", "property", "=", "o", "[", "i", "]", ",", "propertyType", "=", "_", ".", "util", ".", "type", "(", "property", ")", ";", "if", "(", "propertyType", "===", "'Object'", "&&", "!", "visited", "[", "objId", "(", "property", ")", "]", ")", "{", "visited", "[", "objId", "(", "property", ")", "]", "=", "true", ";", "DFS", "(", "property", ",", "callback", ",", "null", ",", "visited", ")", ";", "}", "else", "if", "(", "propertyType", "===", "'Array'", "&&", "!", "visited", "[", "objId", "(", "property", ")", "]", ")", "{", "visited", "[", "objId", "(", "property", ")", "]", "=", "true", ";", "DFS", "(", "property", ",", "callback", ",", "i", ",", "visited", ")", ";", "}", "}", "}", "}"], "original_docstring": "Traverse a language definition with Depth First Search", "docstring": {"block_comment": "Traverse a language definition with Depth First Search", "line_comment": null}, "docstring_tokens": ["Traverse", "a", "language", "definition", "with", "Depth", "First", "Search"], "sample_id": 460, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004324", "repo": "Leeps-Lab/otree-redwood", "path": "polymer/node_modules/prismjs/components/prism-core.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t}", "code_tokens": ["function", "(", "inside", ",", "before", ",", "insert", ",", "root", ")", "{", "root", "=", "root", "||", "_", ".", "languages", ";", "var", "grammar", "=", "root", "[", "inside", "]", ";", "var", "ret", "=", "{", "}", ";", "for", "(", "var", "token", "in", "grammar", ")", "{", "if", "(", "grammar", ".", "hasOwnProperty", "(", "token", ")", ")", "{", "if", "(", "token", "==", "before", ")", "{", "for", "(", "var", "newToken", "in", "insert", ")", "{", "if", "(", "insert", ".", "hasOwnProperty", "(", "newToken", ")", ")", "{", "ret", "[", "newToken", "]", "=", "insert", "[", "newToken", "]", ";", "}", "}", "}", "// Do not insert token which also occur in insert. See #1525", "if", "(", "!", "insert", ".", "hasOwnProperty", "(", "token", ")", ")", "{", "ret", "[", "token", "]", "=", "grammar", "[", "token", "]", ";", "}", "}", "}", "var", "old", "=", "root", "[", "inside", "]", ";", "root", "[", "inside", "]", "=", "ret", ";", "// Update references in other language definitions", "_", ".", "languages", ".", "DFS", "(", "_", ".", "languages", ",", "function", "(", "key", ",", "value", ")", "{", "if", "(", "value", "===", "old", "&&", "key", "!=", "inside", ")", "{", "this", "[", "key", "]", "=", "ret", ";", "}", "}", ")", ";", "return", "ret", ";", "}"], "original_docstring": "\nInsert a token before another token in a language literal\nAs this needs to recreate the object (we cannot actually insert before keys in object literals),\nwe cannot just provide an object, we need an object and a key.\n@param inside The key (or language id) of the parent\n@param before The key to insert before.\n@param insert Object with the key/value pairs to insert\n@param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n", "docstring": {"block_comment": "Insert a token before another token in a language literal \nAs this needs to recreate the object  we cannot actually insert before keys in object literals , \nwe cannot just provide an object, we need an object and a key.", "line_comment": ["Do not insert token which also occur in insert. See  1525", "Update references in other language definitions"]}, "docstring_tokens": ["Insert", "a", "token", "before", "another", "token", "in", "a", "language", "literal", "As", "this", "needs", "to", "recreate", "the", "object", "we", "cannot", "actually", "insert", "before", "keys", "in", "object", "literals", "we", "cannot", "just", "provide", "an", "object", "we", "need", "an", "object", "and", "a", "key", "."], "sample_id": 461, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004325", "repo": "Leeps-Lab/otree-redwood", "path": "polymer/node_modules/prismjs/components/prism-core.js", "language": "JavaScript", "license": "mit", "func_name": "deepClone", "code": "function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t}", "code_tokens": ["function", "deepClone", "(", "o", ",", "visited", ")", "{", "var", "clone", ",", "id", ",", "type", "=", "_", ".", "util", ".", "type", "(", "o", ")", ";", "visited", "=", "visited", "||", "{", "}", ";", "switch", "(", "type", ")", "{", "case", "'Object'", ":", "id", "=", "_", ".", "util", ".", "objId", "(", "o", ")", ";", "if", "(", "visited", "[", "id", "]", ")", "{", "return", "visited", "[", "id", "]", ";", "}", "clone", "=", "{", "}", ";", "visited", "[", "id", "]", "=", "clone", ";", "for", "(", "var", "key", "in", "o", ")", "{", "if", "(", "o", ".", "hasOwnProperty", "(", "key", ")", ")", "{", "clone", "[", "key", "]", "=", "deepClone", "(", "o", "[", "key", "]", ",", "visited", ")", ";", "}", "}", "return", "clone", ";", "case", "'Array'", ":", "id", "=", "_", ".", "util", ".", "objId", "(", "o", ")", ";", "if", "(", "visited", "[", "id", "]", ")", "{", "return", "visited", "[", "id", "]", ";", "}", "clone", "=", "[", "]", ";", "visited", "[", "id", "]", "=", "clone", ";", "o", ".", "forEach", "(", "function", "(", "v", ",", "i", ")", "{", "clone", "[", "i", "]", "=", "deepClone", "(", "v", ",", "visited", ")", ";", "}", ")", ";", "return", "clone", ";", "default", ":", "return", "o", ";", "}", "}"], "original_docstring": "Deep clone a language definition (e.g. to extend it)", "docstring": {"block_comment": "Deep clone a language definition  e.g. to extend it ", "line_comment": null}, "docstring_tokens": ["Deep", "clone", "a", "language", "definition", "e", ".", "g", ".", "to", "extend", "it"], "sample_id": 462, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004326", "repo": "farald/pingvin", "path": "sites/all/modules/contrib/aloha/aloha.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(container) {\n      var $containerClone = jQuery(container).clone();\n      $containerClone.find(Drupal.settings.alohaElementsToStrip).remove();\n      return $containerClone.html();\n    }", "code_tokens": ["function", "(", "container", ")", "{", "var", "$containerClone", "=", "jQuery", "(", "container", ")", ".", "clone", "(", ")", ";", "$containerClone", ".", "find", "(", "Drupal", ".", "settings", ".", "alohaElementsToStrip", ")", ".", "remove", "(", ")", ";", "return", "$containerClone", ".", "html", "(", ")", ";", "}"], "original_docstring": "Strip our span target and any following tags from content to be saved.", "docstring": {"block_comment": "Strip our span target and any following tags from content to be saved.", "line_comment": null}, "docstring_tokens": ["Strip", "our", "span", "target", "and", "any", "following", "tags", "from", "content", "to", "be", "saved", "."], "sample_id": 463, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004327", "repo": "seogi1004/cdnjs", "path": "ajax/libs/asmCrypto/0.15.0/asmcrypto.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function ( foreign, buffer ) {\r\n           // Init AES stuff for the first time\r\n           if ( !aes_init_done ) aes_init();\r\n\r\n           // Fill up AES tables\r\n           var heap = new Uint32Array(buffer);\r\n           heap.set( aes_sbox, 0x0800>>2 );\r\n           heap.set( aes_sinv, 0x0c00>>2 );\r\n           for ( var i = 0; i < 4; i++ ) {\r\n               heap.set( aes_enc[i], ( 0x1000 + 0x400 * i )>>2 );\r\n               heap.set( aes_dec[i], ( 0x2000 + 0x400 * i )>>2 );\r\n           }\r\n\r\n           /**\r\n            * Calculate AES key schedules.\r\n            * @instance\r\n            * @memberof AES_asm\r\n            * @param {int} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)\r\n            * @param {int} k0..k7 - key vector components\r\n            */\r\n           function set_key ( ks, k0, k1, k2, k3, k4, k5, k6, k7 ) {\r\n               var ekeys = heap.subarray( 0x000, 60 ),\r\n                   dkeys = heap.subarray( 0x100, 0x100+60 );\r\n\r\n               // Encryption key schedule\r\n               ekeys.set( [ k0, k1, k2, k3, k4, k5, k6, k7 ] );\r\n               for ( var i = ks, rcon = 1; i < 4*ks+28; i++ ) {\r\n                   var k = ekeys[i-1];\r\n                   if ( ( i % ks === 0 ) || ( ks === 8 && i % ks === 4 ) ) {\r\n                       k = aes_sbox[k>>>24]<<24 ^ aes_sbox[k>>>16&255]<<16 ^ aes_sbox[k>>>8&255]<<8 ^ aes_sbox[k&255];\r\n                   }\r\n                   if ( i % ks === 0 ) {\r\n                       k = (k << 8) ^ (k >>> 24) ^ (rcon << 24);\r\n                       rcon = (rcon << 1) ^ ( (rcon & 0x80) ? 0x1b : 0 );\r\n                   }\r\n                   ekeys[i] = ekeys[i-ks] ^ k;\r\n               }\r\n\r\n               // Decryption key schedule\r\n               for ( var j = 0; j < i; j += 4 ) {\r\n                   for ( var jj = 0; jj < 4; jj++ ) {\r\n                       var k = ekeys[i-(4+j)+(4-jj)%4];\r\n                       if ( j < 4 || j >= i-4 ) {\r\n                           dkeys[j+jj] = k;\r\n                       } else {\r\n                           dkeys[j+jj] = aes_dec[0][aes_sbox[k>>>24]]\r\n                                       ^ aes_dec[1][aes_sbox[k>>>16&255]]\r\n                                       ^ aes_dec[2][aes_sbox[k>>>8&255]]\r\n                                       ^ aes_dec[3][aes_sbox[k&255]];\r\n                       }\r\n                   }\r\n               }\r\n\r\n               // Set rounds number\r\n               asm.set_rounds( ks + 5 );\r\n           }\r\n\r\n           // create library object with necessary properties\r\n           var stdlib = { Uint8Array: Uint8Array, Uint32Array: Uint32Array };\r\n\r\n           var asm = function ( stdlib, foreign, buffer ) {\r\n               var S0 = 0, S1 = 0, S2 = 0, S3 = 0,\r\n                   I0 = 0, I1 = 0, I2 = 0, I3 = 0,\r\n                   N0 = 0, N1 = 0, N2 = 0, N3 = 0,\r\n                   M0 = 0, M1 = 0, M2 = 0, M3 = 0,\r\n                   H0 = 0, H1 = 0, H2 = 0, H3 = 0,\r\n                   R = 0;\r\n\r\n               var HEAP = new stdlib.Uint32Array(buffer),\r\n                   DATA = new stdlib.Uint8Array(buffer);\r\n\r\n               /**\r\n                * AES core\r\n                * @param {int} k - precomputed key schedule offset\r\n                * @param {int} s - precomputed sbox table offset\r\n                * @param {int} t - precomputed round table offset\r\n                * @param {int} r - number of inner rounds to perform\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _core ( k, s, t, r, x0, x1, x2, x3 ) {\r\n                   k = k|0;\r\n                   s = s|0;\r\n                   t = t|0;\r\n                   r = r|0;\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   var t1 = 0, t2 = 0, t3 = 0,\r\n                       y0 = 0, y1 = 0, y2 = 0, y3 = 0,\r\n                       i = 0;\r\n\r\n                   t1 = t|0x400, t2 = t|0x800, t3 = t|0xc00;\r\n\r\n                   // round 0\r\n                   x0 = x0 ^ HEAP[(k|0)>>2], x1 = x1 ^ HEAP[(k|4)>>2], x2 = x2 ^ HEAP[(k|8)>>2], x3 = x3 ^ HEAP[(k|12)>>2];\r\n\r\n                   // round 1..r\r\n                   for ( i = 16; (i|0) <= (r<<4); i = (i+16)|0 ) {\r\n                       y0 = HEAP[(t|x0>>22&1020)>>2] ^ HEAP[(t1|x1>>14&1020)>>2] ^ HEAP[(t2|x2>>6&1020)>>2] ^ HEAP[(t3|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2], y1 = HEAP[(t|x1>>22&1020)>>2] ^ HEAP[(t1|x2>>14&1020)>>2] ^ HEAP[(t2|x3>>6&1020)>>2] ^ HEAP[(t3|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2], y2 = HEAP[(t|x2>>22&1020)>>2] ^ HEAP[(t1|x3>>14&1020)>>2] ^ HEAP[(t2|x0>>6&1020)>>2] ^ HEAP[(t3|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2], y3 = HEAP[(t|x3>>22&1020)>>2] ^ HEAP[(t1|x0>>14&1020)>>2] ^ HEAP[(t2|x1>>6&1020)>>2] ^ HEAP[(t3|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\r\n                       x0 = y0, x1 = y1, x2 = y2, x3 = y3;\r\n                   }\r\n\r\n                   // final round\r\n                   S0 = HEAP[(s|x0>>22&1020)>>2]<<24 ^ HEAP[(s|x1>>14&1020)>>2]<<16 ^ HEAP[(s|x2>>6&1020)>>2]<<8 ^ HEAP[(s|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2], S1 = HEAP[(s|x1>>22&1020)>>2]<<24 ^ HEAP[(s|x2>>14&1020)>>2]<<16 ^ HEAP[(s|x3>>6&1020)>>2]<<8 ^ HEAP[(s|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2], S2 = HEAP[(s|x2>>22&1020)>>2]<<24 ^ HEAP[(s|x3>>14&1020)>>2]<<16 ^ HEAP[(s|x0>>6&1020)>>2]<<8 ^ HEAP[(s|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2], S3 = HEAP[(s|x3>>22&1020)>>2]<<24 ^ HEAP[(s|x0>>14&1020)>>2]<<16 ^ HEAP[(s|x1>>6&1020)>>2]<<8 ^ HEAP[(s|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\r\n               }\r\n\r\n               /**\r\n                * ECB mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _ecb_enc ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       x0,\r\n                       x1,\r\n                       x2,\r\n                       x3\r\n                   );\r\n               }\r\n\r\n               /**\r\n                * ECB mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _ecb_dec ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   var t = 0;\r\n\r\n                   _core(\r\n                       0x0400, 0x0c00, 0x2000,\r\n                       R,\r\n                       x0,\r\n                       x3,\r\n                       x2,\r\n                       x1\r\n                   );\r\n\r\n                   t = S1, S1 = S3, S3 = t;\r\n               }\r\n\r\n\r\n               /**\r\n                * CBC mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _cbc_enc ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       I0 ^ x0,\r\n                       I1 ^ x1,\r\n                       I2 ^ x2,\r\n                       I3 ^ x3\r\n                   );\r\n\r\n                   I0 = S0, I1 = S1, I2 = S2, I3 = S3;\r\n               }\r\n\r\n               /**\r\n                * CBC mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _cbc_dec ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   var t = 0;\r\n\r\n                   _core(\r\n                       0x0400, 0x0c00, 0x2000,\r\n                       R,\r\n                       x0,\r\n                       x3,\r\n                       x2,\r\n                       x1\r\n                   );\r\n\r\n                   t = S1, S1 = S3, S3 = t;\r\n\r\n                   S0 = S0 ^ I0, S1 = S1 ^ I1, S2 = S2 ^ I2, S3 = S3 ^ I3;\r\n\r\n                   I0 = x0, I1 = x1, I2 = x2, I3 = x3;\r\n               }\r\n\r\n               /**\r\n                * CFB mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _cfb_enc ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       I0,\r\n                       I1,\r\n                       I2,\r\n                       I3\r\n                   );\r\n\r\n                   I0 = S0 = S0 ^ x0, I1 = S1 = S1 ^ x1, I2 = S2 = S2 ^ x2, I3 = S3 = S3 ^ x3;\r\n               }\r\n\r\n\r\n               /**\r\n                * CFB mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _cfb_dec ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       I0,\r\n                       I1,\r\n                       I2,\r\n                       I3\r\n                   );\r\n\r\n                   S0 = S0 ^ x0, S1 = S1 ^ x1, S2 = S2 ^ x2, S3 = S3 ^ x3;\r\n\r\n                   I0 = x0, I1 = x1, I2 = x2, I3 = x3;\r\n               }\r\n\r\n               /**\r\n                * OFB mode encryption / decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _ofb ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       I0,\r\n                       I1,\r\n                       I2,\r\n                       I3\r\n                   );\r\n\r\n                   I0 = S0, I1 = S1, I2 = S2, I3 = S3;\r\n\r\n                   S0 = S0 ^ x0, S1 = S1 ^ x1, S2 = S2 ^ x2, S3 = S3 ^ x3;\r\n               }\r\n\r\n               /**\r\n                * CTR mode encryption / decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _ctr ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       N0,\r\n                       N1,\r\n                       N2,\r\n                       N3\r\n                   );\r\n\r\n                   N3 = ( ~M3 & N3 ) | M3 & ( N3 + 1 ), N2 = ( ~M2 & N2 ) | M2 & ( N2 + ( (N3|0) == 0 ) ), N1 = ( ~M1 & N1 ) | M1 & ( N1 + ( (N2|0) == 0 ) ), N0 = ( ~M0 & N0 ) | M0 & ( N0 + ( (N1|0) == 0 ) );\r\n\r\n                   S0 = S0 ^ x0, S1 = S1 ^ x1, S2 = S2 ^ x2, S3 = S3 ^ x3;\r\n               }\r\n\r\n               /**\r\n                * GCM mode MAC calculation\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _gcm_mac ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   var y0 = 0, y1 = 0, y2 = 0, y3 = 0,\r\n                       z0 = 0, z1 = 0, z2 = 0, z3 = 0,\r\n                       i = 0, c = 0;\r\n\r\n                   x0 = x0 ^ I0, x1 = x1 ^ I1, x2 = x2 ^ I2, x3 = x3 ^ I3;\r\n\r\n                   y0 = H0|0, y1 = H1|0, y2 = H2|0, y3 = H3|0;\r\n\r\n                   for ( ; (i|0) < 128; i = (i + 1)|0 ) {\r\n                       if ( y0 >>> 31 ) {\r\n                           z0 = z0 ^ x0, z1 = z1 ^ x1, z2 = z2 ^ x2, z3 = z3 ^ x3;\r\n                       }\r\n\r\n                       y0 = (y0 << 1) | (y1 >>> 31), y1 = (y1 << 1) | (y2 >>> 31), y2 = (y2 << 1) | (y3 >>> 31), y3 = (y3 << 1);\r\n\r\n                       c = x3 & 1;\r\n\r\n                       x3 = (x3 >>> 1) | (x2 << 31), x2 = (x2 >>> 1) | (x1 << 31), x1 = (x1 >>> 1) | (x0 << 31), x0 = (x0 >>> 1);\r\n\r\n                       if ( c ) x0 = x0 ^ 0xe1000000;\r\n                   }\r\n\r\n                   I0 = z0, I1 = z1, I2 = z2, I3 = z3;\r\n               }\r\n\r\n               /**\r\n                * Set the internal rounds number.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} r - number if inner AES rounds\r\n                */\r\n               function set_rounds ( r ) {\r\n                   r = r|0;\r\n                   R = r;\r\n               }\r\n\r\n               /**\r\n                * Populate the internal state of the module.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} s0...s3 - state vector\r\n                */\r\n               function set_state ( s0, s1, s2, s3 ) {\r\n                   s0 = s0|0;\r\n                   s1 = s1|0;\r\n                   s2 = s2|0;\r\n                   s3 = s3|0;\r\n\r\n                   S0 = s0, S1 = s1, S2 = s2, S3 = s3;\r\n               }\r\n\r\n               /**\r\n                * Populate the internal iv of the module.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} i0...i3 - iv vector\r\n                */\r\n               function set_iv ( i0, i1, i2, i3 ) {\r\n                   i0 = i0|0;\r\n                   i1 = i1|0;\r\n                   i2 = i2|0;\r\n                   i3 = i3|0;\r\n\r\n                   I0 = i0, I1 = i1, I2 = i2, I3 = i3;\r\n               }\r\n\r\n               /**\r\n                * Set nonce for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} n0..n3 - nonce vector\r\n                */\r\n               function set_nonce ( n0, n1, n2, n3 ) {\r\n                   n0 = n0|0;\r\n                   n1 = n1|0;\r\n                   n2 = n2|0;\r\n                   n3 = n3|0;\r\n\r\n                   N0 = n0, N1 = n1, N2 = n2, N3 = n3;\r\n               }\r\n\r\n               /**\r\n                * Set counter mask for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} m0...m3 - counter mask vector\r\n                */\r\n               function set_mask ( m0, m1, m2, m3 ) {\r\n                   m0 = m0|0;\r\n                   m1 = m1|0;\r\n                   m2 = m2|0;\r\n                   m3 = m3|0;\r\n\r\n                   M0 = m0, M1 = m1, M2 = m2, M3 = m3;\r\n               }\r\n\r\n               /**\r\n                * Set counter for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} c0...c3 - counter vector\r\n                */\r\n               function set_counter ( c0, c1, c2, c3 ) {\r\n                   c0 = c0|0;\r\n                   c1 = c1|0;\r\n                   c2 = c2|0;\r\n                   c3 = c3|0;\r\n\r\n                   N3 = ( ~M3 & N3 ) | M3 & c3, N2 = ( ~M2 & N2 ) | M2 & c2, N1 = ( ~M1 & N1 ) | M1 & c1, N0 = ( ~M0 & N0 ) | M0 & c0;\r\n               }\r\n\r\n               /**\r\n                * Store the internal state vector into the heap.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} pos - offset where to put the data\r\n                * @return {int} The number of bytes have been written into the heap, always 16.\r\n                */\r\n               function get_state ( pos ) {\r\n                   pos = pos|0;\r\n\r\n                   if ( pos & 15 ) return -1;\r\n\r\n                   DATA[pos|0] = S0>>>24, DATA[pos|1] = S0>>>16&255, DATA[pos|2] = S0>>>8&255, DATA[pos|3] = S0&255, DATA[pos|4] = S1>>>24, DATA[pos|5] = S1>>>16&255, DATA[pos|6] = S1>>>8&255, DATA[pos|7] = S1&255, DATA[pos|8] = S2>>>24, DATA[pos|9] = S2>>>16&255, DATA[pos|10] = S2>>>8&255, DATA[pos|11] = S2&255, DATA[pos|12] = S3>>>24, DATA[pos|13] = S3>>>16&255, DATA[pos|14] = S3>>>8&255, DATA[pos|15] = S3&255;\r\n\r\n                   return 16;\r\n               }\r\n\r\n               /**\r\n                * Store the internal iv vector into the heap.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} pos - offset where to put the data\r\n                * @return {int} The number of bytes have been written into the heap, always 16.\r\n                */\r\n               function get_iv ( pos ) {\r\n                   pos = pos|0;\r\n\r\n                   if ( pos & 15 ) return -1;\r\n\r\n                   DATA[pos|0] = I0>>>24, DATA[pos|1] = I0>>>16&255, DATA[pos|2] = I0>>>8&255, DATA[pos|3] = I0&255, DATA[pos|4] = I1>>>24, DATA[pos|5] = I1>>>16&255, DATA[pos|6] = I1>>>8&255, DATA[pos|7] = I1&255, DATA[pos|8] = I2>>>24, DATA[pos|9] = I2>>>16&255, DATA[pos|10] = I2>>>8&255, DATA[pos|11] = I2&255, DATA[pos|12] = I3>>>24, DATA[pos|13] = I3>>>16&255, DATA[pos|14] = I3>>>8&255, DATA[pos|15] = I3&255;\r\n\r\n                   return 16;\r\n               }\r\n\r\n               /**\r\n                * GCM initialization.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                */\r\n               function gcm_init ( ) {\r\n                   _ecb_enc( 0, 0, 0, 0 );\r\n                   H0 = S0, H1 = S1, H2 = S2, H3 = S3;\r\n               }\r\n\r\n               /**\r\n                * Perform ciphering operation on the supplied data.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n                * @param {int} pos - offset of the data being processed\r\n                * @param {int} len - length of the data being processed\r\n                * @return {int} Actual amount of data have been processed.\r\n                */\r\n               function cipher ( mode, pos, len ) {\r\n                   mode = mode|0;\r\n                   pos = pos|0;\r\n                   len = len|0;\r\n\r\n                   var ret = 0;\r\n\r\n                   if ( pos & 15 ) return -1;\r\n\r\n                   while ( (len|0) >= 16 ) {\r\n                       _cipher_modes[mode&7](\r\n                           DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\r\n                           DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\r\n                           DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\r\n                           DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\r\n                       );\r\n\r\n                       DATA[pos|0] = S0>>>24, DATA[pos|1] = S0>>>16&255, DATA[pos|2] = S0>>>8&255, DATA[pos|3] = S0&255, DATA[pos|4] = S1>>>24, DATA[pos|5] = S1>>>16&255, DATA[pos|6] = S1>>>8&255, DATA[pos|7] = S1&255, DATA[pos|8] = S2>>>24, DATA[pos|9] = S2>>>16&255, DATA[pos|10] = S2>>>8&255, DATA[pos|11] = S2&255, DATA[pos|12] = S3>>>24, DATA[pos|13] = S3>>>16&255, DATA[pos|14] = S3>>>8&255, DATA[pos|15] = S3&255;\r\n\r\n                       ret = (ret + 16)|0, pos = (pos + 16)|0, len = (len - 16)|0;\r\n                   }\r\n\r\n                   return ret|0;\r\n               }\r\n\r\n               /**\r\n                * Calculates MAC of the supplied data.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n                * @param {int} pos - offset of the data being processed\r\n                * @param {int} len - length of the data being processed\r\n                * @return {int} Actual amount of data have been processed.\r\n                */\r\n               function mac ( mode, pos, len ) {\r\n                   mode = mode|0;\r\n                   pos = pos|0;\r\n                   len = len|0;\r\n\r\n                   var ret = 0;\r\n\r\n                   if ( pos & 15 ) return -1;\r\n\r\n                   while ( (len|0) >= 16 ) {\r\n                       _mac_modes[mode&1](\r\n                           DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\r\n                           DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\r\n                           DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\r\n                           DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\r\n                       );\r\n\r\n                       ret = (ret + 16)|0, pos = (pos + 16)|0, len = (len - 16)|0;\r\n                   }\r\n\r\n                   return ret|0;\r\n               }\r\n\r\n               /**\r\n                * AES cipher modes table (virual methods)\r\n                */\r\n               var _cipher_modes = [ _ecb_enc, _ecb_dec, _cbc_enc, _cbc_dec, _cfb_enc, _cfb_dec, _ofb, _ctr ];\r\n\r\n               /**\r\n                * AES MAC modes table (virual methods)\r\n                */\r\n               var _mac_modes = [ _cbc_enc, _gcm_mac ];\r\n\r\n               /**\r\n                * Asm.js module exports\r\n                */\r\n               return {\r\n                   set_rounds: set_rounds,\r\n                   set_state:  set_state,\r\n                   set_iv:     set_iv,\r\n                   set_nonce:  set_nonce,\r\n                   set_mask:   set_mask,\r\n                   set_counter:set_counter,\r\n                   get_state:  get_state,\r\n                   get_iv:     get_iv,\r\n                   gcm_init:   gcm_init,\r\n                   cipher:     cipher,\r\n                   mac:        mac\r\n               };\r\n           }( stdlib, foreign, buffer );\r\n\r\n           asm.set_key = set_key;\r\n\r\n           return asm;\r\n       }", "code_tokens": ["function", "(", "foreign", ",", "buffer", ")", "{", "// Init AES stuff for the first time\r", "if", "(", "!", "aes_init_done", ")", "aes_init", "(", ")", ";", "// Fill up AES tables\r", "var", "heap", "=", "new", "Uint32Array", "(", "buffer", ")", ";", "heap", ".", "set", "(", "aes_sbox", ",", "0x0800", ">>", "2", ")", ";", "heap", ".", "set", "(", "aes_sinv", ",", "0x0c00", ">>", "2", ")", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "4", ";", "i", "++", ")", "{", "heap", ".", "set", "(", "aes_enc", "[", "i", "]", ",", "(", "0x1000", "+", "0x400", "*", "i", ")", ">>", "2", ")", ";", "heap", ".", "set", "(", "aes_dec", "[", "i", "]", ",", "(", "0x2000", "+", "0x400", "*", "i", ")", ">>", "2", ")", ";", "}", "/**\r\n            * Calculate AES key schedules.\r\n            * @instance\r\n            * @memberof AES_asm\r\n            * @param {int} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)\r\n            * @param {int} k0..k7 - key vector components\r\n            */", "function", "set_key", "(", "ks", ",", "k0", ",", "k1", ",", "k2", ",", "k3", ",", "k4", ",", "k5", ",", "k6", ",", "k7", ")", "{", "var", "ekeys", "=", "heap", ".", "subarray", "(", "0x000", ",", "60", ")", ",", "dkeys", "=", "heap", ".", "subarray", "(", "0x100", ",", "0x100", "+", "60", ")", ";", "// Encryption key schedule\r", "ekeys", ".", "set", "(", "[", "k0", ",", "k1", ",", "k2", ",", "k3", ",", "k4", ",", "k5", ",", "k6", ",", "k7", "]", ")", ";", "for", "(", "var", "i", "=", "ks", ",", "rcon", "=", "1", ";", "i", "<", "4", "*", "ks", "+", "28", ";", "i", "++", ")", "{", "var", "k", "=", "ekeys", "[", "i", "-", "1", "]", ";", "if", "(", "(", "i", "%", "ks", "===", "0", ")", "||", "(", "ks", "===", "8", "&&", "i", "%", "ks", "===", "4", ")", ")", "{", "k", "=", "aes_sbox", "[", "k", ">>>", "24", "]", "<<", "24", "^", "aes_sbox", "[", "k", ">>>", "16", "&", "255", "]", "<<", "16", "^", "aes_sbox", "[", "k", ">>>", "8", "&", "255", "]", "<<", "8", "^", "aes_sbox", "[", "k", "&", "255", "]", ";", "}", "if", "(", "i", "%", "ks", "===", "0", ")", "{", "k", "=", "(", "k", "<<", "8", ")", "^", "(", "k", ">>>", "24", ")", "^", "(", "rcon", "<<", "24", ")", ";", "rcon", "=", "(", "rcon", "<<", "1", ")", "^", "(", "(", "rcon", "&", "0x80", ")", "?", "0x1b", ":", "0", ")", ";", "}", "ekeys", "[", "i", "]", "=", "ekeys", "[", "i", "-", "ks", "]", "^", "k", ";", "}", "// Decryption key schedule\r", "for", "(", "var", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+=", "4", ")", "{", "for", "(", "var", "jj", "=", "0", ";", "jj", "<", "4", ";", "jj", "++", ")", "{", "var", "k", "=", "ekeys", "[", "i", "-", "(", "4", "+", "j", ")", "+", "(", "4", "-", "jj", ")", "%", "4", "]", ";", "if", "(", "j", "<", "4", "||", "j", ">=", "i", "-", "4", ")", "{", "dkeys", "[", "j", "+", "jj", "]", "=", "k", ";", "}", "else", "{", "dkeys", "[", "j", "+", "jj", "]", "=", "aes_dec", "[", "0", "]", "[", "aes_sbox", "[", "k", ">>>", "24", "]", "]", "^", "aes_dec", "[", "1", "]", "[", "aes_sbox", "[", "k", ">>>", "16", "&", "255", "]", "]", "^", "aes_dec", "[", "2", "]", "[", "aes_sbox", "[", "k", ">>>", "8", "&", "255", "]", "]", "^", "aes_dec", "[", "3", "]", "[", "aes_sbox", "[", "k", "&", "255", "]", "]", ";", "}", "}", "}", "// Set rounds number\r", "asm", ".", "set_rounds", "(", "ks", "+", "5", ")", ";", "}", "// create library object with necessary properties\r", "var", "stdlib", "=", "{", "Uint8Array", ":", "Uint8Array", ",", "Uint32Array", ":", "Uint32Array", "}", ";", "var", "asm", "=", "function", "(", "stdlib", ",", "foreign", ",", "buffer", ")", "{", "var", "S0", "=", "0", ",", "S1", "=", "0", ",", "S2", "=", "0", ",", "S3", "=", "0", ",", "I0", "=", "0", ",", "I1", "=", "0", ",", "I2", "=", "0", ",", "I3", "=", "0", ",", "N0", "=", "0", ",", "N1", "=", "0", ",", "N2", "=", "0", ",", "N3", "=", "0", ",", "M0", "=", "0", ",", "M1", "=", "0", ",", "M2", "=", "0", ",", "M3", "=", "0", ",", "H0", "=", "0", ",", "H1", "=", "0", ",", "H2", "=", "0", ",", "H3", "=", "0", ",", "R", "=", "0", ";", "var", "HEAP", "=", "new", "stdlib", ".", "Uint32Array", "(", "buffer", ")", ",", "DATA", "=", "new", "stdlib", ".", "Uint8Array", "(", "buffer", ")", ";", "/**\r\n                * AES core\r\n                * @param {int} k - precomputed key schedule offset\r\n                * @param {int} s - precomputed sbox table offset\r\n                * @param {int} t - precomputed round table offset\r\n                * @param {int} r - number of inner rounds to perform\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_core", "(", "k", ",", "s", ",", "t", ",", "r", ",", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "k", "=", "k", "|", "0", ";", "s", "=", "s", "|", "0", ";", "t", "=", "t", "|", "0", ";", "r", "=", "r", "|", "0", ";", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "var", "t1", "=", "0", ",", "t2", "=", "0", ",", "t3", "=", "0", ",", "y0", "=", "0", ",", "y1", "=", "0", ",", "y2", "=", "0", ",", "y3", "=", "0", ",", "i", "=", "0", ";", "t1", "=", "t", "|", "0x400", ",", "t2", "=", "t", "|", "0x800", ",", "t3", "=", "t", "|", "0xc00", ";", "// round 0\r", "x0", "=", "x0", "^", "HEAP", "[", "(", "k", "|", "0", ")", ">>", "2", "]", ",", "x1", "=", "x1", "^", "HEAP", "[", "(", "k", "|", "4", ")", ">>", "2", "]", ",", "x2", "=", "x2", "^", "HEAP", "[", "(", "k", "|", "8", ")", ">>", "2", "]", ",", "x3", "=", "x3", "^", "HEAP", "[", "(", "k", "|", "12", ")", ">>", "2", "]", ";", "// round 1..r\r", "for", "(", "i", "=", "16", ";", "(", "i", "|", "0", ")", "<=", "(", "r", "<<", "4", ")", ";", "i", "=", "(", "i", "+", "16", ")", "|", "0", ")", "{", "y0", "=", "HEAP", "[", "(", "t", "|", "x0", ">>", "22", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t1", "|", "x1", ">>", "14", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t2", "|", "x2", ">>", "6", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t3", "|", "x3", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "0", ")", ">>", "2", "]", ",", "y1", "=", "HEAP", "[", "(", "t", "|", "x1", ">>", "22", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t1", "|", "x2", ">>", "14", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t2", "|", "x3", ">>", "6", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t3", "|", "x0", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "4", ")", ">>", "2", "]", ",", "y2", "=", "HEAP", "[", "(", "t", "|", "x2", ">>", "22", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t1", "|", "x3", ">>", "14", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t2", "|", "x0", ">>", "6", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t3", "|", "x1", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "8", ")", ">>", "2", "]", ",", "y3", "=", "HEAP", "[", "(", "t", "|", "x3", ">>", "22", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t1", "|", "x0", ">>", "14", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t2", "|", "x1", ">>", "6", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t3", "|", "x2", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "12", ")", ">>", "2", "]", ";", "x0", "=", "y0", ",", "x1", "=", "y1", ",", "x2", "=", "y2", ",", "x3", "=", "y3", ";", "}", "// final round\r", "S0", "=", "HEAP", "[", "(", "s", "|", "x0", ">>", "22", "&", "1020", ")", ">>", "2", "]", "<<", "24", "^", "HEAP", "[", "(", "s", "|", "x1", ">>", "14", "&", "1020", ")", ">>", "2", "]", "<<", "16", "^", "HEAP", "[", "(", "s", "|", "x2", ">>", "6", "&", "1020", ")", ">>", "2", "]", "<<", "8", "^", "HEAP", "[", "(", "s", "|", "x3", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "0", ")", ">>", "2", "]", ",", "S1", "=", "HEAP", "[", "(", "s", "|", "x1", ">>", "22", "&", "1020", ")", ">>", "2", "]", "<<", "24", "^", "HEAP", "[", "(", "s", "|", "x2", ">>", "14", "&", "1020", ")", ">>", "2", "]", "<<", "16", "^", "HEAP", "[", "(", "s", "|", "x3", ">>", "6", "&", "1020", ")", ">>", "2", "]", "<<", "8", "^", "HEAP", "[", "(", "s", "|", "x0", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "4", ")", ">>", "2", "]", ",", "S2", "=", "HEAP", "[", "(", "s", "|", "x2", ">>", "22", "&", "1020", ")", ">>", "2", "]", "<<", "24", "^", "HEAP", "[", "(", "s", "|", "x3", ">>", "14", "&", "1020", ")", ">>", "2", "]", "<<", "16", "^", "HEAP", "[", "(", "s", "|", "x0", ">>", "6", "&", "1020", ")", ">>", "2", "]", "<<", "8", "^", "HEAP", "[", "(", "s", "|", "x1", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "8", ")", ">>", "2", "]", ",", "S3", "=", "HEAP", "[", "(", "s", "|", "x3", ">>", "22", "&", "1020", ")", ">>", "2", "]", "<<", "24", "^", "HEAP", "[", "(", "s", "|", "x0", ">>", "14", "&", "1020", ")", ">>", "2", "]", "<<", "16", "^", "HEAP", "[", "(", "s", "|", "x1", ">>", "6", "&", "1020", ")", ">>", "2", "]", "<<", "8", "^", "HEAP", "[", "(", "s", "|", "x2", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "12", ")", ">>", "2", "]", ";", "}", "/**\r\n                * ECB mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_ecb_enc", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "x0", ",", "x1", ",", "x2", ",", "x3", ")", ";", "}", "/**\r\n                * ECB mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_ecb_dec", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "var", "t", "=", "0", ";", "_core", "(", "0x0400", ",", "0x0c00", ",", "0x2000", ",", "R", ",", "x0", ",", "x3", ",", "x2", ",", "x1", ")", ";", "t", "=", "S1", ",", "S1", "=", "S3", ",", "S3", "=", "t", ";", "}", "/**\r\n                * CBC mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_cbc_enc", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "I0", "^", "x0", ",", "I1", "^", "x1", ",", "I2", "^", "x2", ",", "I3", "^", "x3", ")", ";", "I0", "=", "S0", ",", "I1", "=", "S1", ",", "I2", "=", "S2", ",", "I3", "=", "S3", ";", "}", "/**\r\n                * CBC mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_cbc_dec", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "var", "t", "=", "0", ";", "_core", "(", "0x0400", ",", "0x0c00", ",", "0x2000", ",", "R", ",", "x0", ",", "x3", ",", "x2", ",", "x1", ")", ";", "t", "=", "S1", ",", "S1", "=", "S3", ",", "S3", "=", "t", ";", "S0", "=", "S0", "^", "I0", ",", "S1", "=", "S1", "^", "I1", ",", "S2", "=", "S2", "^", "I2", ",", "S3", "=", "S3", "^", "I3", ";", "I0", "=", "x0", ",", "I1", "=", "x1", ",", "I2", "=", "x2", ",", "I3", "=", "x3", ";", "}", "/**\r\n                * CFB mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_cfb_enc", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "I0", ",", "I1", ",", "I2", ",", "I3", ")", ";", "I0", "=", "S0", "=", "S0", "^", "x0", ",", "I1", "=", "S1", "=", "S1", "^", "x1", ",", "I2", "=", "S2", "=", "S2", "^", "x2", ",", "I3", "=", "S3", "=", "S3", "^", "x3", ";", "}", "/**\r\n                * CFB mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_cfb_dec", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "I0", ",", "I1", ",", "I2", ",", "I3", ")", ";", "S0", "=", "S0", "^", "x0", ",", "S1", "=", "S1", "^", "x1", ",", "S2", "=", "S2", "^", "x2", ",", "S3", "=", "S3", "^", "x3", ";", "I0", "=", "x0", ",", "I1", "=", "x1", ",", "I2", "=", "x2", ",", "I3", "=", "x3", ";", "}", "/**\r\n                * OFB mode encryption / decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_ofb", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "I0", ",", "I1", ",", "I2", ",", "I3", ")", ";", "I0", "=", "S0", ",", "I1", "=", "S1", ",", "I2", "=", "S2", ",", "I3", "=", "S3", ";", "S0", "=", "S0", "^", "x0", ",", "S1", "=", "S1", "^", "x1", ",", "S2", "=", "S2", "^", "x2", ",", "S3", "=", "S3", "^", "x3", ";", "}", "/**\r\n                * CTR mode encryption / decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_ctr", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "N0", ",", "N1", ",", "N2", ",", "N3", ")", ";", "N3", "=", "(", "~", "M3", "&", "N3", ")", "|", "M3", "&", "(", "N3", "+", "1", ")", ",", "N2", "=", "(", "~", "M2", "&", "N2", ")", "|", "M2", "&", "(", "N2", "+", "(", "(", "N3", "|", "0", ")", "==", "0", ")", ")", ",", "N1", "=", "(", "~", "M1", "&", "N1", ")", "|", "M1", "&", "(", "N1", "+", "(", "(", "N2", "|", "0", ")", "==", "0", ")", ")", ",", "N0", "=", "(", "~", "M0", "&", "N0", ")", "|", "M0", "&", "(", "N0", "+", "(", "(", "N1", "|", "0", ")", "==", "0", ")", ")", ";", "S0", "=", "S0", "^", "x0", ",", "S1", "=", "S1", "^", "x1", ",", "S2", "=", "S2", "^", "x2", ",", "S3", "=", "S3", "^", "x3", ";", "}", "/**\r\n                * GCM mode MAC calculation\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_gcm_mac", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "var", "y0", "=", "0", ",", "y1", "=", "0", ",", "y2", "=", "0", ",", "y3", "=", "0", ",", "z0", "=", "0", ",", "z1", "=", "0", ",", "z2", "=", "0", ",", "z3", "=", "0", ",", "i", "=", "0", ",", "c", "=", "0", ";", "x0", "=", "x0", "^", "I0", ",", "x1", "=", "x1", "^", "I1", ",", "x2", "=", "x2", "^", "I2", ",", "x3", "=", "x3", "^", "I3", ";", "y0", "=", "H0", "|", "0", ",", "y1", "=", "H1", "|", "0", ",", "y2", "=", "H2", "|", "0", ",", "y3", "=", "H3", "|", "0", ";", "for", "(", ";", "(", "i", "|", "0", ")", "<", "128", ";", "i", "=", "(", "i", "+", "1", ")", "|", "0", ")", "{", "if", "(", "y0", ">>>", "31", ")", "{", "z0", "=", "z0", "^", "x0", ",", "z1", "=", "z1", "^", "x1", ",", "z2", "=", "z2", "^", "x2", ",", "z3", "=", "z3", "^", "x3", ";", "}", "y0", "=", "(", "y0", "<<", "1", ")", "|", "(", "y1", ">>>", "31", ")", ",", "y1", "=", "(", "y1", "<<", "1", ")", "|", "(", "y2", ">>>", "31", ")", ",", "y2", "=", "(", "y2", "<<", "1", ")", "|", "(", "y3", ">>>", "31", ")", ",", "y3", "=", "(", "y3", "<<", "1", ")", ";", "c", "=", "x3", "&", "1", ";", "x3", "=", "(", "x3", ">>>", "1", ")", "|", "(", "x2", "<<", "31", ")", ",", "x2", "=", "(", "x2", ">>>", "1", ")", "|", "(", "x1", "<<", "31", ")", ",", "x1", "=", "(", "x1", ">>>", "1", ")", "|", "(", "x0", "<<", "31", ")", ",", "x0", "=", "(", "x0", ">>>", "1", ")", ";", "if", "(", "c", ")", "x0", "=", "x0", "^", "0xe1000000", ";", "}", "I0", "=", "z0", ",", "I1", "=", "z1", ",", "I2", "=", "z2", ",", "I3", "=", "z3", ";", "}", "/**\r\n                * Set the internal rounds number.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} r - number if inner AES rounds\r\n                */", "function", "set_rounds", "(", "r", ")", "{", "r", "=", "r", "|", "0", ";", "R", "=", "r", ";", "}", "/**\r\n                * Populate the internal state of the module.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} s0...s3 - state vector\r\n                */", "function", "set_state", "(", "s0", ",", "s1", ",", "s2", ",", "s3", ")", "{", "s0", "=", "s0", "|", "0", ";", "s1", "=", "s1", "|", "0", ";", "s2", "=", "s2", "|", "0", ";", "s3", "=", "s3", "|", "0", ";", "S0", "=", "s0", ",", "S1", "=", "s1", ",", "S2", "=", "s2", ",", "S3", "=", "s3", ";", "}", "/**\r\n                * Populate the internal iv of the module.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} i0...i3 - iv vector\r\n                */", "function", "set_iv", "(", "i0", ",", "i1", ",", "i2", ",", "i3", ")", "{", "i0", "=", "i0", "|", "0", ";", "i1", "=", "i1", "|", "0", ";", "i2", "=", "i2", "|", "0", ";", "i3", "=", "i3", "|", "0", ";", "I0", "=", "i0", ",", "I1", "=", "i1", ",", "I2", "=", "i2", ",", "I3", "=", "i3", ";", "}", "/**\r\n                * Set nonce for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} n0..n3 - nonce vector\r\n                */", "function", "set_nonce", "(", "n0", ",", "n1", ",", "n2", ",", "n3", ")", "{", "n0", "=", "n0", "|", "0", ";", "n1", "=", "n1", "|", "0", ";", "n2", "=", "n2", "|", "0", ";", "n3", "=", "n3", "|", "0", ";", "N0", "=", "n0", ",", "N1", "=", "n1", ",", "N2", "=", "n2", ",", "N3", "=", "n3", ";", "}", "/**\r\n                * Set counter mask for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} m0...m3 - counter mask vector\r\n                */", "function", "set_mask", "(", "m0", ",", "m1", ",", "m2", ",", "m3", ")", "{", "m0", "=", "m0", "|", "0", ";", "m1", "=", "m1", "|", "0", ";", "m2", "=", "m2", "|", "0", ";", "m3", "=", "m3", "|", "0", ";", "M0", "=", "m0", ",", "M1", "=", "m1", ",", "M2", "=", "m2", ",", "M3", "=", "m3", ";", "}", "/**\r\n                * Set counter for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} c0...c3 - counter vector\r\n                */", "function", "set_counter", "(", "c0", ",", "c1", ",", "c2", ",", "c3", ")", "{", "c0", "=", "c0", "|", "0", ";", "c1", "=", "c1", "|", "0", ";", "c2", "=", "c2", "|", "0", ";", "c3", "=", "c3", "|", "0", ";", "N3", "=", "(", "~", "M3", "&", "N3", ")", "|", "M3", "&", "c3", ",", "N2", "=", "(", "~", "M2", "&", "N2", ")", "|", "M2", "&", "c2", ",", "N1", "=", "(", "~", "M1", "&", "N1", ")", "|", "M1", "&", "c1", ",", "N0", "=", "(", "~", "M0", "&", "N0", ")", "|", "M0", "&", "c0", ";", "}", "/**\r\n                * Store the internal state vector into the heap.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} pos - offset where to put the data\r\n                * @return {int} The number of bytes have been written into the heap, always 16.\r\n                */", "function", "get_state", "(", "pos", ")", "{", "pos", "=", "pos", "|", "0", ";", "if", "(", "pos", "&", "15", ")", "return", "-", "1", ";", "DATA", "[", "pos", "|", "0", "]", "=", "S0", ">>>", "24", ",", "DATA", "[", "pos", "|", "1", "]", "=", "S0", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "2", "]", "=", "S0", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "3", "]", "=", "S0", "&", "255", ",", "DATA", "[", "pos", "|", "4", "]", "=", "S1", ">>>", "24", ",", "DATA", "[", "pos", "|", "5", "]", "=", "S1", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "6", "]", "=", "S1", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "7", "]", "=", "S1", "&", "255", ",", "DATA", "[", "pos", "|", "8", "]", "=", "S2", ">>>", "24", ",", "DATA", "[", "pos", "|", "9", "]", "=", "S2", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "10", "]", "=", "S2", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "11", "]", "=", "S2", "&", "255", ",", "DATA", "[", "pos", "|", "12", "]", "=", "S3", ">>>", "24", ",", "DATA", "[", "pos", "|", "13", "]", "=", "S3", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "14", "]", "=", "S3", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "15", "]", "=", "S3", "&", "255", ";", "return", "16", ";", "}", "/**\r\n                * Store the internal iv vector into the heap.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} pos - offset where to put the data\r\n                * @return {int} The number of bytes have been written into the heap, always 16.\r\n                */", "function", "get_iv", "(", "pos", ")", "{", "pos", "=", "pos", "|", "0", ";", "if", "(", "pos", "&", "15", ")", "return", "-", "1", ";", "DATA", "[", "pos", "|", "0", "]", "=", "I0", ">>>", "24", ",", "DATA", "[", "pos", "|", "1", "]", "=", "I0", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "2", "]", "=", "I0", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "3", "]", "=", "I0", "&", "255", ",", "DATA", "[", "pos", "|", "4", "]", "=", "I1", ">>>", "24", ",", "DATA", "[", "pos", "|", "5", "]", "=", "I1", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "6", "]", "=", "I1", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "7", "]", "=", "I1", "&", "255", ",", "DATA", "[", "pos", "|", "8", "]", "=", "I2", ">>>", "24", ",", "DATA", "[", "pos", "|", "9", "]", "=", "I2", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "10", "]", "=", "I2", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "11", "]", "=", "I2", "&", "255", ",", "DATA", "[", "pos", "|", "12", "]", "=", "I3", ">>>", "24", ",", "DATA", "[", "pos", "|", "13", "]", "=", "I3", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "14", "]", "=", "I3", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "15", "]", "=", "I3", "&", "255", ";", "return", "16", ";", "}", "/**\r\n                * GCM initialization.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                */", "function", "gcm_init", "(", ")", "{", "_ecb_enc", "(", "0", ",", "0", ",", "0", ",", "0", ")", ";", "H0", "=", "S0", ",", "H1", "=", "S1", ",", "H2", "=", "S2", ",", "H3", "=", "S3", ";", "}", "/**\r\n                * Perform ciphering operation on the supplied data.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n                * @param {int} pos - offset of the data being processed\r\n                * @param {int} len - length of the data being processed\r\n                * @return {int} Actual amount of data have been processed.\r\n                */", "function", "cipher", "(", "mode", ",", "pos", ",", "len", ")", "{", "mode", "=", "mode", "|", "0", ";", "pos", "=", "pos", "|", "0", ";", "len", "=", "len", "|", "0", ";", "var", "ret", "=", "0", ";", "if", "(", "pos", "&", "15", ")", "return", "-", "1", ";", "while", "(", "(", "len", "|", "0", ")", ">=", "16", ")", "{", "_cipher_modes", "[", "mode", "&", "7", "]", "(", "DATA", "[", "pos", "|", "0", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "1", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "2", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "3", "]", ",", "DATA", "[", "pos", "|", "4", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "5", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "6", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "7", "]", ",", "DATA", "[", "pos", "|", "8", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "9", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "10", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "11", "]", ",", "DATA", "[", "pos", "|", "12", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "13", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "14", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "15", "]", ")", ";", "DATA", "[", "pos", "|", "0", "]", "=", "S0", ">>>", "24", ",", "DATA", "[", "pos", "|", "1", "]", "=", "S0", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "2", "]", "=", "S0", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "3", "]", "=", "S0", "&", "255", ",", "DATA", "[", "pos", "|", "4", "]", "=", "S1", ">>>", "24", ",", "DATA", "[", "pos", "|", "5", "]", "=", "S1", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "6", "]", "=", "S1", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "7", "]", "=", "S1", "&", "255", ",", "DATA", "[", "pos", "|", "8", "]", "=", "S2", ">>>", "24", ",", "DATA", "[", "pos", "|", "9", "]", "=", "S2", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "10", "]", "=", "S2", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "11", "]", "=", "S2", "&", "255", ",", "DATA", "[", "pos", "|", "12", "]", "=", "S3", ">>>", "24", ",", "DATA", "[", "pos", "|", "13", "]", "=", "S3", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "14", "]", "=", "S3", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "15", "]", "=", "S3", "&", "255", ";", "ret", "=", "(", "ret", "+", "16", ")", "|", "0", ",", "pos", "=", "(", "pos", "+", "16", ")", "|", "0", ",", "len", "=", "(", "len", "-", "16", ")", "|", "0", ";", "}", "return", "ret", "|", "0", ";", "}", "/**\r\n                * Calculates MAC of the supplied data.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n                * @param {int} pos - offset of the data being processed\r\n                * @param {int} len - length of the data being processed\r\n                * @return {int} Actual amount of data have been processed.\r\n                */", "function", "mac", "(", "mode", ",", "pos", ",", "len", ")", "{", "mode", "=", "mode", "|", "0", ";", "pos", "=", "pos", "|", "0", ";", "len", "=", "len", "|", "0", ";", "var", "ret", "=", "0", ";", "if", "(", "pos", "&", "15", ")", "return", "-", "1", ";", "while", "(", "(", "len", "|", "0", ")", ">=", "16", ")", "{", "_mac_modes", "[", "mode", "&", "1", "]", "(", "DATA", "[", "pos", "|", "0", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "1", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "2", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "3", "]", ",", "DATA", "[", "pos", "|", "4", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "5", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "6", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "7", "]", ",", "DATA", "[", "pos", "|", "8", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "9", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "10", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "11", "]", ",", "DATA", "[", "pos", "|", "12", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "13", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "14", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "15", "]", ")", ";", "ret", "=", "(", "ret", "+", "16", ")", "|", "0", ",", "pos", "=", "(", "pos", "+", "16", ")", "|", "0", ",", "len", "=", "(", "len", "-", "16", ")", "|", "0", ";", "}", "return", "ret", "|", "0", ";", "}", "/**\r\n                * AES cipher modes table (virual methods)\r\n                */", "var", "_cipher_modes", "=", "[", "_ecb_enc", ",", "_ecb_dec", ",", "_cbc_enc", ",", "_cbc_dec", ",", "_cfb_enc", ",", "_cfb_dec", ",", "_ofb", ",", "_ctr", "]", ";", "/**\r\n                * AES MAC modes table (virual methods)\r\n                */", "var", "_mac_modes", "=", "[", "_cbc_enc", ",", "_gcm_mac", "]", ";", "/**\r\n                * Asm.js module exports\r\n                */", "return", "{", "set_rounds", ":", "set_rounds", ",", "set_state", ":", "set_state", ",", "set_iv", ":", "set_iv", ",", "set_nonce", ":", "set_nonce", ",", "set_mask", ":", "set_mask", ",", "set_counter", ":", "set_counter", ",", "get_state", ":", "get_state", ",", "get_iv", ":", "get_iv", ",", "gcm_init", ":", "gcm_init", ",", "cipher", ":", "cipher", ",", "mac", ":", "mac", "}", ";", "}", "(", "stdlib", ",", "foreign", ",", "buffer", ")", ";", "asm", ".", "set_key", "=", "set_key", ";", "return", "asm", ";", "}"], "original_docstring": "\nAsm.js module constructor.\n\n<p>\nHeap buffer layout by offset:\n<pre>\n0x0000   encryption key schedule\n0x0400   decryption key schedule\n0x0800   sbox\n0x0c00   inv sbox\n0x1000   encryption tables\n0x2000   decryption tables\n0x3000   reserved (future GCM multiplication lookup table)\n0x4000   data\n</pre>\nDon't touch anything before <code>0x400</code>.\n</p>\n\n@alias AES_asm\n@class\n@param {Object} foreign - <i>ignored</i>\n@param {ArrayBuffer} buffer - heap buffer to link with\n", "docstring": {"block_comment": "Asm.js module constructor. \nHeap buffer layout by offset  \n0x0000   encryption key schedule \n0x0400   decryption key schedule \n0x0800   sbox \n0x0c00   inv sbox \n0x1000   encryption tables \n0x2000   decryption tables \n0x3000   reserved  future GCM multiplication lookup table  \n0x4000   data \nDon t touch anything before 0x400.", "line_comment": ["Init AES stuff for the first time", "Fill up AES tables", "Calculate AES key schedules. \n instance \n memberof AES_asm \n param  int  ks   key size, 4 6 8  for 128 192 256 bit key correspondingly  \n param  int  k0..k7   key vector components", "Encryption key schedule", "Decryption key schedule", "Set rounds number", "create library object with necessary properties", "AES core \n param  int  k   precomputed key schedule offset \n param  int  s   precomputed sbox table offset \n param  int  t   precomputed round table offset \n param  int  r   number of inner rounds to perform \n param  int  x0..x3   128 bit input block vector", "round 0", "round 1..r", "final round", "ECB mode encryption \n param  int  x0..x3   128 bit input block vector", "ECB mode decryption \n param  int  x0..x3   128 bit input block vector", "CBC mode encryption \n param  int  x0..x3   128 bit input block vector", "CBC mode decryption \n param  int  x0..x3   128 bit input block vector", "CFB mode encryption \n param  int  x0..x3   128 bit input block vector", "CFB mode decryption \n param  int  x0..x3   128 bit input block vector", "OFB mode encryption   decryption \n param  int  x0..x3   128 bit input block vector", "CTR mode encryption   decryption \n param  int  x0..x3   128 bit input block vector", "GCM mode MAC calculation \n param  int  x0..x3   128 bit input block vector", "Set the internal rounds number. \n instance \n memberof AES_asm \n param  int  r   number if inner AES rounds", "Populate the internal state of the module. \n instance \n memberof AES_asm \n param  int  s0...s3   state vector", "Populate the internal iv of the module. \n instance \n memberof AES_asm \n param  int  i0...i3   iv vector", "Set nonce for CTR family modes. \n instance \n memberof AES_asm \n param  int  n0..n3   nonce vector", "Set counter mask for CTR family modes. \n instance \n memberof AES_asm \n param  int  m0...m3   counter mask vector", "Set counter for CTR family modes. \n instance \n memberof AES_asm \n param  int  c0...c3   counter vector", "Store the internal state vector into the heap. \n instance \n memberof AES_asm \n param  int  pos   offset where to put the data \n return  int  The number of bytes have been written into the heap, always 16.", "Store the internal iv vector into the heap. \n instance \n memberof AES_asm \n param  int  pos   offset where to put the data \n return  int  The number of bytes have been written into the heap, always 16.", "GCM initialization. \n instance \n memberof AES_asm", "Perform ciphering operation on the supplied data. \n instance \n memberof AES_asm \n param  int  mode   block cipher mode  see   link AES_asm  mode constants  \n param  int  pos   offset of the data being processed \n param  int  len   length of the data being processed \n return  int  Actual amount of data have been processed.", "Calculates MAC of the supplied data. \n instance \n memberof AES_asm \n param  int  mode   block cipher mode  see   link AES_asm  mode constants  \n param  int  pos   offset of the data being processed \n param  int  len   length of the data being processed \n return  int  Actual amount of data have been processed.", "AES cipher modes table  virual methods ", "AES MAC modes table  virual methods ", "Asm.js module exports"]}, "docstring_tokens": ["Asm", ".", "js", "module", "constructor", ".", "Heap", "buffer", "layout", "by", "offset", "0x0000", "encryption", "key", "schedule", "0x0400", "decryption", "key", "schedule", "0x0800", "sbox", "0x0c00", "inv", "sbox", "0x1000", "encryption", "tables", "0x2000", "decryption", "tables", "0x3000", "reserved", "future", "GCM", "multiplication", "lookup", "table", "0x4000", "data", "Don", "t", "touch", "anything", "before", "0x400", "."], "sample_id": 464, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004327", "repo": "seogi1004/cdnjs", "path": "ajax/libs/asmCrypto/0.15.0/asmcrypto.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function ( foreign, buffer ) {\r\n           // Init AES stuff for the first time\r\n           if ( !aes_init_done ) aes_init();\r\n\r\n           // Fill up AES tables\r\n           var heap = new Uint32Array(buffer);\r\n           heap.set( aes_sbox, 0x0800>>2 );\r\n           heap.set( aes_sinv, 0x0c00>>2 );\r\n           for ( var i = 0; i < 4; i++ ) {\r\n               heap.set( aes_enc[i], ( 0x1000 + 0x400 * i )>>2 );\r\n               heap.set( aes_dec[i], ( 0x2000 + 0x400 * i )>>2 );\r\n           }\r\n\r\n           /**\r\n            * Calculate AES key schedules.\r\n            * @instance\r\n            * @memberof AES_asm\r\n            * @param {int} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)\r\n            * @param {int} k0..k7 - key vector components\r\n            */\r\n           function set_key ( ks, k0, k1, k2, k3, k4, k5, k6, k7 ) {\r\n               var ekeys = heap.subarray( 0x000, 60 ),\r\n                   dkeys = heap.subarray( 0x100, 0x100+60 );\r\n\r\n               // Encryption key schedule\r\n               ekeys.set( [ k0, k1, k2, k3, k4, k5, k6, k7 ] );\r\n               for ( var i = ks, rcon = 1; i < 4*ks+28; i++ ) {\r\n                   var k = ekeys[i-1];\r\n                   if ( ( i % ks === 0 ) || ( ks === 8 && i % ks === 4 ) ) {\r\n                       k = aes_sbox[k>>>24]<<24 ^ aes_sbox[k>>>16&255]<<16 ^ aes_sbox[k>>>8&255]<<8 ^ aes_sbox[k&255];\r\n                   }\r\n                   if ( i % ks === 0 ) {\r\n                       k = (k << 8) ^ (k >>> 24) ^ (rcon << 24);\r\n                       rcon = (rcon << 1) ^ ( (rcon & 0x80) ? 0x1b : 0 );\r\n                   }\r\n                   ekeys[i] = ekeys[i-ks] ^ k;\r\n               }\r\n\r\n               // Decryption key schedule\r\n               for ( var j = 0; j < i; j += 4 ) {\r\n                   for ( var jj = 0; jj < 4; jj++ ) {\r\n                       var k = ekeys[i-(4+j)+(4-jj)%4];\r\n                       if ( j < 4 || j >= i-4 ) {\r\n                           dkeys[j+jj] = k;\r\n                       } else {\r\n                           dkeys[j+jj] = aes_dec[0][aes_sbox[k>>>24]]\r\n                                       ^ aes_dec[1][aes_sbox[k>>>16&255]]\r\n                                       ^ aes_dec[2][aes_sbox[k>>>8&255]]\r\n                                       ^ aes_dec[3][aes_sbox[k&255]];\r\n                       }\r\n                   }\r\n               }\r\n\r\n               // Set rounds number\r\n               asm.set_rounds( ks + 5 );\r\n           }\r\n\r\n           // create library object with necessary properties\r\n           var stdlib = { Uint8Array: Uint8Array, Uint32Array: Uint32Array };\r\n\r\n           var asm = function ( stdlib, foreign, buffer ) {\r\n               var S0 = 0, S1 = 0, S2 = 0, S3 = 0,\r\n                   I0 = 0, I1 = 0, I2 = 0, I3 = 0,\r\n                   N0 = 0, N1 = 0, N2 = 0, N3 = 0,\r\n                   M0 = 0, M1 = 0, M2 = 0, M3 = 0,\r\n                   H0 = 0, H1 = 0, H2 = 0, H3 = 0,\r\n                   R = 0;\r\n\r\n               var HEAP = new stdlib.Uint32Array(buffer),\r\n                   DATA = new stdlib.Uint8Array(buffer);\r\n\r\n               /**\r\n                * AES core\r\n                * @param {int} k - precomputed key schedule offset\r\n                * @param {int} s - precomputed sbox table offset\r\n                * @param {int} t - precomputed round table offset\r\n                * @param {int} r - number of inner rounds to perform\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _core ( k, s, t, r, x0, x1, x2, x3 ) {\r\n                   k = k|0;\r\n                   s = s|0;\r\n                   t = t|0;\r\n                   r = r|0;\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   var t1 = 0, t2 = 0, t3 = 0,\r\n                       y0 = 0, y1 = 0, y2 = 0, y3 = 0,\r\n                       i = 0;\r\n\r\n                   t1 = t|0x400, t2 = t|0x800, t3 = t|0xc00;\r\n\r\n                   // round 0\r\n                   x0 = x0 ^ HEAP[(k|0)>>2], x1 = x1 ^ HEAP[(k|4)>>2], x2 = x2 ^ HEAP[(k|8)>>2], x3 = x3 ^ HEAP[(k|12)>>2];\r\n\r\n                   // round 1..r\r\n                   for ( i = 16; (i|0) <= (r<<4); i = (i+16)|0 ) {\r\n                       y0 = HEAP[(t|x0>>22&1020)>>2] ^ HEAP[(t1|x1>>14&1020)>>2] ^ HEAP[(t2|x2>>6&1020)>>2] ^ HEAP[(t3|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2], y1 = HEAP[(t|x1>>22&1020)>>2] ^ HEAP[(t1|x2>>14&1020)>>2] ^ HEAP[(t2|x3>>6&1020)>>2] ^ HEAP[(t3|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2], y2 = HEAP[(t|x2>>22&1020)>>2] ^ HEAP[(t1|x3>>14&1020)>>2] ^ HEAP[(t2|x0>>6&1020)>>2] ^ HEAP[(t3|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2], y3 = HEAP[(t|x3>>22&1020)>>2] ^ HEAP[(t1|x0>>14&1020)>>2] ^ HEAP[(t2|x1>>6&1020)>>2] ^ HEAP[(t3|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\r\n                       x0 = y0, x1 = y1, x2 = y2, x3 = y3;\r\n                   }\r\n\r\n                   // final round\r\n                   S0 = HEAP[(s|x0>>22&1020)>>2]<<24 ^ HEAP[(s|x1>>14&1020)>>2]<<16 ^ HEAP[(s|x2>>6&1020)>>2]<<8 ^ HEAP[(s|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2], S1 = HEAP[(s|x1>>22&1020)>>2]<<24 ^ HEAP[(s|x2>>14&1020)>>2]<<16 ^ HEAP[(s|x3>>6&1020)>>2]<<8 ^ HEAP[(s|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2], S2 = HEAP[(s|x2>>22&1020)>>2]<<24 ^ HEAP[(s|x3>>14&1020)>>2]<<16 ^ HEAP[(s|x0>>6&1020)>>2]<<8 ^ HEAP[(s|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2], S3 = HEAP[(s|x3>>22&1020)>>2]<<24 ^ HEAP[(s|x0>>14&1020)>>2]<<16 ^ HEAP[(s|x1>>6&1020)>>2]<<8 ^ HEAP[(s|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\r\n               }\r\n\r\n               /**\r\n                * ECB mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _ecb_enc ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       x0,\r\n                       x1,\r\n                       x2,\r\n                       x3\r\n                   );\r\n               }\r\n\r\n               /**\r\n                * ECB mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _ecb_dec ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   var t = 0;\r\n\r\n                   _core(\r\n                       0x0400, 0x0c00, 0x2000,\r\n                       R,\r\n                       x0,\r\n                       x3,\r\n                       x2,\r\n                       x1\r\n                   );\r\n\r\n                   t = S1, S1 = S3, S3 = t;\r\n               }\r\n\r\n\r\n               /**\r\n                * CBC mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _cbc_enc ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       I0 ^ x0,\r\n                       I1 ^ x1,\r\n                       I2 ^ x2,\r\n                       I3 ^ x3\r\n                   );\r\n\r\n                   I0 = S0, I1 = S1, I2 = S2, I3 = S3;\r\n               }\r\n\r\n               /**\r\n                * CBC mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _cbc_dec ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   var t = 0;\r\n\r\n                   _core(\r\n                       0x0400, 0x0c00, 0x2000,\r\n                       R,\r\n                       x0,\r\n                       x3,\r\n                       x2,\r\n                       x1\r\n                   );\r\n\r\n                   t = S1, S1 = S3, S3 = t;\r\n\r\n                   S0 = S0 ^ I0, S1 = S1 ^ I1, S2 = S2 ^ I2, S3 = S3 ^ I3;\r\n\r\n                   I0 = x0, I1 = x1, I2 = x2, I3 = x3;\r\n               }\r\n\r\n               /**\r\n                * CFB mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _cfb_enc ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       I0,\r\n                       I1,\r\n                       I2,\r\n                       I3\r\n                   );\r\n\r\n                   I0 = S0 = S0 ^ x0, I1 = S1 = S1 ^ x1, I2 = S2 = S2 ^ x2, I3 = S3 = S3 ^ x3;\r\n               }\r\n\r\n\r\n               /**\r\n                * CFB mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _cfb_dec ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       I0,\r\n                       I1,\r\n                       I2,\r\n                       I3\r\n                   );\r\n\r\n                   S0 = S0 ^ x0, S1 = S1 ^ x1, S2 = S2 ^ x2, S3 = S3 ^ x3;\r\n\r\n                   I0 = x0, I1 = x1, I2 = x2, I3 = x3;\r\n               }\r\n\r\n               /**\r\n                * OFB mode encryption / decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _ofb ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       I0,\r\n                       I1,\r\n                       I2,\r\n                       I3\r\n                   );\r\n\r\n                   I0 = S0, I1 = S1, I2 = S2, I3 = S3;\r\n\r\n                   S0 = S0 ^ x0, S1 = S1 ^ x1, S2 = S2 ^ x2, S3 = S3 ^ x3;\r\n               }\r\n\r\n               /**\r\n                * CTR mode encryption / decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _ctr ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   _core(\r\n                       0x0000, 0x0800, 0x1000,\r\n                       R,\r\n                       N0,\r\n                       N1,\r\n                       N2,\r\n                       N3\r\n                   );\r\n\r\n                   N3 = ( ~M3 & N3 ) | M3 & ( N3 + 1 ), N2 = ( ~M2 & N2 ) | M2 & ( N2 + ( (N3|0) == 0 ) ), N1 = ( ~M1 & N1 ) | M1 & ( N1 + ( (N2|0) == 0 ) ), N0 = ( ~M0 & N0 ) | M0 & ( N0 + ( (N1|0) == 0 ) );\r\n\r\n                   S0 = S0 ^ x0, S1 = S1 ^ x1, S2 = S2 ^ x2, S3 = S3 ^ x3;\r\n               }\r\n\r\n               /**\r\n                * GCM mode MAC calculation\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */\r\n               function _gcm_mac ( x0, x1, x2, x3 ) {\r\n                   x0 = x0|0;\r\n                   x1 = x1|0;\r\n                   x2 = x2|0;\r\n                   x3 = x3|0;\r\n\r\n                   var y0 = 0, y1 = 0, y2 = 0, y3 = 0,\r\n                       z0 = 0, z1 = 0, z2 = 0, z3 = 0,\r\n                       i = 0, c = 0;\r\n\r\n                   x0 = x0 ^ I0, x1 = x1 ^ I1, x2 = x2 ^ I2, x3 = x3 ^ I3;\r\n\r\n                   y0 = H0|0, y1 = H1|0, y2 = H2|0, y3 = H3|0;\r\n\r\n                   for ( ; (i|0) < 128; i = (i + 1)|0 ) {\r\n                       if ( y0 >>> 31 ) {\r\n                           z0 = z0 ^ x0, z1 = z1 ^ x1, z2 = z2 ^ x2, z3 = z3 ^ x3;\r\n                       }\r\n\r\n                       y0 = (y0 << 1) | (y1 >>> 31), y1 = (y1 << 1) | (y2 >>> 31), y2 = (y2 << 1) | (y3 >>> 31), y3 = (y3 << 1);\r\n\r\n                       c = x3 & 1;\r\n\r\n                       x3 = (x3 >>> 1) | (x2 << 31), x2 = (x2 >>> 1) | (x1 << 31), x1 = (x1 >>> 1) | (x0 << 31), x0 = (x0 >>> 1);\r\n\r\n                       if ( c ) x0 = x0 ^ 0xe1000000;\r\n                   }\r\n\r\n                   I0 = z0, I1 = z1, I2 = z2, I3 = z3;\r\n               }\r\n\r\n               /**\r\n                * Set the internal rounds number.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} r - number if inner AES rounds\r\n                */\r\n               function set_rounds ( r ) {\r\n                   r = r|0;\r\n                   R = r;\r\n               }\r\n\r\n               /**\r\n                * Populate the internal state of the module.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} s0...s3 - state vector\r\n                */\r\n               function set_state ( s0, s1, s2, s3 ) {\r\n                   s0 = s0|0;\r\n                   s1 = s1|0;\r\n                   s2 = s2|0;\r\n                   s3 = s3|0;\r\n\r\n                   S0 = s0, S1 = s1, S2 = s2, S3 = s3;\r\n               }\r\n\r\n               /**\r\n                * Populate the internal iv of the module.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} i0...i3 - iv vector\r\n                */\r\n               function set_iv ( i0, i1, i2, i3 ) {\r\n                   i0 = i0|0;\r\n                   i1 = i1|0;\r\n                   i2 = i2|0;\r\n                   i3 = i3|0;\r\n\r\n                   I0 = i0, I1 = i1, I2 = i2, I3 = i3;\r\n               }\r\n\r\n               /**\r\n                * Set nonce for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} n0..n3 - nonce vector\r\n                */\r\n               function set_nonce ( n0, n1, n2, n3 ) {\r\n                   n0 = n0|0;\r\n                   n1 = n1|0;\r\n                   n2 = n2|0;\r\n                   n3 = n3|0;\r\n\r\n                   N0 = n0, N1 = n1, N2 = n2, N3 = n3;\r\n               }\r\n\r\n               /**\r\n                * Set counter mask for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} m0...m3 - counter mask vector\r\n                */\r\n               function set_mask ( m0, m1, m2, m3 ) {\r\n                   m0 = m0|0;\r\n                   m1 = m1|0;\r\n                   m2 = m2|0;\r\n                   m3 = m3|0;\r\n\r\n                   M0 = m0, M1 = m1, M2 = m2, M3 = m3;\r\n               }\r\n\r\n               /**\r\n                * Set counter for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} c0...c3 - counter vector\r\n                */\r\n               function set_counter ( c0, c1, c2, c3 ) {\r\n                   c0 = c0|0;\r\n                   c1 = c1|0;\r\n                   c2 = c2|0;\r\n                   c3 = c3|0;\r\n\r\n                   N3 = ( ~M3 & N3 ) | M3 & c3, N2 = ( ~M2 & N2 ) | M2 & c2, N1 = ( ~M1 & N1 ) | M1 & c1, N0 = ( ~M0 & N0 ) | M0 & c0;\r\n               }\r\n\r\n               /**\r\n                * Store the internal state vector into the heap.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} pos - offset where to put the data\r\n                * @return {int} The number of bytes have been written into the heap, always 16.\r\n                */\r\n               function get_state ( pos ) {\r\n                   pos = pos|0;\r\n\r\n                   if ( pos & 15 ) return -1;\r\n\r\n                   DATA[pos|0] = S0>>>24, DATA[pos|1] = S0>>>16&255, DATA[pos|2] = S0>>>8&255, DATA[pos|3] = S0&255, DATA[pos|4] = S1>>>24, DATA[pos|5] = S1>>>16&255, DATA[pos|6] = S1>>>8&255, DATA[pos|7] = S1&255, DATA[pos|8] = S2>>>24, DATA[pos|9] = S2>>>16&255, DATA[pos|10] = S2>>>8&255, DATA[pos|11] = S2&255, DATA[pos|12] = S3>>>24, DATA[pos|13] = S3>>>16&255, DATA[pos|14] = S3>>>8&255, DATA[pos|15] = S3&255;\r\n\r\n                   return 16;\r\n               }\r\n\r\n               /**\r\n                * Store the internal iv vector into the heap.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} pos - offset where to put the data\r\n                * @return {int} The number of bytes have been written into the heap, always 16.\r\n                */\r\n               function get_iv ( pos ) {\r\n                   pos = pos|0;\r\n\r\n                   if ( pos & 15 ) return -1;\r\n\r\n                   DATA[pos|0] = I0>>>24, DATA[pos|1] = I0>>>16&255, DATA[pos|2] = I0>>>8&255, DATA[pos|3] = I0&255, DATA[pos|4] = I1>>>24, DATA[pos|5] = I1>>>16&255, DATA[pos|6] = I1>>>8&255, DATA[pos|7] = I1&255, DATA[pos|8] = I2>>>24, DATA[pos|9] = I2>>>16&255, DATA[pos|10] = I2>>>8&255, DATA[pos|11] = I2&255, DATA[pos|12] = I3>>>24, DATA[pos|13] = I3>>>16&255, DATA[pos|14] = I3>>>8&255, DATA[pos|15] = I3&255;\r\n\r\n                   return 16;\r\n               }\r\n\r\n               /**\r\n                * GCM initialization.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                */\r\n               function gcm_init ( ) {\r\n                   _ecb_enc( 0, 0, 0, 0 );\r\n                   H0 = S0, H1 = S1, H2 = S2, H3 = S3;\r\n               }\r\n\r\n               /**\r\n                * Perform ciphering operation on the supplied data.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n                * @param {int} pos - offset of the data being processed\r\n                * @param {int} len - length of the data being processed\r\n                * @return {int} Actual amount of data have been processed.\r\n                */\r\n               function cipher ( mode, pos, len ) {\r\n                   mode = mode|0;\r\n                   pos = pos|0;\r\n                   len = len|0;\r\n\r\n                   var ret = 0;\r\n\r\n                   if ( pos & 15 ) return -1;\r\n\r\n                   while ( (len|0) >= 16 ) {\r\n                       _cipher_modes[mode&7](\r\n                           DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\r\n                           DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\r\n                           DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\r\n                           DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\r\n                       );\r\n\r\n                       DATA[pos|0] = S0>>>24, DATA[pos|1] = S0>>>16&255, DATA[pos|2] = S0>>>8&255, DATA[pos|3] = S0&255, DATA[pos|4] = S1>>>24, DATA[pos|5] = S1>>>16&255, DATA[pos|6] = S1>>>8&255, DATA[pos|7] = S1&255, DATA[pos|8] = S2>>>24, DATA[pos|9] = S2>>>16&255, DATA[pos|10] = S2>>>8&255, DATA[pos|11] = S2&255, DATA[pos|12] = S3>>>24, DATA[pos|13] = S3>>>16&255, DATA[pos|14] = S3>>>8&255, DATA[pos|15] = S3&255;\r\n\r\n                       ret = (ret + 16)|0, pos = (pos + 16)|0, len = (len - 16)|0;\r\n                   }\r\n\r\n                   return ret|0;\r\n               }\r\n\r\n               /**\r\n                * Calculates MAC of the supplied data.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n                * @param {int} pos - offset of the data being processed\r\n                * @param {int} len - length of the data being processed\r\n                * @return {int} Actual amount of data have been processed.\r\n                */\r\n               function mac ( mode, pos, len ) {\r\n                   mode = mode|0;\r\n                   pos = pos|0;\r\n                   len = len|0;\r\n\r\n                   var ret = 0;\r\n\r\n                   if ( pos & 15 ) return -1;\r\n\r\n                   while ( (len|0) >= 16 ) {\r\n                       _mac_modes[mode&1](\r\n                           DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\r\n                           DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\r\n                           DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\r\n                           DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\r\n                       );\r\n\r\n                       ret = (ret + 16)|0, pos = (pos + 16)|0, len = (len - 16)|0;\r\n                   }\r\n\r\n                   return ret|0;\r\n               }\r\n\r\n               /**\r\n                * AES cipher modes table (virual methods)\r\n                */\r\n               var _cipher_modes = [ _ecb_enc, _ecb_dec, _cbc_enc, _cbc_dec, _cfb_enc, _cfb_dec, _ofb, _ctr ];\r\n\r\n               /**\r\n                * AES MAC modes table (virual methods)\r\n                */\r\n               var _mac_modes = [ _cbc_enc, _gcm_mac ];\r\n\r\n               /**\r\n                * Asm.js module exports\r\n                */\r\n               return {\r\n                   set_rounds: set_rounds,\r\n                   set_state:  set_state,\r\n                   set_iv:     set_iv,\r\n                   set_nonce:  set_nonce,\r\n                   set_mask:   set_mask,\r\n                   set_counter:set_counter,\r\n                   get_state:  get_state,\r\n                   get_iv:     get_iv,\r\n                   gcm_init:   gcm_init,\r\n                   cipher:     cipher,\r\n                   mac:        mac\r\n               };\r\n           }( stdlib, foreign, buffer );\r\n\r\n           asm.set_key = set_key;\r\n\r\n           return asm;\r\n       }", "code_tokens": ["function", "(", "foreign", ",", "buffer", ")", "{", "// Init AES stuff for the first time\r", "if", "(", "!", "aes_init_done", ")", "aes_init", "(", ")", ";", "// Fill up AES tables\r", "var", "heap", "=", "new", "Uint32Array", "(", "buffer", ")", ";", "heap", ".", "set", "(", "aes_sbox", ",", "0x0800", ">>", "2", ")", ";", "heap", ".", "set", "(", "aes_sinv", ",", "0x0c00", ">>", "2", ")", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "4", ";", "i", "++", ")", "{", "heap", ".", "set", "(", "aes_enc", "[", "i", "]", ",", "(", "0x1000", "+", "0x400", "*", "i", ")", ">>", "2", ")", ";", "heap", ".", "set", "(", "aes_dec", "[", "i", "]", ",", "(", "0x2000", "+", "0x400", "*", "i", ")", ">>", "2", ")", ";", "}", "/**\r\n            * Calculate AES key schedules.\r\n            * @instance\r\n            * @memberof AES_asm\r\n            * @param {int} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)\r\n            * @param {int} k0..k7 - key vector components\r\n            */", "function", "set_key", "(", "ks", ",", "k0", ",", "k1", ",", "k2", ",", "k3", ",", "k4", ",", "k5", ",", "k6", ",", "k7", ")", "{", "var", "ekeys", "=", "heap", ".", "subarray", "(", "0x000", ",", "60", ")", ",", "dkeys", "=", "heap", ".", "subarray", "(", "0x100", ",", "0x100", "+", "60", ")", ";", "// Encryption key schedule\r", "ekeys", ".", "set", "(", "[", "k0", ",", "k1", ",", "k2", ",", "k3", ",", "k4", ",", "k5", ",", "k6", ",", "k7", "]", ")", ";", "for", "(", "var", "i", "=", "ks", ",", "rcon", "=", "1", ";", "i", "<", "4", "*", "ks", "+", "28", ";", "i", "++", ")", "{", "var", "k", "=", "ekeys", "[", "i", "-", "1", "]", ";", "if", "(", "(", "i", "%", "ks", "===", "0", ")", "||", "(", "ks", "===", "8", "&&", "i", "%", "ks", "===", "4", ")", ")", "{", "k", "=", "aes_sbox", "[", "k", ">>>", "24", "]", "<<", "24", "^", "aes_sbox", "[", "k", ">>>", "16", "&", "255", "]", "<<", "16", "^", "aes_sbox", "[", "k", ">>>", "8", "&", "255", "]", "<<", "8", "^", "aes_sbox", "[", "k", "&", "255", "]", ";", "}", "if", "(", "i", "%", "ks", "===", "0", ")", "{", "k", "=", "(", "k", "<<", "8", ")", "^", "(", "k", ">>>", "24", ")", "^", "(", "rcon", "<<", "24", ")", ";", "rcon", "=", "(", "rcon", "<<", "1", ")", "^", "(", "(", "rcon", "&", "0x80", ")", "?", "0x1b", ":", "0", ")", ";", "}", "ekeys", "[", "i", "]", "=", "ekeys", "[", "i", "-", "ks", "]", "^", "k", ";", "}", "// Decryption key schedule\r", "for", "(", "var", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+=", "4", ")", "{", "for", "(", "var", "jj", "=", "0", ";", "jj", "<", "4", ";", "jj", "++", ")", "{", "var", "k", "=", "ekeys", "[", "i", "-", "(", "4", "+", "j", ")", "+", "(", "4", "-", "jj", ")", "%", "4", "]", ";", "if", "(", "j", "<", "4", "||", "j", ">=", "i", "-", "4", ")", "{", "dkeys", "[", "j", "+", "jj", "]", "=", "k", ";", "}", "else", "{", "dkeys", "[", "j", "+", "jj", "]", "=", "aes_dec", "[", "0", "]", "[", "aes_sbox", "[", "k", ">>>", "24", "]", "]", "^", "aes_dec", "[", "1", "]", "[", "aes_sbox", "[", "k", ">>>", "16", "&", "255", "]", "]", "^", "aes_dec", "[", "2", "]", "[", "aes_sbox", "[", "k", ">>>", "8", "&", "255", "]", "]", "^", "aes_dec", "[", "3", "]", "[", "aes_sbox", "[", "k", "&", "255", "]", "]", ";", "}", "}", "}", "// Set rounds number\r", "asm", ".", "set_rounds", "(", "ks", "+", "5", ")", ";", "}", "// create library object with necessary properties\r", "var", "stdlib", "=", "{", "Uint8Array", ":", "Uint8Array", ",", "Uint32Array", ":", "Uint32Array", "}", ";", "var", "asm", "=", "function", "(", "stdlib", ",", "foreign", ",", "buffer", ")", "{", "var", "S0", "=", "0", ",", "S1", "=", "0", ",", "S2", "=", "0", ",", "S3", "=", "0", ",", "I0", "=", "0", ",", "I1", "=", "0", ",", "I2", "=", "0", ",", "I3", "=", "0", ",", "N0", "=", "0", ",", "N1", "=", "0", ",", "N2", "=", "0", ",", "N3", "=", "0", ",", "M0", "=", "0", ",", "M1", "=", "0", ",", "M2", "=", "0", ",", "M3", "=", "0", ",", "H0", "=", "0", ",", "H1", "=", "0", ",", "H2", "=", "0", ",", "H3", "=", "0", ",", "R", "=", "0", ";", "var", "HEAP", "=", "new", "stdlib", ".", "Uint32Array", "(", "buffer", ")", ",", "DATA", "=", "new", "stdlib", ".", "Uint8Array", "(", "buffer", ")", ";", "/**\r\n                * AES core\r\n                * @param {int} k - precomputed key schedule offset\r\n                * @param {int} s - precomputed sbox table offset\r\n                * @param {int} t - precomputed round table offset\r\n                * @param {int} r - number of inner rounds to perform\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_core", "(", "k", ",", "s", ",", "t", ",", "r", ",", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "k", "=", "k", "|", "0", ";", "s", "=", "s", "|", "0", ";", "t", "=", "t", "|", "0", ";", "r", "=", "r", "|", "0", ";", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "var", "t1", "=", "0", ",", "t2", "=", "0", ",", "t3", "=", "0", ",", "y0", "=", "0", ",", "y1", "=", "0", ",", "y2", "=", "0", ",", "y3", "=", "0", ",", "i", "=", "0", ";", "t1", "=", "t", "|", "0x400", ",", "t2", "=", "t", "|", "0x800", ",", "t3", "=", "t", "|", "0xc00", ";", "// round 0\r", "x0", "=", "x0", "^", "HEAP", "[", "(", "k", "|", "0", ")", ">>", "2", "]", ",", "x1", "=", "x1", "^", "HEAP", "[", "(", "k", "|", "4", ")", ">>", "2", "]", ",", "x2", "=", "x2", "^", "HEAP", "[", "(", "k", "|", "8", ")", ">>", "2", "]", ",", "x3", "=", "x3", "^", "HEAP", "[", "(", "k", "|", "12", ")", ">>", "2", "]", ";", "// round 1..r\r", "for", "(", "i", "=", "16", ";", "(", "i", "|", "0", ")", "<=", "(", "r", "<<", "4", ")", ";", "i", "=", "(", "i", "+", "16", ")", "|", "0", ")", "{", "y0", "=", "HEAP", "[", "(", "t", "|", "x0", ">>", "22", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t1", "|", "x1", ">>", "14", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t2", "|", "x2", ">>", "6", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t3", "|", "x3", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "0", ")", ">>", "2", "]", ",", "y1", "=", "HEAP", "[", "(", "t", "|", "x1", ">>", "22", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t1", "|", "x2", ">>", "14", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t2", "|", "x3", ">>", "6", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t3", "|", "x0", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "4", ")", ">>", "2", "]", ",", "y2", "=", "HEAP", "[", "(", "t", "|", "x2", ">>", "22", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t1", "|", "x3", ">>", "14", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t2", "|", "x0", ">>", "6", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t3", "|", "x1", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "8", ")", ">>", "2", "]", ",", "y3", "=", "HEAP", "[", "(", "t", "|", "x3", ">>", "22", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t1", "|", "x0", ">>", "14", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t2", "|", "x1", ">>", "6", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "t3", "|", "x2", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "12", ")", ">>", "2", "]", ";", "x0", "=", "y0", ",", "x1", "=", "y1", ",", "x2", "=", "y2", ",", "x3", "=", "y3", ";", "}", "// final round\r", "S0", "=", "HEAP", "[", "(", "s", "|", "x0", ">>", "22", "&", "1020", ")", ">>", "2", "]", "<<", "24", "^", "HEAP", "[", "(", "s", "|", "x1", ">>", "14", "&", "1020", ")", ">>", "2", "]", "<<", "16", "^", "HEAP", "[", "(", "s", "|", "x2", ">>", "6", "&", "1020", ")", ">>", "2", "]", "<<", "8", "^", "HEAP", "[", "(", "s", "|", "x3", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "0", ")", ">>", "2", "]", ",", "S1", "=", "HEAP", "[", "(", "s", "|", "x1", ">>", "22", "&", "1020", ")", ">>", "2", "]", "<<", "24", "^", "HEAP", "[", "(", "s", "|", "x2", ">>", "14", "&", "1020", ")", ">>", "2", "]", "<<", "16", "^", "HEAP", "[", "(", "s", "|", "x3", ">>", "6", "&", "1020", ")", ">>", "2", "]", "<<", "8", "^", "HEAP", "[", "(", "s", "|", "x0", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "4", ")", ">>", "2", "]", ",", "S2", "=", "HEAP", "[", "(", "s", "|", "x2", ">>", "22", "&", "1020", ")", ">>", "2", "]", "<<", "24", "^", "HEAP", "[", "(", "s", "|", "x3", ">>", "14", "&", "1020", ")", ">>", "2", "]", "<<", "16", "^", "HEAP", "[", "(", "s", "|", "x0", ">>", "6", "&", "1020", ")", ">>", "2", "]", "<<", "8", "^", "HEAP", "[", "(", "s", "|", "x1", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "8", ")", ">>", "2", "]", ",", "S3", "=", "HEAP", "[", "(", "s", "|", "x3", ">>", "22", "&", "1020", ")", ">>", "2", "]", "<<", "24", "^", "HEAP", "[", "(", "s", "|", "x0", ">>", "14", "&", "1020", ")", ">>", "2", "]", "<<", "16", "^", "HEAP", "[", "(", "s", "|", "x1", ">>", "6", "&", "1020", ")", ">>", "2", "]", "<<", "8", "^", "HEAP", "[", "(", "s", "|", "x2", "<<", "2", "&", "1020", ")", ">>", "2", "]", "^", "HEAP", "[", "(", "k", "|", "i", "|", "12", ")", ">>", "2", "]", ";", "}", "/**\r\n                * ECB mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_ecb_enc", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "x0", ",", "x1", ",", "x2", ",", "x3", ")", ";", "}", "/**\r\n                * ECB mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_ecb_dec", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "var", "t", "=", "0", ";", "_core", "(", "0x0400", ",", "0x0c00", ",", "0x2000", ",", "R", ",", "x0", ",", "x3", ",", "x2", ",", "x1", ")", ";", "t", "=", "S1", ",", "S1", "=", "S3", ",", "S3", "=", "t", ";", "}", "/**\r\n                * CBC mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_cbc_enc", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "I0", "^", "x0", ",", "I1", "^", "x1", ",", "I2", "^", "x2", ",", "I3", "^", "x3", ")", ";", "I0", "=", "S0", ",", "I1", "=", "S1", ",", "I2", "=", "S2", ",", "I3", "=", "S3", ";", "}", "/**\r\n                * CBC mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_cbc_dec", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "var", "t", "=", "0", ";", "_core", "(", "0x0400", ",", "0x0c00", ",", "0x2000", ",", "R", ",", "x0", ",", "x3", ",", "x2", ",", "x1", ")", ";", "t", "=", "S1", ",", "S1", "=", "S3", ",", "S3", "=", "t", ";", "S0", "=", "S0", "^", "I0", ",", "S1", "=", "S1", "^", "I1", ",", "S2", "=", "S2", "^", "I2", ",", "S3", "=", "S3", "^", "I3", ";", "I0", "=", "x0", ",", "I1", "=", "x1", ",", "I2", "=", "x2", ",", "I3", "=", "x3", ";", "}", "/**\r\n                * CFB mode encryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_cfb_enc", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "I0", ",", "I1", ",", "I2", ",", "I3", ")", ";", "I0", "=", "S0", "=", "S0", "^", "x0", ",", "I1", "=", "S1", "=", "S1", "^", "x1", ",", "I2", "=", "S2", "=", "S2", "^", "x2", ",", "I3", "=", "S3", "=", "S3", "^", "x3", ";", "}", "/**\r\n                * CFB mode decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_cfb_dec", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "I0", ",", "I1", ",", "I2", ",", "I3", ")", ";", "S0", "=", "S0", "^", "x0", ",", "S1", "=", "S1", "^", "x1", ",", "S2", "=", "S2", "^", "x2", ",", "S3", "=", "S3", "^", "x3", ";", "I0", "=", "x0", ",", "I1", "=", "x1", ",", "I2", "=", "x2", ",", "I3", "=", "x3", ";", "}", "/**\r\n                * OFB mode encryption / decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_ofb", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "I0", ",", "I1", ",", "I2", ",", "I3", ")", ";", "I0", "=", "S0", ",", "I1", "=", "S1", ",", "I2", "=", "S2", ",", "I3", "=", "S3", ";", "S0", "=", "S0", "^", "x0", ",", "S1", "=", "S1", "^", "x1", ",", "S2", "=", "S2", "^", "x2", ",", "S3", "=", "S3", "^", "x3", ";", "}", "/**\r\n                * CTR mode encryption / decryption\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_ctr", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "_core", "(", "0x0000", ",", "0x0800", ",", "0x1000", ",", "R", ",", "N0", ",", "N1", ",", "N2", ",", "N3", ")", ";", "N3", "=", "(", "~", "M3", "&", "N3", ")", "|", "M3", "&", "(", "N3", "+", "1", ")", ",", "N2", "=", "(", "~", "M2", "&", "N2", ")", "|", "M2", "&", "(", "N2", "+", "(", "(", "N3", "|", "0", ")", "==", "0", ")", ")", ",", "N1", "=", "(", "~", "M1", "&", "N1", ")", "|", "M1", "&", "(", "N1", "+", "(", "(", "N2", "|", "0", ")", "==", "0", ")", ")", ",", "N0", "=", "(", "~", "M0", "&", "N0", ")", "|", "M0", "&", "(", "N0", "+", "(", "(", "N1", "|", "0", ")", "==", "0", ")", ")", ";", "S0", "=", "S0", "^", "x0", ",", "S1", "=", "S1", "^", "x1", ",", "S2", "=", "S2", "^", "x2", ",", "S3", "=", "S3", "^", "x3", ";", "}", "/**\r\n                * GCM mode MAC calculation\r\n                * @param {int} x0..x3 - 128-bit input block vector\r\n                */", "function", "_gcm_mac", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", "{", "x0", "=", "x0", "|", "0", ";", "x1", "=", "x1", "|", "0", ";", "x2", "=", "x2", "|", "0", ";", "x3", "=", "x3", "|", "0", ";", "var", "y0", "=", "0", ",", "y1", "=", "0", ",", "y2", "=", "0", ",", "y3", "=", "0", ",", "z0", "=", "0", ",", "z1", "=", "0", ",", "z2", "=", "0", ",", "z3", "=", "0", ",", "i", "=", "0", ",", "c", "=", "0", ";", "x0", "=", "x0", "^", "I0", ",", "x1", "=", "x1", "^", "I1", ",", "x2", "=", "x2", "^", "I2", ",", "x3", "=", "x3", "^", "I3", ";", "y0", "=", "H0", "|", "0", ",", "y1", "=", "H1", "|", "0", ",", "y2", "=", "H2", "|", "0", ",", "y3", "=", "H3", "|", "0", ";", "for", "(", ";", "(", "i", "|", "0", ")", "<", "128", ";", "i", "=", "(", "i", "+", "1", ")", "|", "0", ")", "{", "if", "(", "y0", ">>>", "31", ")", "{", "z0", "=", "z0", "^", "x0", ",", "z1", "=", "z1", "^", "x1", ",", "z2", "=", "z2", "^", "x2", ",", "z3", "=", "z3", "^", "x3", ";", "}", "y0", "=", "(", "y0", "<<", "1", ")", "|", "(", "y1", ">>>", "31", ")", ",", "y1", "=", "(", "y1", "<<", "1", ")", "|", "(", "y2", ">>>", "31", ")", ",", "y2", "=", "(", "y2", "<<", "1", ")", "|", "(", "y3", ">>>", "31", ")", ",", "y3", "=", "(", "y3", "<<", "1", ")", ";", "c", "=", "x3", "&", "1", ";", "x3", "=", "(", "x3", ">>>", "1", ")", "|", "(", "x2", "<<", "31", ")", ",", "x2", "=", "(", "x2", ">>>", "1", ")", "|", "(", "x1", "<<", "31", ")", ",", "x1", "=", "(", "x1", ">>>", "1", ")", "|", "(", "x0", "<<", "31", ")", ",", "x0", "=", "(", "x0", ">>>", "1", ")", ";", "if", "(", "c", ")", "x0", "=", "x0", "^", "0xe1000000", ";", "}", "I0", "=", "z0", ",", "I1", "=", "z1", ",", "I2", "=", "z2", ",", "I3", "=", "z3", ";", "}", "/**\r\n                * Set the internal rounds number.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} r - number if inner AES rounds\r\n                */", "function", "set_rounds", "(", "r", ")", "{", "r", "=", "r", "|", "0", ";", "R", "=", "r", ";", "}", "/**\r\n                * Populate the internal state of the module.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} s0...s3 - state vector\r\n                */", "function", "set_state", "(", "s0", ",", "s1", ",", "s2", ",", "s3", ")", "{", "s0", "=", "s0", "|", "0", ";", "s1", "=", "s1", "|", "0", ";", "s2", "=", "s2", "|", "0", ";", "s3", "=", "s3", "|", "0", ";", "S0", "=", "s0", ",", "S1", "=", "s1", ",", "S2", "=", "s2", ",", "S3", "=", "s3", ";", "}", "/**\r\n                * Populate the internal iv of the module.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} i0...i3 - iv vector\r\n                */", "function", "set_iv", "(", "i0", ",", "i1", ",", "i2", ",", "i3", ")", "{", "i0", "=", "i0", "|", "0", ";", "i1", "=", "i1", "|", "0", ";", "i2", "=", "i2", "|", "0", ";", "i3", "=", "i3", "|", "0", ";", "I0", "=", "i0", ",", "I1", "=", "i1", ",", "I2", "=", "i2", ",", "I3", "=", "i3", ";", "}", "/**\r\n                * Set nonce for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} n0..n3 - nonce vector\r\n                */", "function", "set_nonce", "(", "n0", ",", "n1", ",", "n2", ",", "n3", ")", "{", "n0", "=", "n0", "|", "0", ";", "n1", "=", "n1", "|", "0", ";", "n2", "=", "n2", "|", "0", ";", "n3", "=", "n3", "|", "0", ";", "N0", "=", "n0", ",", "N1", "=", "n1", ",", "N2", "=", "n2", ",", "N3", "=", "n3", ";", "}", "/**\r\n                * Set counter mask for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} m0...m3 - counter mask vector\r\n                */", "function", "set_mask", "(", "m0", ",", "m1", ",", "m2", ",", "m3", ")", "{", "m0", "=", "m0", "|", "0", ";", "m1", "=", "m1", "|", "0", ";", "m2", "=", "m2", "|", "0", ";", "m3", "=", "m3", "|", "0", ";", "M0", "=", "m0", ",", "M1", "=", "m1", ",", "M2", "=", "m2", ",", "M3", "=", "m3", ";", "}", "/**\r\n                * Set counter for CTR-family modes.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} c0...c3 - counter vector\r\n                */", "function", "set_counter", "(", "c0", ",", "c1", ",", "c2", ",", "c3", ")", "{", "c0", "=", "c0", "|", "0", ";", "c1", "=", "c1", "|", "0", ";", "c2", "=", "c2", "|", "0", ";", "c3", "=", "c3", "|", "0", ";", "N3", "=", "(", "~", "M3", "&", "N3", ")", "|", "M3", "&", "c3", ",", "N2", "=", "(", "~", "M2", "&", "N2", ")", "|", "M2", "&", "c2", ",", "N1", "=", "(", "~", "M1", "&", "N1", ")", "|", "M1", "&", "c1", ",", "N0", "=", "(", "~", "M0", "&", "N0", ")", "|", "M0", "&", "c0", ";", "}", "/**\r\n                * Store the internal state vector into the heap.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} pos - offset where to put the data\r\n                * @return {int} The number of bytes have been written into the heap, always 16.\r\n                */", "function", "get_state", "(", "pos", ")", "{", "pos", "=", "pos", "|", "0", ";", "if", "(", "pos", "&", "15", ")", "return", "-", "1", ";", "DATA", "[", "pos", "|", "0", "]", "=", "S0", ">>>", "24", ",", "DATA", "[", "pos", "|", "1", "]", "=", "S0", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "2", "]", "=", "S0", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "3", "]", "=", "S0", "&", "255", ",", "DATA", "[", "pos", "|", "4", "]", "=", "S1", ">>>", "24", ",", "DATA", "[", "pos", "|", "5", "]", "=", "S1", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "6", "]", "=", "S1", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "7", "]", "=", "S1", "&", "255", ",", "DATA", "[", "pos", "|", "8", "]", "=", "S2", ">>>", "24", ",", "DATA", "[", "pos", "|", "9", "]", "=", "S2", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "10", "]", "=", "S2", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "11", "]", "=", "S2", "&", "255", ",", "DATA", "[", "pos", "|", "12", "]", "=", "S3", ">>>", "24", ",", "DATA", "[", "pos", "|", "13", "]", "=", "S3", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "14", "]", "=", "S3", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "15", "]", "=", "S3", "&", "255", ";", "return", "16", ";", "}", "/**\r\n                * Store the internal iv vector into the heap.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} pos - offset where to put the data\r\n                * @return {int} The number of bytes have been written into the heap, always 16.\r\n                */", "function", "get_iv", "(", "pos", ")", "{", "pos", "=", "pos", "|", "0", ";", "if", "(", "pos", "&", "15", ")", "return", "-", "1", ";", "DATA", "[", "pos", "|", "0", "]", "=", "I0", ">>>", "24", ",", "DATA", "[", "pos", "|", "1", "]", "=", "I0", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "2", "]", "=", "I0", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "3", "]", "=", "I0", "&", "255", ",", "DATA", "[", "pos", "|", "4", "]", "=", "I1", ">>>", "24", ",", "DATA", "[", "pos", "|", "5", "]", "=", "I1", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "6", "]", "=", "I1", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "7", "]", "=", "I1", "&", "255", ",", "DATA", "[", "pos", "|", "8", "]", "=", "I2", ">>>", "24", ",", "DATA", "[", "pos", "|", "9", "]", "=", "I2", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "10", "]", "=", "I2", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "11", "]", "=", "I2", "&", "255", ",", "DATA", "[", "pos", "|", "12", "]", "=", "I3", ">>>", "24", ",", "DATA", "[", "pos", "|", "13", "]", "=", "I3", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "14", "]", "=", "I3", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "15", "]", "=", "I3", "&", "255", ";", "return", "16", ";", "}", "/**\r\n                * GCM initialization.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                */", "function", "gcm_init", "(", ")", "{", "_ecb_enc", "(", "0", ",", "0", ",", "0", ",", "0", ")", ";", "H0", "=", "S0", ",", "H1", "=", "S1", ",", "H2", "=", "S2", ",", "H3", "=", "S3", ";", "}", "/**\r\n                * Perform ciphering operation on the supplied data.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n                * @param {int} pos - offset of the data being processed\r\n                * @param {int} len - length of the data being processed\r\n                * @return {int} Actual amount of data have been processed.\r\n                */", "function", "cipher", "(", "mode", ",", "pos", ",", "len", ")", "{", "mode", "=", "mode", "|", "0", ";", "pos", "=", "pos", "|", "0", ";", "len", "=", "len", "|", "0", ";", "var", "ret", "=", "0", ";", "if", "(", "pos", "&", "15", ")", "return", "-", "1", ";", "while", "(", "(", "len", "|", "0", ")", ">=", "16", ")", "{", "_cipher_modes", "[", "mode", "&", "7", "]", "(", "DATA", "[", "pos", "|", "0", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "1", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "2", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "3", "]", ",", "DATA", "[", "pos", "|", "4", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "5", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "6", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "7", "]", ",", "DATA", "[", "pos", "|", "8", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "9", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "10", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "11", "]", ",", "DATA", "[", "pos", "|", "12", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "13", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "14", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "15", "]", ")", ";", "DATA", "[", "pos", "|", "0", "]", "=", "S0", ">>>", "24", ",", "DATA", "[", "pos", "|", "1", "]", "=", "S0", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "2", "]", "=", "S0", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "3", "]", "=", "S0", "&", "255", ",", "DATA", "[", "pos", "|", "4", "]", "=", "S1", ">>>", "24", ",", "DATA", "[", "pos", "|", "5", "]", "=", "S1", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "6", "]", "=", "S1", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "7", "]", "=", "S1", "&", "255", ",", "DATA", "[", "pos", "|", "8", "]", "=", "S2", ">>>", "24", ",", "DATA", "[", "pos", "|", "9", "]", "=", "S2", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "10", "]", "=", "S2", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "11", "]", "=", "S2", "&", "255", ",", "DATA", "[", "pos", "|", "12", "]", "=", "S3", ">>>", "24", ",", "DATA", "[", "pos", "|", "13", "]", "=", "S3", ">>>", "16", "&", "255", ",", "DATA", "[", "pos", "|", "14", "]", "=", "S3", ">>>", "8", "&", "255", ",", "DATA", "[", "pos", "|", "15", "]", "=", "S3", "&", "255", ";", "ret", "=", "(", "ret", "+", "16", ")", "|", "0", ",", "pos", "=", "(", "pos", "+", "16", ")", "|", "0", ",", "len", "=", "(", "len", "-", "16", ")", "|", "0", ";", "}", "return", "ret", "|", "0", ";", "}", "/**\r\n                * Calculates MAC of the supplied data.\r\n                * @instance\r\n                * @memberof AES_asm\r\n                * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\r\n                * @param {int} pos - offset of the data being processed\r\n                * @param {int} len - length of the data being processed\r\n                * @return {int} Actual amount of data have been processed.\r\n                */", "function", "mac", "(", "mode", ",", "pos", ",", "len", ")", "{", "mode", "=", "mode", "|", "0", ";", "pos", "=", "pos", "|", "0", ";", "len", "=", "len", "|", "0", ";", "var", "ret", "=", "0", ";", "if", "(", "pos", "&", "15", ")", "return", "-", "1", ";", "while", "(", "(", "len", "|", "0", ")", ">=", "16", ")", "{", "_mac_modes", "[", "mode", "&", "1", "]", "(", "DATA", "[", "pos", "|", "0", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "1", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "2", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "3", "]", ",", "DATA", "[", "pos", "|", "4", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "5", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "6", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "7", "]", ",", "DATA", "[", "pos", "|", "8", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "9", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "10", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "11", "]", ",", "DATA", "[", "pos", "|", "12", "]", "<<", "24", "|", "DATA", "[", "pos", "|", "13", "]", "<<", "16", "|", "DATA", "[", "pos", "|", "14", "]", "<<", "8", "|", "DATA", "[", "pos", "|", "15", "]", ")", ";", "ret", "=", "(", "ret", "+", "16", ")", "|", "0", ",", "pos", "=", "(", "pos", "+", "16", ")", "|", "0", ",", "len", "=", "(", "len", "-", "16", ")", "|", "0", ";", "}", "return", "ret", "|", "0", ";", "}", "/**\r\n                * AES cipher modes table (virual methods)\r\n                */", "var", "_cipher_modes", "=", "[", "_ecb_enc", ",", "_ecb_dec", ",", "_cbc_enc", ",", "_cbc_dec", ",", "_cfb_enc", ",", "_cfb_dec", ",", "_ofb", ",", "_ctr", "]", ";", "/**\r\n                * AES MAC modes table (virual methods)\r\n                */", "var", "_mac_modes", "=", "[", "_cbc_enc", ",", "_gcm_mac", "]", ";", "/**\r\n                * Asm.js module exports\r\n                */", "return", "{", "set_rounds", ":", "set_rounds", ",", "set_state", ":", "set_state", ",", "set_iv", ":", "set_iv", ",", "set_nonce", ":", "set_nonce", ",", "set_mask", ":", "set_mask", ",", "set_counter", ":", "set_counter", ",", "get_state", ":", "get_state", ",", "get_iv", ":", "get_iv", ",", "gcm_init", ":", "gcm_init", ",", "cipher", ":", "cipher", ",", "mac", ":", "mac", "}", ";", "}", "(", "stdlib", ",", "foreign", ",", "buffer", ")", ";", "asm", ".", "set_key", "=", "set_key", ";", "return", "asm", ";", "}"], "original_docstring": "\nAsm.js module constructor.\n\n<p>\nHeap buffer layout by offset:\n<pre>\n0x0000   encryption key schedule\n0x0400   decryption key schedule\n0x0800   sbox\n0x0c00   inv sbox\n0x1000   encryption tables\n0x2000   decryption tables\n0x3000   reserved (future GCM multiplication lookup table)\n0x4000   data\n</pre>\nDon't touch anything before <code>0x400</code>.\n</p>\n\n@alias AES_asm\n@class\n@param {Object} foreign - <i>ignored</i>\n@param {ArrayBuffer} buffer - heap buffer to link with\n", "docstring": {"block_comment": "Asm.js module constructor. \nHeap buffer layout by offset  \n0x0000   encryption key schedule \n0x0400   decryption key schedule \n0x0800   sbox \n0x0c00   inv sbox \n0x1000   encryption tables \n0x2000   decryption tables \n0x3000   reserved  future GCM multiplication lookup table  \n0x4000   data \nDon t touch anything before 0x400.", "line_comment": ["Init AES stuff for the first time", "Fill up AES tables", "Calculate AES key schedules. \n instance \n memberof AES_asm \n param  int  ks   key size, 4 6 8  for 128 192 256 bit key correspondingly  \n param  int  k0..k7   key vector components", "Encryption key schedule", "Decryption key schedule", "Set rounds number", "create library object with necessary properties", "AES core \n param  int  k   precomputed key schedule offset \n param  int  s   precomputed sbox table offset \n param  int  t   precomputed round table offset \n param  int  r   number of inner rounds to perform \n param  int  x0..x3   128 bit input block vector", "round 0", "round 1..r", "final round", "ECB mode encryption \n param  int  x0..x3   128 bit input block vector", "ECB mode decryption \n param  int  x0..x3   128 bit input block vector", "CBC mode encryption \n param  int  x0..x3   128 bit input block vector", "CBC mode decryption \n param  int  x0..x3   128 bit input block vector", "CFB mode encryption \n param  int  x0..x3   128 bit input block vector", "CFB mode decryption \n param  int  x0..x3   128 bit input block vector", "OFB mode encryption   decryption \n param  int  x0..x3   128 bit input block vector", "CTR mode encryption   decryption \n param  int  x0..x3   128 bit input block vector", "GCM mode MAC calculation \n param  int  x0..x3   128 bit input block vector", "Set the internal rounds number. \n instance \n memberof AES_asm \n param  int  r   number if inner AES rounds", "Populate the internal state of the module. \n instance \n memberof AES_asm \n param  int  s0...s3   state vector", "Populate the internal iv of the module. \n instance \n memberof AES_asm \n param  int  i0...i3   iv vector", "Set nonce for CTR family modes. \n instance \n memberof AES_asm \n param  int  n0..n3   nonce vector", "Set counter mask for CTR family modes. \n instance \n memberof AES_asm \n param  int  m0...m3   counter mask vector", "Set counter for CTR family modes. \n instance \n memberof AES_asm \n param  int  c0...c3   counter vector", "Store the internal state vector into the heap. \n instance \n memberof AES_asm \n param  int  pos   offset where to put the data \n return  int  The number of bytes have been written into the heap, always 16.", "Store the internal iv vector into the heap. \n instance \n memberof AES_asm \n param  int  pos   offset where to put the data \n return  int  The number of bytes have been written into the heap, always 16.", "GCM initialization. \n instance \n memberof AES_asm", "Perform ciphering operation on the supplied data. \n instance \n memberof AES_asm \n param  int  mode   block cipher mode  see   link AES_asm  mode constants  \n param  int  pos   offset of the data being processed \n param  int  len   length of the data being processed \n return  int  Actual amount of data have been processed.", "Calculates MAC of the supplied data. \n instance \n memberof AES_asm \n param  int  mode   block cipher mode  see   link AES_asm  mode constants  \n param  int  pos   offset of the data being processed \n param  int  len   length of the data being processed \n return  int  Actual amount of data have been processed.", "AES cipher modes table  virual methods ", "AES MAC modes table  virual methods ", "Asm.js module exports"]}, "docstring_tokens": ["-", "heap", "buffer", "to", "link", "with"], "sample_id": 464, "prompt_tokens": ["<javascript>", "<param>", "buffer"], "comment_type": "param", "sentence_id": 1}
{"id": "21004328", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function(model) {\n      return this.onFilterChange('');\n    }", "code_tokens": ["function", "(", "model", ")", "{", "return", "this", ".", "onFilterChange", "(", "''", ")", ";", "}"], "original_docstring": "\nManagement of selected items\n", "docstring": {"block_comment": "Management of selected items", "line_comment": null}, "docstring_tokens": ["Management", "of", "selected", "items"], "sample_id": 465, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004329", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function(text) {\n      if (this.get('configuration').search.serverSide === true) {\n        this.requestPage(0, text)\n      }\n      this.get('model').filterBy(text);\n    }", "code_tokens": ["function", "(", "text", ")", "{", "if", "(", "this", ".", "get", "(", "'configuration'", ")", ".", "search", ".", "serverSide", "===", "true", ")", "{", "this", ".", "requestPage", "(", "0", ",", "text", ")", "}", "this", ".", "get", "(", "'model'", ")", ".", "filterBy", "(", "text", ")", ";", "}"], "original_docstring": "\nReact to the user typing in the search box\n@method onFilterChange\n@param {String} text the new search pattern\n@for Manager\n", "docstring": {"block_comment": "React to the user typing in the search box", "line_comment": null}, "docstring_tokens": ["React", "to", "the", "user", "typing", "in", "the", "search", "box"], "sample_id": 466, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004329", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function(text) {\n      if (this.get('configuration').search.serverSide === true) {\n        this.requestPage(0, text)\n      }\n      this.get('model').filterBy(text);\n    }", "code_tokens": ["function", "(", "text", ")", "{", "if", "(", "this", ".", "get", "(", "'configuration'", ")", ".", "search", ".", "serverSide", "===", "true", ")", "{", "this", ".", "requestPage", "(", "0", ",", "text", ")", "}", "this", ".", "get", "(", "'model'", ")", ".", "filterBy", "(", "text", ")", ";", "}"], "original_docstring": "\nReact to the user typing in the search box\n@method onFilterChange\n@param {String} text the new search pattern\n@for Manager\n", "docstring": {"block_comment": "React to the user typing in the search box", "line_comment": null}, "docstring_tokens": ["the", "new", "search", "pattern"], "sample_id": 466, "prompt_tokens": ["<javascript>", "<param>", "text"], "comment_type": "param", "sentence_id": 1}
{"id": "21004330", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function() {\n      var $nursery;\n      if (!this.children()) {\n        return this;\n      }\n\n      $nursery = this.get('view').getChildrenContainer();\n      $nursery.hide();\n      this._appendChildren(this.sortChildren(this._detachChildren()));\n      $nursery.show();\n\n      return this;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "$nursery", ";", "if", "(", "!", "this", ".", "children", "(", ")", ")", "{", "return", "this", ";", "}", "$nursery", "=", "this", ".", "get", "(", "'view'", ")", ".", "getChildrenContainer", "(", ")", ";", "$nursery", ".", "hide", "(", ")", ";", "this", ".", "_appendChildren", "(", "this", ".", "sortChildren", "(", "this", ".", "_detachChildren", "(", ")", ")", ")", ";", "$nursery", ".", "show", "(", ")", ";", "return", "this", ";", "}"], "original_docstring": "\nRenders an array of sorted children.\n\n@method renderSortedChildren\n@chainable\n", "docstring": {"block_comment": "Renders an array of sorted children.", "line_comment": null}, "docstring_tokens": ["Renders", "an", "array", "of", "sorted", "children", "."], "sample_id": 467, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004331", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function(children) {\n      var customSorters = this.getSorters();\n      if (_.isEmpty(customSorters)) {\n        return children;\n      }\n\n      var sorterIdx = customSorters.length;\n      var configuration = this.get('configuration');\n      var orderedChildren = _.chain(children);\n\n      // apply sorters in reverse order, from least to most important sorter\n      while(sorterIdx--) {\n        orderedChildren = orderedChildren.sortBy(function(child, idx) {\n          return customSorters[sorterIdx](null, child.item.get('model'), configuration);\n        });\n      }\n      return orderedChildren.value();\n    }", "code_tokens": ["function", "(", "children", ")", "{", "var", "customSorters", "=", "this", ".", "getSorters", "(", ")", ";", "if", "(", "_", ".", "isEmpty", "(", "customSorters", ")", ")", "{", "return", "children", ";", "}", "var", "sorterIdx", "=", "customSorters", ".", "length", ";", "var", "configuration", "=", "this", ".", "get", "(", "'configuration'", ")", ";", "var", "orderedChildren", "=", "_", ".", "chain", "(", "children", ")", ";", "// apply sorters in reverse order, from least to most important sorter", "while", "(", "sorterIdx", "--", ")", "{", "orderedChildren", "=", "orderedChildren", ".", "sortBy", "(", "function", "(", "child", ",", "idx", ")", "{", "return", "customSorters", "[", "sorterIdx", "]", "(", "null", ",", "child", ".", "item", ".", "get", "(", "'model'", ")", ",", "configuration", ")", ";", "}", ")", ";", "}", "return", "orderedChildren", ".", "value", "(", ")", ";", "}"], "original_docstring": "\nSorts a collection according to one or more custom sorter functions.\nThis function uses underscore's sortBy function. In order to\nsupport multiple sorter functions we need to apply them in reverse order,\nstarting with the least significant and ending with the most significant.\nThe most significant should be placed at the beginning of the custom sorter\nfunctions array.\n\n@method sortChildren\n@param {Array} children the array to be sorted\n@return {Array} the sorted array\n", "docstring": {"block_comment": "Sorts a collection according to one or more custom sorter functions. \nThis function uses underscore s sortBy function. In order to \nsupport multiple sorter functions we need to apply them in reverse order, \nstarting with the least significant and ending with the most significant. \nThe most significant should be placed at the beginning of the custom sorter \nfunctions array.", "line_comment": ["apply sorters in reverse order, from least to most important sorter"]}, "docstring_tokens": ["Sorts", "a", "collection", "according", "to", "one", "or", "more", "custom", "sorter", "functions", ".", "This", "function", "uses", "underscore", "s", "sortBy", "function", ".", "In", "order", "to", "support", "multiple", "sorter", "functions", "we", "need", "to", "apply", "them", "in", "reverse", "order", "starting", "with", "the", "least", "significant", "and", "ending", "with", "the", "most", "significant", ".", "The", "most", "significant", "should", "be", "placed", "at", "the", "beginning", "of", "the", "custom", "sorter", "functions", "array", "."], "sample_id": 468, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004331", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function(children) {\n      var customSorters = this.getSorters();\n      if (_.isEmpty(customSorters)) {\n        return children;\n      }\n\n      var sorterIdx = customSorters.length;\n      var configuration = this.get('configuration');\n      var orderedChildren = _.chain(children);\n\n      // apply sorters in reverse order, from least to most important sorter\n      while(sorterIdx--) {\n        orderedChildren = orderedChildren.sortBy(function(child, idx) {\n          return customSorters[sorterIdx](null, child.item.get('model'), configuration);\n        });\n      }\n      return orderedChildren.value();\n    }", "code_tokens": ["function", "(", "children", ")", "{", "var", "customSorters", "=", "this", ".", "getSorters", "(", ")", ";", "if", "(", "_", ".", "isEmpty", "(", "customSorters", ")", ")", "{", "return", "children", ";", "}", "var", "sorterIdx", "=", "customSorters", ".", "length", ";", "var", "configuration", "=", "this", ".", "get", "(", "'configuration'", ")", ";", "var", "orderedChildren", "=", "_", ".", "chain", "(", "children", ")", ";", "// apply sorters in reverse order, from least to most important sorter", "while", "(", "sorterIdx", "--", ")", "{", "orderedChildren", "=", "orderedChildren", ".", "sortBy", "(", "function", "(", "child", ",", "idx", ")", "{", "return", "customSorters", "[", "sorterIdx", "]", "(", "null", ",", "child", ".", "item", ".", "get", "(", "'model'", ")", ",", "configuration", ")", ";", "}", ")", ";", "}", "return", "orderedChildren", ".", "value", "(", ")", ";", "}"], "original_docstring": "\nSorts a collection according to one or more custom sorter functions.\nThis function uses underscore's sortBy function. In order to\nsupport multiple sorter functions we need to apply them in reverse order,\nstarting with the least significant and ending with the most significant.\nThe most significant should be placed at the beginning of the custom sorter\nfunctions array.\n\n@method sortChildren\n@param {Array} children the array to be sorted\n@return {Array} the sorted array\n", "docstring": {"block_comment": "Sorts a collection according to one or more custom sorter functions. \nThis function uses underscore s sortBy function. In order to \nsupport multiple sorter functions we need to apply them in reverse order, \nstarting with the least significant and ending with the most significant. \nThe most significant should be placed at the beginning of the custom sorter \nfunctions array.", "line_comment": ["apply sorters in reverse order, from least to most important sorter"]}, "docstring_tokens": ["the", "array", "to", "be", "sorted"], "sample_id": 468, "prompt_tokens": ["<javascript>", "<param>", "children"], "comment_type": "param", "sentence_id": 1}
{"id": "21004331", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function(children) {\n      var customSorters = this.getSorters();\n      if (_.isEmpty(customSorters)) {\n        return children;\n      }\n\n      var sorterIdx = customSorters.length;\n      var configuration = this.get('configuration');\n      var orderedChildren = _.chain(children);\n\n      // apply sorters in reverse order, from least to most important sorter\n      while(sorterIdx--) {\n        orderedChildren = orderedChildren.sortBy(function(child, idx) {\n          return customSorters[sorterIdx](null, child.item.get('model'), configuration);\n        });\n      }\n      return orderedChildren.value();\n    }", "code_tokens": ["function", "(", "children", ")", "{", "var", "customSorters", "=", "this", ".", "getSorters", "(", ")", ";", "if", "(", "_", ".", "isEmpty", "(", "customSorters", ")", ")", "{", "return", "children", ";", "}", "var", "sorterIdx", "=", "customSorters", ".", "length", ";", "var", "configuration", "=", "this", ".", "get", "(", "'configuration'", ")", ";", "var", "orderedChildren", "=", "_", ".", "chain", "(", "children", ")", ";", "// apply sorters in reverse order, from least to most important sorter", "while", "(", "sorterIdx", "--", ")", "{", "orderedChildren", "=", "orderedChildren", ".", "sortBy", "(", "function", "(", "child", ",", "idx", ")", "{", "return", "customSorters", "[", "sorterIdx", "]", "(", "null", ",", "child", ".", "item", ".", "get", "(", "'model'", ")", ",", "configuration", ")", ";", "}", ")", ";", "}", "return", "orderedChildren", ".", "value", "(", ")", ";", "}"], "original_docstring": "\nSorts a collection according to one or more custom sorter functions.\nThis function uses underscore's sortBy function. In order to\nsupport multiple sorter functions we need to apply them in reverse order,\nstarting with the least significant and ending with the most significant.\nThe most significant should be placed at the beginning of the custom sorter\nfunctions array.\n\n@method sortChildren\n@param {Array} children the array to be sorted\n@return {Array} the sorted array\n", "docstring": {"block_comment": "Sorts a collection according to one or more custom sorter functions. \nThis function uses underscore s sortBy function. In order to \nsupport multiple sorter functions we need to apply them in reverse order, \nstarting with the least significant and ending with the most significant. \nThe most significant should be placed at the beginning of the custom sorter \nfunctions array.", "line_comment": ["apply sorters in reverse order, from least to most important sorter"]}, "docstring_tokens": ["the", "sorted", "array"], "sample_id": 468, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004332", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function() {\n      var type = this.children().first().get('view').type;\n      var customSorters = this.get('configuration')[type].sorter;\n\n      if (_.isFunction(customSorters)) {\n        return [customSorters];\n      } else if (_.isArray(customSorters)) {\n        return customSorters;\n      } else {\n        return [];\n      }\n    }", "code_tokens": ["function", "(", ")", "{", "var", "type", "=", "this", ".", "children", "(", ")", ".", "first", "(", ")", ".", "get", "(", "'view'", ")", ".", "type", ";", "var", "customSorters", "=", "this", ".", "get", "(", "'configuration'", ")", "[", "type", "]", ".", "sorter", ";", "if", "(", "_", ".", "isFunction", "(", "customSorters", ")", ")", "{", "return", "[", "customSorters", "]", ";", "}", "else", "if", "(", "_", ".", "isArray", "(", "customSorters", ")", ")", "{", "return", "customSorters", ";", "}", "else", "{", "return", "[", "]", ";", "}", "}"], "original_docstring": "\nGets an array containing the sorter functions. The most significant\nsorter function should be placed at the beginning of the array.\n\n@method getSorters\n@return {Array} an array with the available sorter functions\n", "docstring": {"block_comment": "Gets an array containing the sorter functions. The most significant \nsorter function should be placed at the beginning of the array.", "line_comment": null}, "docstring_tokens": ["Gets", "an", "array", "containing", "the", "sorter", "functions", ".", "The", "most", "significant", "sorter", "function", "should", "be", "placed", "at", "the", "beginning", "of", "the", "array", "."], "sample_id": 469, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004332", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function() {\n      var type = this.children().first().get('view').type;\n      var customSorters = this.get('configuration')[type].sorter;\n\n      if (_.isFunction(customSorters)) {\n        return [customSorters];\n      } else if (_.isArray(customSorters)) {\n        return customSorters;\n      } else {\n        return [];\n      }\n    }", "code_tokens": ["function", "(", ")", "{", "var", "type", "=", "this", ".", "children", "(", ")", ".", "first", "(", ")", ".", "get", "(", "'view'", ")", ".", "type", ";", "var", "customSorters", "=", "this", ".", "get", "(", "'configuration'", ")", "[", "type", "]", ".", "sorter", ";", "if", "(", "_", ".", "isFunction", "(", "customSorters", ")", ")", "{", "return", "[", "customSorters", "]", ";", "}", "else", "if", "(", "_", ".", "isArray", "(", "customSorters", ")", ")", "{", "return", "customSorters", ";", "}", "else", "{", "return", "[", "]", ";", "}", "}"], "original_docstring": "\nGets an array containing the sorter functions. The most significant\nsorter function should be placed at the beginning of the array.\n\n@method getSorters\n@return {Array} an array with the available sorter functions\n", "docstring": {"block_comment": "Gets an array containing the sorter functions. The most significant \nsorter function should be placed at the beginning of the array.", "line_comment": null}, "docstring_tokens": ["an", "array", "with", "the", "available", "sorter", "functions"], "sample_id": 469, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004333", "repo": "eliofreitas/cdf", "path": "core-js/src/main/javascript/cdf-legacy/components/filter/js/TreeFilter/controllers/Manager.js", "language": "JavaScript", "license": "mpl-2.0", "func_name": "", "code": "function(newModel) {\n      var newManager = {\n        model: newModel,\n        configuration: this.get('configuration')\n      };\n      this.add(newManager);\n      return this;\n    }", "code_tokens": ["function", "(", "newModel", ")", "{", "var", "newManager", "=", "{", "model", ":", "newModel", ",", "configuration", ":", "this", ".", "get", "(", "'configuration'", ")", "}", ";", "this", ".", "add", "(", "newManager", ")", ";", "return", "this", ";", "}"], "original_docstring": "\nCreate a new manager for this MVC tuple\n@method addChild\n@chainable\n", "docstring": {"block_comment": "Create a new manager for this MVC tuple", "line_comment": null}, "docstring_tokens": ["Create", "a", "new", "manager", "for", "this", "MVC", "tuple"], "sample_id": 470, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004334", "repo": "ISTang/sitemap", "path": "web/public/libs/dojo/1.8.3/dojox/mobile/CheckBox.js.uncompressed.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(){\n\t\t\tif(!this.srcNodeRef){\n\t\t\t\t// The following doesn't work on IE < 8 if the default state is checked.\n\t\t\t\t// You have to use \"<input checked>\" instead but it's not worth the bytes here.\n\t\t\t\tthis.srcNodeRef = domConstruct.create(\"input\", {type: this.type});\n\t\t\t}\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.focusNode = this.domNode;\n\t\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "!", "this", ".", "srcNodeRef", ")", "{", "// The following doesn't work on IE < 8 if the default state is checked.", "// You have to use \"<input checked>\" instead but it's not worth the bytes here.", "this", ".", "srcNodeRef", "=", "domConstruct", ".", "create", "(", "\"input\"", ",", "{", "type", ":", "this", ".", "type", "}", ")", ";", "}", "this", ".", "inherited", "(", "arguments", ")", ";", "this", ".", "focusNode", "=", "this", ".", "domNode", ";", "}"], "original_docstring": "cannot be changed: IE complains w/o this", "docstring": {"block_comment": "cannot be changed  IE complains w o this", "line_comment": ["The following doesn t work on IE   8 if the default state is checked.", "You have to use    instead but it s not worth the bytes here."]}, "docstring_tokens": ["cannot", "be", "changed", "IE", "complains", "w", "o", "this"], "sample_id": 471, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004336", "repo": "Aravinthu/odoo", "path": "addons/web/static/src/js/fields/upgrade_fields.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function ($label) {\n        this.$label = $label;\n        this._render();\n    }", "code_tokens": ["function", "(", "$label", ")", "{", "this", ".", "$label", "=", "$label", ";", "this", ".", "_render", "(", ")", ";", "}"], "original_docstring": "\nRe-renders the widget with the label\n\n@param {jQuery} $label\n", "docstring": {"block_comment": "Re renders the widget with the label", "line_comment": null}, "docstring_tokens": ["Re", "renders", "the", "widget", "with", "the", "label"], "sample_id": 472, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004338", "repo": "Aravinthu/odoo", "path": "addons/web/static/src/js/fields/upgrade_fields.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function () {\n        var message = $(QWeb.render('EnterpriseUpgrade'));\n\n        var buttons = [\n            {\n                text: _t(\"Upgrade now\"),\n                classes: 'btn-primary',\n                close: true,\n                click: this._confirmUpgrade.bind(this),\n            },\n            {\n                text: _t(\"Cancel\"),\n                close: true,\n            },\n        ];\n\n        return new Dialog(this, {\n            size: 'medium',\n            buttons: buttons,\n            $content: $('<div>', {\n                html: message,\n            }),\n            title: _t(\"Odoo Enterprise\"),\n        }).open();\n    }", "code_tokens": ["function", "(", ")", "{", "var", "message", "=", "$", "(", "QWeb", ".", "render", "(", "'EnterpriseUpgrade'", ")", ")", ";", "var", "buttons", "=", "[", "{", "text", ":", "_t", "(", "\"Upgrade now\"", ")", ",", "classes", ":", "'btn-primary'", ",", "close", ":", "true", ",", "click", ":", "this", ".", "_confirmUpgrade", ".", "bind", "(", "this", ")", ",", "}", ",", "{", "text", ":", "_t", "(", "\"Cancel\"", ")", ",", "close", ":", "true", ",", "}", ",", "]", ";", "return", "new", "Dialog", "(", "this", ",", "{", "size", ":", "'medium'", ",", "buttons", ":", "buttons", ",", "$content", ":", "$", "(", "'<div>'", ",", "{", "html", ":", "message", ",", "}", ")", ",", "title", ":", "_t", "(", "\"Odoo Enterprise\"", ")", ",", "}", ")", ".", "open", "(", ")", ";", "}"], "original_docstring": "\nOpens the Upgrade dialog.\n\n@private\n@returns {Dialog} the instance of the opened Dialog\n", "docstring": {"block_comment": "Opens the Upgrade dialog.", "line_comment": null}, "docstring_tokens": ["Opens", "the", "Upgrade", "dialog", "."], "sample_id": 473, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004338", "repo": "Aravinthu/odoo", "path": "addons/web/static/src/js/fields/upgrade_fields.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function () {\n        var message = $(QWeb.render('EnterpriseUpgrade'));\n\n        var buttons = [\n            {\n                text: _t(\"Upgrade now\"),\n                classes: 'btn-primary',\n                close: true,\n                click: this._confirmUpgrade.bind(this),\n            },\n            {\n                text: _t(\"Cancel\"),\n                close: true,\n            },\n        ];\n\n        return new Dialog(this, {\n            size: 'medium',\n            buttons: buttons,\n            $content: $('<div>', {\n                html: message,\n            }),\n            title: _t(\"Odoo Enterprise\"),\n        }).open();\n    }", "code_tokens": ["function", "(", ")", "{", "var", "message", "=", "$", "(", "QWeb", ".", "render", "(", "'EnterpriseUpgrade'", ")", ")", ";", "var", "buttons", "=", "[", "{", "text", ":", "_t", "(", "\"Upgrade now\"", ")", ",", "classes", ":", "'btn-primary'", ",", "close", ":", "true", ",", "click", ":", "this", ".", "_confirmUpgrade", ".", "bind", "(", "this", ")", ",", "}", ",", "{", "text", ":", "_t", "(", "\"Cancel\"", ")", ",", "close", ":", "true", ",", "}", ",", "]", ";", "return", "new", "Dialog", "(", "this", ",", "{", "size", ":", "'medium'", ",", "buttons", ":", "buttons", ",", "$content", ":", "$", "(", "'<div>'", ",", "{", "html", ":", "message", ",", "}", ")", ",", "title", ":", "_t", "(", "\"Odoo Enterprise\"", ")", ",", "}", ")", ".", "open", "(", ")", ";", "}"], "original_docstring": "\nOpens the Upgrade dialog.\n\n@private\n@returns {Dialog} the instance of the opened Dialog\n", "docstring": {"block_comment": "Opens the Upgrade dialog.", "line_comment": null}, "docstring_tokens": ["{", "Dialog", "}", "the", "instance", "of", "the", "opened", "Dialog"], "sample_id": 473, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004339", "repo": "Aravinthu/odoo", "path": "addons/web/static/src/js/fields/upgrade_fields.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function ($enterpriseLabel) {}", "code_tokens": ["function", "(", "$enterpriseLabel", ")", "{", "}"], "original_docstring": "\nThis function is meant to be overriden to insert the 'Enterprise' label\nJQuery node at the right place.\n\n@abstract\n@private\n@param {jQuery} $enterpriseLabel the 'Enterprise' label to insert\n", "docstring": {"block_comment": "This function is meant to be overriden to insert the  Enterprise  label \nJQuery node at the right place.", "line_comment": null}, "docstring_tokens": ["This", "function", "is", "meant", "to", "be", "overriden", "to", "insert", "the", "Enterprise", "label", "JQuery", "node", "at", "the", "right", "place", "."], "sample_id": 474, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004339", "repo": "Aravinthu/odoo", "path": "addons/web/static/src/js/fields/upgrade_fields.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function ($enterpriseLabel) {}", "code_tokens": ["function", "(", "$enterpriseLabel", ")", "{", "}"], "original_docstring": "\nThis function is meant to be overriden to insert the 'Enterprise' label\nJQuery node at the right place.\n\n@abstract\n@private\n@param {jQuery} $enterpriseLabel the 'Enterprise' label to insert\n", "docstring": {"block_comment": "This function is meant to be overriden to insert the  Enterprise  label \nJQuery node at the right place.", "line_comment": null}, "docstring_tokens": ["the", "Enterprise", "label", "to", "insert"], "sample_id": 474, "prompt_tokens": ["<javascript>", "<param>", "$enterpriseLabel"], "comment_type": "param", "sentence_id": 1}
{"id": "21004340", "repo": "Aravinthu/odoo", "path": "addons/web/static/src/js/fields/upgrade_fields.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function () {\n        return this._rpc({\n                model: 'res.users',\n                method: 'search_count',\n                args: [[[\"share\", \"=\", false]]],\n            })\n            .then(function (data) {\n                framework.redirect(\"https://www.odoo.com/odoo-enterprise/upgrade?num_users=\" + data);\n            });\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "_rpc", "(", "{", "model", ":", "'res.users'", ",", "method", ":", "'search_count'", ",", "args", ":", "[", "[", "[", "\"share\"", ",", "\"=\"", ",", "false", "]", "]", "]", ",", "}", ")", ".", "then", "(", "function", "(", "data", ")", "{", "framework", ".", "redirect", "(", "\"https://www.odoo.com/odoo-enterprise/upgrade?num_users=\"", "+", "data", ")", ";", "}", ")", ";", "}"], "original_docstring": "-------------------------------------------------------------------------- Private -------------------------------------------------------------------------- \nRedirects the user to the odoo-enterprise/uprade page\n\n@private\n@returns {Deferred}\n", "docstring": {"block_comment": "Private                                                                            \nRedirects the user to the odoo enterprise uprade page", "line_comment": null}, "docstring_tokens": ["Private", "Redirects", "the", "user", "to", "the", "odoo", "enterprise", "uprade", "page"], "sample_id": 475, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004341", "repo": "anithri/multiselectjs_rails", "path": "vendor/assets/javascripts/ui.multiselect.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(list) {\n\t\tvar input = $(this);\n\t\tvar rows = list.find('li'),\n\t\t\tcache = rows.map(function(){\n\n\t\t\t\treturn $(this).text().toLowerCase();\n\t\t\t});\n\n\t\tvar term = $.trim(input.val().toLowerCase()), scores = [];\n\n\t\tif (!term) {\n\t\t\trows.show();\n\t\t} else {\n\t\t\trows.hide();\n\n\t\t\tcache.each(function(i) {\n\t\t\t\tif (this.indexOf(term)>-1) { scores.push(i); }\n\t\t\t});\n\n\t\t\t$.each(scores, function() {\n\t\t\t\t$(rows[this]).show();\n\t\t\t});\n\t\t}\n\t}", "code_tokens": ["function", "(", "list", ")", "{", "var", "input", "=", "$", "(", "this", ")", ";", "var", "rows", "=", "list", ".", "find", "(", "'li'", ")", ",", "cache", "=", "rows", ".", "map", "(", "function", "(", ")", "{", "return", "$", "(", "this", ")", ".", "text", "(", ")", ".", "toLowerCase", "(", ")", ";", "}", ")", ";", "var", "term", "=", "$", ".", "trim", "(", "input", ".", "val", "(", ")", ".", "toLowerCase", "(", ")", ")", ",", "scores", "=", "[", "]", ";", "if", "(", "!", "term", ")", "{", "rows", ".", "show", "(", ")", ";", "}", "else", "{", "rows", ".", "hide", "(", ")", ";", "cache", ".", "each", "(", "function", "(", "i", ")", "{", "if", "(", "this", ".", "indexOf", "(", "term", ")", ">", "-", "1", ")", "{", "scores", ".", "push", "(", "i", ")", ";", "}", "}", ")", ";", "$", ".", "each", "(", "scores", ",", "function", "(", ")", "{", "$", "(", "rows", "[", "this", "]", ")", ".", "show", "(", ")", ";", "}", ")", ";", "}", "}"], "original_docstring": "taken from John Resig's liveUpdate script", "docstring": {"block_comment": "taken from John Resig s liveUpdate script", "line_comment": null}, "docstring_tokens": ["taken", "from", "John", "Resig", "s", "liveUpdate", "script"], "sample_id": 476, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004342", "repo": "anithri/multiselectjs_rails", "path": "vendor/assets/javascripts/ui.multiselect.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(clonee) {\n\t\tvar clone = clonee.clone(false,false);\n\t\tclone.data('optionLink', clonee.data('optionLink'));\n\t\tclone.data('idx', clonee.data('idx'));\n\t\treturn clone;\n\t}", "code_tokens": ["function", "(", "clonee", ")", "{", "var", "clone", "=", "clonee", ".", "clone", "(", "false", ",", "false", ")", ";", "clone", ".", "data", "(", "'optionLink'", ",", "clonee", ".", "data", "(", "'optionLink'", ")", ")", ";", "clone", ".", "data", "(", "'idx'", ",", "clonee", ".", "data", "(", "'idx'", ")", ")", ";", "return", "clone", ";", "}"], "original_docstring": "clones an item with associated data didn't find a smarter away around this", "docstring": {"block_comment": "clones an item with associated data didn t find a smarter away around this", "line_comment": null}, "docstring_tokens": ["clones", "an", "item", "with", "associated", "data", "didn", "t", "find", "a", "smarter", "away", "around", "this"], "sample_id": 477, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004343", "repo": "anithri/multiselectjs_rails", "path": "vendor/assets/javascripts/ui.multiselect.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n\t\t// Redisplay our lists.\n\t\tthis._populateLists(this.element.find('option'));\n    }", "code_tokens": ["function", "(", ")", "{", "// Redisplay our lists.", "this", ".", "_populateLists", "(", "this", ".", "element", ".", "find", "(", "'option'", ")", ")", ";", "}"], "original_docstring": "Redisplay the lists of selected/available options. Call this after you've selected/unselected some options programmatically. GRIPE This is O(n) where n is the length of the list - seems like there must be a smarter way of doing this, but I have not been able to come up with one. I see no way to detect programmatic setting of the option's selected property, and without that, it seems like we can't have a general-case listener that does its thing every time an option is selected.", "docstring": {"block_comment": "Redisplay the lists of selected available options. Call this after you ve selected unselected some options programmatically. GRIPE This is O n  where n is the length of the list   seems like there must be a smarter way of doing this, but I have not been able to come up with one. I see no way to detect programmatic setting of the option s selected property, and without that, it seems like we can t have a general case listener that does its thing every time an option is selected.", "line_comment": ["Redisplay our lists."]}, "docstring_tokens": ["Redisplay", "the", "lists", "of", "selected", "available", "options", ".", "Call", "this", "after", "you", "ve", "selected", "unselected", "some", "options", "programmatically", ".", "GRIPE", "This", "is", "O", "n", "where", "n", "is", "the", "length", "of", "the", "list", "seems", "like", "there", "must", "be", "a", "smarter", "way", "of", "doing", "this", "but", "I", "have", "not", "been", "able", "to", "come", "up", "with", "one", ".", "I", "see", "no", "way", "to", "detect", "programmatic", "setting", "of", "the", "option", "s", "selected", "property", "and", "without", "that", "it", "seems", "like", "we", "can", "t", "have", "a", "general", "case", "listener", "that", "does", "its", "thing", "every", "time", "an", "option", "is", "selected", "."], "sample_id": 478, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004344", "repo": "erinspace/osf.io", "path": "website/static/js/citationsNodeConfig.js", "language": "JavaScript", "license": "apache-2.0", "func_name": "", "code": "function() {\n        var self = this;\n\n        window.oauthComplete = function(res) {\n            // Update view model based on response\n            self.changeMessage(self.messages.connectAccountSuccess(), 'text-success', 3000);\n            self.userHasAuth(true);\n            self.importAuth.call(self);\n        };\n        window.open(self.urls().auth);\n    }", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "window", ".", "oauthComplete", "=", "function", "(", "res", ")", "{", "// Update view model based on response", "self", ".", "changeMessage", "(", "self", ".", "messages", ".", "connectAccountSuccess", "(", ")", ",", "'text-success'", ",", "3000", ")", ";", "self", ".", "userHasAuth", "(", "true", ")", ";", "self", ".", "importAuth", ".", "call", "(", "self", ")", ";", "}", ";", "window", ".", "open", "(", "self", ".", "urls", "(", ")", ".", "auth", ")", ";", "}"], "original_docstring": "\nAllows a user to create an access token from the nodeSettings page\n", "docstring": {"block_comment": "Allows a user to create an access token from the nodeSettings page", "line_comment": ["Update view model based on response"]}, "docstring_tokens": ["Allows", "a", "user", "to", "create", "an", "access", "token", "from", "the", "nodeSettings", "page"], "sample_id": 479, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004345", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var background = this.get(\"background\"),\n            backgroundGraphic;\n        this._destroyLegendItems();\n        if(background)\n        {\n            backgroundGraphic = background.get(\"graphic\");\n            if(backgroundGraphic)\n            {\n                backgroundGraphic.destroy();\n            }\n            else\n            {\n                background.destroy();\n            }\n        }\n\n    }", "code_tokens": ["function", "(", ")", "{", "var", "background", "=", "this", ".", "get", "(", "\"background\"", ")", ",", "backgroundGraphic", ";", "this", ".", "_destroyLegendItems", "(", ")", ";", "if", "(", "background", ")", "{", "backgroundGraphic", "=", "background", ".", "get", "(", "\"graphic\"", ")", ";", "if", "(", "backgroundGraphic", ")", "{", "backgroundGraphic", ".", "destroy", "(", ")", ";", "}", "else", "{", "background", ".", "destroy", "(", ")", ";", "}", "}", "}"], "original_docstring": "\nDestructor implementation ChartLegend class. Removes all items and the Graphic instance from the widget.\n\n@method destructor\n@protected\n", "docstring": {"block_comment": "Destructor implementation ChartLegend class. Removes all items and the Graphic instance from the widget.", "line_comment": null}, "docstring_tokens": ["Destructor", "implementation", "ChartLegend", "class", ".", "Removes", "all", "items", "and", "the", "Graphic", "instance", "from", "the", "widget", "."], "sample_id": 480, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004346", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var item;\n        if(this._items)\n        {\n            while(this._items.length > 0)\n            {\n                item = this._items.shift();\n                item.shape.get(\"graphic\").destroy();\n                item.node.empty();\n                item.node.destroy(true);\n                item.node = null;\n                item = null;\n            }\n        }\n        this._items = [];\n    }", "code_tokens": ["function", "(", ")", "{", "var", "item", ";", "if", "(", "this", ".", "_items", ")", "{", "while", "(", "this", ".", "_items", ".", "length", ">", "0", ")", "{", "item", "=", "this", ".", "_items", ".", "shift", "(", ")", ";", "item", ".", "shape", ".", "get", "(", "\"graphic\"", ")", ".", "destroy", "(", ")", ";", "item", ".", "node", ".", "empty", "(", ")", ";", "item", ".", "node", ".", "destroy", "(", "true", ")", ";", "item", ".", "node", "=", "null", ";", "item", "=", "null", ";", "}", "}", "this", ".", "_items", "=", "[", "]", ";", "}"], "original_docstring": "\nDestroys legend items.\n\n@method _destroyLegendItems\n@private\n", "docstring": {"block_comment": "Destroys legend items.", "line_comment": null}, "docstring_tokens": ["Destroys", "legend", "items", "."], "sample_id": 481, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004347", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var defs = {\n            width: 10,\n            height: 10\n        };\n        return defs;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "defs", "=", "{", "width", ":", "10", ",", "height", ":", "10", "}", ";", "return", "defs", ";", "}"], "original_docstring": "\nGets the default values for series that use the utility. This method is used by\nthe class' `styles` attribute's getter to get build default values.\n\n@method _getPlotDefaults\n@return Object\n@protected\n", "docstring": {"block_comment": "Gets the default values for series that use the utility. This method is used by \nthe class   styles  attribute s getter to get build default values.", "line_comment": null}, "docstring_tokens": ["Gets", "the", "default", "values", "for", "series", "that", "use", "the", "utility", ".", "This", "method", "is", "used", "by", "the", "class", "styles", "attribute", "s", "getter", "to", "get", "build", "default", "values", "."], "sample_id": 482, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004348", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var styles = {\n            padding: {\n                top: 8,\n                right: 8,\n                bottom: 8,\n                left: 9\n            },\n            gap: 10,\n            hAlign: \"center\",\n            vAlign: \"top\",\n            marker: this._getPlotDefaults(),\n            item: {\n                hSpacing: 10,\n                vSpacing: 5,\n                label: {\n                    color:\"#808080\",\n                    fontSize:\"85%\",\n                    whiteSpace: \"nowrap\"\n                }\n            },\n            background: {\n                shape: \"rect\",\n                fill:{\n                    color:\"#faf9f2\"\n                },\n                border: {\n                    color:\"#dad8c9\",\n                    weight: 1\n                }\n            }\n        };\n        return styles;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "styles", "=", "{", "padding", ":", "{", "top", ":", "8", ",", "right", ":", "8", ",", "bottom", ":", "8", ",", "left", ":", "9", "}", ",", "gap", ":", "10", ",", "hAlign", ":", "\"center\"", ",", "vAlign", ":", "\"top\"", ",", "marker", ":", "this", ".", "_getPlotDefaults", "(", ")", ",", "item", ":", "{", "hSpacing", ":", "10", ",", "vSpacing", ":", "5", ",", "label", ":", "{", "color", ":", "\"#808080\"", ",", "fontSize", ":", "\"85%\"", ",", "whiteSpace", ":", "\"nowrap\"", "}", "}", ",", "background", ":", "{", "shape", ":", "\"rect\"", ",", "fill", ":", "{", "color", ":", "\"#faf9f2\"", "}", ",", "border", ":", "{", "color", ":", "\"#dad8c9\"", ",", "weight", ":", "1", "}", "}", "}", ";", "return", "styles", ";", "}"], "original_docstring": "\nReturns the default hash for the `styles` attribute.\n\n@method _getDefaultStyles\n@return Object\n@protected\n", "docstring": {"block_comment": "Returns the default hash for the  styles  attribute.", "line_comment": null}, "docstring_tokens": ["Returns", "the", "default", "hash", "for", "the", "styles", "attribute", "."], "sample_id": 483, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004349", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var graphic = this.get(\"background\").get(\"graphic\");\n        return graphic._getShapeClass.apply(graphic, arguments);\n    }", "code_tokens": ["function", "(", ")", "{", "var", "graphic", "=", "this", ".", "get", "(", "\"background\"", ")", ".", "get", "(", "\"graphic\"", ")", ";", "return", "graphic", ".", "_getShapeClass", ".", "apply", "(", "graphic", ",", "arguments", ")", ";", "}"], "original_docstring": "\nEvaluates and returns correct class for drawing a shape.\n\n@method _getShapeClass\n@return Shape\n@private\n", "docstring": {"block_comment": "Evaluates and returns correct class for drawing a shape.", "line_comment": null}, "docstring_tokens": ["Evaluates", "and", "returns", "correct", "class", "for", "drawing", "a", "shape", "."], "sample_id": 484, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004350", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(node, shapeClass, fill, border, labelStyles, w, h, text)\n    {\n        var containerNode = Y.Node.create(\"<div>\"),\n            textField = Y.Node.create(\"<span>\"),\n            shape,\n            dimension,\n            padding,\n            left,\n            item,\n            ShapeClass = shapeClass;\n        containerNode.setStyle(POSITION, \"absolute\");\n        textField.setStyle(POSITION, \"absolute\");\n        textField.setStyles(labelStyles);\n        textField.set(\"text\", text);\n        containerNode.appendChild(textField);\n        node.append(containerNode);\n        dimension = textField.get(\"offsetHeight\");\n        padding = dimension - h;\n        left = w + padding + 2;\n        textField.setStyle(\"left\", left + PX);\n        containerNode.setStyle(\"height\", dimension + PX);\n        containerNode.setStyle(\"width\", (left + textField.get(\"offsetWidth\")) + PX);\n        shape = new ShapeClass({\n            fill: fill,\n            stroke: border,\n            width: w,\n            height: h,\n            x: padding * 0.5,\n            y: padding * 0.5,\n            w: w,\n            h: h,\n            graphic: containerNode\n        });\n        textField.setStyle(\"left\", dimension + PX);\n        item = {\n            node: containerNode,\n            width: containerNode.get(\"offsetWidth\"),\n            height: containerNode.get(\"offsetHeight\"),\n            shape: shape,\n            textNode: textField,\n            text: text\n        };\n        this._items.push(item);\n        return item;\n    }", "code_tokens": ["function", "(", "node", ",", "shapeClass", ",", "fill", ",", "border", ",", "labelStyles", ",", "w", ",", "h", ",", "text", ")", "{", "var", "containerNode", "=", "Y", ".", "Node", ".", "create", "(", "\"<div>\"", ")", ",", "textField", "=", "Y", ".", "Node", ".", "create", "(", "\"<span>\"", ")", ",", "shape", ",", "dimension", ",", "padding", ",", "left", ",", "item", ",", "ShapeClass", "=", "shapeClass", ";", "containerNode", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyles", "(", "labelStyles", ")", ";", "textField", ".", "set", "(", "\"text\"", ",", "text", ")", ";", "containerNode", ".", "appendChild", "(", "textField", ")", ";", "node", ".", "append", "(", "containerNode", ")", ";", "dimension", "=", "textField", ".", "get", "(", "\"offsetHeight\"", ")", ";", "padding", "=", "dimension", "-", "h", ";", "left", "=", "w", "+", "padding", "+", "2", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "left", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"height\"", ",", "dimension", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"width\"", ",", "(", "left", "+", "textField", ".", "get", "(", "\"offsetWidth\"", ")", ")", "+", "PX", ")", ";", "shape", "=", "new", "ShapeClass", "(", "{", "fill", ":", "fill", ",", "stroke", ":", "border", ",", "width", ":", "w", ",", "height", ":", "h", ",", "x", ":", "padding", "*", "0.5", ",", "y", ":", "padding", "*", "0.5", ",", "w", ":", "w", ",", "h", ":", "h", ",", "graphic", ":", "containerNode", "}", ")", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "dimension", "+", "PX", ")", ";", "item", "=", "{", "node", ":", "containerNode", ",", "width", ":", "containerNode", ".", "get", "(", "\"offsetWidth\"", ")", ",", "height", ":", "containerNode", ".", "get", "(", "\"offsetHeight\"", ")", ",", "shape", ":", "shape", ",", "textNode", ":", "textField", ",", "text", ":", "text", "}", ";", "this", ".", "_items", ".", "push", "(", "item", ")", ";", "return", "item", ";", "}"], "original_docstring": "\nReturns a legend item consisting of the following properties:\n<dl>\n<dt>node</dt><dd>The `Node` containing the legend item elements.</dd>\n<dt>shape</dt><dd>The `Shape` element for the legend item.</dd>\n<dt>textNode</dt><dd>The `Node` containing the text></dd>\n<dt>text</dt><dd></dd>\n</dl>\n\n@method _getLegendItem\n@param {Node} shapeProps Reference to the `node` attribute.\n@param {String | Class} shapeClass The type of shape\n@param {Object} fill Properties for the shape's fill\n@param {Object} border Properties for the shape's border\n@param {String} labelStyles String to be rendered as the legend's text\n@param {Number} width Total width of the legend item\n@param {Number} height Total height of the legend item\n@param {String} text Text for the legendItem\n@return Object\n@private\n", "docstring": {"block_comment": "Returns a legend item consisting of the following properties  \nnodeThe  Node  containing the legend item elements. \nshapeThe  Shape  element for the legend item. \ntextNodeThe  Node  containing the text  \ntext", "line_comment": null}, "docstring_tokens": ["Returns", "a", "legend", "item", "consisting", "of", "the", "following", "properties", "nodeThe", "Node", "containing", "the", "legend", "item", "elements", ".", "shapeThe", "Shape", "element", "for", "the", "legend", "item", ".", "textNodeThe", "Node", "containing", "the", "text", "text"], "sample_id": 485, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004350", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(node, shapeClass, fill, border, labelStyles, w, h, text)\n    {\n        var containerNode = Y.Node.create(\"<div>\"),\n            textField = Y.Node.create(\"<span>\"),\n            shape,\n            dimension,\n            padding,\n            left,\n            item,\n            ShapeClass = shapeClass;\n        containerNode.setStyle(POSITION, \"absolute\");\n        textField.setStyle(POSITION, \"absolute\");\n        textField.setStyles(labelStyles);\n        textField.set(\"text\", text);\n        containerNode.appendChild(textField);\n        node.append(containerNode);\n        dimension = textField.get(\"offsetHeight\");\n        padding = dimension - h;\n        left = w + padding + 2;\n        textField.setStyle(\"left\", left + PX);\n        containerNode.setStyle(\"height\", dimension + PX);\n        containerNode.setStyle(\"width\", (left + textField.get(\"offsetWidth\")) + PX);\n        shape = new ShapeClass({\n            fill: fill,\n            stroke: border,\n            width: w,\n            height: h,\n            x: padding * 0.5,\n            y: padding * 0.5,\n            w: w,\n            h: h,\n            graphic: containerNode\n        });\n        textField.setStyle(\"left\", dimension + PX);\n        item = {\n            node: containerNode,\n            width: containerNode.get(\"offsetWidth\"),\n            height: containerNode.get(\"offsetHeight\"),\n            shape: shape,\n            textNode: textField,\n            text: text\n        };\n        this._items.push(item);\n        return item;\n    }", "code_tokens": ["function", "(", "node", ",", "shapeClass", ",", "fill", ",", "border", ",", "labelStyles", ",", "w", ",", "h", ",", "text", ")", "{", "var", "containerNode", "=", "Y", ".", "Node", ".", "create", "(", "\"<div>\"", ")", ",", "textField", "=", "Y", ".", "Node", ".", "create", "(", "\"<span>\"", ")", ",", "shape", ",", "dimension", ",", "padding", ",", "left", ",", "item", ",", "ShapeClass", "=", "shapeClass", ";", "containerNode", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyles", "(", "labelStyles", ")", ";", "textField", ".", "set", "(", "\"text\"", ",", "text", ")", ";", "containerNode", ".", "appendChild", "(", "textField", ")", ";", "node", ".", "append", "(", "containerNode", ")", ";", "dimension", "=", "textField", ".", "get", "(", "\"offsetHeight\"", ")", ";", "padding", "=", "dimension", "-", "h", ";", "left", "=", "w", "+", "padding", "+", "2", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "left", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"height\"", ",", "dimension", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"width\"", ",", "(", "left", "+", "textField", ".", "get", "(", "\"offsetWidth\"", ")", ")", "+", "PX", ")", ";", "shape", "=", "new", "ShapeClass", "(", "{", "fill", ":", "fill", ",", "stroke", ":", "border", ",", "width", ":", "w", ",", "height", ":", "h", ",", "x", ":", "padding", "*", "0.5", ",", "y", ":", "padding", "*", "0.5", ",", "w", ":", "w", ",", "h", ":", "h", ",", "graphic", ":", "containerNode", "}", ")", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "dimension", "+", "PX", ")", ";", "item", "=", "{", "node", ":", "containerNode", ",", "width", ":", "containerNode", ".", "get", "(", "\"offsetWidth\"", ")", ",", "height", ":", "containerNode", ".", "get", "(", "\"offsetHeight\"", ")", ",", "shape", ":", "shape", ",", "textNode", ":", "textField", ",", "text", ":", "text", "}", ";", "this", ".", "_items", ".", "push", "(", "item", ")", ";", "return", "item", ";", "}"], "original_docstring": "\nReturns a legend item consisting of the following properties:\n<dl>\n<dt>node</dt><dd>The `Node` containing the legend item elements.</dd>\n<dt>shape</dt><dd>The `Shape` element for the legend item.</dd>\n<dt>textNode</dt><dd>The `Node` containing the text></dd>\n<dt>text</dt><dd></dd>\n</dl>\n\n@method _getLegendItem\n@param {Node} shapeProps Reference to the `node` attribute.\n@param {String | Class} shapeClass The type of shape\n@param {Object} fill Properties for the shape's fill\n@param {Object} border Properties for the shape's border\n@param {String} labelStyles String to be rendered as the legend's text\n@param {Number} width Total width of the legend item\n@param {Number} height Total height of the legend item\n@param {String} text Text for the legendItem\n@return Object\n@private\n", "docstring": {"block_comment": "Returns a legend item consisting of the following properties  \nnodeThe  Node  containing the legend item elements. \nshapeThe  Shape  element for the legend item. \ntextNodeThe  Node  containing the text  \ntext", "line_comment": null}, "docstring_tokens": ["Properties", "for", "the", "shape", "s", "fill"], "sample_id": 485, "prompt_tokens": ["<javascript>", "<param>", "fill"], "comment_type": "param", "sentence_id": 1}
{"id": "21004350", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(node, shapeClass, fill, border, labelStyles, w, h, text)\n    {\n        var containerNode = Y.Node.create(\"<div>\"),\n            textField = Y.Node.create(\"<span>\"),\n            shape,\n            dimension,\n            padding,\n            left,\n            item,\n            ShapeClass = shapeClass;\n        containerNode.setStyle(POSITION, \"absolute\");\n        textField.setStyle(POSITION, \"absolute\");\n        textField.setStyles(labelStyles);\n        textField.set(\"text\", text);\n        containerNode.appendChild(textField);\n        node.append(containerNode);\n        dimension = textField.get(\"offsetHeight\");\n        padding = dimension - h;\n        left = w + padding + 2;\n        textField.setStyle(\"left\", left + PX);\n        containerNode.setStyle(\"height\", dimension + PX);\n        containerNode.setStyle(\"width\", (left + textField.get(\"offsetWidth\")) + PX);\n        shape = new ShapeClass({\n            fill: fill,\n            stroke: border,\n            width: w,\n            height: h,\n            x: padding * 0.5,\n            y: padding * 0.5,\n            w: w,\n            h: h,\n            graphic: containerNode\n        });\n        textField.setStyle(\"left\", dimension + PX);\n        item = {\n            node: containerNode,\n            width: containerNode.get(\"offsetWidth\"),\n            height: containerNode.get(\"offsetHeight\"),\n            shape: shape,\n            textNode: textField,\n            text: text\n        };\n        this._items.push(item);\n        return item;\n    }", "code_tokens": ["function", "(", "node", ",", "shapeClass", ",", "fill", ",", "border", ",", "labelStyles", ",", "w", ",", "h", ",", "text", ")", "{", "var", "containerNode", "=", "Y", ".", "Node", ".", "create", "(", "\"<div>\"", ")", ",", "textField", "=", "Y", ".", "Node", ".", "create", "(", "\"<span>\"", ")", ",", "shape", ",", "dimension", ",", "padding", ",", "left", ",", "item", ",", "ShapeClass", "=", "shapeClass", ";", "containerNode", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyles", "(", "labelStyles", ")", ";", "textField", ".", "set", "(", "\"text\"", ",", "text", ")", ";", "containerNode", ".", "appendChild", "(", "textField", ")", ";", "node", ".", "append", "(", "containerNode", ")", ";", "dimension", "=", "textField", ".", "get", "(", "\"offsetHeight\"", ")", ";", "padding", "=", "dimension", "-", "h", ";", "left", "=", "w", "+", "padding", "+", "2", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "left", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"height\"", ",", "dimension", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"width\"", ",", "(", "left", "+", "textField", ".", "get", "(", "\"offsetWidth\"", ")", ")", "+", "PX", ")", ";", "shape", "=", "new", "ShapeClass", "(", "{", "fill", ":", "fill", ",", "stroke", ":", "border", ",", "width", ":", "w", ",", "height", ":", "h", ",", "x", ":", "padding", "*", "0.5", ",", "y", ":", "padding", "*", "0.5", ",", "w", ":", "w", ",", "h", ":", "h", ",", "graphic", ":", "containerNode", "}", ")", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "dimension", "+", "PX", ")", ";", "item", "=", "{", "node", ":", "containerNode", ",", "width", ":", "containerNode", ".", "get", "(", "\"offsetWidth\"", ")", ",", "height", ":", "containerNode", ".", "get", "(", "\"offsetHeight\"", ")", ",", "shape", ":", "shape", ",", "textNode", ":", "textField", ",", "text", ":", "text", "}", ";", "this", ".", "_items", ".", "push", "(", "item", ")", ";", "return", "item", ";", "}"], "original_docstring": "\nReturns a legend item consisting of the following properties:\n<dl>\n<dt>node</dt><dd>The `Node` containing the legend item elements.</dd>\n<dt>shape</dt><dd>The `Shape` element for the legend item.</dd>\n<dt>textNode</dt><dd>The `Node` containing the text></dd>\n<dt>text</dt><dd></dd>\n</dl>\n\n@method _getLegendItem\n@param {Node} shapeProps Reference to the `node` attribute.\n@param {String | Class} shapeClass The type of shape\n@param {Object} fill Properties for the shape's fill\n@param {Object} border Properties for the shape's border\n@param {String} labelStyles String to be rendered as the legend's text\n@param {Number} width Total width of the legend item\n@param {Number} height Total height of the legend item\n@param {String} text Text for the legendItem\n@return Object\n@private\n", "docstring": {"block_comment": "Returns a legend item consisting of the following properties  \nnodeThe  Node  containing the legend item elements. \nshapeThe  Shape  element for the legend item. \ntextNodeThe  Node  containing the text  \ntext", "line_comment": null}, "docstring_tokens": ["Properties", "for", "the", "shape", "s", "border"], "sample_id": 485, "prompt_tokens": ["<javascript>", "<param>", "border"], "comment_type": "param", "sentence_id": 2}
{"id": "21004350", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(node, shapeClass, fill, border, labelStyles, w, h, text)\n    {\n        var containerNode = Y.Node.create(\"<div>\"),\n            textField = Y.Node.create(\"<span>\"),\n            shape,\n            dimension,\n            padding,\n            left,\n            item,\n            ShapeClass = shapeClass;\n        containerNode.setStyle(POSITION, \"absolute\");\n        textField.setStyle(POSITION, \"absolute\");\n        textField.setStyles(labelStyles);\n        textField.set(\"text\", text);\n        containerNode.appendChild(textField);\n        node.append(containerNode);\n        dimension = textField.get(\"offsetHeight\");\n        padding = dimension - h;\n        left = w + padding + 2;\n        textField.setStyle(\"left\", left + PX);\n        containerNode.setStyle(\"height\", dimension + PX);\n        containerNode.setStyle(\"width\", (left + textField.get(\"offsetWidth\")) + PX);\n        shape = new ShapeClass({\n            fill: fill,\n            stroke: border,\n            width: w,\n            height: h,\n            x: padding * 0.5,\n            y: padding * 0.5,\n            w: w,\n            h: h,\n            graphic: containerNode\n        });\n        textField.setStyle(\"left\", dimension + PX);\n        item = {\n            node: containerNode,\n            width: containerNode.get(\"offsetWidth\"),\n            height: containerNode.get(\"offsetHeight\"),\n            shape: shape,\n            textNode: textField,\n            text: text\n        };\n        this._items.push(item);\n        return item;\n    }", "code_tokens": ["function", "(", "node", ",", "shapeClass", ",", "fill", ",", "border", ",", "labelStyles", ",", "w", ",", "h", ",", "text", ")", "{", "var", "containerNode", "=", "Y", ".", "Node", ".", "create", "(", "\"<div>\"", ")", ",", "textField", "=", "Y", ".", "Node", ".", "create", "(", "\"<span>\"", ")", ",", "shape", ",", "dimension", ",", "padding", ",", "left", ",", "item", ",", "ShapeClass", "=", "shapeClass", ";", "containerNode", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyles", "(", "labelStyles", ")", ";", "textField", ".", "set", "(", "\"text\"", ",", "text", ")", ";", "containerNode", ".", "appendChild", "(", "textField", ")", ";", "node", ".", "append", "(", "containerNode", ")", ";", "dimension", "=", "textField", ".", "get", "(", "\"offsetHeight\"", ")", ";", "padding", "=", "dimension", "-", "h", ";", "left", "=", "w", "+", "padding", "+", "2", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "left", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"height\"", ",", "dimension", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"width\"", ",", "(", "left", "+", "textField", ".", "get", "(", "\"offsetWidth\"", ")", ")", "+", "PX", ")", ";", "shape", "=", "new", "ShapeClass", "(", "{", "fill", ":", "fill", ",", "stroke", ":", "border", ",", "width", ":", "w", ",", "height", ":", "h", ",", "x", ":", "padding", "*", "0.5", ",", "y", ":", "padding", "*", "0.5", ",", "w", ":", "w", ",", "h", ":", "h", ",", "graphic", ":", "containerNode", "}", ")", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "dimension", "+", "PX", ")", ";", "item", "=", "{", "node", ":", "containerNode", ",", "width", ":", "containerNode", ".", "get", "(", "\"offsetWidth\"", ")", ",", "height", ":", "containerNode", ".", "get", "(", "\"offsetHeight\"", ")", ",", "shape", ":", "shape", ",", "textNode", ":", "textField", ",", "text", ":", "text", "}", ";", "this", ".", "_items", ".", "push", "(", "item", ")", ";", "return", "item", ";", "}"], "original_docstring": "\nReturns a legend item consisting of the following properties:\n<dl>\n<dt>node</dt><dd>The `Node` containing the legend item elements.</dd>\n<dt>shape</dt><dd>The `Shape` element for the legend item.</dd>\n<dt>textNode</dt><dd>The `Node` containing the text></dd>\n<dt>text</dt><dd></dd>\n</dl>\n\n@method _getLegendItem\n@param {Node} shapeProps Reference to the `node` attribute.\n@param {String | Class} shapeClass The type of shape\n@param {Object} fill Properties for the shape's fill\n@param {Object} border Properties for the shape's border\n@param {String} labelStyles String to be rendered as the legend's text\n@param {Number} width Total width of the legend item\n@param {Number} height Total height of the legend item\n@param {String} text Text for the legendItem\n@return Object\n@private\n", "docstring": {"block_comment": "Returns a legend item consisting of the following properties  \nnodeThe  Node  containing the legend item elements. \nshapeThe  Shape  element for the legend item. \ntextNodeThe  Node  containing the text  \ntext", "line_comment": null}, "docstring_tokens": ["String", "to", "be", "rendered", "as", "the", "legend", "s", "text"], "sample_id": 485, "prompt_tokens": ["<javascript>", "<param>", "labelStyles"], "comment_type": "param", "sentence_id": 3}
{"id": "21004350", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(node, shapeClass, fill, border, labelStyles, w, h, text)\n    {\n        var containerNode = Y.Node.create(\"<div>\"),\n            textField = Y.Node.create(\"<span>\"),\n            shape,\n            dimension,\n            padding,\n            left,\n            item,\n            ShapeClass = shapeClass;\n        containerNode.setStyle(POSITION, \"absolute\");\n        textField.setStyle(POSITION, \"absolute\");\n        textField.setStyles(labelStyles);\n        textField.set(\"text\", text);\n        containerNode.appendChild(textField);\n        node.append(containerNode);\n        dimension = textField.get(\"offsetHeight\");\n        padding = dimension - h;\n        left = w + padding + 2;\n        textField.setStyle(\"left\", left + PX);\n        containerNode.setStyle(\"height\", dimension + PX);\n        containerNode.setStyle(\"width\", (left + textField.get(\"offsetWidth\")) + PX);\n        shape = new ShapeClass({\n            fill: fill,\n            stroke: border,\n            width: w,\n            height: h,\n            x: padding * 0.5,\n            y: padding * 0.5,\n            w: w,\n            h: h,\n            graphic: containerNode\n        });\n        textField.setStyle(\"left\", dimension + PX);\n        item = {\n            node: containerNode,\n            width: containerNode.get(\"offsetWidth\"),\n            height: containerNode.get(\"offsetHeight\"),\n            shape: shape,\n            textNode: textField,\n            text: text\n        };\n        this._items.push(item);\n        return item;\n    }", "code_tokens": ["function", "(", "node", ",", "shapeClass", ",", "fill", ",", "border", ",", "labelStyles", ",", "w", ",", "h", ",", "text", ")", "{", "var", "containerNode", "=", "Y", ".", "Node", ".", "create", "(", "\"<div>\"", ")", ",", "textField", "=", "Y", ".", "Node", ".", "create", "(", "\"<span>\"", ")", ",", "shape", ",", "dimension", ",", "padding", ",", "left", ",", "item", ",", "ShapeClass", "=", "shapeClass", ";", "containerNode", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyle", "(", "POSITION", ",", "\"absolute\"", ")", ";", "textField", ".", "setStyles", "(", "labelStyles", ")", ";", "textField", ".", "set", "(", "\"text\"", ",", "text", ")", ";", "containerNode", ".", "appendChild", "(", "textField", ")", ";", "node", ".", "append", "(", "containerNode", ")", ";", "dimension", "=", "textField", ".", "get", "(", "\"offsetHeight\"", ")", ";", "padding", "=", "dimension", "-", "h", ";", "left", "=", "w", "+", "padding", "+", "2", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "left", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"height\"", ",", "dimension", "+", "PX", ")", ";", "containerNode", ".", "setStyle", "(", "\"width\"", ",", "(", "left", "+", "textField", ".", "get", "(", "\"offsetWidth\"", ")", ")", "+", "PX", ")", ";", "shape", "=", "new", "ShapeClass", "(", "{", "fill", ":", "fill", ",", "stroke", ":", "border", ",", "width", ":", "w", ",", "height", ":", "h", ",", "x", ":", "padding", "*", "0.5", ",", "y", ":", "padding", "*", "0.5", ",", "w", ":", "w", ",", "h", ":", "h", ",", "graphic", ":", "containerNode", "}", ")", ";", "textField", ".", "setStyle", "(", "\"left\"", ",", "dimension", "+", "PX", ")", ";", "item", "=", "{", "node", ":", "containerNode", ",", "width", ":", "containerNode", ".", "get", "(", "\"offsetWidth\"", ")", ",", "height", ":", "containerNode", ".", "get", "(", "\"offsetHeight\"", ")", ",", "shape", ":", "shape", ",", "textNode", ":", "textField", ",", "text", ":", "text", "}", ";", "this", ".", "_items", ".", "push", "(", "item", ")", ";", "return", "item", ";", "}"], "original_docstring": "\nReturns a legend item consisting of the following properties:\n<dl>\n<dt>node</dt><dd>The `Node` containing the legend item elements.</dd>\n<dt>shape</dt><dd>The `Shape` element for the legend item.</dd>\n<dt>textNode</dt><dd>The `Node` containing the text></dd>\n<dt>text</dt><dd></dd>\n</dl>\n\n@method _getLegendItem\n@param {Node} shapeProps Reference to the `node` attribute.\n@param {String | Class} shapeClass The type of shape\n@param {Object} fill Properties for the shape's fill\n@param {Object} border Properties for the shape's border\n@param {String} labelStyles String to be rendered as the legend's text\n@param {Number} width Total width of the legend item\n@param {Number} height Total height of the legend item\n@param {String} text Text for the legendItem\n@return Object\n@private\n", "docstring": {"block_comment": "Returns a legend item consisting of the following properties  \nnodeThe  Node  containing the legend item elements. \nshapeThe  Shape  element for the legend item. \ntextNodeThe  Node  containing the text  \ntext", "line_comment": null}, "docstring_tokens": ["Text", "for", "the", "legendItem"], "sample_id": 485, "prompt_tokens": ["<javascript>", "<param>", "text"], "comment_type": "param", "sentence_id": 4}
{"id": "21004351", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(series)\n    {\n        var styles = series.get(\"styles\"),\n            color;\n        if(series instanceof Y.LineSeries || series instanceof Y.StackedLineSeries)\n        {\n            styles = series.get(\"styles\").line;\n            color = styles.color || series._getDefaultColor(series.get(\"graphOrder\"), \"line\");\n            return {\n                border: {\n                    weight: 1,\n                    color: color\n                },\n                fill: {\n                    color: color\n                }\n            };\n        }\n        else if(series instanceof Y.AreaSeries || series instanceof Y.StackedAreaSeries)\n        {\n            styles = series.get(\"styles\").area;\n            color = styles.color || series._getDefaultColor(series.get(\"graphOrder\"), \"slice\");\n            return {\n                border: {\n                    weight: 1,\n                    color: color\n                },\n                fill: {\n                    color: color\n                }\n            };\n        }\n        else\n        {\n            styles = series.get(\"styles\").marker;\n            return {\n                fill: styles.fill,\n\n                border: {\n                    weight: styles.border.weight,\n\n                    color: styles.border.color,\n\n                    shape: styles.shape\n                },\n                shape: styles.shape\n            };\n        }\n    }", "code_tokens": ["function", "(", "series", ")", "{", "var", "styles", "=", "series", ".", "get", "(", "\"styles\"", ")", ",", "color", ";", "if", "(", "series", "instanceof", "Y", ".", "LineSeries", "||", "series", "instanceof", "Y", ".", "StackedLineSeries", ")", "{", "styles", "=", "series", ".", "get", "(", "\"styles\"", ")", ".", "line", ";", "color", "=", "styles", ".", "color", "||", "series", ".", "_getDefaultColor", "(", "series", ".", "get", "(", "\"graphOrder\"", ")", ",", "\"line\"", ")", ";", "return", "{", "border", ":", "{", "weight", ":", "1", ",", "color", ":", "color", "}", ",", "fill", ":", "{", "color", ":", "color", "}", "}", ";", "}", "else", "if", "(", "series", "instanceof", "Y", ".", "AreaSeries", "||", "series", "instanceof", "Y", ".", "StackedAreaSeries", ")", "{", "styles", "=", "series", ".", "get", "(", "\"styles\"", ")", ".", "area", ";", "color", "=", "styles", ".", "color", "||", "series", ".", "_getDefaultColor", "(", "series", ".", "get", "(", "\"graphOrder\"", ")", ",", "\"slice\"", ")", ";", "return", "{", "border", ":", "{", "weight", ":", "1", ",", "color", ":", "color", "}", ",", "fill", ":", "{", "color", ":", "color", "}", "}", ";", "}", "else", "{", "styles", "=", "series", ".", "get", "(", "\"styles\"", ")", ".", "marker", ";", "return", "{", "fill", ":", "styles", ".", "fill", ",", "border", ":", "{", "weight", ":", "styles", ".", "border", ".", "weight", ",", "color", ":", "styles", ".", "border", ".", "color", ",", "shape", ":", "styles", ".", "shape", "}", ",", "shape", ":", "styles", ".", "shape", "}", ";", "}", "}"], "original_docstring": "\nRetrieves the marker styles based on the type of series. For series that contain a marker, the marker styles are returned.\n\n@method _getStylesBySeriesType\n@param {CartesianSeries | PieSeries} The series in which the style properties will be received.\n@return Object An object containing fill, border and shape information.\n@private\n", "docstring": {"block_comment": "Retrieves the marker styles based on the type of series. For series that contain a marker, the marker styles are returned.", "line_comment": null}, "docstring_tokens": ["Retrieves", "the", "marker", "styles", "based", "on", "the", "type", "of", "series", ".", "For", "series", "that", "contain", "a", "marker", "the", "marker", "styles", "are", "returned", "."], "sample_id": 486, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004351", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(series)\n    {\n        var styles = series.get(\"styles\"),\n            color;\n        if(series instanceof Y.LineSeries || series instanceof Y.StackedLineSeries)\n        {\n            styles = series.get(\"styles\").line;\n            color = styles.color || series._getDefaultColor(series.get(\"graphOrder\"), \"line\");\n            return {\n                border: {\n                    weight: 1,\n                    color: color\n                },\n                fill: {\n                    color: color\n                }\n            };\n        }\n        else if(series instanceof Y.AreaSeries || series instanceof Y.StackedAreaSeries)\n        {\n            styles = series.get(\"styles\").area;\n            color = styles.color || series._getDefaultColor(series.get(\"graphOrder\"), \"slice\");\n            return {\n                border: {\n                    weight: 1,\n                    color: color\n                },\n                fill: {\n                    color: color\n                }\n            };\n        }\n        else\n        {\n            styles = series.get(\"styles\").marker;\n            return {\n                fill: styles.fill,\n\n                border: {\n                    weight: styles.border.weight,\n\n                    color: styles.border.color,\n\n                    shape: styles.shape\n                },\n                shape: styles.shape\n            };\n        }\n    }", "code_tokens": ["function", "(", "series", ")", "{", "var", "styles", "=", "series", ".", "get", "(", "\"styles\"", ")", ",", "color", ";", "if", "(", "series", "instanceof", "Y", ".", "LineSeries", "||", "series", "instanceof", "Y", ".", "StackedLineSeries", ")", "{", "styles", "=", "series", ".", "get", "(", "\"styles\"", ")", ".", "line", ";", "color", "=", "styles", ".", "color", "||", "series", ".", "_getDefaultColor", "(", "series", ".", "get", "(", "\"graphOrder\"", ")", ",", "\"line\"", ")", ";", "return", "{", "border", ":", "{", "weight", ":", "1", ",", "color", ":", "color", "}", ",", "fill", ":", "{", "color", ":", "color", "}", "}", ";", "}", "else", "if", "(", "series", "instanceof", "Y", ".", "AreaSeries", "||", "series", "instanceof", "Y", ".", "StackedAreaSeries", ")", "{", "styles", "=", "series", ".", "get", "(", "\"styles\"", ")", ".", "area", ";", "color", "=", "styles", ".", "color", "||", "series", ".", "_getDefaultColor", "(", "series", ".", "get", "(", "\"graphOrder\"", ")", ",", "\"slice\"", ")", ";", "return", "{", "border", ":", "{", "weight", ":", "1", ",", "color", ":", "color", "}", ",", "fill", ":", "{", "color", ":", "color", "}", "}", ";", "}", "else", "{", "styles", "=", "series", ".", "get", "(", "\"styles\"", ")", ".", "marker", ";", "return", "{", "fill", ":", "styles", ".", "fill", ",", "border", ":", "{", "weight", ":", "styles", ".", "border", ".", "weight", ",", "color", ":", "styles", ".", "border", ".", "color", ",", "shape", ":", "styles", ".", "shape", "}", ",", "shape", ":", "styles", ".", "shape", "}", ";", "}", "}"], "original_docstring": "\nRetrieves the marker styles based on the type of series. For series that contain a marker, the marker styles are returned.\n\n@method _getStylesBySeriesType\n@param {CartesianSeries | PieSeries} The series in which the style properties will be received.\n@return Object An object containing fill, border and shape information.\n@private\n", "docstring": {"block_comment": "Retrieves the marker styles based on the type of series. For series that contain a marker, the marker styles are returned.", "line_comment": null}, "docstring_tokens": ["An", "object", "containing", "fill", "border", "and", "shape", "information", "."], "sample_id": 486, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004352", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(styles)\n    {\n        var backgroundStyles = styles.background,\n            contentRect = this._contentRect,\n            padding = styles.padding,\n            x = contentRect.left - padding.left,\n            y = contentRect.top - padding.top,\n            w = contentRect.right - x + padding.right,\n            h = contentRect.bottom - y + padding.bottom;\n        this.get(\"background\").set({\n            fill: backgroundStyles.fill,\n            stroke: backgroundStyles.border,\n            width: w,\n            height: h,\n            x: x,\n            y: y\n        });\n    }", "code_tokens": ["function", "(", "styles", ")", "{", "var", "backgroundStyles", "=", "styles", ".", "background", ",", "contentRect", "=", "this", ".", "_contentRect", ",", "padding", "=", "styles", ".", "padding", ",", "x", "=", "contentRect", ".", "left", "-", "padding", ".", "left", ",", "y", "=", "contentRect", ".", "top", "-", "padding", ".", "top", ",", "w", "=", "contentRect", ".", "right", "-", "x", "+", "padding", ".", "right", ",", "h", "=", "contentRect", ".", "bottom", "-", "y", "+", "padding", ".", "bottom", ";", "this", ".", "get", "(", "\"background\"", ")", ".", "set", "(", "{", "fill", ":", "backgroundStyles", ".", "fill", ",", "stroke", ":", "backgroundStyles", ".", "border", ",", "width", ":", "w", ",", "height", ":", "h", ",", "x", ":", "x", ",", "y", ":", "y", "}", ")", ";", "}"], "original_docstring": "\nUpdates the background for the legend.\n\n@method _updateBackground\n@param {Object} styles Reference to the legend's styles attribute\n@private\n", "docstring": {"block_comment": "Updates the background for the legend.", "line_comment": null}, "docstring_tokens": ["Updates", "the", "background", "for", "the", "legend", "."], "sample_id": 487, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004352", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(styles)\n    {\n        var backgroundStyles = styles.background,\n            contentRect = this._contentRect,\n            padding = styles.padding,\n            x = contentRect.left - padding.left,\n            y = contentRect.top - padding.top,\n            w = contentRect.right - x + padding.right,\n            h = contentRect.bottom - y + padding.bottom;\n        this.get(\"background\").set({\n            fill: backgroundStyles.fill,\n            stroke: backgroundStyles.border,\n            width: w,\n            height: h,\n            x: x,\n            y: y\n        });\n    }", "code_tokens": ["function", "(", "styles", ")", "{", "var", "backgroundStyles", "=", "styles", ".", "background", ",", "contentRect", "=", "this", ".", "_contentRect", ",", "padding", "=", "styles", ".", "padding", ",", "x", "=", "contentRect", ".", "left", "-", "padding", ".", "left", ",", "y", "=", "contentRect", ".", "top", "-", "padding", ".", "top", ",", "w", "=", "contentRect", ".", "right", "-", "x", "+", "padding", ".", "right", ",", "h", "=", "contentRect", ".", "bottom", "-", "y", "+", "padding", ".", "bottom", ";", "this", ".", "get", "(", "\"background\"", ")", ".", "set", "(", "{", "fill", ":", "backgroundStyles", ".", "fill", ",", "stroke", ":", "backgroundStyles", ".", "border", ",", "width", ":", "w", ",", "height", ":", "h", ",", "x", ":", "x", ",", "y", ":", "y", "}", ")", ";", "}"], "original_docstring": "\nUpdates the background for the legend.\n\n@method _updateBackground\n@param {Object} styles Reference to the legend's styles attribute\n@private\n", "docstring": {"block_comment": "Updates the background for the legend.", "line_comment": null}, "docstring_tokens": ["Reference", "to", "the", "legend", "s", "styles", "attribute"], "sample_id": 487, "prompt_tokens": ["<javascript>", "<param>", "styles"], "comment_type": "param", "sentence_id": 1}
{"id": "21004353", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(e)\n    {\n        var attrName = e.attrName,\n            pos = this.get(POSITION),\n            vert = pos === LEFT || pos === RIGHT,\n            hor = pos === BOTTOM || pos === TOP;\n        if((hor && attrName === WIDTH) || (vert && attrName === HEIGHT))\n        {\n            this._drawLegend();\n        }\n    }", "code_tokens": ["function", "(", "e", ")", "{", "var", "attrName", "=", "e", ".", "attrName", ",", "pos", "=", "this", ".", "get", "(", "POSITION", ")", ",", "vert", "=", "pos", "===", "LEFT", "||", "pos", "===", "RIGHT", ",", "hor", "=", "pos", "===", "BOTTOM", "||", "pos", "===", "TOP", ";", "if", "(", "(", "hor", "&&", "attrName", "===", "WIDTH", ")", "||", "(", "vert", "&&", "attrName", "===", "HEIGHT", ")", ")", "{", "this", ".", "_drawLegend", "(", ")", ";", "}", "}"], "original_docstring": "\nUpdates the legend when the size changes.\n\n@method _handleSizeChange\n@param {Object} e Event object.\n@private\n", "docstring": {"block_comment": "Updates the legend when the size changes.", "line_comment": null}, "docstring_tokens": ["Updates", "the", "legend", "when", "the", "size", "changes", "."], "sample_id": 488, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004354", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var chart = this.get(\"chart\"),\n            parentNode = this._parentNode;\n        if(parentNode && ((chart && this.get(\"includeInChartLayout\"))))\n        {\n            this.fire(\"legendRendered\");\n        }\n        else if(this.get(\"rendered\"))\n        {\n            this._drawLegend();\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "var", "chart", "=", "this", ".", "get", "(", "\"chart\"", ")", ",", "parentNode", "=", "this", ".", "_parentNode", ";", "if", "(", "parentNode", "&&", "(", "(", "chart", "&&", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", ")", ")", "{", "this", ".", "fire", "(", "\"legendRendered\"", ")", ";", "}", "else", "if", "(", "this", ".", "get", "(", "\"rendered\"", ")", ")", "{", "this", ".", "_drawLegend", "(", ")", ";", "}", "}"], "original_docstring": "\nHandles position changes.\n\n@method _positionChangeHandler\n@param {Object} e Event object\n@private\n", "docstring": {"block_comment": "Handles position changes.", "line_comment": null}, "docstring_tokens": ["Handles", "position", "changes", "."], "sample_id": 489, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004355", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        if(this.get(\"rendered\"))\n        {\n            this._drawLegend();\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "get", "(", "\"rendered\"", ")", ")", "{", "this", ".", "_drawLegend", "(", ")", ";", "}", "}"], "original_docstring": "\nHandles changes to legend.\n\n@method _updateHandler\n@param {Object} e Event object\n@private\n", "docstring": {"block_comment": "Handles changes to legend.", "line_comment": null}, "docstring_tokens": ["Handles", "changes", "to", "legend", "."], "sample_id": 490, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004356", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        this._items = [];\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "_items", "=", "[", "]", ";", "}"], "original_docstring": "\nInitializes the chart.\n\n@method initializer\n@private\n", "docstring": {"block_comment": "Initializes the chart.", "line_comment": null}, "docstring_tokens": ["Initializes", "the", "chart", "."], "sample_id": 491, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004357", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        if(this._drawing)\n        {\n            this._callLater = true;\n            return;\n        }\n        this._drawing = true;\n        this._callLater = false;\n        var graph = this.get(\"graph\"),\n            w = this.get(\"width\"),\n            h = this.get(\"height\"),\n            graphWidth,\n            graphHeight,\n            legend = this.get(\"legend\"),\n            x = 0,\n            y = 0,\n            legendX = 0,\n            legendY = 0,\n            legendWidth,\n            legendHeight,\n            dimension,\n            gap,\n            position,\n            direction;\n        if(graph)\n        {\n            if(legend)\n            {\n                position = legend.get(\"position\");\n                direction = legend.get(\"direction\");\n                graphWidth = graph.get(\"width\");\n                graphHeight = graph.get(\"height\");\n                legendWidth = legend.get(\"width\");\n                legendHeight = legend.get(\"height\");\n                gap = legend.get(\"styles\").gap;\n\n                if((direction === \"vertical\" && (graphWidth + legendWidth + gap !== w)) ||\n                    (direction === \"horizontal\" &&  (graphHeight + legendHeight + gap !== h)))\n                {\n                    switch(legend.get(\"position\"))\n                    {\n                        case LEFT :\n                            dimension = Math.min(w - (legendWidth + gap), h);\n                            legendHeight = h;\n                            x = legendWidth + gap;\n                            legend.set(HEIGHT, legendHeight);\n                        break;\n                        case TOP :\n                            dimension = Math.min(h - (legendHeight + gap), w);\n                            legendWidth = w;\n                            y = legendHeight + gap;\n                            legend.set(WIDTH, legendWidth);\n                        break;\n                        case RIGHT :\n                            dimension = Math.min(w - (legendWidth + gap), h);\n                            legendHeight = h;\n                            legendX = dimension + gap;\n                            legend.set(HEIGHT, legendHeight);\n                        break;\n                        case BOTTOM :\n                            dimension = Math.min(h - (legendHeight + gap), w);\n                            legendWidth = w;\n                            legendY = dimension + gap;\n                            legend.set(WIDTH, legendWidth);\n                        break;\n                    }\n                    graph.set(WIDTH, dimension);\n                    graph.set(HEIGHT, dimension);\n                }\n                else\n                {\n                    switch(legend.get(\"position\"))\n                    {\n                        case LEFT :\n                            x = legendWidth + gap;\n                        break;\n                        case TOP :\n                            y = legendHeight + gap;\n                        break;\n                        case RIGHT :\n                            legendX = graphWidth + gap;\n                        break;\n                        case BOTTOM :\n                            legendY = graphHeight + gap;\n                        break;\n                    }\n                }\n            }\n            else\n            {\n                graph.set(_X, 0);\n                graph.set(_Y, 0);\n                graph.set(WIDTH, w);\n                graph.set(HEIGHT, h);\n            }\n        }\n        this._drawing = false;\n        if(this._callLater)\n        {\n            this._redraw();\n            return;\n        }\n        if(graph)\n        {\n            graph.set(_X, x);\n            graph.set(_Y, y);\n        }\n        if(legend)\n        {\n            legend.set(_X, legendX);\n            legend.set(_Y, legendY);\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "_drawing", ")", "{", "this", ".", "_callLater", "=", "true", ";", "return", ";", "}", "this", ".", "_drawing", "=", "true", ";", "this", ".", "_callLater", "=", "false", ";", "var", "graph", "=", "this", ".", "get", "(", "\"graph\"", ")", ",", "w", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "h", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "graphWidth", ",", "graphHeight", ",", "legend", "=", "this", ".", "get", "(", "\"legend\"", ")", ",", "x", "=", "0", ",", "y", "=", "0", ",", "legendX", "=", "0", ",", "legendY", "=", "0", ",", "legendWidth", ",", "legendHeight", ",", "dimension", ",", "gap", ",", "position", ",", "direction", ";", "if", "(", "graph", ")", "{", "if", "(", "legend", ")", "{", "position", "=", "legend", ".", "get", "(", "\"position\"", ")", ";", "direction", "=", "legend", ".", "get", "(", "\"direction\"", ")", ";", "graphWidth", "=", "graph", ".", "get", "(", "\"width\"", ")", ";", "graphHeight", "=", "graph", ".", "get", "(", "\"height\"", ")", ";", "legendWidth", "=", "legend", ".", "get", "(", "\"width\"", ")", ";", "legendHeight", "=", "legend", ".", "get", "(", "\"height\"", ")", ";", "gap", "=", "legend", ".", "get", "(", "\"styles\"", ")", ".", "gap", ";", "if", "(", "(", "direction", "===", "\"vertical\"", "&&", "(", "graphWidth", "+", "legendWidth", "+", "gap", "!==", "w", ")", ")", "||", "(", "direction", "===", "\"horizontal\"", "&&", "(", "graphHeight", "+", "legendHeight", "+", "gap", "!==", "h", ")", ")", ")", "{", "switch", "(", "legend", ".", "get", "(", "\"position\"", ")", ")", "{", "case", "LEFT", ":", "dimension", "=", "Math", ".", "min", "(", "w", "-", "(", "legendWidth", "+", "gap", ")", ",", "h", ")", ";", "legendHeight", "=", "h", ";", "x", "=", "legendWidth", "+", "gap", ";", "legend", ".", "set", "(", "HEIGHT", ",", "legendHeight", ")", ";", "break", ";", "case", "TOP", ":", "dimension", "=", "Math", ".", "min", "(", "h", "-", "(", "legendHeight", "+", "gap", ")", ",", "w", ")", ";", "legendWidth", "=", "w", ";", "y", "=", "legendHeight", "+", "gap", ";", "legend", ".", "set", "(", "WIDTH", ",", "legendWidth", ")", ";", "break", ";", "case", "RIGHT", ":", "dimension", "=", "Math", ".", "min", "(", "w", "-", "(", "legendWidth", "+", "gap", ")", ",", "h", ")", ";", "legendHeight", "=", "h", ";", "legendX", "=", "dimension", "+", "gap", ";", "legend", ".", "set", "(", "HEIGHT", ",", "legendHeight", ")", ";", "break", ";", "case", "BOTTOM", ":", "dimension", "=", "Math", ".", "min", "(", "h", "-", "(", "legendHeight", "+", "gap", ")", ",", "w", ")", ";", "legendWidth", "=", "w", ";", "legendY", "=", "dimension", "+", "gap", ";", "legend", ".", "set", "(", "WIDTH", ",", "legendWidth", ")", ";", "break", ";", "}", "graph", ".", "set", "(", "WIDTH", ",", "dimension", ")", ";", "graph", ".", "set", "(", "HEIGHT", ",", "dimension", ")", ";", "}", "else", "{", "switch", "(", "legend", ".", "get", "(", "\"position\"", ")", ")", "{", "case", "LEFT", ":", "x", "=", "legendWidth", "+", "gap", ";", "break", ";", "case", "TOP", ":", "y", "=", "legendHeight", "+", "gap", ";", "break", ";", "case", "RIGHT", ":", "legendX", "=", "graphWidth", "+", "gap", ";", "break", ";", "case", "BOTTOM", ":", "legendY", "=", "graphHeight", "+", "gap", ";", "break", ";", "}", "}", "}", "else", "{", "graph", ".", "set", "(", "_X", ",", "0", ")", ";", "graph", ".", "set", "(", "_Y", ",", "0", ")", ";", "graph", ".", "set", "(", "WIDTH", ",", "w", ")", ";", "graph", ".", "set", "(", "HEIGHT", ",", "h", ")", ";", "}", "}", "this", ".", "_drawing", "=", "false", ";", "if", "(", "this", ".", "_callLater", ")", "{", "this", ".", "_redraw", "(", ")", ";", "return", ";", "}", "if", "(", "graph", ")", "{", "graph", ".", "set", "(", "_X", ",", "x", ")", ";", "graph", ".", "set", "(", "_Y", ",", "y", ")", ";", "}", "if", "(", "legend", ")", "{", "legend", ".", "set", "(", "_X", ",", "legendX", ")", ";", "legend", ".", "set", "(", "_Y", ",", "legendY", ")", ";", "}", "}"], "original_docstring": "\nRedraws the chart instance.\n\n@method _redraw\n@private\n", "docstring": {"block_comment": "Redraws the chart instance.", "line_comment": null}, "docstring_tokens": ["Redraws", "the", "chart", "instance", "."], "sample_id": 492, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004358", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var legend = this.get(\"legend\");\n        if(legend)\n        {\n            legend.destroy(true);\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "var", "legend", "=", "this", ".", "get", "(", "\"legend\"", ")", ";", "if", "(", "legend", ")", "{", "legend", ".", "destroy", "(", "true", ")", ";", "}", "}"], "original_docstring": "\nDestructor implementation for the CartesianChart class. Calls destroy on all axes, series, legend (if available) and the Graph instance.\nRemoves the tooltip and overlay HTML elements.\n\n@method destructor\n@protected\n", "docstring": {"block_comment": "Destructor implementation for the CartesianChart class. Calls destroy on all axes, series, legend  if available  and the Graph instance. \nRemoves the tooltip and overlay HTML elements.", "line_comment": null}, "docstring_tokens": ["Destructor", "implementation", "for", "the", "CartesianChart", "class", ".", "Calls", "destroy", "on", "all", "axes", "series", "legend", "if", "available", "and", "the", "Graph", "instance", ".", "Removes", "the", "tooltip", "and", "overlay", "HTML", "elements", "."], "sample_id": 493, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004359", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var box = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            legend = this.get(\"legend\"),\n            position,\n            direction,\n            dimension,\n            size,\n            w = this.get(WIDTH),\n            h = this.get(HEIGHT),\n            gap;\n        if(legend && legend.get(\"includeInChartLayout\"))\n        {\n            gap = legend.get(\"styles\").gap;\n            position = legend.get(POSITION);\n            if(position !== EXTERNAL)\n            {\n                direction = legend.get(\"direction\");\n                dimension = direction === HORIZONTAL ? HEIGHT : WIDTH;\n                size = legend.get(dimension);\n                box[position] = size + gap;\n                switch(position)\n                {\n                    case TOP :\n                        legend.set(_Y, 0);\n                    break;\n                    case BOTTOM :\n                        legend.set(_Y, h - size);\n                    break;\n                    case RIGHT :\n                        legend.set(_X, w - size);\n                    break;\n                    case LEFT:\n                        legend.set(_X, 0);\n                    break;\n                }\n            }\n        }\n        return box;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "box", "=", "{", "top", ":", "0", ",", "right", ":", "0", ",", "bottom", ":", "0", ",", "left", ":", "0", "}", ",", "legend", "=", "this", ".", "get", "(", "\"legend\"", ")", ",", "position", ",", "direction", ",", "dimension", ",", "size", ",", "w", "=", "this", ".", "get", "(", "WIDTH", ")", ",", "h", "=", "this", ".", "get", "(", "HEIGHT", ")", ",", "gap", ";", "if", "(", "legend", "&&", "legend", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "gap", "=", "legend", ".", "get", "(", "\"styles\"", ")", ".", "gap", ";", "position", "=", "legend", ".", "get", "(", "POSITION", ")", ";", "if", "(", "position", "!==", "EXTERNAL", ")", "{", "direction", "=", "legend", ".", "get", "(", "\"direction\"", ")", ";", "dimension", "=", "direction", "===", "HORIZONTAL", "?", "HEIGHT", ":", "WIDTH", ";", "size", "=", "legend", ".", "get", "(", "dimension", ")", ";", "box", "[", "position", "]", "=", "size", "+", "gap", ";", "switch", "(", "position", ")", "{", "case", "TOP", ":", "legend", ".", "set", "(", "_Y", ",", "0", ")", ";", "break", ";", "case", "BOTTOM", ":", "legend", ".", "set", "(", "_Y", ",", "h", "-", "size", ")", ";", "break", ";", "case", "RIGHT", ":", "legend", ".", "set", "(", "_X", ",", "w", "-", "size", ")", ";", "break", ";", "case", "LEFT", ":", "legend", ".", "set", "(", "_X", ",", "0", ")", ";", "break", ";", "}", "}", "}", "return", "box", ";", "}"], "original_docstring": "\nPositions the legend in a chart and returns the properties of the legend to be used in the\nchart's layout algorithm.\n\n@method _getLayoutDimensions\n@return {Object} The left, top, right and bottom values for the legend.\n@protected\n", "docstring": {"block_comment": "Positions the legend in a chart and returns the properties of the legend to be used in the \nchart s layout algorithm.", "line_comment": null}, "docstring_tokens": ["Positions", "the", "legend", "in", "a", "chart", "and", "returns", "the", "properties", "of", "the", "legend", "to", "be", "used", "in", "the", "chart", "s", "layout", "algorithm", "."], "sample_id": 494, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004359", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        var box = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            legend = this.get(\"legend\"),\n            position,\n            direction,\n            dimension,\n            size,\n            w = this.get(WIDTH),\n            h = this.get(HEIGHT),\n            gap;\n        if(legend && legend.get(\"includeInChartLayout\"))\n        {\n            gap = legend.get(\"styles\").gap;\n            position = legend.get(POSITION);\n            if(position !== EXTERNAL)\n            {\n                direction = legend.get(\"direction\");\n                dimension = direction === HORIZONTAL ? HEIGHT : WIDTH;\n                size = legend.get(dimension);\n                box[position] = size + gap;\n                switch(position)\n                {\n                    case TOP :\n                        legend.set(_Y, 0);\n                    break;\n                    case BOTTOM :\n                        legend.set(_Y, h - size);\n                    break;\n                    case RIGHT :\n                        legend.set(_X, w - size);\n                    break;\n                    case LEFT:\n                        legend.set(_X, 0);\n                    break;\n                }\n            }\n        }\n        return box;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "box", "=", "{", "top", ":", "0", ",", "right", ":", "0", ",", "bottom", ":", "0", ",", "left", ":", "0", "}", ",", "legend", "=", "this", ".", "get", "(", "\"legend\"", ")", ",", "position", ",", "direction", ",", "dimension", ",", "size", ",", "w", "=", "this", ".", "get", "(", "WIDTH", ")", ",", "h", "=", "this", ".", "get", "(", "HEIGHT", ")", ",", "gap", ";", "if", "(", "legend", "&&", "legend", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "gap", "=", "legend", ".", "get", "(", "\"styles\"", ")", ".", "gap", ";", "position", "=", "legend", ".", "get", "(", "POSITION", ")", ";", "if", "(", "position", "!==", "EXTERNAL", ")", "{", "direction", "=", "legend", ".", "get", "(", "\"direction\"", ")", ";", "dimension", "=", "direction", "===", "HORIZONTAL", "?", "HEIGHT", ":", "WIDTH", ";", "size", "=", "legend", ".", "get", "(", "dimension", ")", ";", "box", "[", "position", "]", "=", "size", "+", "gap", ";", "switch", "(", "position", ")", "{", "case", "TOP", ":", "legend", ".", "set", "(", "_Y", ",", "0", ")", ";", "break", ";", "case", "BOTTOM", ":", "legend", ".", "set", "(", "_Y", ",", "h", "-", "size", ")", ";", "break", ";", "case", "RIGHT", ":", "legend", ".", "set", "(", "_X", ",", "w", "-", "size", ")", ";", "break", ";", "case", "LEFT", ":", "legend", ".", "set", "(", "_X", ",", "0", ")", ";", "break", ";", "}", "}", "}", "return", "box", ";", "}"], "original_docstring": "\nPositions the legend in a chart and returns the properties of the legend to be used in the\nchart's layout algorithm.\n\n@method _getLayoutDimensions\n@return {Object} The left, top, right and bottom values for the legend.\n@protected\n", "docstring": {"block_comment": "Positions the legend in a chart and returns the properties of the legend to be used in the \nchart s layout algorithm.", "line_comment": null}, "docstring_tokens": ["The", "left", "top", "right", "and", "bottom", "values", "for", "the", "legend", "."], "sample_id": 494, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004360", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n    {\n        if(this._drawing)\n        {\n            this._callLater = true;\n            return;\n        }\n        this._drawing = true;\n        this._callLater = false;\n        var w = this.get(\"width\"),\n            h = this.get(\"height\"),\n            layoutBoxDimensions = this._getLayoutBoxDimensions(),\n            leftPaneWidth = layoutBoxDimensions.left,\n            rightPaneWidth = layoutBoxDimensions.right,\n            topPaneHeight = layoutBoxDimensions.top,\n            bottomPaneHeight = layoutBoxDimensions.bottom,\n            leftAxesCollection = this.get(\"leftAxesCollection\"),\n            rightAxesCollection = this.get(\"rightAxesCollection\"),\n            topAxesCollection = this.get(\"topAxesCollection\"),\n            bottomAxesCollection = this.get(\"bottomAxesCollection\"),\n            i = 0,\n            l,\n            axis,\n            graphOverflow = \"visible\",\n            graph = this.get(\"graph\"),\n            topOverflow,\n            bottomOverflow,\n            leftOverflow,\n            rightOverflow,\n            graphWidth,\n            graphHeight,\n            graphX,\n            graphY,\n            allowContentOverflow = this.get(\"allowContentOverflow\"),\n            diff,\n            rightAxesXCoords,\n            leftAxesXCoords,\n            topAxesYCoords,\n            bottomAxesYCoords,\n            legend = this.get(\"legend\"),\n            graphRect = {};\n\n        if(leftAxesCollection)\n        {\n            leftAxesXCoords = [];\n            l = leftAxesCollection.length;\n            for(i = l - 1; i > -1; --i)\n            {\n                leftAxesXCoords.unshift(leftPaneWidth);\n                leftPaneWidth += leftAxesCollection[i].get(\"width\");\n            }\n        }\n        if(rightAxesCollection)\n        {\n            rightAxesXCoords = [];\n            l = rightAxesCollection.length;\n            i = 0;\n            for(i = l - 1; i > -1; --i)\n            {\n                rightPaneWidth += rightAxesCollection[i].get(\"width\");\n                rightAxesXCoords.unshift(w - rightPaneWidth);\n            }\n        }\n        if(topAxesCollection)\n        {\n            topAxesYCoords = [];\n            l = topAxesCollection.length;\n            for(i = l - 1; i > -1; --i)\n            {\n                topAxesYCoords.unshift(topPaneHeight);\n                topPaneHeight += topAxesCollection[i].get(\"height\");\n            }\n        }\n        if(bottomAxesCollection)\n        {\n            bottomAxesYCoords = [];\n            l = bottomAxesCollection.length;\n            for(i = l - 1; i > -1; --i)\n            {\n                bottomPaneHeight += bottomAxesCollection[i].get(\"height\");\n                bottomAxesYCoords.unshift(h - bottomPaneHeight);\n            }\n        }\n\n        graphWidth = w - (leftPaneWidth + rightPaneWidth);\n        graphHeight = h - (bottomPaneHeight + topPaneHeight);\n        graphRect.left = leftPaneWidth;\n        graphRect.top = topPaneHeight;\n        graphRect.bottom = h - bottomPaneHeight;\n        graphRect.right = w - rightPaneWidth;\n        if(!allowContentOverflow)\n        {\n            topOverflow = this._getTopOverflow(leftAxesCollection, rightAxesCollection);\n            bottomOverflow = this._getBottomOverflow(leftAxesCollection, rightAxesCollection);\n            leftOverflow = this._getLeftOverflow(bottomAxesCollection, topAxesCollection);\n            rightOverflow = this._getRightOverflow(bottomAxesCollection, topAxesCollection);\n\n            diff = topOverflow - topPaneHeight;\n            if(diff > 0)\n            {\n                graphRect.top = topOverflow;\n                if(topAxesYCoords)\n                {\n                    i = 0;\n                    l = topAxesYCoords.length;\n                    for(; i < l; ++i)\n                    {\n                        topAxesYCoords[i] += diff;\n                    }\n                }\n            }\n\n            diff = bottomOverflow - bottomPaneHeight;\n            if(diff > 0)\n            {\n                graphRect.bottom = h - bottomOverflow;\n                if(bottomAxesYCoords)\n                {\n                    i = 0;\n                    l = bottomAxesYCoords.length;\n                    for(; i < l; ++i)\n                    {\n                        bottomAxesYCoords[i] -= diff;\n                    }\n                }\n            }\n\n            diff = leftOverflow - leftPaneWidth;\n            if(diff > 0)\n            {\n                graphRect.left = leftOverflow;\n                if(leftAxesXCoords)\n                {\n                    i = 0;\n                    l = leftAxesXCoords.length;\n                    for(; i < l; ++i)\n                    {\n                        leftAxesXCoords[i] += diff;\n                    }\n                }\n            }\n\n            diff = rightOverflow - rightPaneWidth;\n            if(diff > 0)\n            {\n                graphRect.right = w - rightOverflow;\n                if(rightAxesXCoords)\n                {\n                    i = 0;\n                    l = rightAxesXCoords.length;\n                    for(; i < l; ++i)\n                    {\n                        rightAxesXCoords[i] -= diff;\n                    }\n                }\n            }\n        }\n        graphWidth = graphRect.right - graphRect.left;\n        graphHeight = graphRect.bottom - graphRect.top;\n        graphX = graphRect.left;\n        graphY = graphRect.top;\n        if(legend)\n        {\n            if(legend.get(\"includeInChartLayout\"))\n            {\n                switch(legend.get(\"position\"))\n                {\n                    case \"left\" :\n                        legend.set(\"y\", graphY);\n                        legend.set(\"height\", graphHeight);\n                    break;\n                    case \"top\" :\n                        legend.set(\"x\", graphX);\n                        legend.set(\"width\", graphWidth);\n                    break;\n                    case \"bottom\" :\n                        legend.set(\"x\", graphX);\n                        legend.set(\"width\", graphWidth);\n                    break;\n                    case \"right\" :\n                        legend.set(\"y\", graphY);\n                        legend.set(\"height\", graphHeight);\n                    break;\n                }\n            }\n        }\n        if(topAxesCollection)\n        {\n            l = topAxesCollection.length;\n            i = 0;\n            for(; i < l; i++)\n            {\n                axis = topAxesCollection[i];\n                if(axis.get(\"width\") !== graphWidth)\n                {\n                    axis.set(\"width\", graphWidth);\n                }\n                axis.get(\"boundingBox\").setStyle(\"left\", graphX + PX);\n                axis.get(\"boundingBox\").setStyle(\"top\", topAxesYCoords[i] + PX);\n            }\n            if(axis._hasDataOverflow())\n            {\n                graphOverflow = \"hidden\";\n            }\n        }\n        if(bottomAxesCollection)\n        {\n            l = bottomAxesCollection.length;\n            i = 0;\n            for(; i < l; i++)\n            {\n                axis = bottomAxesCollection[i];\n                if(axis.get(\"width\") !== graphWidth)\n                {\n                    axis.set(\"width\", graphWidth);\n                }\n                axis.get(\"boundingBox\").setStyle(\"left\", graphX + PX);\n                axis.get(\"boundingBox\").setStyle(\"top\", bottomAxesYCoords[i] + PX);\n            }\n            if(axis._hasDataOverflow())\n            {\n                graphOverflow = \"hidden\";\n            }\n        }\n        if(leftAxesCollection)\n        {\n            l = leftAxesCollection.length;\n            i = 0;\n            for(; i < l; ++i)\n            {\n                axis = leftAxesCollection[i];\n                axis.get(\"boundingBox\").setStyle(\"top\", graphY + PX);\n                axis.get(\"boundingBox\").setStyle(\"left\", leftAxesXCoords[i] + PX);\n                if(axis.get(\"height\") !== graphHeight)\n                {\n                    axis.set(\"height\", graphHeight);\n                }\n            }\n            if(axis._hasDataOverflow())\n            {\n                graphOverflow = \"hidden\";\n            }\n        }\n        if(rightAxesCollection)\n        {\n            l = rightAxesCollection.length;\n            i = 0;\n            for(; i < l; ++i)\n            {\n                axis = rightAxesCollection[i];\n                axis.get(\"boundingBox\").setStyle(\"top\", graphY + PX);\n                axis.get(\"boundingBox\").setStyle(\"left\", rightAxesXCoords[i] + PX);\n                if(axis.get(\"height\") !== graphHeight)\n                {\n                    axis.set(\"height\", graphHeight);\n                }\n            }\n            if(axis._hasDataOverflow())\n            {\n                graphOverflow = \"hidden\";\n            }\n        }\n        this._drawing = false;\n        if(this._callLater)\n        {\n            this._redraw();\n            return;\n        }\n        if(graph)\n        {\n            graph.get(\"boundingBox\").setStyle(\"left\", graphX + PX);\n            graph.get(\"boundingBox\").setStyle(\"top\", graphY + PX);\n            graph.set(\"width\", graphWidth);\n            graph.set(\"height\", graphHeight);\n            graph.get(\"boundingBox\").setStyle(\"overflow\", graphOverflow);\n        }\n\n        if(this._overlay)\n        {\n            this._overlay.setStyle(\"left\", graphX + PX);\n            this._overlay.setStyle(\"top\", graphY + PX);\n            this._overlay.setStyle(\"width\", graphWidth + PX);\n            this._overlay.setStyle(\"height\", graphHeight + PX);\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "_drawing", ")", "{", "this", ".", "_callLater", "=", "true", ";", "return", ";", "}", "this", ".", "_drawing", "=", "true", ";", "this", ".", "_callLater", "=", "false", ";", "var", "w", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "h", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "layoutBoxDimensions", "=", "this", ".", "_getLayoutBoxDimensions", "(", ")", ",", "leftPaneWidth", "=", "layoutBoxDimensions", ".", "left", ",", "rightPaneWidth", "=", "layoutBoxDimensions", ".", "right", ",", "topPaneHeight", "=", "layoutBoxDimensions", ".", "top", ",", "bottomPaneHeight", "=", "layoutBoxDimensions", ".", "bottom", ",", "leftAxesCollection", "=", "this", ".", "get", "(", "\"leftAxesCollection\"", ")", ",", "rightAxesCollection", "=", "this", ".", "get", "(", "\"rightAxesCollection\"", ")", ",", "topAxesCollection", "=", "this", ".", "get", "(", "\"topAxesCollection\"", ")", ",", "bottomAxesCollection", "=", "this", ".", "get", "(", "\"bottomAxesCollection\"", ")", ",", "i", "=", "0", ",", "l", ",", "axis", ",", "graphOverflow", "=", "\"visible\"", ",", "graph", "=", "this", ".", "get", "(", "\"graph\"", ")", ",", "topOverflow", ",", "bottomOverflow", ",", "leftOverflow", ",", "rightOverflow", ",", "graphWidth", ",", "graphHeight", ",", "graphX", ",", "graphY", ",", "allowContentOverflow", "=", "this", ".", "get", "(", "\"allowContentOverflow\"", ")", ",", "diff", ",", "rightAxesXCoords", ",", "leftAxesXCoords", ",", "topAxesYCoords", ",", "bottomAxesYCoords", ",", "legend", "=", "this", ".", "get", "(", "\"legend\"", ")", ",", "graphRect", "=", "{", "}", ";", "if", "(", "leftAxesCollection", ")", "{", "leftAxesXCoords", "=", "[", "]", ";", "l", "=", "leftAxesCollection", ".", "length", ";", "for", "(", "i", "=", "l", "-", "1", ";", "i", ">", "-", "1", ";", "--", "i", ")", "{", "leftAxesXCoords", ".", "unshift", "(", "leftPaneWidth", ")", ";", "leftPaneWidth", "+=", "leftAxesCollection", "[", "i", "]", ".", "get", "(", "\"width\"", ")", ";", "}", "}", "if", "(", "rightAxesCollection", ")", "{", "rightAxesXCoords", "=", "[", "]", ";", "l", "=", "rightAxesCollection", ".", "length", ";", "i", "=", "0", ";", "for", "(", "i", "=", "l", "-", "1", ";", "i", ">", "-", "1", ";", "--", "i", ")", "{", "rightPaneWidth", "+=", "rightAxesCollection", "[", "i", "]", ".", "get", "(", "\"width\"", ")", ";", "rightAxesXCoords", ".", "unshift", "(", "w", "-", "rightPaneWidth", ")", ";", "}", "}", "if", "(", "topAxesCollection", ")", "{", "topAxesYCoords", "=", "[", "]", ";", "l", "=", "topAxesCollection", ".", "length", ";", "for", "(", "i", "=", "l", "-", "1", ";", "i", ">", "-", "1", ";", "--", "i", ")", "{", "topAxesYCoords", ".", "unshift", "(", "topPaneHeight", ")", ";", "topPaneHeight", "+=", "topAxesCollection", "[", "i", "]", ".", "get", "(", "\"height\"", ")", ";", "}", "}", "if", "(", "bottomAxesCollection", ")", "{", "bottomAxesYCoords", "=", "[", "]", ";", "l", "=", "bottomAxesCollection", ".", "length", ";", "for", "(", "i", "=", "l", "-", "1", ";", "i", ">", "-", "1", ";", "--", "i", ")", "{", "bottomPaneHeight", "+=", "bottomAxesCollection", "[", "i", "]", ".", "get", "(", "\"height\"", ")", ";", "bottomAxesYCoords", ".", "unshift", "(", "h", "-", "bottomPaneHeight", ")", ";", "}", "}", "graphWidth", "=", "w", "-", "(", "leftPaneWidth", "+", "rightPaneWidth", ")", ";", "graphHeight", "=", "h", "-", "(", "bottomPaneHeight", "+", "topPaneHeight", ")", ";", "graphRect", ".", "left", "=", "leftPaneWidth", ";", "graphRect", ".", "top", "=", "topPaneHeight", ";", "graphRect", ".", "bottom", "=", "h", "-", "bottomPaneHeight", ";", "graphRect", ".", "right", "=", "w", "-", "rightPaneWidth", ";", "if", "(", "!", "allowContentOverflow", ")", "{", "topOverflow", "=", "this", ".", "_getTopOverflow", "(", "leftAxesCollection", ",", "rightAxesCollection", ")", ";", "bottomOverflow", "=", "this", ".", "_getBottomOverflow", "(", "leftAxesCollection", ",", "rightAxesCollection", ")", ";", "leftOverflow", "=", "this", ".", "_getLeftOverflow", "(", "bottomAxesCollection", ",", "topAxesCollection", ")", ";", "rightOverflow", "=", "this", ".", "_getRightOverflow", "(", "bottomAxesCollection", ",", "topAxesCollection", ")", ";", "diff", "=", "topOverflow", "-", "topPaneHeight", ";", "if", "(", "diff", ">", "0", ")", "{", "graphRect", ".", "top", "=", "topOverflow", ";", "if", "(", "topAxesYCoords", ")", "{", "i", "=", "0", ";", "l", "=", "topAxesYCoords", ".", "length", ";", "for", "(", ";", "i", "<", "l", ";", "++", "i", ")", "{", "topAxesYCoords", "[", "i", "]", "+=", "diff", ";", "}", "}", "}", "diff", "=", "bottomOverflow", "-", "bottomPaneHeight", ";", "if", "(", "diff", ">", "0", ")", "{", "graphRect", ".", "bottom", "=", "h", "-", "bottomOverflow", ";", "if", "(", "bottomAxesYCoords", ")", "{", "i", "=", "0", ";", "l", "=", "bottomAxesYCoords", ".", "length", ";", "for", "(", ";", "i", "<", "l", ";", "++", "i", ")", "{", "bottomAxesYCoords", "[", "i", "]", "-=", "diff", ";", "}", "}", "}", "diff", "=", "leftOverflow", "-", "leftPaneWidth", ";", "if", "(", "diff", ">", "0", ")", "{", "graphRect", ".", "left", "=", "leftOverflow", ";", "if", "(", "leftAxesXCoords", ")", "{", "i", "=", "0", ";", "l", "=", "leftAxesXCoords", ".", "length", ";", "for", "(", ";", "i", "<", "l", ";", "++", "i", ")", "{", "leftAxesXCoords", "[", "i", "]", "+=", "diff", ";", "}", "}", "}", "diff", "=", "rightOverflow", "-", "rightPaneWidth", ";", "if", "(", "diff", ">", "0", ")", "{", "graphRect", ".", "right", "=", "w", "-", "rightOverflow", ";", "if", "(", "rightAxesXCoords", ")", "{", "i", "=", "0", ";", "l", "=", "rightAxesXCoords", ".", "length", ";", "for", "(", ";", "i", "<", "l", ";", "++", "i", ")", "{", "rightAxesXCoords", "[", "i", "]", "-=", "diff", ";", "}", "}", "}", "}", "graphWidth", "=", "graphRect", ".", "right", "-", "graphRect", ".", "left", ";", "graphHeight", "=", "graphRect", ".", "bottom", "-", "graphRect", ".", "top", ";", "graphX", "=", "graphRect", ".", "left", ";", "graphY", "=", "graphRect", ".", "top", ";", "if", "(", "legend", ")", "{", "if", "(", "legend", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "switch", "(", "legend", ".", "get", "(", "\"position\"", ")", ")", "{", "case", "\"left\"", ":", "legend", ".", "set", "(", "\"y\"", ",", "graphY", ")", ";", "legend", ".", "set", "(", "\"height\"", ",", "graphHeight", ")", ";", "break", ";", "case", "\"top\"", ":", "legend", ".", "set", "(", "\"x\"", ",", "graphX", ")", ";", "legend", ".", "set", "(", "\"width\"", ",", "graphWidth", ")", ";", "break", ";", "case", "\"bottom\"", ":", "legend", ".", "set", "(", "\"x\"", ",", "graphX", ")", ";", "legend", ".", "set", "(", "\"width\"", ",", "graphWidth", ")", ";", "break", ";", "case", "\"right\"", ":", "legend", ".", "set", "(", "\"y\"", ",", "graphY", ")", ";", "legend", ".", "set", "(", "\"height\"", ",", "graphHeight", ")", ";", "break", ";", "}", "}", "}", "if", "(", "topAxesCollection", ")", "{", "l", "=", "topAxesCollection", ".", "length", ";", "i", "=", "0", ";", "for", "(", ";", "i", "<", "l", ";", "i", "++", ")", "{", "axis", "=", "topAxesCollection", "[", "i", "]", ";", "if", "(", "axis", ".", "get", "(", "\"width\"", ")", "!==", "graphWidth", ")", "{", "axis", ".", "set", "(", "\"width\"", ",", "graphWidth", ")", ";", "}", "axis", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"left\"", ",", "graphX", "+", "PX", ")", ";", "axis", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"top\"", ",", "topAxesYCoords", "[", "i", "]", "+", "PX", ")", ";", "}", "if", "(", "axis", ".", "_hasDataOverflow", "(", ")", ")", "{", "graphOverflow", "=", "\"hidden\"", ";", "}", "}", "if", "(", "bottomAxesCollection", ")", "{", "l", "=", "bottomAxesCollection", ".", "length", ";", "i", "=", "0", ";", "for", "(", ";", "i", "<", "l", ";", "i", "++", ")", "{", "axis", "=", "bottomAxesCollection", "[", "i", "]", ";", "if", "(", "axis", ".", "get", "(", "\"width\"", ")", "!==", "graphWidth", ")", "{", "axis", ".", "set", "(", "\"width\"", ",", "graphWidth", ")", ";", "}", "axis", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"left\"", ",", "graphX", "+", "PX", ")", ";", "axis", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"top\"", ",", "bottomAxesYCoords", "[", "i", "]", "+", "PX", ")", ";", "}", "if", "(", "axis", ".", "_hasDataOverflow", "(", ")", ")", "{", "graphOverflow", "=", "\"hidden\"", ";", "}", "}", "if", "(", "leftAxesCollection", ")", "{", "l", "=", "leftAxesCollection", ".", "length", ";", "i", "=", "0", ";", "for", "(", ";", "i", "<", "l", ";", "++", "i", ")", "{", "axis", "=", "leftAxesCollection", "[", "i", "]", ";", "axis", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"top\"", ",", "graphY", "+", "PX", ")", ";", "axis", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"left\"", ",", "leftAxesXCoords", "[", "i", "]", "+", "PX", ")", ";", "if", "(", "axis", ".", "get", "(", "\"height\"", ")", "!==", "graphHeight", ")", "{", "axis", ".", "set", "(", "\"height\"", ",", "graphHeight", ")", ";", "}", "}", "if", "(", "axis", ".", "_hasDataOverflow", "(", ")", ")", "{", "graphOverflow", "=", "\"hidden\"", ";", "}", "}", "if", "(", "rightAxesCollection", ")", "{", "l", "=", "rightAxesCollection", ".", "length", ";", "i", "=", "0", ";", "for", "(", ";", "i", "<", "l", ";", "++", "i", ")", "{", "axis", "=", "rightAxesCollection", "[", "i", "]", ";", "axis", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"top\"", ",", "graphY", "+", "PX", ")", ";", "axis", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"left\"", ",", "rightAxesXCoords", "[", "i", "]", "+", "PX", ")", ";", "if", "(", "axis", ".", "get", "(", "\"height\"", ")", "!==", "graphHeight", ")", "{", "axis", ".", "set", "(", "\"height\"", ",", "graphHeight", ")", ";", "}", "}", "if", "(", "axis", ".", "_hasDataOverflow", "(", ")", ")", "{", "graphOverflow", "=", "\"hidden\"", ";", "}", "}", "this", ".", "_drawing", "=", "false", ";", "if", "(", "this", ".", "_callLater", ")", "{", "this", ".", "_redraw", "(", ")", ";", "return", ";", "}", "if", "(", "graph", ")", "{", "graph", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"left\"", ",", "graphX", "+", "PX", ")", ";", "graph", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"top\"", ",", "graphY", "+", "PX", ")", ";", "graph", ".", "set", "(", "\"width\"", ",", "graphWidth", ")", ";", "graph", ".", "set", "(", "\"height\"", ",", "graphHeight", ")", ";", "graph", ".", "get", "(", "\"boundingBox\"", ")", ".", "setStyle", "(", "\"overflow\"", ",", "graphOverflow", ")", ";", "}", "if", "(", "this", ".", "_overlay", ")", "{", "this", ".", "_overlay", ".", "setStyle", "(", "\"left\"", ",", "graphX", "+", "PX", ")", ";", "this", ".", "_overlay", ".", "setStyle", "(", "\"top\"", ",", "graphY", "+", "PX", ")", ";", "this", ".", "_overlay", ".", "setStyle", "(", "\"width\"", ",", "graphWidth", "+", "PX", ")", ";", "this", ".", "_overlay", ".", "setStyle", "(", "\"height\"", ",", "graphHeight", "+", "PX", ")", ";", "}", "}"], "original_docstring": "\nRedraws and position all the components of the chart instance.\n\n@method _redraw\n@private\n", "docstring": {"block_comment": "Redraws and position all the components of the chart instance.", "line_comment": null}, "docstring_tokens": ["Redraws", "and", "position", "all", "the", "components", "of", "the", "chart", "instance", "."], "sample_id": 495, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004361", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(h, totalHeight, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case TOP :\n                startPoint = padding.top;\n            break;\n            case \"middle\" :\n                startPoint = (h - totalHeight) * 0.5;\n            break;\n            case BOTTOM :\n                startPoint = h - totalHeight - padding.bottom;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "h", ",", "totalHeight", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "TOP", ":", "startPoint", "=", "padding", ".", "top", ";", "break", ";", "case", "\"middle\"", ":", "startPoint", "=", "(", "h", "-", "totalHeight", ")", "*", "0.5", ";", "break", ";", "case", "BOTTOM", ":", "startPoint", "=", "h", "-", "totalHeight", "-", "padding", ".", "bottom", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting y-coordinate for a column of legend items.\n\n@method getStartPoint\n@param {Number} h Height of the legend.\n@param {Number} totalHeight Total height of all labels in the column.\n@param {String} align Vertical alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting y coordinate for a column of legend items.", "line_comment": null}, "docstring_tokens": ["Returns", "the", "starting", "y", "coordinate", "for", "a", "column", "of", "legend", "items", "."], "sample_id": 496, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004361", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(h, totalHeight, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case TOP :\n                startPoint = padding.top;\n            break;\n            case \"middle\" :\n                startPoint = (h - totalHeight) * 0.5;\n            break;\n            case BOTTOM :\n                startPoint = h - totalHeight - padding.bottom;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "h", ",", "totalHeight", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "TOP", ":", "startPoint", "=", "padding", ".", "top", ";", "break", ";", "case", "\"middle\"", ":", "startPoint", "=", "(", "h", "-", "totalHeight", ")", "*", "0.5", ";", "break", ";", "case", "BOTTOM", ":", "startPoint", "=", "h", "-", "totalHeight", "-", "padding", ".", "bottom", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting y-coordinate for a column of legend items.\n\n@method getStartPoint\n@param {Number} h Height of the legend.\n@param {Number} totalHeight Total height of all labels in the column.\n@param {String} align Vertical alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting y coordinate for a column of legend items.", "line_comment": null}, "docstring_tokens": ["Height", "of", "the", "legend", "."], "sample_id": 496, "prompt_tokens": ["<javascript>", "<param>", "h"], "comment_type": "param", "sentence_id": 1}
{"id": "21004361", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(h, totalHeight, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case TOP :\n                startPoint = padding.top;\n            break;\n            case \"middle\" :\n                startPoint = (h - totalHeight) * 0.5;\n            break;\n            case BOTTOM :\n                startPoint = h - totalHeight - padding.bottom;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "h", ",", "totalHeight", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "TOP", ":", "startPoint", "=", "padding", ".", "top", ";", "break", ";", "case", "\"middle\"", ":", "startPoint", "=", "(", "h", "-", "totalHeight", ")", "*", "0.5", ";", "break", ";", "case", "BOTTOM", ":", "startPoint", "=", "h", "-", "totalHeight", "-", "padding", ".", "bottom", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting y-coordinate for a column of legend items.\n\n@method getStartPoint\n@param {Number} h Height of the legend.\n@param {Number} totalHeight Total height of all labels in the column.\n@param {String} align Vertical alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting y coordinate for a column of legend items.", "line_comment": null}, "docstring_tokens": ["Total", "height", "of", "all", "labels", "in", "the", "column", "."], "sample_id": 496, "prompt_tokens": ["<javascript>", "<param>", "totalHeight"], "comment_type": "param", "sentence_id": 2}
{"id": "21004361", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(h, totalHeight, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case TOP :\n                startPoint = padding.top;\n            break;\n            case \"middle\" :\n                startPoint = (h - totalHeight) * 0.5;\n            break;\n            case BOTTOM :\n                startPoint = h - totalHeight - padding.bottom;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "h", ",", "totalHeight", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "TOP", ":", "startPoint", "=", "padding", ".", "top", ";", "break", ";", "case", "\"middle\"", ":", "startPoint", "=", "(", "h", "-", "totalHeight", ")", "*", "0.5", ";", "break", ";", "case", "BOTTOM", ":", "startPoint", "=", "h", "-", "totalHeight", "-", "padding", ".", "bottom", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting y-coordinate for a column of legend items.\n\n@method getStartPoint\n@param {Number} h Height of the legend.\n@param {Number} totalHeight Total height of all labels in the column.\n@param {String} align Vertical alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting y coordinate for a column of legend items.", "line_comment": null}, "docstring_tokens": ["Vertical", "alignment", "of", "items", "for", "the", "legend", "."], "sample_id": 496, "prompt_tokens": ["<javascript>", "<param>", "align"], "comment_type": "param", "sentence_id": 3}
{"id": "21004361", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(h, totalHeight, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case TOP :\n                startPoint = padding.top;\n            break;\n            case \"middle\" :\n                startPoint = (h - totalHeight) * 0.5;\n            break;\n            case BOTTOM :\n                startPoint = h - totalHeight - padding.bottom;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "h", ",", "totalHeight", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "TOP", ":", "startPoint", "=", "padding", ".", "top", ";", "break", ";", "case", "\"middle\"", ":", "startPoint", "=", "(", "h", "-", "totalHeight", ")", "*", "0.5", ";", "break", ";", "case", "BOTTOM", ":", "startPoint", "=", "h", "-", "totalHeight", "-", "padding", ".", "bottom", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting y-coordinate for a column of legend items.\n\n@method getStartPoint\n@param {Number} h Height of the legend.\n@param {Number} totalHeight Total height of all labels in the column.\n@param {String} align Vertical alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting y coordinate for a column of legend items.", "line_comment": null}, "docstring_tokens": ["Object", "contain", "left", "top", "right", "and", "bottom", "padding", "properties", "."], "sample_id": 496, "prompt_tokens": ["<javascript>", "<param>", "padding"], "comment_type": "param", "sentence_id": 4}
{"id": "21004362", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, limit, verticalGap)\n    {\n        var item = items[0],\n            columnArray = [[item]],\n            i = 1,\n            columnIterator = 0,\n            len = items.length,\n            totalHeight = item.height,\n            itemHeight,\n            totalHeightArray = [[totalHeight]];\n        for(; i < len; ++i)\n        {\n            item = items[i];\n            itemHeight = item.height;\n            if((totalHeight + verticalGap + itemHeight) <= limit)\n            {\n                totalHeight += verticalGap + itemHeight;\n                columnArray[columnIterator].push(item);\n            }\n            else\n            {\n                totalHeight = verticalGap + itemHeight;\n                if(columnArray[columnIterator])\n                {\n                    columnIterator += 1;\n                }\n                columnArray[columnIterator] = [item];\n            }\n            totalHeightArray[columnIterator] = totalHeight;\n        }\n        VerticalLegendLayout.columnArray = columnArray;\n        VerticalLegendLayout.totalHeightArray = totalHeightArray;\n    }", "code_tokens": ["function", "(", "items", ",", "limit", ",", "verticalGap", ")", "{", "var", "item", "=", "items", "[", "0", "]", ",", "columnArray", "=", "[", "[", "item", "]", "]", ",", "i", "=", "1", ",", "columnIterator", "=", "0", ",", "len", "=", "items", ".", "length", ",", "totalHeight", "=", "item", ".", "height", ",", "itemHeight", ",", "totalHeightArray", "=", "[", "[", "totalHeight", "]", "]", ";", "for", "(", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "items", "[", "i", "]", ";", "itemHeight", "=", "item", ".", "height", ";", "if", "(", "(", "totalHeight", "+", "verticalGap", "+", "itemHeight", ")", "<=", "limit", ")", "{", "totalHeight", "+=", "verticalGap", "+", "itemHeight", ";", "columnArray", "[", "columnIterator", "]", ".", "push", "(", "item", ")", ";", "}", "else", "{", "totalHeight", "=", "verticalGap", "+", "itemHeight", ";", "if", "(", "columnArray", "[", "columnIterator", "]", ")", "{", "columnIterator", "+=", "1", ";", "}", "columnArray", "[", "columnIterator", "]", "=", "[", "item", "]", ";", "}", "totalHeightArray", "[", "columnIterator", "]", "=", "totalHeight", ";", "}", "VerticalLegendLayout", ".", "columnArray", "=", "columnArray", ";", "VerticalLegendLayout", ".", "totalHeightArray", "=", "totalHeightArray", ";", "}"], "original_docstring": "\nCreates column and total height arrays used for displaying multiple columns of\nlegend items based on the items, available height and verticalGap for the legend.\n\n@method _setColumnArrays\n@param {Array} items Array of legend items to display in a legend.\n@param {Number} limit Total available height for displaying items in a legend.\n@param {Number} verticalGap Vertical distance between items in a legend.\n@protected\n", "docstring": {"block_comment": "Creates column and total height arrays used for displaying multiple columns of \nlegend items based on the items, available height and verticalGap for the legend.", "line_comment": null}, "docstring_tokens": ["Creates", "column", "and", "total", "height", "arrays", "used", "for", "displaying", "multiple", "columns", "of", "legend", "items", "based", "on", "the", "items", "available", "height", "and", "verticalGap", "for", "the", "legend", "."], "sample_id": 497, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004362", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, limit, verticalGap)\n    {\n        var item = items[0],\n            columnArray = [[item]],\n            i = 1,\n            columnIterator = 0,\n            len = items.length,\n            totalHeight = item.height,\n            itemHeight,\n            totalHeightArray = [[totalHeight]];\n        for(; i < len; ++i)\n        {\n            item = items[i];\n            itemHeight = item.height;\n            if((totalHeight + verticalGap + itemHeight) <= limit)\n            {\n                totalHeight += verticalGap + itemHeight;\n                columnArray[columnIterator].push(item);\n            }\n            else\n            {\n                totalHeight = verticalGap + itemHeight;\n                if(columnArray[columnIterator])\n                {\n                    columnIterator += 1;\n                }\n                columnArray[columnIterator] = [item];\n            }\n            totalHeightArray[columnIterator] = totalHeight;\n        }\n        VerticalLegendLayout.columnArray = columnArray;\n        VerticalLegendLayout.totalHeightArray = totalHeightArray;\n    }", "code_tokens": ["function", "(", "items", ",", "limit", ",", "verticalGap", ")", "{", "var", "item", "=", "items", "[", "0", "]", ",", "columnArray", "=", "[", "[", "item", "]", "]", ",", "i", "=", "1", ",", "columnIterator", "=", "0", ",", "len", "=", "items", ".", "length", ",", "totalHeight", "=", "item", ".", "height", ",", "itemHeight", ",", "totalHeightArray", "=", "[", "[", "totalHeight", "]", "]", ";", "for", "(", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "items", "[", "i", "]", ";", "itemHeight", "=", "item", ".", "height", ";", "if", "(", "(", "totalHeight", "+", "verticalGap", "+", "itemHeight", ")", "<=", "limit", ")", "{", "totalHeight", "+=", "verticalGap", "+", "itemHeight", ";", "columnArray", "[", "columnIterator", "]", ".", "push", "(", "item", ")", ";", "}", "else", "{", "totalHeight", "=", "verticalGap", "+", "itemHeight", ";", "if", "(", "columnArray", "[", "columnIterator", "]", ")", "{", "columnIterator", "+=", "1", ";", "}", "columnArray", "[", "columnIterator", "]", "=", "[", "item", "]", ";", "}", "totalHeightArray", "[", "columnIterator", "]", "=", "totalHeight", ";", "}", "VerticalLegendLayout", ".", "columnArray", "=", "columnArray", ";", "VerticalLegendLayout", ".", "totalHeightArray", "=", "totalHeightArray", ";", "}"], "original_docstring": "\nCreates column and total height arrays used for displaying multiple columns of\nlegend items based on the items, available height and verticalGap for the legend.\n\n@method _setColumnArrays\n@param {Array} items Array of legend items to display in a legend.\n@param {Number} limit Total available height for displaying items in a legend.\n@param {Number} verticalGap Vertical distance between items in a legend.\n@protected\n", "docstring": {"block_comment": "Creates column and total height arrays used for displaying multiple columns of \nlegend items based on the items, available height and verticalGap for the legend.", "line_comment": null}, "docstring_tokens": ["Array", "of", "legend", "items", "to", "display", "in", "a", "legend", "."], "sample_id": 497, "prompt_tokens": ["<javascript>", "<param>", "items"], "comment_type": "param", "sentence_id": 1}
{"id": "21004362", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, limit, verticalGap)\n    {\n        var item = items[0],\n            columnArray = [[item]],\n            i = 1,\n            columnIterator = 0,\n            len = items.length,\n            totalHeight = item.height,\n            itemHeight,\n            totalHeightArray = [[totalHeight]];\n        for(; i < len; ++i)\n        {\n            item = items[i];\n            itemHeight = item.height;\n            if((totalHeight + verticalGap + itemHeight) <= limit)\n            {\n                totalHeight += verticalGap + itemHeight;\n                columnArray[columnIterator].push(item);\n            }\n            else\n            {\n                totalHeight = verticalGap + itemHeight;\n                if(columnArray[columnIterator])\n                {\n                    columnIterator += 1;\n                }\n                columnArray[columnIterator] = [item];\n            }\n            totalHeightArray[columnIterator] = totalHeight;\n        }\n        VerticalLegendLayout.columnArray = columnArray;\n        VerticalLegendLayout.totalHeightArray = totalHeightArray;\n    }", "code_tokens": ["function", "(", "items", ",", "limit", ",", "verticalGap", ")", "{", "var", "item", "=", "items", "[", "0", "]", ",", "columnArray", "=", "[", "[", "item", "]", "]", ",", "i", "=", "1", ",", "columnIterator", "=", "0", ",", "len", "=", "items", ".", "length", ",", "totalHeight", "=", "item", ".", "height", ",", "itemHeight", ",", "totalHeightArray", "=", "[", "[", "totalHeight", "]", "]", ";", "for", "(", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "items", "[", "i", "]", ";", "itemHeight", "=", "item", ".", "height", ";", "if", "(", "(", "totalHeight", "+", "verticalGap", "+", "itemHeight", ")", "<=", "limit", ")", "{", "totalHeight", "+=", "verticalGap", "+", "itemHeight", ";", "columnArray", "[", "columnIterator", "]", ".", "push", "(", "item", ")", ";", "}", "else", "{", "totalHeight", "=", "verticalGap", "+", "itemHeight", ";", "if", "(", "columnArray", "[", "columnIterator", "]", ")", "{", "columnIterator", "+=", "1", ";", "}", "columnArray", "[", "columnIterator", "]", "=", "[", "item", "]", ";", "}", "totalHeightArray", "[", "columnIterator", "]", "=", "totalHeight", ";", "}", "VerticalLegendLayout", ".", "columnArray", "=", "columnArray", ";", "VerticalLegendLayout", ".", "totalHeightArray", "=", "totalHeightArray", ";", "}"], "original_docstring": "\nCreates column and total height arrays used for displaying multiple columns of\nlegend items based on the items, available height and verticalGap for the legend.\n\n@method _setColumnArrays\n@param {Array} items Array of legend items to display in a legend.\n@param {Number} limit Total available height for displaying items in a legend.\n@param {Number} verticalGap Vertical distance between items in a legend.\n@protected\n", "docstring": {"block_comment": "Creates column and total height arrays used for displaying multiple columns of \nlegend items based on the items, available height and verticalGap for the legend.", "line_comment": null}, "docstring_tokens": ["Total", "available", "height", "for", "displaying", "items", "in", "a", "legend", "."], "sample_id": 497, "prompt_tokens": ["<javascript>", "<param>", "limit"], "comment_type": "param", "sentence_id": 2}
{"id": "21004362", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, limit, verticalGap)\n    {\n        var item = items[0],\n            columnArray = [[item]],\n            i = 1,\n            columnIterator = 0,\n            len = items.length,\n            totalHeight = item.height,\n            itemHeight,\n            totalHeightArray = [[totalHeight]];\n        for(; i < len; ++i)\n        {\n            item = items[i];\n            itemHeight = item.height;\n            if((totalHeight + verticalGap + itemHeight) <= limit)\n            {\n                totalHeight += verticalGap + itemHeight;\n                columnArray[columnIterator].push(item);\n            }\n            else\n            {\n                totalHeight = verticalGap + itemHeight;\n                if(columnArray[columnIterator])\n                {\n                    columnIterator += 1;\n                }\n                columnArray[columnIterator] = [item];\n            }\n            totalHeightArray[columnIterator] = totalHeight;\n        }\n        VerticalLegendLayout.columnArray = columnArray;\n        VerticalLegendLayout.totalHeightArray = totalHeightArray;\n    }", "code_tokens": ["function", "(", "items", ",", "limit", ",", "verticalGap", ")", "{", "var", "item", "=", "items", "[", "0", "]", ",", "columnArray", "=", "[", "[", "item", "]", "]", ",", "i", "=", "1", ",", "columnIterator", "=", "0", ",", "len", "=", "items", ".", "length", ",", "totalHeight", "=", "item", ".", "height", ",", "itemHeight", ",", "totalHeightArray", "=", "[", "[", "totalHeight", "]", "]", ";", "for", "(", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "items", "[", "i", "]", ";", "itemHeight", "=", "item", ".", "height", ";", "if", "(", "(", "totalHeight", "+", "verticalGap", "+", "itemHeight", ")", "<=", "limit", ")", "{", "totalHeight", "+=", "verticalGap", "+", "itemHeight", ";", "columnArray", "[", "columnIterator", "]", ".", "push", "(", "item", ")", ";", "}", "else", "{", "totalHeight", "=", "verticalGap", "+", "itemHeight", ";", "if", "(", "columnArray", "[", "columnIterator", "]", ")", "{", "columnIterator", "+=", "1", ";", "}", "columnArray", "[", "columnIterator", "]", "=", "[", "item", "]", ";", "}", "totalHeightArray", "[", "columnIterator", "]", "=", "totalHeight", ";", "}", "VerticalLegendLayout", ".", "columnArray", "=", "columnArray", ";", "VerticalLegendLayout", ".", "totalHeightArray", "=", "totalHeightArray", ";", "}"], "original_docstring": "\nCreates column and total height arrays used for displaying multiple columns of\nlegend items based on the items, available height and verticalGap for the legend.\n\n@method _setColumnArrays\n@param {Array} items Array of legend items to display in a legend.\n@param {Number} limit Total available height for displaying items in a legend.\n@param {Number} verticalGap Vertical distance between items in a legend.\n@protected\n", "docstring": {"block_comment": "Creates column and total height arrays used for displaying multiple columns of \nlegend items based on the items, available height and verticalGap for the legend.", "line_comment": null}, "docstring_tokens": ["Vertical", "distance", "between", "items", "in", "a", "legend", "."], "sample_id": 497, "prompt_tokens": ["<javascript>", "<param>", "verticalGap"], "comment_type": "param", "sentence_id": 3}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["Displays", "items", "vertically", "in", "a", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["Array", "of", "items", "to", "display", "in", "the", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "items"], "comment_type": "param", "sentence_id": 1}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["The", "width", "of", "the", "largest", "item", "in", "the", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "maxWidth"], "comment_type": "param", "sentence_id": 2}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["The", "height", "of", "the", "largest", "item", "in", "the", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "maxHeight"], "comment_type": "param", "sentence_id": 3}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["The", "total", "width", "of", "all", "items", "in", "a", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "totalWidth"], "comment_type": "param", "sentence_id": 4}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["The", "total", "height", "of", "all", "items", "in", "a", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "totalHeight"], "comment_type": "param", "sentence_id": 5}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["The", "left", "top", "right", "and", "bottom", "padding", "properties", "for", "the", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "padding"], "comment_type": "param", "sentence_id": 6}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["The", "horizontal", "distance", "between", "items", "in", "a", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "horizontalGap"], "comment_type": "param", "sentence_id": 7}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["The", "vertical", "distance", "between", "items", "in", "a", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "verticalGap"], "comment_type": "param", "sentence_id": 8}
{"id": "21004363", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, vAlign)\n    {\n        var i = 0,\n            columnIterator = 0,\n            item,\n            node,\n            itemHeight,\n            itemWidth,\n            len,\n            height = this.get(\"height\"),\n            columns,\n            columnsLen,\n            column,\n            totalHeightArray,\n            legendHeight,\n            leftWidth = padding.left - horizontalGap,\n            legendWidth,\n            limit = height - (padding.top + padding.bottom),\n            left,\n            top,\n            right,\n            bottom;\n        VerticalLegendLayout._setColumnArrays(items, limit, verticalGap);\n        columns = VerticalLegendLayout.columnArray;\n        totalHeightArray = VerticalLegendLayout.totalHeightArray;\n        columnsLen = columns.length;\n        for(; columnIterator < columnsLen; ++ columnIterator)\n        {\n            leftWidth += horizontalGap;\n            column = columns[columnIterator];\n            len = column.length;\n            legendHeight =  VerticalLegendLayout.getStartPoint(height, totalHeightArray[columnIterator], vAlign, padding);\n            legendWidth = 0;\n            for(i = 0; i < len; ++i)\n            {\n                item = column[i];\n                node = item.node;\n                itemHeight = item.height;\n                itemWidth = item.width;\n                item.y = legendHeight;\n                item.x = leftWidth;\n                left = !isNaN(left) ? Math.min(left, leftWidth) : leftWidth;\n                top = !isNaN(top) ? Math.min(top, legendHeight) : legendHeight;\n                right = !isNaN(right) ? Math.max(leftWidth + itemWidth, right) : leftWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(legendHeight + itemHeight, bottom) : legendHeight + itemHeight;\n                node.setStyle(\"left\", leftWidth + PX);\n                node.setStyle(\"top\", legendHeight + PX);\n                legendHeight += itemHeight + verticalGap;\n                legendWidth = Math.max(legendWidth, item.width);\n            }\n            leftWidth += legendWidth;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"width\", leftWidth + padding.right);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "vAlign", ")", "{", "var", "i", "=", "0", ",", "columnIterator", "=", "0", ",", "item", ",", "node", ",", "itemHeight", ",", "itemWidth", ",", "len", ",", "height", "=", "this", ".", "get", "(", "\"height\"", ")", ",", "columns", ",", "columnsLen", ",", "column", ",", "totalHeightArray", ",", "legendHeight", ",", "leftWidth", "=", "padding", ".", "left", "-", "horizontalGap", ",", "legendWidth", ",", "limit", "=", "height", "-", "(", "padding", ".", "top", "+", "padding", ".", "bottom", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "VerticalLegendLayout", ".", "_setColumnArrays", "(", "items", ",", "limit", ",", "verticalGap", ")", ";", "columns", "=", "VerticalLegendLayout", ".", "columnArray", ";", "totalHeightArray", "=", "VerticalLegendLayout", ".", "totalHeightArray", ";", "columnsLen", "=", "columns", ".", "length", ";", "for", "(", ";", "columnIterator", "<", "columnsLen", ";", "++", "columnIterator", ")", "{", "leftWidth", "+=", "horizontalGap", ";", "column", "=", "columns", "[", "columnIterator", "]", ";", "len", "=", "column", ".", "length", ";", "legendHeight", "=", "VerticalLegendLayout", ".", "getStartPoint", "(", "height", ",", "totalHeightArray", "[", "columnIterator", "]", ",", "vAlign", ",", "padding", ")", ";", "legendWidth", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "column", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemHeight", "=", "item", ".", "height", ";", "itemWidth", "=", "item", ".", "width", ";", "item", ".", "y", "=", "legendHeight", ";", "item", ".", "x", "=", "leftWidth", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "leftWidth", ")", ":", "leftWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "legendHeight", ")", ":", "legendHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "leftWidth", "+", "itemWidth", ",", "right", ")", ":", "leftWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "legendHeight", "+", "itemHeight", ",", "bottom", ")", ":", "legendHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "leftWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "legendHeight", "+", "PX", ")", ";", "legendHeight", "+=", "itemHeight", "+", "verticalGap", ";", "legendWidth", "=", "Math", ".", "max", "(", "legendWidth", ",", "item", ".", "width", ")", ";", "}", "leftWidth", "+=", "legendWidth", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"width\"", ",", "leftWidth", "+", "padding", ".", "right", ")", ";", "}", "}"], "original_docstring": "\nDisplays items vertically in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} vAlign The vertical alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items vertically in a legend.", "line_comment": null}, "docstring_tokens": ["The", "vertical", "alignment", "of", "the", "legend", "."], "sample_id": 498, "prompt_tokens": ["<javascript>", "<param>", "vAlign"], "comment_type": "param", "sentence_id": 9}
{"id": "21004364", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(w, totalWidth, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case LEFT :\n                startPoint = padding.left;\n            break;\n            case \"center\" :\n                startPoint = (w - totalWidth) * 0.5;\n            break;\n            case RIGHT :\n                startPoint = w - totalWidth - padding.right;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "w", ",", "totalWidth", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "LEFT", ":", "startPoint", "=", "padding", ".", "left", ";", "break", ";", "case", "\"center\"", ":", "startPoint", "=", "(", "w", "-", "totalWidth", ")", "*", "0.5", ";", "break", ";", "case", "RIGHT", ":", "startPoint", "=", "w", "-", "totalWidth", "-", "padding", ".", "right", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting x-coordinate for a row of legend items.\n\n@method getStartPoint\n@param {Number} w Width of the legend.\n@param {Number} totalWidth Total width of all labels in the row.\n@param {String} align Horizontal alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting x coordinate for a row of legend items.", "line_comment": null}, "docstring_tokens": ["Returns", "the", "starting", "x", "coordinate", "for", "a", "row", "of", "legend", "items", "."], "sample_id": 499, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004364", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(w, totalWidth, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case LEFT :\n                startPoint = padding.left;\n            break;\n            case \"center\" :\n                startPoint = (w - totalWidth) * 0.5;\n            break;\n            case RIGHT :\n                startPoint = w - totalWidth - padding.right;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "w", ",", "totalWidth", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "LEFT", ":", "startPoint", "=", "padding", ".", "left", ";", "break", ";", "case", "\"center\"", ":", "startPoint", "=", "(", "w", "-", "totalWidth", ")", "*", "0.5", ";", "break", ";", "case", "RIGHT", ":", "startPoint", "=", "w", "-", "totalWidth", "-", "padding", ".", "right", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting x-coordinate for a row of legend items.\n\n@method getStartPoint\n@param {Number} w Width of the legend.\n@param {Number} totalWidth Total width of all labels in the row.\n@param {String} align Horizontal alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting x coordinate for a row of legend items.", "line_comment": null}, "docstring_tokens": ["Width", "of", "the", "legend", "."], "sample_id": 499, "prompt_tokens": ["<javascript>", "<param>", "w"], "comment_type": "param", "sentence_id": 1}
{"id": "21004364", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(w, totalWidth, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case LEFT :\n                startPoint = padding.left;\n            break;\n            case \"center\" :\n                startPoint = (w - totalWidth) * 0.5;\n            break;\n            case RIGHT :\n                startPoint = w - totalWidth - padding.right;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "w", ",", "totalWidth", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "LEFT", ":", "startPoint", "=", "padding", ".", "left", ";", "break", ";", "case", "\"center\"", ":", "startPoint", "=", "(", "w", "-", "totalWidth", ")", "*", "0.5", ";", "break", ";", "case", "RIGHT", ":", "startPoint", "=", "w", "-", "totalWidth", "-", "padding", ".", "right", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting x-coordinate for a row of legend items.\n\n@method getStartPoint\n@param {Number} w Width of the legend.\n@param {Number} totalWidth Total width of all labels in the row.\n@param {String} align Horizontal alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting x coordinate for a row of legend items.", "line_comment": null}, "docstring_tokens": ["Total", "width", "of", "all", "labels", "in", "the", "row", "."], "sample_id": 499, "prompt_tokens": ["<javascript>", "<param>", "totalWidth"], "comment_type": "param", "sentence_id": 2}
{"id": "21004364", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(w, totalWidth, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case LEFT :\n                startPoint = padding.left;\n            break;\n            case \"center\" :\n                startPoint = (w - totalWidth) * 0.5;\n            break;\n            case RIGHT :\n                startPoint = w - totalWidth - padding.right;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "w", ",", "totalWidth", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "LEFT", ":", "startPoint", "=", "padding", ".", "left", ";", "break", ";", "case", "\"center\"", ":", "startPoint", "=", "(", "w", "-", "totalWidth", ")", "*", "0.5", ";", "break", ";", "case", "RIGHT", ":", "startPoint", "=", "w", "-", "totalWidth", "-", "padding", ".", "right", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting x-coordinate for a row of legend items.\n\n@method getStartPoint\n@param {Number} w Width of the legend.\n@param {Number} totalWidth Total width of all labels in the row.\n@param {String} align Horizontal alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting x coordinate for a row of legend items.", "line_comment": null}, "docstring_tokens": ["Horizontal", "alignment", "of", "items", "for", "the", "legend", "."], "sample_id": 499, "prompt_tokens": ["<javascript>", "<param>", "align"], "comment_type": "param", "sentence_id": 3}
{"id": "21004364", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(w, totalWidth, align, padding)\n    {\n        var startPoint;\n        switch(align)\n        {\n            case LEFT :\n                startPoint = padding.left;\n            break;\n            case \"center\" :\n                startPoint = (w - totalWidth) * 0.5;\n            break;\n            case RIGHT :\n                startPoint = w - totalWidth - padding.right;\n            break;\n        }\n        return startPoint;\n    }", "code_tokens": ["function", "(", "w", ",", "totalWidth", ",", "align", ",", "padding", ")", "{", "var", "startPoint", ";", "switch", "(", "align", ")", "{", "case", "LEFT", ":", "startPoint", "=", "padding", ".", "left", ";", "break", ";", "case", "\"center\"", ":", "startPoint", "=", "(", "w", "-", "totalWidth", ")", "*", "0.5", ";", "break", ";", "case", "RIGHT", ":", "startPoint", "=", "w", "-", "totalWidth", "-", "padding", ".", "right", ";", "break", ";", "}", "return", "startPoint", ";", "}"], "original_docstring": "\nReturns the starting x-coordinate for a row of legend items.\n\n@method getStartPoint\n@param {Number} w Width of the legend.\n@param {Number} totalWidth Total width of all labels in the row.\n@param {String} align Horizontal alignment of items for the legend.\n@param {Object} padding Object contain left, top, right and bottom padding properties.\n@return Number\n@protected\n", "docstring": {"block_comment": "Returns the starting x coordinate for a row of legend items.", "line_comment": null}, "docstring_tokens": ["Object", "contain", "left", "top", "right", "and", "bottom", "padding", "properties", "."], "sample_id": 499, "prompt_tokens": ["<javascript>", "<param>", "padding"], "comment_type": "param", "sentence_id": 4}
{"id": "21004365", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, limit, horizontalGap)\n    {\n        var item = items[0],\n            rowArray = [[item]],\n            i = 1,\n            rowIterator = 0,\n            len = items.length,\n            totalWidth = item.width,\n            itemWidth,\n            totalWidthArray = [[totalWidth]];\n        for(; i < len; ++i)\n        {\n            item = items[i];\n            itemWidth = item.width;\n            if((totalWidth + horizontalGap + itemWidth) <= limit)\n            {\n                totalWidth += horizontalGap + itemWidth;\n                rowArray[rowIterator].push(item);\n            }\n            else\n            {\n                totalWidth = horizontalGap + itemWidth;\n                if(rowArray[rowIterator])\n                {\n                    rowIterator += 1;\n                }\n                rowArray[rowIterator] = [item];\n            }\n            totalWidthArray[rowIterator] = totalWidth;\n        }\n        HorizontalLegendLayout.rowArray = rowArray;\n        HorizontalLegendLayout.totalWidthArray = totalWidthArray;\n    }", "code_tokens": ["function", "(", "items", ",", "limit", ",", "horizontalGap", ")", "{", "var", "item", "=", "items", "[", "0", "]", ",", "rowArray", "=", "[", "[", "item", "]", "]", ",", "i", "=", "1", ",", "rowIterator", "=", "0", ",", "len", "=", "items", ".", "length", ",", "totalWidth", "=", "item", ".", "width", ",", "itemWidth", ",", "totalWidthArray", "=", "[", "[", "totalWidth", "]", "]", ";", "for", "(", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "items", "[", "i", "]", ";", "itemWidth", "=", "item", ".", "width", ";", "if", "(", "(", "totalWidth", "+", "horizontalGap", "+", "itemWidth", ")", "<=", "limit", ")", "{", "totalWidth", "+=", "horizontalGap", "+", "itemWidth", ";", "rowArray", "[", "rowIterator", "]", ".", "push", "(", "item", ")", ";", "}", "else", "{", "totalWidth", "=", "horizontalGap", "+", "itemWidth", ";", "if", "(", "rowArray", "[", "rowIterator", "]", ")", "{", "rowIterator", "+=", "1", ";", "}", "rowArray", "[", "rowIterator", "]", "=", "[", "item", "]", ";", "}", "totalWidthArray", "[", "rowIterator", "]", "=", "totalWidth", ";", "}", "HorizontalLegendLayout", ".", "rowArray", "=", "rowArray", ";", "HorizontalLegendLayout", ".", "totalWidthArray", "=", "totalWidthArray", ";", "}"], "original_docstring": "\nCreates row and total width arrays used for displaying multiple rows of\nlegend items based on the items, available width and horizontalGap for the legend.\n\n@method _setRowArrays\n@param {Array} items Array of legend items to display in a legend.\n@param {Number} limit Total available width for displaying items in a legend.\n@param {Number} horizontalGap Horizontal distance between items in a legend.\n@protected\n", "docstring": {"block_comment": "Creates row and total width arrays used for displaying multiple rows of \nlegend items based on the items, available width and horizontalGap for the legend.", "line_comment": null}, "docstring_tokens": ["Creates", "row", "and", "total", "width", "arrays", "used", "for", "displaying", "multiple", "rows", "of", "legend", "items", "based", "on", "the", "items", "available", "width", "and", "horizontalGap", "for", "the", "legend", "."], "sample_id": 500, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004365", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, limit, horizontalGap)\n    {\n        var item = items[0],\n            rowArray = [[item]],\n            i = 1,\n            rowIterator = 0,\n            len = items.length,\n            totalWidth = item.width,\n            itemWidth,\n            totalWidthArray = [[totalWidth]];\n        for(; i < len; ++i)\n        {\n            item = items[i];\n            itemWidth = item.width;\n            if((totalWidth + horizontalGap + itemWidth) <= limit)\n            {\n                totalWidth += horizontalGap + itemWidth;\n                rowArray[rowIterator].push(item);\n            }\n            else\n            {\n                totalWidth = horizontalGap + itemWidth;\n                if(rowArray[rowIterator])\n                {\n                    rowIterator += 1;\n                }\n                rowArray[rowIterator] = [item];\n            }\n            totalWidthArray[rowIterator] = totalWidth;\n        }\n        HorizontalLegendLayout.rowArray = rowArray;\n        HorizontalLegendLayout.totalWidthArray = totalWidthArray;\n    }", "code_tokens": ["function", "(", "items", ",", "limit", ",", "horizontalGap", ")", "{", "var", "item", "=", "items", "[", "0", "]", ",", "rowArray", "=", "[", "[", "item", "]", "]", ",", "i", "=", "1", ",", "rowIterator", "=", "0", ",", "len", "=", "items", ".", "length", ",", "totalWidth", "=", "item", ".", "width", ",", "itemWidth", ",", "totalWidthArray", "=", "[", "[", "totalWidth", "]", "]", ";", "for", "(", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "items", "[", "i", "]", ";", "itemWidth", "=", "item", ".", "width", ";", "if", "(", "(", "totalWidth", "+", "horizontalGap", "+", "itemWidth", ")", "<=", "limit", ")", "{", "totalWidth", "+=", "horizontalGap", "+", "itemWidth", ";", "rowArray", "[", "rowIterator", "]", ".", "push", "(", "item", ")", ";", "}", "else", "{", "totalWidth", "=", "horizontalGap", "+", "itemWidth", ";", "if", "(", "rowArray", "[", "rowIterator", "]", ")", "{", "rowIterator", "+=", "1", ";", "}", "rowArray", "[", "rowIterator", "]", "=", "[", "item", "]", ";", "}", "totalWidthArray", "[", "rowIterator", "]", "=", "totalWidth", ";", "}", "HorizontalLegendLayout", ".", "rowArray", "=", "rowArray", ";", "HorizontalLegendLayout", ".", "totalWidthArray", "=", "totalWidthArray", ";", "}"], "original_docstring": "\nCreates row and total width arrays used for displaying multiple rows of\nlegend items based on the items, available width and horizontalGap for the legend.\n\n@method _setRowArrays\n@param {Array} items Array of legend items to display in a legend.\n@param {Number} limit Total available width for displaying items in a legend.\n@param {Number} horizontalGap Horizontal distance between items in a legend.\n@protected\n", "docstring": {"block_comment": "Creates row and total width arrays used for displaying multiple rows of \nlegend items based on the items, available width and horizontalGap for the legend.", "line_comment": null}, "docstring_tokens": ["Array", "of", "legend", "items", "to", "display", "in", "a", "legend", "."], "sample_id": 500, "prompt_tokens": ["<javascript>", "<param>", "items"], "comment_type": "param", "sentence_id": 1}
{"id": "21004365", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, limit, horizontalGap)\n    {\n        var item = items[0],\n            rowArray = [[item]],\n            i = 1,\n            rowIterator = 0,\n            len = items.length,\n            totalWidth = item.width,\n            itemWidth,\n            totalWidthArray = [[totalWidth]];\n        for(; i < len; ++i)\n        {\n            item = items[i];\n            itemWidth = item.width;\n            if((totalWidth + horizontalGap + itemWidth) <= limit)\n            {\n                totalWidth += horizontalGap + itemWidth;\n                rowArray[rowIterator].push(item);\n            }\n            else\n            {\n                totalWidth = horizontalGap + itemWidth;\n                if(rowArray[rowIterator])\n                {\n                    rowIterator += 1;\n                }\n                rowArray[rowIterator] = [item];\n            }\n            totalWidthArray[rowIterator] = totalWidth;\n        }\n        HorizontalLegendLayout.rowArray = rowArray;\n        HorizontalLegendLayout.totalWidthArray = totalWidthArray;\n    }", "code_tokens": ["function", "(", "items", ",", "limit", ",", "horizontalGap", ")", "{", "var", "item", "=", "items", "[", "0", "]", ",", "rowArray", "=", "[", "[", "item", "]", "]", ",", "i", "=", "1", ",", "rowIterator", "=", "0", ",", "len", "=", "items", ".", "length", ",", "totalWidth", "=", "item", ".", "width", ",", "itemWidth", ",", "totalWidthArray", "=", "[", "[", "totalWidth", "]", "]", ";", "for", "(", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "items", "[", "i", "]", ";", "itemWidth", "=", "item", ".", "width", ";", "if", "(", "(", "totalWidth", "+", "horizontalGap", "+", "itemWidth", ")", "<=", "limit", ")", "{", "totalWidth", "+=", "horizontalGap", "+", "itemWidth", ";", "rowArray", "[", "rowIterator", "]", ".", "push", "(", "item", ")", ";", "}", "else", "{", "totalWidth", "=", "horizontalGap", "+", "itemWidth", ";", "if", "(", "rowArray", "[", "rowIterator", "]", ")", "{", "rowIterator", "+=", "1", ";", "}", "rowArray", "[", "rowIterator", "]", "=", "[", "item", "]", ";", "}", "totalWidthArray", "[", "rowIterator", "]", "=", "totalWidth", ";", "}", "HorizontalLegendLayout", ".", "rowArray", "=", "rowArray", ";", "HorizontalLegendLayout", ".", "totalWidthArray", "=", "totalWidthArray", ";", "}"], "original_docstring": "\nCreates row and total width arrays used for displaying multiple rows of\nlegend items based on the items, available width and horizontalGap for the legend.\n\n@method _setRowArrays\n@param {Array} items Array of legend items to display in a legend.\n@param {Number} limit Total available width for displaying items in a legend.\n@param {Number} horizontalGap Horizontal distance between items in a legend.\n@protected\n", "docstring": {"block_comment": "Creates row and total width arrays used for displaying multiple rows of \nlegend items based on the items, available width and horizontalGap for the legend.", "line_comment": null}, "docstring_tokens": ["Total", "available", "width", "for", "displaying", "items", "in", "a", "legend", "."], "sample_id": 500, "prompt_tokens": ["<javascript>", "<param>", "limit"], "comment_type": "param", "sentence_id": 2}
{"id": "21004365", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, limit, horizontalGap)\n    {\n        var item = items[0],\n            rowArray = [[item]],\n            i = 1,\n            rowIterator = 0,\n            len = items.length,\n            totalWidth = item.width,\n            itemWidth,\n            totalWidthArray = [[totalWidth]];\n        for(; i < len; ++i)\n        {\n            item = items[i];\n            itemWidth = item.width;\n            if((totalWidth + horizontalGap + itemWidth) <= limit)\n            {\n                totalWidth += horizontalGap + itemWidth;\n                rowArray[rowIterator].push(item);\n            }\n            else\n            {\n                totalWidth = horizontalGap + itemWidth;\n                if(rowArray[rowIterator])\n                {\n                    rowIterator += 1;\n                }\n                rowArray[rowIterator] = [item];\n            }\n            totalWidthArray[rowIterator] = totalWidth;\n        }\n        HorizontalLegendLayout.rowArray = rowArray;\n        HorizontalLegendLayout.totalWidthArray = totalWidthArray;\n    }", "code_tokens": ["function", "(", "items", ",", "limit", ",", "horizontalGap", ")", "{", "var", "item", "=", "items", "[", "0", "]", ",", "rowArray", "=", "[", "[", "item", "]", "]", ",", "i", "=", "1", ",", "rowIterator", "=", "0", ",", "len", "=", "items", ".", "length", ",", "totalWidth", "=", "item", ".", "width", ",", "itemWidth", ",", "totalWidthArray", "=", "[", "[", "totalWidth", "]", "]", ";", "for", "(", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "items", "[", "i", "]", ";", "itemWidth", "=", "item", ".", "width", ";", "if", "(", "(", "totalWidth", "+", "horizontalGap", "+", "itemWidth", ")", "<=", "limit", ")", "{", "totalWidth", "+=", "horizontalGap", "+", "itemWidth", ";", "rowArray", "[", "rowIterator", "]", ".", "push", "(", "item", ")", ";", "}", "else", "{", "totalWidth", "=", "horizontalGap", "+", "itemWidth", ";", "if", "(", "rowArray", "[", "rowIterator", "]", ")", "{", "rowIterator", "+=", "1", ";", "}", "rowArray", "[", "rowIterator", "]", "=", "[", "item", "]", ";", "}", "totalWidthArray", "[", "rowIterator", "]", "=", "totalWidth", ";", "}", "HorizontalLegendLayout", ".", "rowArray", "=", "rowArray", ";", "HorizontalLegendLayout", ".", "totalWidthArray", "=", "totalWidthArray", ";", "}"], "original_docstring": "\nCreates row and total width arrays used for displaying multiple rows of\nlegend items based on the items, available width and horizontalGap for the legend.\n\n@method _setRowArrays\n@param {Array} items Array of legend items to display in a legend.\n@param {Number} limit Total available width for displaying items in a legend.\n@param {Number} horizontalGap Horizontal distance between items in a legend.\n@protected\n", "docstring": {"block_comment": "Creates row and total width arrays used for displaying multiple rows of \nlegend items based on the items, available width and horizontalGap for the legend.", "line_comment": null}, "docstring_tokens": ["Horizontal", "distance", "between", "items", "in", "a", "legend", "."], "sample_id": 500, "prompt_tokens": ["<javascript>", "<param>", "horizontalGap"], "comment_type": "param", "sentence_id": 3}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["Displays", "items", "horizontally", "in", "a", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["Array", "of", "items", "to", "display", "in", "the", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "items"], "comment_type": "param", "sentence_id": 1}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["The", "width", "of", "the", "largest", "item", "in", "the", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "maxWidth"], "comment_type": "param", "sentence_id": 2}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["The", "height", "of", "the", "largest", "item", "in", "the", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "maxHeight"], "comment_type": "param", "sentence_id": 3}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["The", "total", "width", "of", "all", "items", "in", "a", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "totalWidth"], "comment_type": "param", "sentence_id": 4}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["The", "total", "height", "of", "all", "items", "in", "a", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "totalHeight"], "comment_type": "param", "sentence_id": 5}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["The", "left", "top", "right", "and", "bottom", "padding", "properties", "for", "the", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "padding"], "comment_type": "param", "sentence_id": 6}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["The", "horizontal", "distance", "between", "items", "in", "a", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "horizontalGap"], "comment_type": "param", "sentence_id": 7}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["The", "vertical", "distance", "between", "items", "in", "a", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "verticalGap"], "comment_type": "param", "sentence_id": 8}
{"id": "21004366", "repo": "ghiringh/Wegas", "path": "wegas-resources/src/main/webapp/lib/yui3/build/charts-legend/charts-legend.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(items, maxWidth, maxHeight, totalWidth, totalHeight, padding, horizontalGap, verticalGap, hAlign)\n    {\n        var i = 0,\n            rowIterator = 0,\n            item,\n            node,\n            itemWidth,\n            itemHeight,\n            len,\n            width = this.get(\"width\"),\n            rows,\n            rowsLen,\n            row,\n            totalWidthArray,\n            legendWidth,\n            topHeight = padding.top - verticalGap,\n            limit = width - (padding.left + padding.right),\n            left,\n            top,\n            right,\n            bottom;\n        HorizontalLegendLayout._setRowArrays(items, limit, horizontalGap);\n        rows = HorizontalLegendLayout.rowArray;\n        totalWidthArray = HorizontalLegendLayout.totalWidthArray;\n        rowsLen = rows.length;\n        for(; rowIterator < rowsLen; ++ rowIterator)\n        {\n            topHeight += verticalGap;\n            row = rows[rowIterator];\n            len = row.length;\n            legendWidth =  HorizontalLegendLayout.getStartPoint(width, totalWidthArray[rowIterator], hAlign, padding);\n            for(i = 0; i < len; ++i)\n            {\n                item = row[i];\n                node = item.node;\n                itemWidth = item.width;\n                itemHeight = item.height;\n                item.x = legendWidth;\n                item.y = 0;\n                left = !isNaN(left) ? Math.min(left, legendWidth) : legendWidth;\n                top = !isNaN(top) ? Math.min(top, topHeight) : topHeight;\n                right = !isNaN(right) ? Math.max(legendWidth + itemWidth, right) : legendWidth + itemWidth;\n                bottom = !isNaN(bottom) ? Math.max(topHeight + itemHeight, bottom) : topHeight + itemHeight;\n                node.setStyle(\"left\", legendWidth + PX);\n                node.setStyle(\"top\", topHeight + PX);\n                legendWidth += itemWidth + horizontalGap;\n            }\n            topHeight += item.height;\n        }\n        this._contentRect = {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n        if(this.get(\"includeInChartLayout\"))\n        {\n            this.set(\"height\", topHeight + padding.bottom);\n        }\n    }", "code_tokens": ["function", "(", "items", ",", "maxWidth", ",", "maxHeight", ",", "totalWidth", ",", "totalHeight", ",", "padding", ",", "horizontalGap", ",", "verticalGap", ",", "hAlign", ")", "{", "var", "i", "=", "0", ",", "rowIterator", "=", "0", ",", "item", ",", "node", ",", "itemWidth", ",", "itemHeight", ",", "len", ",", "width", "=", "this", ".", "get", "(", "\"width\"", ")", ",", "rows", ",", "rowsLen", ",", "row", ",", "totalWidthArray", ",", "legendWidth", ",", "topHeight", "=", "padding", ".", "top", "-", "verticalGap", ",", "limit", "=", "width", "-", "(", "padding", ".", "left", "+", "padding", ".", "right", ")", ",", "left", ",", "top", ",", "right", ",", "bottom", ";", "HorizontalLegendLayout", ".", "_setRowArrays", "(", "items", ",", "limit", ",", "horizontalGap", ")", ";", "rows", "=", "HorizontalLegendLayout", ".", "rowArray", ";", "totalWidthArray", "=", "HorizontalLegendLayout", ".", "totalWidthArray", ";", "rowsLen", "=", "rows", ".", "length", ";", "for", "(", ";", "rowIterator", "<", "rowsLen", ";", "++", "rowIterator", ")", "{", "topHeight", "+=", "verticalGap", ";", "row", "=", "rows", "[", "rowIterator", "]", ";", "len", "=", "row", ".", "length", ";", "legendWidth", "=", "HorizontalLegendLayout", ".", "getStartPoint", "(", "width", ",", "totalWidthArray", "[", "rowIterator", "]", ",", "hAlign", ",", "padding", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "len", ";", "++", "i", ")", "{", "item", "=", "row", "[", "i", "]", ";", "node", "=", "item", ".", "node", ";", "itemWidth", "=", "item", ".", "width", ";", "itemHeight", "=", "item", ".", "height", ";", "item", ".", "x", "=", "legendWidth", ";", "item", ".", "y", "=", "0", ";", "left", "=", "!", "isNaN", "(", "left", ")", "?", "Math", ".", "min", "(", "left", ",", "legendWidth", ")", ":", "legendWidth", ";", "top", "=", "!", "isNaN", "(", "top", ")", "?", "Math", ".", "min", "(", "top", ",", "topHeight", ")", ":", "topHeight", ";", "right", "=", "!", "isNaN", "(", "right", ")", "?", "Math", ".", "max", "(", "legendWidth", "+", "itemWidth", ",", "right", ")", ":", "legendWidth", "+", "itemWidth", ";", "bottom", "=", "!", "isNaN", "(", "bottom", ")", "?", "Math", ".", "max", "(", "topHeight", "+", "itemHeight", ",", "bottom", ")", ":", "topHeight", "+", "itemHeight", ";", "node", ".", "setStyle", "(", "\"left\"", ",", "legendWidth", "+", "PX", ")", ";", "node", ".", "setStyle", "(", "\"top\"", ",", "topHeight", "+", "PX", ")", ";", "legendWidth", "+=", "itemWidth", "+", "horizontalGap", ";", "}", "topHeight", "+=", "item", ".", "height", ";", "}", "this", ".", "_contentRect", "=", "{", "left", ":", "left", ",", "top", ":", "top", ",", "right", ":", "right", ",", "bottom", ":", "bottom", "}", ";", "if", "(", "this", ".", "get", "(", "\"includeInChartLayout\"", ")", ")", "{", "this", ".", "set", "(", "\"height\"", ",", "topHeight", "+", "padding", ".", "bottom", ")", ";", "}", "}"], "original_docstring": "\nDisplays items horizontally in a legend.\n\n@method _positionLegendItems\n@param {Array} items Array of items to display in the legend.\n@param {Number} maxWidth The width of the largest item in the legend.\n@param {Number} maxHeight The height of the largest item in the legend.\n@param {Number} totalWidth The total width of all items in a legend.\n@param {Number} totalHeight The total height of all items in a legend.\n@param {Number} padding The left, top, right and bottom padding properties for the legend.\n@param {Number} horizontalGap The horizontal distance between items in a legend.\n@param {Number} verticalGap The vertical distance between items in a legend.\n@param {String} hAlign The horizontal alignment of the legend.\n@protected\n", "docstring": {"block_comment": "Displays items horizontally in a legend.", "line_comment": null}, "docstring_tokens": ["The", "horizontal", "alignment", "of", "the", "legend", "."], "sample_id": 501, "prompt_tokens": ["<javascript>", "<param>", "hAlign"], "comment_type": "param", "sentence_id": 9}
{"id": "21004367", "repo": "itvsai/cdnjs", "path": "ajax/libs/yui/3.4.0pr1/dd/dd-plugin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(e) {\n                        this._stoppedPosition = e.target.realXY;\n                }", "code_tokens": ["function", "(", "e", ")", "{", "this", ".", "_stoppedPosition", "=", "e", ".", "target", ".", "realXY", ";", "}"], "original_docstring": "\nUpdates the last position where the widget was stopped.\n\n@method updateStopPosition\n@param {EventFacade} e Event Facade\n@private\n", "docstring": {"block_comment": "Updates the last position where the widget was stopped.", "line_comment": null}, "docstring_tokens": ["Updates", "the", "last", "position", "where", "the", "widget", "was", "stopped", "."], "sample_id": 502, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004368", "repo": "itvsai/cdnjs", "path": "ajax/libs/yui/3.4.0pr1/dd/dd-plugin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(e) {\n\n                        //get the last position where the widget was, or get the starting point\n                        var nodeXY = this._stoppedPosition || e.target.nodeXY,\n                         realXY = e.target.realXY,\n\n                         //amount moved = [(x2 - x1) , (y2 - y1)]\n                         movedXY = [realXY[0] - nodeXY[0], realXY[1] - nodeXY[0]];\n\n                         //if both have changed..\n                         if (movedXY[0] !== 0 && movedXY[1] !== 0) {\n                                 this._widget.set('xy', realXY);\n                         }\n\n                         //if only x is 0, set the Y\n                         else if (movedXY[0] === 0) {\n                                 this._widget.set('y',realXY[1]);\n                         }\n\n                         //otherwise, y is 0, so set X\n                         else if (movedXY[1] === 0){\n                                 this._widget.set('x', realXY[0]);\n                         }\n                }", "code_tokens": ["function", "(", "e", ")", "{", "//get the last position where the widget was, or get the starting point", "var", "nodeXY", "=", "this", ".", "_stoppedPosition", "||", "e", ".", "target", ".", "nodeXY", ",", "realXY", "=", "e", ".", "target", ".", "realXY", ",", "//amount moved = [(x2 - x1) , (y2 - y1)]", "movedXY", "=", "[", "realXY", "[", "0", "]", "-", "nodeXY", "[", "0", "]", ",", "realXY", "[", "1", "]", "-", "nodeXY", "[", "0", "]", "]", ";", "//if both have changed..", "if", "(", "movedXY", "[", "0", "]", "!==", "0", "&&", "movedXY", "[", "1", "]", "!==", "0", ")", "{", "this", ".", "_widget", ".", "set", "(", "'xy'", ",", "realXY", ")", ";", "}", "//if only x is 0, set the Y", "else", "if", "(", "movedXY", "[", "0", "]", "===", "0", ")", "{", "this", ".", "_widget", ".", "set", "(", "'y'", ",", "realXY", "[", "1", "]", ")", ";", "}", "//otherwise, y is 0, so set X", "else", "if", "(", "movedXY", "[", "1", "]", "===", "0", ")", "{", "this", ".", "_widget", ".", "set", "(", "'x'", ",", "realXY", "[", "0", "]", ")", ";", "}", "}"], "original_docstring": "\nUpdates x,y or xy attributes on widget based on where the widget is dragged\n\n@method initializer\n@param {EventFacade} e Event Facade\n@private\n", "docstring": {"block_comment": "Updates x,y or xy attributes on widget based on where the widget is dragged", "line_comment": ["get the last position where the widget was, or get the starting point", "amount moved     x2   x1  ,  y2   y1  ", "if both have changed..", "if only x is 0, set the Y", "otherwise, y is 0, so set X"]}, "docstring_tokens": ["Updates", "x", "y", "or", "xy", "attributes", "on", "widget", "based", "on", "where", "the", "widget", "is", "dragged"], "sample_id": 503, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004369", "repo": "itvsai/cdnjs", "path": "ajax/libs/yui/3.4.0pr1/dd/dd-plugin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(config) {\n                        \n\n                        this._widget = config.widget;\n                        \n                        //if this thing is a widget, and it uses widgetposition...\n                        if (this._usesWidgetPosition(this._widget)) {\n                               \n                               //set the x,y on the widget's ATTRS\n                               this.on(EV_DRAG, this._setWidgetCoords);\n\n                               //store the new position that the widget ends up on\n                               this.on(EV_DRAG_END, this._updateStopPosition); \n                        }\n\n                               \n                }", "code_tokens": ["function", "(", "config", ")", "{", "this", ".", "_widget", "=", "config", ".", "widget", ";", "//if this thing is a widget, and it uses widgetposition...", "if", "(", "this", ".", "_usesWidgetPosition", "(", "this", ".", "_widget", ")", ")", "{", "//set the x,y on the widget's ATTRS", "this", ".", "on", "(", "EV_DRAG", ",", "this", ".", "_setWidgetCoords", ")", ";", "//store the new position that the widget ends up on", "this", ".", "on", "(", "EV_DRAG_END", ",", "this", ".", "_updateStopPosition", ")", ";", "}", "}"], "original_docstring": "\nSets up event listeners on drag events if interacting with a widget\n\n@method initializer\n@protected\n", "docstring": {"block_comment": "Sets up event listeners on drag events if interacting with a widget", "line_comment": ["if this thing is a widget, and it uses widgetposition...", "set the x,y on the widget s ATTRS", "store the new position that the widget ends up on"]}, "docstring_tokens": ["Sets", "up", "event", "listeners", "on", "drag", "events", "if", "interacting", "with", "a", "widget"], "sample_id": 504, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004370", "repo": "itvsai/cdnjs", "path": "ajax/libs/yui/3.4.0pr1/dd/dd-plugin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(widget) {\n                        var r = false;\n                        if (widget) {\n                                r = (widget.hasImpl && widget.hasImpl(Y.WidgetPosition)) ? true : false;\n                        }\n                        return r;\n                }", "code_tokens": ["function", "(", "widget", ")", "{", "var", "r", "=", "false", ";", "if", "(", "widget", ")", "{", "r", "=", "(", "widget", ".", "hasImpl", "&&", "widget", ".", "hasImpl", "(", "Y", ".", "WidgetPosition", ")", ")", "?", "true", ":", "false", ";", "}", "return", "r", ";", "}"], "original_docstring": "\nReturns true if widget uses widgetPosition, otherwise returns false\n\n@method _usesWidgetPosition\n@private\n", "docstring": {"block_comment": "Returns true if widget uses widgetPosition, otherwise returns false", "line_comment": null}, "docstring_tokens": ["Returns", "true", "if", "widget", "uses", "widgetPosition", "otherwise", "returns", "false"], "sample_id": 505, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004371", "repo": "itvsai/cdnjs", "path": "ajax/libs/yui/3.4.0pr1/dd/dd-plugin.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(config) {\n                if (Y.Widget && config.host instanceof Y.Widget) {\n                        config.node = config.host.get('boundingBox');\n                        config.widget = config.host;\n                }\n                else {\n                        config.node = config.host;\n                        config.widget = false;\n                }\n                Drag.superclass.constructor.call(this, config);\n        }", "code_tokens": ["function", "(", "config", ")", "{", "if", "(", "Y", ".", "Widget", "&&", "config", ".", "host", "instanceof", "Y", ".", "Widget", ")", "{", "config", ".", "node", "=", "config", ".", "host", ".", "get", "(", "'boundingBox'", ")", ";", "config", ".", "widget", "=", "config", ".", "host", ";", "}", "else", "{", "config", ".", "node", "=", "config", ".", "host", ";", "config", ".", "widget", "=", "false", ";", "}", "Drag", ".", "superclass", ".", "constructor", ".", "call", "(", "this", ",", "config", ")", ";", "}"], "original_docstring": "\nSimple Drag plugin that can be attached to a Node or Widget via the plug method.\n@module dd\n@submodule dd-plugin\n \nSimple Drag plugin that can be attached to a Node or Widget via the plug method.\n@class Drag\n@extends DD.Drag\n@constructor\n@namespace Plugin\n", "docstring": {"block_comment": "Simple Drag plugin that can be attached to a Node or Widget via the plug method.", "line_comment": null}, "docstring_tokens": ["Simple", "Drag", "plugin", "that", "can", "be", "attached", "to", "a", "Node", "or", "Widget", "via", "the", "plug", "method", "."], "sample_id": 506, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004373", "repo": "nnupoor/whatyouuse", "path": "wyu/node_modules/mongodb/lib/bulk/ordered.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(topology, collection, options) {\n\treturn new OrderedBulkOperation(topology, collection, options);\n}", "code_tokens": ["function", "(", "topology", ",", "collection", ",", "options", ")", "{", "return", "new", "OrderedBulkOperation", "(", "topology", ",", "collection", ",", "options", ")", ";", "}"], "original_docstring": "\nReturns an unordered batch object\n@ignore\n", "docstring": {"block_comment": "Returns an unordered batch object", "line_comment": null}, "docstring_tokens": ["Returns", "an", "unordered", "batch", "object"], "sample_id": 507, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004374", "repo": "nnupoor/whatyouuse", "path": "wyu/node_modules/mongodb/lib/bulk/ordered.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(self, callback) {\n  if(self.s.batches.length == 0) {\n    return callback(null, new BulkWriteResult(self.s.bulkResult));\n  }\n\n  // Ordered execution of the command\n  var batch = self.s.batches.shift();\n\n  var resultHandler = function(err, result) {\n    // If we have and error\n    if(err) err.ok = 0;\n    // Merge the results together\n    var mergeResult = mergeBatchResults(true, batch, self.s.bulkResult, err, result);\n    if(mergeResult != null) {\n      return callback(null, new BulkWriteResult(self.s.bulkResult));\n    }\n\n    // If we are ordered and have errors and they are\n    // not all replication errors terminate the operation\n    if(self.s.bulkResult.writeErrors.length > 0) {\n      return callback(self.s.bulkResult.writeErrors[0], new BulkWriteResult(self.s.bulkResult));\n    }\n\n    // Execute the next command in line\n    executeCommands(self, callback);\n  }\n\n  var finalOptions = {ordered: true}\n  if(self.s.writeConcern != null) {\n    finalOptions.writeConcern = self.s.writeConcern;\n  }\n\n  try {\n    if(batch.batchType == common.INSERT) {\n      self.s.topology.insert(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);\n    } else if(batch.batchType == common.UPDATE) {\n      self.s.topology.update(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);\n    } else if(batch.batchType == common.REMOVE) {\n      self.s.topology.remove(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);\n    }\n  } catch(err) {\n    // Force top level error\n    err.ok = 0;\n    // Merge top level error and return \n    callback(null, mergeBatchResults(false, batch, self.s.bulkResult, err, null));\n  }\n}", "code_tokens": ["function", "(", "self", ",", "callback", ")", "{", "if", "(", "self", ".", "s", ".", "batches", ".", "length", "==", "0", ")", "{", "return", "callback", "(", "null", ",", "new", "BulkWriteResult", "(", "self", ".", "s", ".", "bulkResult", ")", ")", ";", "}", "// Ordered execution of the command", "var", "batch", "=", "self", ".", "s", ".", "batches", ".", "shift", "(", ")", ";", "var", "resultHandler", "=", "function", "(", "err", ",", "result", ")", "{", "// If we have and error", "if", "(", "err", ")", "err", ".", "ok", "=", "0", ";", "// Merge the results together", "var", "mergeResult", "=", "mergeBatchResults", "(", "true", ",", "batch", ",", "self", ".", "s", ".", "bulkResult", ",", "err", ",", "result", ")", ";", "if", "(", "mergeResult", "!=", "null", ")", "{", "return", "callback", "(", "null", ",", "new", "BulkWriteResult", "(", "self", ".", "s", ".", "bulkResult", ")", ")", ";", "}", "// If we are ordered and have errors and they are", "// not all replication errors terminate the operation", "if", "(", "self", ".", "s", ".", "bulkResult", ".", "writeErrors", ".", "length", ">", "0", ")", "{", "return", "callback", "(", "self", ".", "s", ".", "bulkResult", ".", "writeErrors", "[", "0", "]", ",", "new", "BulkWriteResult", "(", "self", ".", "s", ".", "bulkResult", ")", ")", ";", "}", "// Execute the next command in line", "executeCommands", "(", "self", ",", "callback", ")", ";", "}", "var", "finalOptions", "=", "{", "ordered", ":", "true", "}", "if", "(", "self", ".", "s", ".", "writeConcern", "!=", "null", ")", "{", "finalOptions", ".", "writeConcern", "=", "self", ".", "s", ".", "writeConcern", ";", "}", "try", "{", "if", "(", "batch", ".", "batchType", "==", "common", ".", "INSERT", ")", "{", "self", ".", "s", ".", "topology", ".", "insert", "(", "self", ".", "s", ".", "collection", ".", "namespace", ",", "batch", ".", "operations", ",", "finalOptions", ",", "resultHandler", ")", ";", "}", "else", "if", "(", "batch", ".", "batchType", "==", "common", ".", "UPDATE", ")", "{", "self", ".", "s", ".", "topology", ".", "update", "(", "self", ".", "s", ".", "collection", ".", "namespace", ",", "batch", ".", "operations", ",", "finalOptions", ",", "resultHandler", ")", ";", "}", "else", "if", "(", "batch", ".", "batchType", "==", "common", ".", "REMOVE", ")", "{", "self", ".", "s", ".", "topology", ".", "remove", "(", "self", ".", "s", ".", "collection", ".", "namespace", ",", "batch", ".", "operations", ",", "finalOptions", ",", "resultHandler", ")", ";", "}", "}", "catch", "(", "err", ")", "{", "// Force top level error", "err", ".", "ok", "=", "0", ";", "// Merge top level error and return ", "callback", "(", "null", ",", "mergeBatchResults", "(", "false", ",", "batch", ",", "self", ".", "s", ".", "bulkResult", ",", "err", ",", "null", ")", ")", ";", "}", "}"], "original_docstring": " Execute next write command in a chain", "docstring": {"block_comment": "Execute next write command in a chain", "line_comment": ["Ordered execution of the command", "If we have and error", "Merge the results together", "If we are ordered and have errors and they are", "not all replication errors terminate the operation", "Execute the next command in line", "Force top level error", "Merge top level error and return"]}, "docstring_tokens": ["Execute", "next", "write", "command", "in", "a", "chain"], "sample_id": 508, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004375", "repo": "nnupoor/whatyouuse", "path": "wyu/node_modules/mongodb/lib/bulk/ordered.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(_self, docType, document) {\n  // Get the bsonSize\n  var bsonSize = _self.s.bson.calculateObjectSize(document, false);\n\n  // Throw error if the doc is bigger than the max BSON size\n  if(bsonSize >= _self.s.maxBatchSizeBytes) throw toError(\"document is larger than the maximum size \" + _self.s.maxBatchSizeBytes);\n  // Create a new batch object if we don't have a current one\n  if(_self.s.currentBatch == null) _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);\n\n  // Check if we need to create a new batch\n  if(((_self.s.currentBatchSize + 1) >= _self.s.maxWriteBatchSize)\n    || ((_self.s.currentBatchSizeBytes +  _self.s.currentBatchSizeBytes) >= _self.s.maxBatchSizeBytes)\n    || (_self.s.currentBatch.batchType != docType)) {\n    // Save the batch to the execution stack\n    _self.s.batches.push(_self.s.currentBatch);\n\n    // Create a new batch\n    _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);\n\n    // Reset the current size trackers\n    _self.s.currentBatchSize = 0;\n    _self.s.currentBatchSizeBytes = 0;\n  } else {\n    // Update current batch size\n    _self.s.currentBatchSize = _self.s.currentBatchSize + 1;\n    _self.s.currentBatchSizeBytes = _self.s.currentBatchSizeBytes + bsonSize;\n  }\n\n  if(docType == common.INSERT) {\n    _self.s.bulkResult.insertedIds.push({index: _self.s.currentIndex, _id: document._id});\n  }\n\n  // We have an array of documents\n  if(Array.isArray(document)) {\n    throw toError(\"operation passed in cannot be an Array\");\n  } else {\n    _self.s.currentBatch.originalIndexes.push(_self.s.currentIndex);\n    _self.s.currentBatch.operations.push(document)\n    _self.s.currentIndex = _self.s.currentIndex + 1;\n  }\n\n  // Return self\n  return _self;\n}", "code_tokens": ["function", "(", "_self", ",", "docType", ",", "document", ")", "{", "// Get the bsonSize", "var", "bsonSize", "=", "_self", ".", "s", ".", "bson", ".", "calculateObjectSize", "(", "document", ",", "false", ")", ";", "// Throw error if the doc is bigger than the max BSON size", "if", "(", "bsonSize", ">=", "_self", ".", "s", ".", "maxBatchSizeBytes", ")", "throw", "toError", "(", "\"document is larger than the maximum size \"", "+", "_self", ".", "s", ".", "maxBatchSizeBytes", ")", ";", "// Create a new batch object if we don't have a current one", "if", "(", "_self", ".", "s", ".", "currentBatch", "==", "null", ")", "_self", ".", "s", ".", "currentBatch", "=", "new", "Batch", "(", "docType", ",", "_self", ".", "s", ".", "currentIndex", ")", ";", "// Check if we need to create a new batch", "if", "(", "(", "(", "_self", ".", "s", ".", "currentBatchSize", "+", "1", ")", ">=", "_self", ".", "s", ".", "maxWriteBatchSize", ")", "||", "(", "(", "_self", ".", "s", ".", "currentBatchSizeBytes", "+", "_self", ".", "s", ".", "currentBatchSizeBytes", ")", ">=", "_self", ".", "s", ".", "maxBatchSizeBytes", ")", "||", "(", "_self", ".", "s", ".", "currentBatch", ".", "batchType", "!=", "docType", ")", ")", "{", "// Save the batch to the execution stack", "_self", ".", "s", ".", "batches", ".", "push", "(", "_self", ".", "s", ".", "currentBatch", ")", ";", "// Create a new batch", "_self", ".", "s", ".", "currentBatch", "=", "new", "Batch", "(", "docType", ",", "_self", ".", "s", ".", "currentIndex", ")", ";", "// Reset the current size trackers", "_self", ".", "s", ".", "currentBatchSize", "=", "0", ";", "_self", ".", "s", ".", "currentBatchSizeBytes", "=", "0", ";", "}", "else", "{", "// Update current batch size", "_self", ".", "s", ".", "currentBatchSize", "=", "_self", ".", "s", ".", "currentBatchSize", "+", "1", ";", "_self", ".", "s", ".", "currentBatchSizeBytes", "=", "_self", ".", "s", ".", "currentBatchSizeBytes", "+", "bsonSize", ";", "}", "if", "(", "docType", "==", "common", ".", "INSERT", ")", "{", "_self", ".", "s", ".", "bulkResult", ".", "insertedIds", ".", "push", "(", "{", "index", ":", "_self", ".", "s", ".", "currentIndex", ",", "_id", ":", "document", ".", "_id", "}", ")", ";", "}", "// We have an array of documents", "if", "(", "Array", ".", "isArray", "(", "document", ")", ")", "{", "throw", "toError", "(", "\"operation passed in cannot be an Array\"", ")", ";", "}", "else", "{", "_self", ".", "s", ".", "currentBatch", ".", "originalIndexes", ".", "push", "(", "_self", ".", "s", ".", "currentIndex", ")", ";", "_self", ".", "s", ".", "currentBatch", ".", "operations", ".", "push", "(", "document", ")", "_self", ".", "s", ".", "currentIndex", "=", "_self", ".", "s", ".", "currentIndex", "+", "1", ";", "}", "// Return self", "return", "_self", ";", "}"], "original_docstring": "Add to internal list of documents", "docstring": {"block_comment": "Add to internal list of documents", "line_comment": ["Get the bsonSize", "Throw error if the doc is bigger than the max BSON size", "Create a new batch object if we don t have a current one", "Check if we need to create a new batch", "Save the batch to the execution stack", "Create a new batch", "Reset the current size trackers", "Update current batch size", "We have an array of documents", "Return self"]}, "docstring_tokens": ["Add", "to", "internal", "list", "of", "documents"], "sample_id": 509, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004376", "repo": "nnupoor/whatyouuse", "path": "wyu/node_modules/mongodb/lib/bulk/ordered.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(self) {\n  this.s = self.s;\n}", "code_tokens": ["function", "(", "self", ")", "{", "this", ".", "s", "=", "self", ".", "s", ";", "}"], "original_docstring": "\nCreate a FindOperatorsOrdered instance (INTERNAL TYPE, do not instantiate directly)\n@class\n@return {FindOperatorsOrdered} a FindOperatorsOrdered instance.\n", "docstring": {"block_comment": "Create a FindOperatorsOrdered instance  INTERNAL TYPE, do not instantiate directly ", "line_comment": null}, "docstring_tokens": ["Create", "a", "FindOperatorsOrdered", "instance", "INTERNAL", "TYPE", "do", "not", "instantiate", "directly"], "sample_id": 510, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004376", "repo": "nnupoor/whatyouuse", "path": "wyu/node_modules/mongodb/lib/bulk/ordered.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(self) {\n  this.s = self.s;\n}", "code_tokens": ["function", "(", "self", ")", "{", "this", ".", "s", "=", "self", ".", "s", ";", "}"], "original_docstring": "\nCreate a FindOperatorsOrdered instance (INTERNAL TYPE, do not instantiate directly)\n@class\n@return {FindOperatorsOrdered} a FindOperatorsOrdered instance.\n", "docstring": {"block_comment": "Create a FindOperatorsOrdered instance  INTERNAL TYPE, do not instantiate directly ", "line_comment": null}, "docstring_tokens": ["a", "FindOperatorsOrdered", "instance", "."], "sample_id": 510, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004377", "repo": "seogi1004/cdnjs", "path": "ajax/libs/json-schema-faker/0.3.5/locale/uk.js", "language": "JavaScript", "license": "mit", "func_name": "integerType", "code": "function integerType(value) {\n    var generated = number(value);\n    // whether the generated number is positive or negative, need to use either\n    // floor (positive) or ceil (negative) function to get rid of the fraction\n    return generated > 0 ? Math.floor(generated) : Math.ceil(generated);\n}", "code_tokens": ["function", "integerType", "(", "value", ")", "{", "var", "generated", "=", "number", "(", "value", ")", ";", "// whether the generated number is positive or negative, need to use either", "// floor (positive) or ceil (negative) function to get rid of the fraction", "return", "generated", ">", "0", "?", "Math", ".", "floor", "(", "generated", ")", ":", "Math", ".", "ceil", "(", "generated", ")", ";", "}"], "original_docstring": "The `integer` type is just a wrapper for the `number` type. The `number` type returns floating point numbers, and `integer` type truncates the fraction part, leaving the result as an integer.", "docstring": {"block_comment": "The  integer  type is just a wrapper for the  number  type. The  number  type returns floating point numbers, and  integer  type truncates the fraction part, leaving the result as an integer.", "line_comment": ["whether the generated number is positive or negative, need to use either", "floor  positive  or ceil  negative  function to get rid of the fraction"]}, "docstring_tokens": ["The", "integer", "type", "is", "just", "a", "wrapper", "for", "the", "number", "type", ".", "The", "number", "type", "returns", "floating", "point", "numbers", "and", "integer", "type", "truncates", "the", "fraction", "part", "leaving", "the", "result", "as", "an", "integer", "."], "sample_id": 511, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004378", "repo": "johnthepink/meteor", "path": "tools/runners/run-app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (options) {\n    var self = this;\n    options = options || {};\n    var firstRun = options.firstRun;\n\n    Console.enableProgressDisplay(true);\n\n    runLog.clearLog();\n    self.proxy.setMode(\"hold\");\n\n    // Bundle up the app\n    var bundlePath = self.projectContext.getProjectLocalDirectory('build');\n\n    // Cache the server target because the server will not change inside\n    // a single invocation of _runOnce().\n    var cachedServerWatchSet;\n\n    // Builders saved from previous iterations\n    var builders = {};\n\n    var bundleApp = function () {\n      if (! firstRun) {\n        // If the build fails in a way that could be fixed by a refresh, allow\n        // it even if we refreshed previously, since that might have been a\n        // little while ago.\n        catalog.triedToRefreshRecently = false;\n\n        // If this isn't the first time we've run, we need to reset the project\n        // context since everything we have cached may have changed.\n        // XXX We can try to be a little less conservative here:\n        // - Don't re-build the whole local catalog if we know which local\n        //   packages have changed.  (This one might be a little trickier due\n        //   to how the WatchSets are laid out.  Might be possible to avoid\n        //   re-building the local catalog at all if packages didn't change\n        //   at all, though.)\n        self.projectContext.reset({}, {\n          // Don't forget all Isopack objects; just make sure to check that they\n          // are up to date.\n          softRefreshIsopacks: true,\n          // Don't forget the package map we calculated last time, even if we\n          // didn't write it to disk (because, eg, we're not running with a\n          // release that matches the app's release).  While we will still check\n          // our constraints, we will use the map we calculated last time as the\n          // previous solution (not what's on disk). Package deltas should be\n          // shown from the previous solution.\n          preservePackageMap: true\n        });\n        var messages = buildmessage.capture(function () {\n          self.projectContext.readProjectMetadata();\n        });\n        if (messages.hasMessages()) {\n          return {\n            runResult: {\n              outcome: 'bundle-fail',\n              errors: messages,\n              watchSet: self.projectContext.getProjectAndLocalPackagesWatchSet()\n            }\n          };\n        }\n      }\n\n      // Check to make sure we're running the right version of Meteor.\n      var wrongRelease = ! release.usingRightReleaseForApp(self.projectContext);\n      if (wrongRelease) {\n        return {\n          runResult: {\n            outcome: 'wrong-release',\n            displayReleaseNeeded:\n              self.projectContext.releaseFile.displayReleaseName\n          }\n        };\n      }\n\n      messages = buildmessage.capture(function () {\n        self.projectContext.prepareProjectForBuild();\n      });\n      if (messages.hasMessages()) {\n        return {\n          runResult: {\n            outcome: 'bundle-fail',\n            errors: messages,\n            watchSet: self.projectContext.getProjectAndLocalPackagesWatchSet()\n          }\n        };\n      }\n\n      // Show package changes... unless it's the first time in test-packages.\n      if (!(self.omitPackageMapDeltaDisplayOnFirstRun && firstRun)) {\n        self.projectContext.packageMapDelta.displayOnConsole();\n      }\n\n      if (self.recordPackageUsage) {\n        stats.recordPackages({\n          what: \"sdk.run\",\n          projectContext: self.projectContext\n        });\n      }\n\n      var bundleResult = Profile.run(\"Rebuild App\", function () {\n        var includeNodeModules = 'symlink';\n\n        // On Windows we cannot symlink node_modules. Copying them is too slow.\n        // Instead receive the NODE_PATH env that we need to set and set it\n        // later on running.\n        if (process.platform === 'win32') {\n          includeNodeModules = 'reference-directly';\n        }\n\n        var bundleResult = bundler.bundle({\n          projectContext: self.projectContext,\n          outputPath: bundlePath,\n          includeNodeModules: includeNodeModules,\n          buildOptions: self.buildOptions,\n          hasCachedBundle: !! cachedServerWatchSet,\n          previousBuilders: builders\n        });\n\n        // save new builders with their caches\n        ({builders} = bundleResult);\n\n        return bundleResult;\n      });\n\n      // Keep the server watch set from the initial bundle, because subsequent\n      // bundles will not contain a server target.\n      if (cachedServerWatchSet) {\n        bundleResult.serverWatchSet = cachedServerWatchSet;\n      } else {\n        cachedServerWatchSet = bundleResult.serverWatchSet;\n      }\n\n      if (bundleResult.errors) {\n        return {\n          runResult: {\n            outcome: 'bundle-fail',\n            errors: bundleResult.errors,\n            watchSet: combinedWatchSetForBundleResult(bundleResult)\n          }\n        };\n      } else {\n        return { bundleResult: bundleResult };\n      }\n    };\n\n    var combinedWatchSetForBundleResult = function (br) {\n      var watchSet = br.serverWatchSet.clone();\n      watchSet.merge(br.clientWatchSet);\n      return watchSet;\n    };\n\n    var bundleResult;\n    var bundleResultOrRunResult = bundleApp();\n    if (bundleResultOrRunResult.runResult)\n      return bundleResultOrRunResult.runResult;\n    bundleResult = bundleResultOrRunResult.bundleResult;\n\n    firstRun = false;\n\n    // Read the settings file, if any\n    var settings = null;\n    var settingsWatchSet = new watch.WatchSet;\n    var settingsMessages = buildmessage.capture({\n      title: \"preparing to run\",\n      rootPath: process.cwd()\n    }, function () {\n      if (self.settingsFile)\n        settings = files.getSettings(self.settingsFile, settingsWatchSet);\n    });\n    if (settingsMessages.hasMessages()) {\n      return {\n        outcome: 'bundle-fail',\n        errors: settingsMessages,\n        watchSet: settingsWatchSet\n      };\n    }\n\n    var serverWatchSet = bundleResult.serverWatchSet;\n    serverWatchSet.merge(settingsWatchSet);\n\n    // We only can refresh the client without restarting the server if the\n    // client contains the 'autoupdate' package.\n    var canRefreshClient = self.projectContext.packageMap &&\n          self.projectContext.packageMap.getInfo('autoupdate');\n\n    if (! canRefreshClient) {\n      // Restart server on client changes if we can't refresh the client.\n      serverWatchSet = combinedWatchSetForBundleResult(bundleResult);\n    }\n\n    const cordovaRunner = self.cordovaRunner;\n    if (cordovaRunner) {\n      const pluginVersions =\n        cordova.pluginVersionsFromStarManifest(bundleResult.starManifest);\n\n      if (!cordovaRunner.started) {\n        const { settingsFile, mobileServerUrl } = self;\n        const messages = buildmessage.capture(() => {\n          cordovaRunner.prepareProject(bundlePath, pluginVersions,\n            { settingsFile, mobileServerUrl });\n        });\n\n        if (messages.hasMessages()) {\n          return {\n            outcome: 'bundle-fail',\n            errors: messages,\n            watchSet: combinedWatchSetForBundleResult(bundleResult)\n          };\n        }\n        cordovaRunner.printWarningsIfNeeded();\n      } else {\n        // If the set of Cordova platforms or plugins changes from one run\n        // to the next, we just exit, because we don't yet have a way to,\n        // for example, get the new plugins to the mobile clients or stop a\n        // running client on a platform that has been removed.\n\n        if (cordovaRunner.havePlatformsChangedSinceLastRun()) {\n          return { outcome: 'outdated-cordova-platforms' };\n        }\n\n        if (cordovaRunner.havePluginsChangedSinceLastRun(pluginVersions)) {\n          return { outcome: 'outdated-cordova-plugins' };\n        }\n      }\n    }\n\n    // Atomically (1) see if we've been stop()'d, (2) if not, create a\n    // future that can be used to stop() us once we start running.\n    if (self.exitFuture)\n      return { outcome: 'stopped' };\n    if (self.runFuture)\n      throw new Error(\"already have future?\");\n    var runFuture = self.runFuture = new Future;\n\n    // Run the program\n    options.beforeRun && options.beforeRun();\n    var appProcess = new AppProcess({\n      projectContext: self.projectContext,\n      bundlePath: bundlePath,\n      port: self.port,\n      listenHost: self.listenHost,\n      rootUrl: self.rootUrl,\n      mongoUrl: self.mongoUrl,\n      oplogUrl: self.oplogUrl,\n      mobileServerUrl: self.mobileServerUrl,\n      onExit: function (code, signal) {\n        self._runFutureReturn({\n          outcome: 'terminated',\n          code: code,\n          signal: signal,\n          watchSet: combinedWatchSetForBundleResult(bundleResult)\n        });\n      },\n      debugPort: self.debugPort,\n      onListen: function () {\n        self.proxy.setMode(\"proxy\");\n        options.onListen && options.onListen();\n        if (self.startFuture)\n          self.startFuture['return']();\n      },\n      nodeOptions: getNodeOptionsFromEnvironment(),\n      nodePath: _.map(bundleResult.nodePath, files.convertToOSPath),\n      settings: settings,\n      ipcPipe: self.watchForChanges\n    });\n\n    // Empty self._beforeStartFutures and await its elements.\n    if (firstRun && self._beforeStartFuture) {\n      var stopped = self._beforeStartFuture.wait();\n      if (stopped) {\n        return true;\n      }\n    }\n\n    appProcess.start();\n    function maybePrintLintWarnings(bundleResult) {\n      if (! (self.projectContext.lintAppAndLocalPackages &&\n             bundleResult.warnings)) {\n        return;\n      }\n      if (bundleResult.warnings.hasMessages()) {\n        const formattedMessages = bundleResult.warnings.formatMessages();\n        runLog.log(\n          `Linted your app.\\n\\n${ formattedMessages }`,\n          { arrow: true });\n      } else {\n        runLog.log('Linted your app. No linting errors.',\n                   { arrow: true });\n      }\n    }\n    maybePrintLintWarnings(bundleResult);\n\n    if (cordovaRunner && !cordovaRunner.started) {\n      cordovaRunner.startRunTargets();\n    }\n\n    // Start watching for changes for files if requested. There's no\n    // hurry to do this, since clientWatchSet contains a snapshot of the\n    // state of the world at the time of bundling, in the form of\n    // hashes and lists of matching files in each directory.\n    var serverWatcher;\n    var clientWatcher;\n\n    if (self.watchForChanges) {\n      serverWatcher = new watch.Watcher({\n        watchSet: serverWatchSet,\n        onChange: function () {\n          self._runFutureReturn({\n            outcome: 'changed'\n          });\n        }\n      });\n    }\n\n    var setupClientWatcher = function () {\n      clientWatcher && clientWatcher.stop();\n      clientWatcher = new watch.Watcher({\n         watchSet: bundleResult.clientWatchSet,\n         onChange: function () {\n          var outcome = watch.isUpToDate(serverWatchSet)\n                      ? 'changed-refreshable' // only a client asset has changed\n                      : 'changed'; // both a client and server asset changed\n          self._runFutureReturn({ outcome: outcome });\n         }\n      });\n    };\n    if (self.watchForChanges && canRefreshClient) {\n      setupClientWatcher();\n    }\n\n    Console.enableProgressDisplay(false);\n\n    // Wait for either the process to exit, or (if watchForChanges) a\n    // source file to change. Or, for stop() to be called.\n    var ret = runFuture.wait();\n\n    try {\n      while (ret.outcome === 'changed-refreshable') {\n        if (! canRefreshClient)\n          throw Error(\"Can't refresh client?\");\n\n        // We stay in this loop as long as only refreshable assets have changed.\n        // When ret.refreshable becomes false, we restart the server.\n        bundleResultOrRunResult = bundleApp();\n        if (bundleResultOrRunResult.runResult)\n          return bundleResultOrRunResult.runResult;\n        bundleResult = bundleResultOrRunResult.bundleResult;\n\n        maybePrintLintWarnings(bundleResult);\n\n        var oldFuture = self.runFuture = new Future;\n\n        // Notify the server that new client assets have been added to the\n        // build.\n        self._refreshing = true;\n        appProcess.proc.send({ refresh: 'client' });\n        self._refreshing = false;\n\n        // Establish a watcher on the new files.\n        setupClientWatcher();\n\n        runLog.logClientRestart();\n\n        // Wait until another file changes.\n        ret = oldFuture.wait();\n      }\n    } finally {\n      self.runFuture = null;\n\n      if (ret.outcome === 'changed') {\n        runLog.logTemporary(\"=> Server modified -- restarting...\");\n      }\n\n      self.proxy.setMode(\"hold\");\n      appProcess.stop();\n\n      serverWatcher && serverWatcher.stop();\n      clientWatcher && clientWatcher.stop();\n    }\n\n    return ret;\n  }", "code_tokens": ["function", "(", "options", ")", "{", "var", "self", "=", "this", ";", "options", "=", "options", "||", "{", "}", ";", "var", "firstRun", "=", "options", ".", "firstRun", ";", "Console", ".", "enableProgressDisplay", "(", "true", ")", ";", "runLog", ".", "clearLog", "(", ")", ";", "self", ".", "proxy", ".", "setMode", "(", "\"hold\"", ")", ";", "// Bundle up the app", "var", "bundlePath", "=", "self", ".", "projectContext", ".", "getProjectLocalDirectory", "(", "'build'", ")", ";", "// Cache the server target because the server will not change inside", "// a single invocation of _runOnce().", "var", "cachedServerWatchSet", ";", "// Builders saved from previous iterations", "var", "builders", "=", "{", "}", ";", "var", "bundleApp", "=", "function", "(", ")", "{", "if", "(", "!", "firstRun", ")", "{", "// If the build fails in a way that could be fixed by a refresh, allow", "// it even if we refreshed previously, since that might have been a", "// little while ago.", "catalog", ".", "triedToRefreshRecently", "=", "false", ";", "// If this isn't the first time we've run, we need to reset the project", "// context since everything we have cached may have changed.", "// XXX We can try to be a little less conservative here:", "// - Don't re-build the whole local catalog if we know which local", "//   packages have changed.  (This one might be a little trickier due", "//   to how the WatchSets are laid out.  Might be possible to avoid", "//   re-building the local catalog at all if packages didn't change", "//   at all, though.)", "self", ".", "projectContext", ".", "reset", "(", "{", "}", ",", "{", "// Don't forget all Isopack objects; just make sure to check that they", "// are up to date.", "softRefreshIsopacks", ":", "true", ",", "// Don't forget the package map we calculated last time, even if we", "// didn't write it to disk (because, eg, we're not running with a", "// release that matches the app's release).  While we will still check", "// our constraints, we will use the map we calculated last time as the", "// previous solution (not what's on disk). Package deltas should be", "// shown from the previous solution.", "preservePackageMap", ":", "true", "}", ")", ";", "var", "messages", "=", "buildmessage", ".", "capture", "(", "function", "(", ")", "{", "self", ".", "projectContext", ".", "readProjectMetadata", "(", ")", ";", "}", ")", ";", "if", "(", "messages", ".", "hasMessages", "(", ")", ")", "{", "return", "{", "runResult", ":", "{", "outcome", ":", "'bundle-fail'", ",", "errors", ":", "messages", ",", "watchSet", ":", "self", ".", "projectContext", ".", "getProjectAndLocalPackagesWatchSet", "(", ")", "}", "}", ";", "}", "}", "// Check to make sure we're running the right version of Meteor.", "var", "wrongRelease", "=", "!", "release", ".", "usingRightReleaseForApp", "(", "self", ".", "projectContext", ")", ";", "if", "(", "wrongRelease", ")", "{", "return", "{", "runResult", ":", "{", "outcome", ":", "'wrong-release'", ",", "displayReleaseNeeded", ":", "self", ".", "projectContext", ".", "releaseFile", ".", "displayReleaseName", "}", "}", ";", "}", "messages", "=", "buildmessage", ".", "capture", "(", "function", "(", ")", "{", "self", ".", "projectContext", ".", "prepareProjectForBuild", "(", ")", ";", "}", ")", ";", "if", "(", "messages", ".", "hasMessages", "(", ")", ")", "{", "return", "{", "runResult", ":", "{", "outcome", ":", "'bundle-fail'", ",", "errors", ":", "messages", ",", "watchSet", ":", "self", ".", "projectContext", ".", "getProjectAndLocalPackagesWatchSet", "(", ")", "}", "}", ";", "}", "// Show package changes... unless it's the first time in test-packages.", "if", "(", "!", "(", "self", ".", "omitPackageMapDeltaDisplayOnFirstRun", "&&", "firstRun", ")", ")", "{", "self", ".", "projectContext", ".", "packageMapDelta", ".", "displayOnConsole", "(", ")", ";", "}", "if", "(", "self", ".", "recordPackageUsage", ")", "{", "stats", ".", "recordPackages", "(", "{", "what", ":", "\"sdk.run\"", ",", "projectContext", ":", "self", ".", "projectContext", "}", ")", ";", "}", "var", "bundleResult", "=", "Profile", ".", "run", "(", "\"Rebuild App\"", ",", "function", "(", ")", "{", "var", "includeNodeModules", "=", "'symlink'", ";", "// On Windows we cannot symlink node_modules. Copying them is too slow.", "// Instead receive the NODE_PATH env that we need to set and set it", "// later on running.", "if", "(", "process", ".", "platform", "===", "'win32'", ")", "{", "includeNodeModules", "=", "'reference-directly'", ";", "}", "var", "bundleResult", "=", "bundler", ".", "bundle", "(", "{", "projectContext", ":", "self", ".", "projectContext", ",", "outputPath", ":", "bundlePath", ",", "includeNodeModules", ":", "includeNodeModules", ",", "buildOptions", ":", "self", ".", "buildOptions", ",", "hasCachedBundle", ":", "!", "!", "cachedServerWatchSet", ",", "previousBuilders", ":", "builders", "}", ")", ";", "// save new builders with their caches", "(", "{", "builders", "}", "=", "bundleResult", ")", ";", "return", "bundleResult", ";", "}", ")", ";", "// Keep the server watch set from the initial bundle, because subsequent", "// bundles will not contain a server target.", "if", "(", "cachedServerWatchSet", ")", "{", "bundleResult", ".", "serverWatchSet", "=", "cachedServerWatchSet", ";", "}", "else", "{", "cachedServerWatchSet", "=", "bundleResult", ".", "serverWatchSet", ";", "}", "if", "(", "bundleResult", ".", "errors", ")", "{", "return", "{", "runResult", ":", "{", "outcome", ":", "'bundle-fail'", ",", "errors", ":", "bundleResult", ".", "errors", ",", "watchSet", ":", "combinedWatchSetForBundleResult", "(", "bundleResult", ")", "}", "}", ";", "}", "else", "{", "return", "{", "bundleResult", ":", "bundleResult", "}", ";", "}", "}", ";", "var", "combinedWatchSetForBundleResult", "=", "function", "(", "br", ")", "{", "var", "watchSet", "=", "br", ".", "serverWatchSet", ".", "clone", "(", ")", ";", "watchSet", ".", "merge", "(", "br", ".", "clientWatchSet", ")", ";", "return", "watchSet", ";", "}", ";", "var", "bundleResult", ";", "var", "bundleResultOrRunResult", "=", "bundleApp", "(", ")", ";", "if", "(", "bundleResultOrRunResult", ".", "runResult", ")", "return", "bundleResultOrRunResult", ".", "runResult", ";", "bundleResult", "=", "bundleResultOrRunResult", ".", "bundleResult", ";", "firstRun", "=", "false", ";", "// Read the settings file, if any", "var", "settings", "=", "null", ";", "var", "settingsWatchSet", "=", "new", "watch", ".", "WatchSet", ";", "var", "settingsMessages", "=", "buildmessage", ".", "capture", "(", "{", "title", ":", "\"preparing to run\"", ",", "rootPath", ":", "process", ".", "cwd", "(", ")", "}", ",", "function", "(", ")", "{", "if", "(", "self", ".", "settingsFile", ")", "settings", "=", "files", ".", "getSettings", "(", "self", ".", "settingsFile", ",", "settingsWatchSet", ")", ";", "}", ")", ";", "if", "(", "settingsMessages", ".", "hasMessages", "(", ")", ")", "{", "return", "{", "outcome", ":", "'bundle-fail'", ",", "errors", ":", "settingsMessages", ",", "watchSet", ":", "settingsWatchSet", "}", ";", "}", "var", "serverWatchSet", "=", "bundleResult", ".", "serverWatchSet", ";", "serverWatchSet", ".", "merge", "(", "settingsWatchSet", ")", ";", "// We only can refresh the client without restarting the server if the", "// client contains the 'autoupdate' package.", "var", "canRefreshClient", "=", "self", ".", "projectContext", ".", "packageMap", "&&", "self", ".", "projectContext", ".", "packageMap", ".", "getInfo", "(", "'autoupdate'", ")", ";", "if", "(", "!", "canRefreshClient", ")", "{", "// Restart server on client changes if we can't refresh the client.", "serverWatchSet", "=", "combinedWatchSetForBundleResult", "(", "bundleResult", ")", ";", "}", "const", "cordovaRunner", "=", "self", ".", "cordovaRunner", ";", "if", "(", "cordovaRunner", ")", "{", "const", "pluginVersions", "=", "cordova", ".", "pluginVersionsFromStarManifest", "(", "bundleResult", ".", "starManifest", ")", ";", "if", "(", "!", "cordovaRunner", ".", "started", ")", "{", "const", "{", "settingsFile", ",", "mobileServerUrl", "}", "=", "self", ";", "const", "messages", "=", "buildmessage", ".", "capture", "(", "(", ")", "=>", "{", "cordovaRunner", ".", "prepareProject", "(", "bundlePath", ",", "pluginVersions", ",", "{", "settingsFile", ",", "mobileServerUrl", "}", ")", ";", "}", ")", ";", "if", "(", "messages", ".", "hasMessages", "(", ")", ")", "{", "return", "{", "outcome", ":", "'bundle-fail'", ",", "errors", ":", "messages", ",", "watchSet", ":", "combinedWatchSetForBundleResult", "(", "bundleResult", ")", "}", ";", "}", "cordovaRunner", ".", "printWarningsIfNeeded", "(", ")", ";", "}", "else", "{", "// If the set of Cordova platforms or plugins changes from one run", "// to the next, we just exit, because we don't yet have a way to,", "// for example, get the new plugins to the mobile clients or stop a", "// running client on a platform that has been removed.", "if", "(", "cordovaRunner", ".", "havePlatformsChangedSinceLastRun", "(", ")", ")", "{", "return", "{", "outcome", ":", "'outdated-cordova-platforms'", "}", ";", "}", "if", "(", "cordovaRunner", ".", "havePluginsChangedSinceLastRun", "(", "pluginVersions", ")", ")", "{", "return", "{", "outcome", ":", "'outdated-cordova-plugins'", "}", ";", "}", "}", "}", "// Atomically (1) see if we've been stop()'d, (2) if not, create a", "// future that can be used to stop() us once we start running.", "if", "(", "self", ".", "exitFuture", ")", "return", "{", "outcome", ":", "'stopped'", "}", ";", "if", "(", "self", ".", "runFuture", ")", "throw", "new", "Error", "(", "\"already have future?\"", ")", ";", "var", "runFuture", "=", "self", ".", "runFuture", "=", "new", "Future", ";", "// Run the program", "options", ".", "beforeRun", "&&", "options", ".", "beforeRun", "(", ")", ";", "var", "appProcess", "=", "new", "AppProcess", "(", "{", "projectContext", ":", "self", ".", "projectContext", ",", "bundlePath", ":", "bundlePath", ",", "port", ":", "self", ".", "port", ",", "listenHost", ":", "self", ".", "listenHost", ",", "rootUrl", ":", "self", ".", "rootUrl", ",", "mongoUrl", ":", "self", ".", "mongoUrl", ",", "oplogUrl", ":", "self", ".", "oplogUrl", ",", "mobileServerUrl", ":", "self", ".", "mobileServerUrl", ",", "onExit", ":", "function", "(", "code", ",", "signal", ")", "{", "self", ".", "_runFutureReturn", "(", "{", "outcome", ":", "'terminated'", ",", "code", ":", "code", ",", "signal", ":", "signal", ",", "watchSet", ":", "combinedWatchSetForBundleResult", "(", "bundleResult", ")", "}", ")", ";", "}", ",", "debugPort", ":", "self", ".", "debugPort", ",", "onListen", ":", "function", "(", ")", "{", "self", ".", "proxy", ".", "setMode", "(", "\"proxy\"", ")", ";", "options", ".", "onListen", "&&", "options", ".", "onListen", "(", ")", ";", "if", "(", "self", ".", "startFuture", ")", "self", ".", "startFuture", "[", "'return'", "]", "(", ")", ";", "}", ",", "nodeOptions", ":", "getNodeOptionsFromEnvironment", "(", ")", ",", "nodePath", ":", "_", ".", "map", "(", "bundleResult", ".", "nodePath", ",", "files", ".", "convertToOSPath", ")", ",", "settings", ":", "settings", ",", "ipcPipe", ":", "self", ".", "watchForChanges", "}", ")", ";", "// Empty self._beforeStartFutures and await its elements.", "if", "(", "firstRun", "&&", "self", ".", "_beforeStartFuture", ")", "{", "var", "stopped", "=", "self", ".", "_beforeStartFuture", ".", "wait", "(", ")", ";", "if", "(", "stopped", ")", "{", "return", "true", ";", "}", "}", "appProcess", ".", "start", "(", ")", ";", "function", "maybePrintLintWarnings", "(", "bundleResult", ")", "{", "if", "(", "!", "(", "self", ".", "projectContext", ".", "lintAppAndLocalPackages", "&&", "bundleResult", ".", "warnings", ")", ")", "{", "return", ";", "}", "if", "(", "bundleResult", ".", "warnings", ".", "hasMessages", "(", ")", ")", "{", "const", "formattedMessages", "=", "bundleResult", ".", "warnings", ".", "formatMessages", "(", ")", ";", "runLog", ".", "log", "(", "`", "\\n", "\\n", "${", "formattedMessages", "}", "`", ",", "{", "arrow", ":", "true", "}", ")", ";", "}", "else", "{", "runLog", ".", "log", "(", "'Linted your app. No linting errors.'", ",", "{", "arrow", ":", "true", "}", ")", ";", "}", "}", "maybePrintLintWarnings", "(", "bundleResult", ")", ";", "if", "(", "cordovaRunner", "&&", "!", "cordovaRunner", ".", "started", ")", "{", "cordovaRunner", ".", "startRunTargets", "(", ")", ";", "}", "// Start watching for changes for files if requested. There's no", "// hurry to do this, since clientWatchSet contains a snapshot of the", "// state of the world at the time of bundling, in the form of", "// hashes and lists of matching files in each directory.", "var", "serverWatcher", ";", "var", "clientWatcher", ";", "if", "(", "self", ".", "watchForChanges", ")", "{", "serverWatcher", "=", "new", "watch", ".", "Watcher", "(", "{", "watchSet", ":", "serverWatchSet", ",", "onChange", ":", "function", "(", ")", "{", "self", ".", "_runFutureReturn", "(", "{", "outcome", ":", "'changed'", "}", ")", ";", "}", "}", ")", ";", "}", "var", "setupClientWatcher", "=", "function", "(", ")", "{", "clientWatcher", "&&", "clientWatcher", ".", "stop", "(", ")", ";", "clientWatcher", "=", "new", "watch", ".", "Watcher", "(", "{", "watchSet", ":", "bundleResult", ".", "clientWatchSet", ",", "onChange", ":", "function", "(", ")", "{", "var", "outcome", "=", "watch", ".", "isUpToDate", "(", "serverWatchSet", ")", "?", "'changed-refreshable'", "// only a client asset has changed", ":", "'changed'", ";", "// both a client and server asset changed", "self", ".", "_runFutureReturn", "(", "{", "outcome", ":", "outcome", "}", ")", ";", "}", "}", ")", ";", "}", ";", "if", "(", "self", ".", "watchForChanges", "&&", "canRefreshClient", ")", "{", "setupClientWatcher", "(", ")", ";", "}", "Console", ".", "enableProgressDisplay", "(", "false", ")", ";", "// Wait for either the process to exit, or (if watchForChanges) a", "// source file to change. Or, for stop() to be called.", "var", "ret", "=", "runFuture", ".", "wait", "(", ")", ";", "try", "{", "while", "(", "ret", ".", "outcome", "===", "'changed-refreshable'", ")", "{", "if", "(", "!", "canRefreshClient", ")", "throw", "Error", "(", "\"Can't refresh client?\"", ")", ";", "// We stay in this loop as long as only refreshable assets have changed.", "// When ret.refreshable becomes false, we restart the server.", "bundleResultOrRunResult", "=", "bundleApp", "(", ")", ";", "if", "(", "bundleResultOrRunResult", ".", "runResult", ")", "return", "bundleResultOrRunResult", ".", "runResult", ";", "bundleResult", "=", "bundleResultOrRunResult", ".", "bundleResult", ";", "maybePrintLintWarnings", "(", "bundleResult", ")", ";", "var", "oldFuture", "=", "self", ".", "runFuture", "=", "new", "Future", ";", "// Notify the server that new client assets have been added to the", "// build.", "self", ".", "_refreshing", "=", "true", ";", "appProcess", ".", "proc", ".", "send", "(", "{", "refresh", ":", "'client'", "}", ")", ";", "self", ".", "_refreshing", "=", "false", ";", "// Establish a watcher on the new files.", "setupClientWatcher", "(", ")", ";", "runLog", ".", "logClientRestart", "(", ")", ";", "// Wait until another file changes.", "ret", "=", "oldFuture", ".", "wait", "(", ")", ";", "}", "}", "finally", "{", "self", ".", "runFuture", "=", "null", ";", "if", "(", "ret", ".", "outcome", "===", "'changed'", ")", "{", "runLog", ".", "logTemporary", "(", "\"=> Server modified -- restarting...\"", ")", ";", "}", "self", ".", "proxy", ".", "setMode", "(", "\"hold\"", ")", ";", "appProcess", ".", "stop", "(", ")", ";", "serverWatcher", "&&", "serverWatcher", ".", "stop", "(", ")", ";", "clientWatcher", "&&", "clientWatcher", ".", "stop", "(", ")", ";", "}", "return", "ret", ";", "}"], "original_docstring": "Run the program once, wait for it to exit, and then return. The return value is same as onRunEnd.", "docstring": {"block_comment": "Run the program once, wait for it to exit, and then return. The return value is same as onRunEnd.", "line_comment": ["Bundle up the app", "Cache the server target because the server will not change inside", "a single invocation of _runOnce  .", "Builders saved from previous iterations", "If the build fails in a way that could be fixed by a refresh, allow", "it even if we refreshed previously, since that might have been a", "little while ago.", "If this isn t the first time we ve run, we need to reset the project", "context since everything we have cached may have changed.", "XXX We can try to be a little less conservative here ", "Don t re build the whole local catalog if we know which local", "packages have changed.   This one might be a little trickier due", "to how the WatchSets are laid out.  Might be possible to avoid", "re building the local catalog at all if packages didn t change", "at all, though. ", "Don t forget all Isopack objects  just make sure to check that they", null, "Don t forget the package map we calculated last time, even if we", "didn t write it to disk  because, eg, we re not running with a", "release that matches the app s release .  While we will still check", "our constraints, we will use the map we calculated last time as the", "previous solution  not what s on disk . Package deltas should be", "shown from the previous solution.", "Check to make sure we re running the right version of Meteor.", "Show package changes... unless it s the first time in test packages.", "On Windows we cannot symlink node_modules. Copying them is too slow.", "Instead receive the NODE_PATH env that we need to set and set it", "later on running.", "save new builders with their caches", "Keep the server watch set from the initial bundle, because subsequent", "bundles will not contain a server target.", "Read the settings file, if any", "We only can refresh the client without restarting the server if the", "client contains the  autoupdate  package.", "Restart server on client changes if we can t refresh the client.", "If the set of Cordova platforms or plugins changes from one run", "to the next, we just exit, because we don t yet have a way to,", "for example, get the new plugins to the mobile clients or stop a", "running client on a platform that has been removed.", "Atomically  1  see if we ve been stop   d,  2  if not, create a", "future that can be used to stop   us once we start running.", "Run the program", "Empty self._beforeStartFutures and await its elements.", "Start watching for changes for files if requested. There s no", "hurry to do this, since clientWatchSet contains a snapshot of the", "state of the world at the time of bundling, in the form of", "hashes and lists of matching files in each directory.", "only a client asset has changed", "both a client and server asset changed", "Wait for either the process to exit, or  if watchForChanges  a", "source file to change. Or, for stop   to be called.", "We stay in this loop as long as only refreshable assets have changed.", "When ret.refreshable becomes false, we restart the server.", "Notify the server that new client assets have been added to the", "build.", "Establish a watcher on the new files.", "Wait until another file changes."]}, "docstring_tokens": ["Run", "the", "program", "once", "wait", "for", "it", "to", "exit", "and", "then", "return", ".", "The", "return", "value", "is", "same", "as", "onRunEnd", "."], "sample_id": 512, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004379", "repo": "johnthepink/meteor", "path": "tools/runners/run-app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    var self = this;\n\n    if (! self.fiber)\n      return; // nothing to do\n\n    if (self.exitFuture)\n      throw new Error(\"another fiber already stopping?\");\n\n    // The existence of this future makes the fiber break out of its loop.\n    self.exitFuture = new Future;\n\n    self._runFutureReturn({ outcome: 'stopped' });\n    self._watchFutureReturn();\n    if (self._beforeStartFuture && ! self._beforeStartFuture.isResolved()) {\n      // If we stopped before mongod started (eg, due to mongod startup\n      // failure), unblock the runner fiber from waiting for mongod to start.\n      self._beforeStartFuture.return(true);\n    }\n    self.exitFuture.wait();\n    self.exitFuture = null;\n  }", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "if", "(", "!", "self", ".", "fiber", ")", "return", ";", "// nothing to do", "if", "(", "self", ".", "exitFuture", ")", "throw", "new", "Error", "(", "\"another fiber already stopping?\"", ")", ";", "// The existence of this future makes the fiber break out of its loop.", "self", ".", "exitFuture", "=", "new", "Future", ";", "self", ".", "_runFutureReturn", "(", "{", "outcome", ":", "'stopped'", "}", ")", ";", "self", ".", "_watchFutureReturn", "(", ")", ";", "if", "(", "self", ".", "_beforeStartFuture", "&&", "!", "self", ".", "_beforeStartFuture", ".", "isResolved", "(", ")", ")", "{", "// If we stopped before mongod started (eg, due to mongod startup", "// failure), unblock the runner fiber from waiting for mongod to start.", "self", ".", "_beforeStartFuture", ".", "return", "(", "true", ")", ";", "}", "self", ".", "exitFuture", ".", "wait", "(", ")", ";", "self", ".", "exitFuture", "=", "null", ";", "}"], "original_docstring": "Shut down the app. stop() will block until the app is shut down. This may involve waiting for bundling to finish. Idempotent, however only one thread may be in stop() at a time.", "docstring": {"block_comment": "Shut down the app. stop   will block until the app is shut down. This may involve waiting for bundling to finish. Idempotent, however only one thread may be in stop   at a time.", "line_comment": ["nothing to do", "The existence of this future makes the fiber break out of its loop.", "If we stopped before mongod started  eg, due to mongod startup", "failure , unblock the runner fiber from waiting for mongod to start."]}, "docstring_tokens": ["Shut", "down", "the", "app", ".", "stop", "will", "block", "until", "the", "app", "is", "shut", "down", ".", "This", "may", "involve", "waiting", "for", "bundling", "to", "finish", ".", "Idempotent", "however", "only", "one", "thread", "may", "be", "in", "stop", "at", "a", "time", "."], "sample_id": 513, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004380", "repo": "johnthepink/meteor", "path": "tools/runners/run-app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    var self = this;\n\n    if (self.fiber)\n      throw new Error(\"already started?\");\n\n    self.startFuture = new Future;\n    // XXX I think it's correct to not try to use bindEnvironment here:\n    //     the extra fiber should be independent of this one.\n    self.fiber = Fiber(function () {\n      self._fiber();\n    });\n    self.fiber.run();\n    self.startFuture.wait();\n    self.startFuture = null;\n  }", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "if", "(", "self", ".", "fiber", ")", "throw", "new", "Error", "(", "\"already started?\"", ")", ";", "self", ".", "startFuture", "=", "new", "Future", ";", "// XXX I think it's correct to not try to use bindEnvironment here:", "//     the extra fiber should be independent of this one.", "self", ".", "fiber", "=", "Fiber", "(", "function", "(", ")", "{", "self", ".", "_fiber", "(", ")", ";", "}", ")", ";", "self", ".", "fiber", ".", "run", "(", ")", ";", "self", ".", "startFuture", ".", "wait", "(", ")", ";", "self", ".", "startFuture", "=", "null", ";", "}"], "original_docstring": "Start the app running, and restart it as necessary. Returns immediately.", "docstring": {"block_comment": "Start the app running, and restart it as necessary. Returns immediately.", "line_comment": ["XXX I think it s correct to not try to use bindEnvironment here ", "the extra fiber should be independent of this one."]}, "docstring_tokens": ["Start", "the", "app", "running", "and", "restart", "it", "as", "necessary", ".", "Returns", "immediately", "."], "sample_id": 514, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004381", "repo": "johnthepink/meteor", "path": "tools/runners/run-app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    var self = this;\n\n    // Path conversions\n    var nodePath = process.execPath; // This path is an OS path already\n    var entryPoint = files.convertToOSPath(\n      files.pathJoin(self.bundlePath, 'main.js'));\n\n    // Setting options\n    var opts = _.clone(self.nodeOptions);\n\n    var attach;\n    if (self.debugPort) {\n      attach = require('../inspector.js').start(self.debugPort, entryPoint);\n\n      // If you do opts.push(\"--debug-brk\", port) it doesn't work on Windows\n      // for some reason\n      opts.push(\"--debug-brk=\" + attach.suggestedDebugBrkPort);\n    }\n\n    opts.push(entryPoint);\n\n    // Call node\n    var child_process = require('child_process');\n    // setup the 'ipc' pipe if further communication between app and proxy is\n    // expected\n    var ioOptions = self.ipcPipe ? ['pipe', 'pipe', 'pipe', 'ipc'] : 'pipe';\n    var child = child_process.spawn(nodePath, opts, {\n      env: self._computeEnvironment(),\n      stdio: ioOptions\n    });\n\n    // Attach inspector\n    if (attach) {\n      attach(child);\n    }\n\n    return child;\n  }", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "// Path conversions", "var", "nodePath", "=", "process", ".", "execPath", ";", "// This path is an OS path already", "var", "entryPoint", "=", "files", ".", "convertToOSPath", "(", "files", ".", "pathJoin", "(", "self", ".", "bundlePath", ",", "'main.js'", ")", ")", ";", "// Setting options", "var", "opts", "=", "_", ".", "clone", "(", "self", ".", "nodeOptions", ")", ";", "var", "attach", ";", "if", "(", "self", ".", "debugPort", ")", "{", "attach", "=", "require", "(", "'../inspector.js'", ")", ".", "start", "(", "self", ".", "debugPort", ",", "entryPoint", ")", ";", "// If you do opts.push(\"--debug-brk\", port) it doesn't work on Windows", "// for some reason", "opts", ".", "push", "(", "\"--debug-brk=\"", "+", "attach", ".", "suggestedDebugBrkPort", ")", ";", "}", "opts", ".", "push", "(", "entryPoint", ")", ";", "// Call node", "var", "child_process", "=", "require", "(", "'child_process'", ")", ";", "// setup the 'ipc' pipe if further communication between app and proxy is", "// expected", "var", "ioOptions", "=", "self", ".", "ipcPipe", "?", "[", "'pipe'", ",", "'pipe'", ",", "'pipe'", ",", "'ipc'", "]", ":", "'pipe'", ";", "var", "child", "=", "child_process", ".", "spawn", "(", "nodePath", ",", "opts", ",", "{", "env", ":", "self", ".", "_computeEnvironment", "(", ")", ",", "stdio", ":", "ioOptions", "}", ")", ";", "// Attach inspector", "if", "(", "attach", ")", "{", "attach", "(", "child", ")", ";", "}", "return", "child", ";", "}"], "original_docstring": "Spawn the server process and return the handle from child_process.spawn.", "docstring": {"block_comment": "Spawn the server process and return the handle from child_process.spawn.", "line_comment": ["Path conversions", "This path is an OS path already", "Setting options", "If you do opts.push    debug brk , port  it doesn t work on Windows", "for some reason", "Call node", "setup the  ipc  pipe if further communication between app and proxy is", "expected", "Attach inspector"]}, "docstring_tokens": ["Spawn", "the", "server", "process", "and", "return", "the", "handle", "from", "child_process", ".", "spawn", "."], "sample_id": 515, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004382", "repo": "johnthepink/meteor", "path": "tools/runners/run-app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    var self = this;\n\n    if (self.proc && self.proc.pid) {\n      self.proc.removeAllListeners('close');\n      self.proc.removeAllListeners('error');\n      self.proc.kill();\n    }\n    self.proc = null;\n\n    self.onListen = null;\n    self.onExit = null;\n  }", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "if", "(", "self", ".", "proc", "&&", "self", ".", "proc", ".", "pid", ")", "{", "self", ".", "proc", ".", "removeAllListeners", "(", "'close'", ")", ";", "self", ".", "proc", ".", "removeAllListeners", "(", "'error'", ")", ";", "self", ".", "proc", ".", "kill", "(", ")", ";", "}", "self", ".", "proc", "=", "null", ";", "self", ".", "onListen", "=", "null", ";", "self", ".", "onExit", "=", "null", ";", "}"], "original_docstring": "Idempotent. Once stop() returns it is guaranteed that you will receive no more callbacks from this AppProcess.", "docstring": {"block_comment": "Idempotent. Once stop   returns it is guaranteed that you will receive no more callbacks from this AppProcess.", "line_comment": null}, "docstring_tokens": ["Idempotent", ".", "Once", "stop", "returns", "it", "is", "guaranteed", "that", "you", "will", "receive", "no", "more", "callbacks", "from", "this", "AppProcess", "."], "sample_id": 516, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004383", "repo": "johnthepink/meteor", "path": "tools/runners/run-app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    var self = this;\n\n    if (self.proc)\n      throw new Error(\"already started?\");\n\n    // Start the app!\n    self.proc = self._spawn();\n\n    // Send stdout and stderr to the runLog\n    var eachline = require('eachline');\n    eachline(self.proc.stdout, 'utf8', fiberHelpers.inBareFiber(function (line) {\n      if (line.match(/^LISTENING\\s*$/)) {\n        // This is the child process telling us that it's ready to receive\n        // connections.  (It does this because we told it to with\n        // $METEOR_PRINT_ON_LISTEN.)\n        self.onListen && self.onListen();\n\n      } else {\n        runLog.logAppOutput(line);\n      }\n    }));\n\n    eachline(self.proc.stderr, 'utf8', fiberHelpers.inBareFiber(function (line) {\n      if (self.debugPort &&\n          line.indexOf(\"debugger listening on port \") >= 0) {\n        Console.enableProgressDisplay(false);\n        return;\n      }\n\n      runLog.logAppOutput(line, true);\n    }));\n\n    // Watch for exit and for stdio to be fully closed (so that we don't miss\n    // log lines).\n    self.proc.on('close', fiberHelpers.inBareFiber(function (code, signal) {\n      self._maybeCallOnExit(code, signal);\n    }));\n\n    self.proc.on('error', fiberHelpers.inBareFiber(function (err) {\n      // if the error is the result of .send command over ipc pipe, ignore it\n      if (self._refreshing) {\n        return;\n      }\n\n      runLog.log(\"Couldn't spawn process: \" + err.message,  { arrow: true });\n\n      // node docs say that it might make both an 'error' and a\n      // 'close' callback, so we use a guard to make sure we only call\n      // onExit once.\n      self._maybeCallOnExit();\n    }));\n\n    // This happens sometimes when we write a keepalive after the app\n    // is dead. If we don't register a handler, we get a top level\n    // exception and the whole app dies.\n    // http://stackoverflow.com/questions/2893458/uncatchable-errors-in-node-js\n    self.proc.stdin.on('error', function () {});\n\n    // When the parent process exits (i.e. the server is shutting down and\n    // not merely restarting), make sure to disconnect any still-connected\n    // shell clients.\n    require('../tool-env/cleanup.js').onExit(function() {\n      require('../static-assets/server/shell-server.js').disable(\n        self.projectContext.getMeteorShellDirectory()\n      );\n    });\n  }", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "if", "(", "self", ".", "proc", ")", "throw", "new", "Error", "(", "\"already started?\"", ")", ";", "// Start the app!", "self", ".", "proc", "=", "self", ".", "_spawn", "(", ")", ";", "// Send stdout and stderr to the runLog", "var", "eachline", "=", "require", "(", "'eachline'", ")", ";", "eachline", "(", "self", ".", "proc", ".", "stdout", ",", "'utf8'", ",", "fiberHelpers", ".", "inBareFiber", "(", "function", "(", "line", ")", "{", "if", "(", "line", ".", "match", "(", "/", "^LISTENING\\s*$", "/", ")", ")", "{", "// This is the child process telling us that it's ready to receive", "// connections.  (It does this because we told it to with", "// $METEOR_PRINT_ON_LISTEN.)", "self", ".", "onListen", "&&", "self", ".", "onListen", "(", ")", ";", "}", "else", "{", "runLog", ".", "logAppOutput", "(", "line", ")", ";", "}", "}", ")", ")", ";", "eachline", "(", "self", ".", "proc", ".", "stderr", ",", "'utf8'", ",", "fiberHelpers", ".", "inBareFiber", "(", "function", "(", "line", ")", "{", "if", "(", "self", ".", "debugPort", "&&", "line", ".", "indexOf", "(", "\"debugger listening on port \"", ")", ">=", "0", ")", "{", "Console", ".", "enableProgressDisplay", "(", "false", ")", ";", "return", ";", "}", "runLog", ".", "logAppOutput", "(", "line", ",", "true", ")", ";", "}", ")", ")", ";", "// Watch for exit and for stdio to be fully closed (so that we don't miss", "// log lines).", "self", ".", "proc", ".", "on", "(", "'close'", ",", "fiberHelpers", ".", "inBareFiber", "(", "function", "(", "code", ",", "signal", ")", "{", "self", ".", "_maybeCallOnExit", "(", "code", ",", "signal", ")", ";", "}", ")", ")", ";", "self", ".", "proc", ".", "on", "(", "'error'", ",", "fiberHelpers", ".", "inBareFiber", "(", "function", "(", "err", ")", "{", "// if the error is the result of .send command over ipc pipe, ignore it", "if", "(", "self", ".", "_refreshing", ")", "{", "return", ";", "}", "runLog", ".", "log", "(", "\"Couldn't spawn process: \"", "+", "err", ".", "message", ",", "{", "arrow", ":", "true", "}", ")", ";", "// node docs say that it might make both an 'error' and a", "// 'close' callback, so we use a guard to make sure we only call", "// onExit once.", "self", ".", "_maybeCallOnExit", "(", ")", ";", "}", ")", ")", ";", "// This happens sometimes when we write a keepalive after the app", "// is dead. If we don't register a handler, we get a top level", "// exception and the whole app dies.", "// http://stackoverflow.com/questions/2893458/uncatchable-errors-in-node-js", "self", ".", "proc", ".", "stdin", ".", "on", "(", "'error'", ",", "function", "(", ")", "{", "}", ")", ";", "// When the parent process exits (i.e. the server is shutting down and", "// not merely restarting), make sure to disconnect any still-connected", "// shell clients.", "require", "(", "'../tool-env/cleanup.js'", ")", ".", "onExit", "(", "function", "(", ")", "{", "require", "(", "'../static-assets/server/shell-server.js'", ")", ".", "disable", "(", "self", ".", "projectContext", ".", "getMeteorShellDirectory", "(", ")", ")", ";", "}", ")", ";", "}"], "original_docstring": "Call to start the process.", "docstring": {"block_comment": "Call to start the process.", "line_comment": ["Start the app ", "Send stdout and stderr to the runLog", "This is the child process telling us that it s ready to receive", "connections.   It does this because we told it to with", " METEOR_PRINT_ON_LISTEN. ", "Watch for exit and for stdio to be fully closed  so that we don t miss", "log lines .", "if the error is the result of .send command over ipc pipe, ignore it", "node docs say that it might make both an  error  and a", " close  callback, so we use a guard to make sure we only call", "onExit once.", "This happens sometimes when we write a keepalive after the app", null, "exception and the whole app dies.", "", "When the parent process exits  i.e. the server is shutting down and", "not merely restarting , make sure to disconnect any still connected", "shell clients."]}, "docstring_tokens": ["Call", "to", "start", "the", "process", "."], "sample_id": 517, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004384", "repo": "johnthepink/meteor", "path": "tools/runners/run-app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (options) {\n  var self = this;\n\n  self.projectContext = options.projectContext;\n  self.bundlePath = options.bundlePath;\n  self.port = options.port;\n  self.listenHost = options.listenHost;\n  self.rootUrl = options.rootUrl;\n  self.mongoUrl = options.mongoUrl;\n  self.oplogUrl = options.oplogUrl;\n  self.mobileServerUrl = options.mobileServerUrl;\n\n  self.onExit = options.onExit;\n  self.onListen = options.onListen;\n  self.nodeOptions = options.nodeOptions || [];\n  self.nodePath = options.nodePath || [];\n  self.debugPort = options.debugPort;\n  self.settings = options.settings;\n\n  self.proc = null;\n  self.madeExitCallback = false;\n  self.ipcPipe = options.ipcPipe;\n}", "code_tokens": ["function", "(", "options", ")", "{", "var", "self", "=", "this", ";", "self", ".", "projectContext", "=", "options", ".", "projectContext", ";", "self", ".", "bundlePath", "=", "options", ".", "bundlePath", ";", "self", ".", "port", "=", "options", ".", "port", ";", "self", ".", "listenHost", "=", "options", ".", "listenHost", ";", "self", ".", "rootUrl", "=", "options", ".", "rootUrl", ";", "self", ".", "mongoUrl", "=", "options", ".", "mongoUrl", ";", "self", ".", "oplogUrl", "=", "options", ".", "oplogUrl", ";", "self", ".", "mobileServerUrl", "=", "options", ".", "mobileServerUrl", ";", "self", ".", "onExit", "=", "options", ".", "onExit", ";", "self", ".", "onListen", "=", "options", ".", "onListen", ";", "self", ".", "nodeOptions", "=", "options", ".", "nodeOptions", "||", "[", "]", ";", "self", ".", "nodePath", "=", "options", ".", "nodePath", "||", "[", "]", ";", "self", ".", "debugPort", "=", "options", ".", "debugPort", ";", "self", ".", "settings", "=", "options", ".", "settings", ";", "self", ".", "proc", "=", "null", ";", "self", ".", "madeExitCallback", "=", "false", ";", "self", ".", "ipcPipe", "=", "options", ".", "ipcPipe", ";", "}"], "original_docstring": "Given a bundle, run a program in the bundle. Report when it dies.  Call start() to start the process. You will then eventually receive a call to onExit(code, signal): code is the numeric exit code of a normal exit, signal is the string signal name if killed, and if both are undefined it means something went wrong in invoking the program and it was logged.  If the app successfully starts up, you will also receive onListen() once the app says it's ready to receive connections.  Call stop() at any time after start() returns to terminate the process if it is running. You will get an onExit callback if this resulted in the process dying. stop() is idempotent.  Required options: bundlePath, port, rootUrl, mongoUrl, oplogUrl Optional options: onExit, onListen, nodeOptions, settings", "docstring": {"block_comment": "Given a bundle, run a program in the bundle. Report when it dies.  Call start   to start the process. You will then eventually receive a call to onExit code, signal   code is the numeric exit code of a normal exit, signal is the string signal name if killed, and if both are undefined it means something went wrong in invoking the program and it was logged.  If the app successfully starts up, you will also receive onListen   once the app says it s ready to receive connections.  Call stop   at any time after start   returns to terminate the process if it is running. You will get an onExit callback if this resulted in the process dying. stop   is idempotent.  Required options  bundlePath, port, rootUrl, mongoUrl, oplogUrl Optional options  onExit, onListen, nodeOptions, settings", "line_comment": null}, "docstring_tokens": ["Given", "a", "bundle", "run", "a", "program", "in", "the", "bundle", ".", "Report", "when", "it", "dies", ".", "Call", "start", "to", "start", "the", "process", ".", "You", "will", "then", "eventually", "receive", "a", "call", "to", "onExit", "code", "signal", "code", "is", "the", "numeric", "exit", "code", "of", "a", "normal", "exit", "signal", "is", "the", "string", "signal", "name", "if", "killed", "and", "if", "both", "are", "undefined", "it", "means", "something", "went", "wrong", "in", "invoking", "the", "program", "and", "it", "was", "logged", ".", "If", "the", "app", "successfully", "starts", "up", "you", "will", "also", "receive", "onListen", "once", "the", "app", "says", "it", "s", "ready", "to", "receive", "connections", ".", "Call", "stop", "at", "any", "time", "after", "start", "returns", "to", "terminate", "the", "process", "if", "it", "is", "running", ".", "You", "will", "get", "an", "onExit", "callback", "if", "this", "resulted", "in", "the", "process", "dying", ".", "stop", "is", "idempotent", ".", "Required", "options", "bundlePath", "port", "rootUrl", "mongoUrl", "oplogUrl", "Optional", "options", "onExit", "onListen", "nodeOptions", "settings"], "sample_id": 518, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004385", "repo": "johnthepink/meteor", "path": "tools/runners/run-app.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (s) {\n  if (s.search(\"\\\"\") !== -1 || s.search(\"'\") !== -1) {\n    throw new Error(\"Meteor cannot currently handle quoted NODE_OPTIONS\");\n  }\n  return _.without(s.split(/\\s+/), '');\n}", "code_tokens": ["function", "(", "s", ")", "{", "if", "(", "s", ".", "search", "(", "\"\\\"\"", ")", "!==", "-", "1", "||", "s", ".", "search", "(", "\"'\"", ")", "!==", "-", "1", ")", "{", "throw", "new", "Error", "(", "\"Meteor cannot currently handle quoted NODE_OPTIONS\"", ")", ";", "}", "return", "_", ".", "without", "(", "s", ".", "split", "(", "/", "\\s+", "/", ")", ",", "''", ")", ";", "}"], "original_docstring": "Parse out s as if it were a bash command line.", "docstring": {"block_comment": "Parse out s as if it were a bash command line.", "line_comment": null}, "docstring_tokens": ["Parse", "out", "s", "as", "if", "it", "were", "a", "bash", "command", "line", "."], "sample_id": 519, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004386", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "RenderTask_then", "code": "function RenderTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }", "code_tokens": ["function", "RenderTask_then", "(", "onFulfilled", ",", "onRejected", ")", "{", "return", "this", ".", "promise", ".", "then", ".", "apply", "(", "this", ".", "promise", ",", "arguments", ")", ";", "}"], "original_docstring": "\nRegisters callbacks to indicate the rendering task completion.\n\n@param {function} onFulfilled The callback for the rendering completion.\n@param {function} onRejected The callback for the rendering failure.\n@return {Promise} A promise that is resolved after the onFulfilled or\nonRejected callback.\n", "docstring": {"block_comment": "Registers callbacks to indicate the rendering task completion.", "line_comment": null}, "docstring_tokens": ["Registers", "callbacks", "to", "indicate", "the", "rendering", "task", "completion", "."], "sample_id": 520, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004386", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "RenderTask_then", "code": "function RenderTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }", "code_tokens": ["function", "RenderTask_then", "(", "onFulfilled", ",", "onRejected", ")", "{", "return", "this", ".", "promise", ".", "then", ".", "apply", "(", "this", ".", "promise", ",", "arguments", ")", ";", "}"], "original_docstring": "\nRegisters callbacks to indicate the rendering task completion.\n\n@param {function} onFulfilled The callback for the rendering completion.\n@param {function} onRejected The callback for the rendering failure.\n@return {Promise} A promise that is resolved after the onFulfilled or\nonRejected callback.\n", "docstring": {"block_comment": "Registers callbacks to indicate the rendering task completion.", "line_comment": null}, "docstring_tokens": ["The", "callback", "for", "the", "rendering", "completion", "."], "sample_id": 520, "prompt_tokens": ["<javascript>", "<param>", "onFulfilled"], "comment_type": "param", "sentence_id": 1}
{"id": "21004386", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "RenderTask_then", "code": "function RenderTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }", "code_tokens": ["function", "RenderTask_then", "(", "onFulfilled", ",", "onRejected", ")", "{", "return", "this", ".", "promise", ".", "then", ".", "apply", "(", "this", ".", "promise", ",", "arguments", ")", ";", "}"], "original_docstring": "\nRegisters callbacks to indicate the rendering task completion.\n\n@param {function} onFulfilled The callback for the rendering completion.\n@param {function} onRejected The callback for the rendering failure.\n@return {Promise} A promise that is resolved after the onFulfilled or\nonRejected callback.\n", "docstring": {"block_comment": "Registers callbacks to indicate the rendering task completion.", "line_comment": null}, "docstring_tokens": ["The", "callback", "for", "the", "rendering", "failure", "."], "sample_id": 520, "prompt_tokens": ["<javascript>", "<param>", "onRejected"], "comment_type": "param", "sentence_id": 2}
{"id": "21004386", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "RenderTask_then", "code": "function RenderTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }", "code_tokens": ["function", "RenderTask_then", "(", "onFulfilled", ",", "onRejected", ")", "{", "return", "this", ".", "promise", ".", "then", ".", "apply", "(", "this", ".", "promise", ",", "arguments", ")", ";", "}"], "original_docstring": "\nRegisters callbacks to indicate the rendering task completion.\n\n@param {function} onFulfilled The callback for the rendering completion.\n@param {function} onRejected The callback for the rendering failure.\n@return {Promise} A promise that is resolved after the onFulfilled or\nonRejected callback.\n", "docstring": {"block_comment": "Registers callbacks to indicate the rendering task completion.", "line_comment": null}, "docstring_tokens": ["A", "promise", "that", "is", "resolved", "after", "the", "onFulfilled", "or"], "sample_id": 520, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 3}
{"id": "21004387", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "RenderTask_cancel", "code": "function RenderTask_cancel() {\n      this._internalRenderTask.cancel();\n    }", "code_tokens": ["function", "RenderTask_cancel", "(", ")", "{", "this", ".", "_internalRenderTask", ".", "cancel", "(", ")", ";", "}"], "original_docstring": "\nCancels the rendering task. If the task is currently rendering it will\nnot be cancelled until graphics pauses with a timeout. The promise that\nthis object extends will resolved when cancelled.\n", "docstring": {"block_comment": "Cancels the rendering task. If the task is currently rendering it will \nnot be cancelled until graphics pauses with a timeout. The promise that \nthis object extends will resolved when cancelled.", "line_comment": null}, "docstring_tokens": ["Cancels", "the", "rendering", "task", ".", "If", "the", "task", "is", "currently", "rendering", "it", "will", "not", "be", "cancelled", "until", "graphics", "pauses", "with", "a", "timeout", ".", "The", "promise", "that", "this", "object", "extends", "will", "resolved", "when", "cancelled", "."], "sample_id": 521, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004388", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFObjects_getData", "code": "function PDFObjects_getData(objId) {\n      var objs = this.objs;\n      if (!objs[objId] || !objs[objId].resolved) {\n        return null;\n      } else {\n        return objs[objId].data;\n      }\n    }", "code_tokens": ["function", "PDFObjects_getData", "(", "objId", ")", "{", "var", "objs", "=", "this", ".", "objs", ";", "if", "(", "!", "objs", "[", "objId", "]", "||", "!", "objs", "[", "objId", "]", ".", "resolved", ")", "{", "return", "null", ";", "}", "else", "{", "return", "objs", "[", "objId", "]", ".", "data", ";", "}", "}"], "original_docstring": "\nReturns the data of `objId` if object exists, null otherwise.\n", "docstring": {"block_comment": "Returns the data of  objId  if object exists, null otherwise.", "line_comment": null}, "docstring_tokens": ["Returns", "the", "data", "of", "objId", "if", "object", "exists", "null", "otherwise", "."], "sample_id": 522, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004389", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFObjects_resolve", "code": "function PDFObjects_resolve(objId, data) {\n      var obj = this.ensureObj(objId);\n\n      obj.resolved = true;\n      obj.data = data;\n      obj.capability.resolve(data);\n    }", "code_tokens": ["function", "PDFObjects_resolve", "(", "objId", ",", "data", ")", "{", "var", "obj", "=", "this", ".", "ensureObj", "(", "objId", ")", ";", "obj", ".", "resolved", "=", "true", ";", "obj", ".", "data", "=", "data", ";", "obj", ".", "capability", ".", "resolve", "(", "data", ")", ";", "}"], "original_docstring": "\nResolves the object `objId` with optional `data`.\n", "docstring": {"block_comment": "Resolves the object  objId  with optional  data .", "line_comment": null}, "docstring_tokens": ["Resolves", "the", "object", "objId", "with", "optional", "data", "."], "sample_id": 523, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004390", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFObjects_get", "code": "function PDFObjects_get(objId, callback) {\n      // If there is a callback, then the get can be async and the object is\n      // not required to be resolved right now\n      if (callback) {\n        this.ensureObj(objId).capability.promise.then(callback);\n        return null;\n      }\n\n      // If there isn't a callback, the user expects to get the resolved data\n      // directly.\n      var obj = this.objs[objId];\n\n      // If there isn't an object yet or the object isn't resolved, then the\n      // data isn't ready yet!\n      if (!obj || !obj.resolved) {\n        error('Requesting object that isn\\'t resolved yet ' + objId);\n      }\n\n      return obj.data;\n    }", "code_tokens": ["function", "PDFObjects_get", "(", "objId", ",", "callback", ")", "{", "// If there is a callback, then the get can be async and the object is", "// not required to be resolved right now", "if", "(", "callback", ")", "{", "this", ".", "ensureObj", "(", "objId", ")", ".", "capability", ".", "promise", ".", "then", "(", "callback", ")", ";", "return", "null", ";", "}", "// If there isn't a callback, the user expects to get the resolved data", "// directly.", "var", "obj", "=", "this", ".", "objs", "[", "objId", "]", ";", "// If there isn't an object yet or the object isn't resolved, then the", "// data isn't ready yet!", "if", "(", "!", "obj", "||", "!", "obj", ".", "resolved", ")", "{", "error", "(", "'Requesting object that isn\\'t resolved yet '", "+", "objId", ")", ";", "}", "return", "obj", ".", "data", ";", "}"], "original_docstring": "\nIf called *without* callback, this returns the data of `objId` but the\nobject needs to be resolved. If it isn't, this function throws.\n\nIf called *with* a callback, the callback is called with the data of the\nobject once the object is resolved. That means, if you call this\nfunction and the object is already resolved, the callback gets called\nright away.\n", "docstring": {"block_comment": "If called  without  callback, this returns the data of  objId  but the \nobject needs to be resolved. If it isn t, this function throws. \nIf called  with  a callback, the callback is called with the data of the \nobject once the object is resolved. That means, if you call this \nfunction and the object is already resolved, the callback gets called \nright away.", "line_comment": ["If there is a callback, then the get can be async and the object is", "not required to be resolved right now", "If there isn t a callback, the user expects to get the resolved data", "directly.", "If there isn t an object yet or the object isn t resolved, then the", "data isn t ready yet "]}, "docstring_tokens": ["If", "called", "without", "callback", "this", "returns", "the", "data", "of", "objId", "but", "the", "object", "needs", "to", "be", "resolved", ".", "If", "it", "isn", "t", "this", "function", "throws", ".", "If", "called", "with", "a", "callback", "the", "callback", "is", "called", "with", "the", "data", "of", "the", "object", "once", "the", "object", "is", "resolved", ".", "That", "means", "if", "you", "call", "this", "function", "and", "the", "object", "is", "already", "resolved", "the", "callback", "gets", "called", "right", "away", "."], "sample_id": 524, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004391", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFObjects_ensureObj", "code": "function PDFObjects_ensureObj(objId) {\n      if (this.objs[objId]) {\n        return this.objs[objId];\n      }\n\n      var obj = {\n        capability: createPromiseCapability(),\n        data: null,\n        resolved: false\n      };\n      this.objs[objId] = obj;\n\n      return obj;\n    }", "code_tokens": ["function", "PDFObjects_ensureObj", "(", "objId", ")", "{", "if", "(", "this", ".", "objs", "[", "objId", "]", ")", "{", "return", "this", ".", "objs", "[", "objId", "]", ";", "}", "var", "obj", "=", "{", "capability", ":", "createPromiseCapability", "(", ")", ",", "data", ":", "null", ",", "resolved", ":", "false", "}", ";", "this", ".", "objs", "[", "objId", "]", "=", "obj", ";", "return", "obj", ";", "}"], "original_docstring": "\nInternal function.\nEnsures there is an object defined for `objId`.\n", "docstring": {"block_comment": "Internal function. \nEnsures there is an object defined for  objId .", "line_comment": null}, "docstring_tokens": ["Internal", "function", ".", "Ensures", "there", "is", "an", "object", "defined", "for", "objId", "."], "sample_id": 525, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004392", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFWorker_destroy", "code": "function PDFWorker_destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }", "code_tokens": ["function", "PDFWorker_destroy", "(", ")", "{", "this", ".", "destroyed", "=", "true", ";", "if", "(", "this", ".", "_webWorker", ")", "{", "// We need to terminate only web worker created resource.", "this", ".", "_webWorker", ".", "terminate", "(", ")", ";", "this", ".", "_webWorker", "=", "null", ";", "}", "this", ".", "_port", "=", "null", ";", "if", "(", "this", ".", "_messageHandler", ")", "{", "this", ".", "_messageHandler", ".", "destroy", "(", ")", ";", "this", ".", "_messageHandler", "=", "null", ";", "}", "}"], "original_docstring": "\nDestroys the worker instance.\n", "docstring": {"block_comment": "Destroys the worker instance.", "line_comment": ["We need to terminate only web worker created resource."]}, "docstring_tokens": ["Destroys", "the", "worker", "instance", "."], "sample_id": 526, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004393", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFPageProxy_renderPageChunk", "code": "function PDFPageProxy_renderPageChunk(operatorListChunk,\n                                                            intent) {\n      var intentState = this.intentStates[intent];\n      var i, ii;\n      // Add the new chunk to the current operator list.\n      for (i = 0, ii = operatorListChunk.length; i < ii; i++) {\n        intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n        intentState.operatorList.argsArray.push(\n          operatorListChunk.argsArray[i]);\n      }\n      intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n      // Notify all the rendering tasks there are more operators to be consumed.\n      for (i = 0; i < intentState.renderTasks.length; i++) {\n        intentState.renderTasks[i].operatorListChanged();\n      }\n\n      if (operatorListChunk.lastChunk) {\n        intentState.receivingOperatorList = false;\n        this._tryCleanup();\n      }\n    }", "code_tokens": ["function", "PDFPageProxy_renderPageChunk", "(", "operatorListChunk", ",", "intent", ")", "{", "var", "intentState", "=", "this", ".", "intentStates", "[", "intent", "]", ";", "var", "i", ",", "ii", ";", "// Add the new chunk to the current operator list.", "for", "(", "i", "=", "0", ",", "ii", "=", "operatorListChunk", ".", "length", ";", "i", "<", "ii", ";", "i", "++", ")", "{", "intentState", ".", "operatorList", ".", "fnArray", ".", "push", "(", "operatorListChunk", ".", "fnArray", "[", "i", "]", ")", ";", "intentState", ".", "operatorList", ".", "argsArray", ".", "push", "(", "operatorListChunk", ".", "argsArray", "[", "i", "]", ")", ";", "}", "intentState", ".", "operatorList", ".", "lastChunk", "=", "operatorListChunk", ".", "lastChunk", ";", "// Notify all the rendering tasks there are more operators to be consumed.", "for", "(", "i", "=", "0", ";", "i", "<", "intentState", ".", "renderTasks", ".", "length", ";", "i", "++", ")", "{", "intentState", ".", "renderTasks", "[", "i", "]", ".", "operatorListChanged", "(", ")", ";", "}", "if", "(", "operatorListChunk", ".", "lastChunk", ")", "{", "intentState", ".", "receivingOperatorList", "=", "false", ";", "this", ".", "_tryCleanup", "(", ")", ";", "}", "}"], "original_docstring": "\nFor internal use only.\n@ignore\n", "docstring": {"block_comment": "For internal use only.", "line_comment": ["Add the new chunk to the current operator list.", "Notify all the rendering tasks there are more operators to be consumed."]}, "docstring_tokens": ["For", "internal", "use", "only", "."], "sample_id": 527, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004395", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFPageProxy_cleanup", "code": "function PDFPageProxy_cleanup() {\n      this.pendingCleanup = true;\n      this._tryCleanup();\n    }", "code_tokens": ["function", "PDFPageProxy_cleanup", "(", ")", "{", "this", ".", "pendingCleanup", "=", "true", ";", "this", ".", "_tryCleanup", "(", ")", ";", "}"], "original_docstring": "\nCleans up resources allocated by the page.\n", "docstring": {"block_comment": "Cleans up resources allocated by the page.", "line_comment": null}, "docstring_tokens": ["Cleans", "up", "resources", "allocated", "by", "the", "page", "."], "sample_id": 528, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004396", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n      deprecated('page destroy method, use cleanup() instead');\n      this.cleanup();\n    }", "code_tokens": ["function", "(", ")", "{", "deprecated", "(", "'page destroy method, use cleanup() instead'", ")", ";", "this", ".", "cleanup", "(", ")", ";", "}"], "original_docstring": "\nCleans up resources allocated by the page. (deprecated)\n", "docstring": {"block_comment": "Cleans up resources allocated by the page.  deprecated ", "line_comment": null}, "docstring_tokens": ["Cleans", "up", "resources", "allocated", "by", "the", "page", ".", "deprecated"], "sample_id": 529, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004397", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFPageProxy_destroy", "code": "function PDFPageProxy_destroy() {\n      this.destroyed = true;\n      this.transport.pageCache[this.pageIndex] = null;\n\n      var waitOn = [];\n      Object.keys(this.intentStates).forEach(function(intent) {\n        var intentState = this.intentStates[intent];\n        intentState.renderTasks.forEach(function(renderTask) {\n          var renderCompleted = renderTask.capability.promise.\n            catch(function () {}); // ignoring failures\n          waitOn.push(renderCompleted);\n          renderTask.cancel();\n        });\n      }, this);\n      this.objs.clear();\n      this.annotationsPromise = null;\n      this.pendingCleanup = false;\n      return Promise.all(waitOn);\n    }", "code_tokens": ["function", "PDFPageProxy_destroy", "(", ")", "{", "this", ".", "destroyed", "=", "true", ";", "this", ".", "transport", ".", "pageCache", "[", "this", ".", "pageIndex", "]", "=", "null", ";", "var", "waitOn", "=", "[", "]", ";", "Object", ".", "keys", "(", "this", ".", "intentStates", ")", ".", "forEach", "(", "function", "(", "intent", ")", "{", "var", "intentState", "=", "this", ".", "intentStates", "[", "intent", "]", ";", "intentState", ".", "renderTasks", ".", "forEach", "(", "function", "(", "renderTask", ")", "{", "var", "renderCompleted", "=", "renderTask", ".", "capability", ".", "promise", ".", "catch", "(", "function", "(", ")", "{", "}", ")", ";", "// ignoring failures", "waitOn", ".", "push", "(", "renderCompleted", ")", ";", "renderTask", ".", "cancel", "(", ")", ";", "}", ")", ";", "}", ",", "this", ")", ";", "this", ".", "objs", ".", "clear", "(", ")", ";", "this", ".", "annotationsPromise", "=", "null", ";", "this", ".", "pendingCleanup", "=", "false", ";", "return", "Promise", ".", "all", "(", "waitOn", ")", ";", "}"], "original_docstring": "\nDestroys page object.\n", "docstring": {"block_comment": "Destroys page object.", "line_comment": ["ignoring failures"]}, "docstring_tokens": ["Destroys", "page", "object", "."], "sample_id": 530, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004398", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFPageProxy_render", "code": "function PDFPageProxy_render(params) {\n      var stats = this.stats;\n      stats.time('Overall');\n\n      // If there was a pending destroy cancel it so no cleanup happens during\n      // this call to render.\n      this.pendingCleanup = false;\n\n      var renderingIntent = (params.intent === 'print' ? 'print' : 'display');\n\n      if (!this.intentStates[renderingIntent]) {\n        this.intentStates[renderingIntent] = {};\n      }\n      var intentState = this.intentStates[renderingIntent];\n\n      // If there's no displayReadyCapability yet, then the operatorList\n      // was never requested before. Make the request and create the promise.\n      if (!intentState.displayReadyCapability) {\n        intentState.receivingOperatorList = true;\n        intentState.displayReadyCapability = createPromiseCapability();\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        this.stats.time('Page Request');\n        this.transport.messageHandler.send('RenderPageRequest', {\n          pageIndex: this.pageNumber - 1,\n          intent: renderingIntent\n        });\n      }\n\n      var internalRenderTask = new InternalRenderTask(complete, params,\n                                                      this.objs,\n                                                      this.commonObjs,\n                                                      intentState.operatorList,\n                                                      this.pageNumber);\n      internalRenderTask.useRequestAnimationFrame = renderingIntent !== 'print';\n      if (!intentState.renderTasks) {\n        intentState.renderTasks = [];\n      }\n      intentState.renderTasks.push(internalRenderTask);\n      var renderTask = internalRenderTask.task;\n\n      // Obsolete parameter support\n      if (params.continueCallback) {\n        deprecated('render is used with continueCallback parameter');\n        renderTask.onContinue = params.continueCallback;\n      }\n\n      var self = this;\n      intentState.displayReadyCapability.promise.then(\n        function pageDisplayReadyPromise(transparency) {\n          if (self.pendingCleanup) {\n            complete();\n            return;\n          }\n          stats.time('Rendering');\n          internalRenderTask.initalizeGraphics(transparency);\n          internalRenderTask.operatorListChanged();\n        },\n        function pageDisplayReadPromiseError(reason) {\n          complete(reason);\n        }\n      );\n\n      function complete(error) {\n        var i = intentState.renderTasks.indexOf(internalRenderTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n\n        if (self.cleanupAfterRender) {\n          self.pendingCleanup = true;\n        }\n        self._tryCleanup();\n\n        if (error) {\n          internalRenderTask.capability.reject(error);\n        } else {\n          internalRenderTask.capability.resolve();\n        }\n        stats.timeEnd('Rendering');\n        stats.timeEnd('Overall');\n      }\n\n      return renderTask;\n    }", "code_tokens": ["function", "PDFPageProxy_render", "(", "params", ")", "{", "var", "stats", "=", "this", ".", "stats", ";", "stats", ".", "time", "(", "'Overall'", ")", ";", "// If there was a pending destroy cancel it so no cleanup happens during", "// this call to render.", "this", ".", "pendingCleanup", "=", "false", ";", "var", "renderingIntent", "=", "(", "params", ".", "intent", "===", "'print'", "?", "'print'", ":", "'display'", ")", ";", "if", "(", "!", "this", ".", "intentStates", "[", "renderingIntent", "]", ")", "{", "this", ".", "intentStates", "[", "renderingIntent", "]", "=", "{", "}", ";", "}", "var", "intentState", "=", "this", ".", "intentStates", "[", "renderingIntent", "]", ";", "// If there's no displayReadyCapability yet, then the operatorList", "// was never requested before. Make the request and create the promise.", "if", "(", "!", "intentState", ".", "displayReadyCapability", ")", "{", "intentState", ".", "receivingOperatorList", "=", "true", ";", "intentState", ".", "displayReadyCapability", "=", "createPromiseCapability", "(", ")", ";", "intentState", ".", "operatorList", "=", "{", "fnArray", ":", "[", "]", ",", "argsArray", ":", "[", "]", ",", "lastChunk", ":", "false", "}", ";", "this", ".", "stats", ".", "time", "(", "'Page Request'", ")", ";", "this", ".", "transport", ".", "messageHandler", ".", "send", "(", "'RenderPageRequest'", ",", "{", "pageIndex", ":", "this", ".", "pageNumber", "-", "1", ",", "intent", ":", "renderingIntent", "}", ")", ";", "}", "var", "internalRenderTask", "=", "new", "InternalRenderTask", "(", "complete", ",", "params", ",", "this", ".", "objs", ",", "this", ".", "commonObjs", ",", "intentState", ".", "operatorList", ",", "this", ".", "pageNumber", ")", ";", "internalRenderTask", ".", "useRequestAnimationFrame", "=", "renderingIntent", "!==", "'print'", ";", "if", "(", "!", "intentState", ".", "renderTasks", ")", "{", "intentState", ".", "renderTasks", "=", "[", "]", ";", "}", "intentState", ".", "renderTasks", ".", "push", "(", "internalRenderTask", ")", ";", "var", "renderTask", "=", "internalRenderTask", ".", "task", ";", "// Obsolete parameter support", "if", "(", "params", ".", "continueCallback", ")", "{", "deprecated", "(", "'render is used with continueCallback parameter'", ")", ";", "renderTask", ".", "onContinue", "=", "params", ".", "continueCallback", ";", "}", "var", "self", "=", "this", ";", "intentState", ".", "displayReadyCapability", ".", "promise", ".", "then", "(", "function", "pageDisplayReadyPromise", "(", "transparency", ")", "{", "if", "(", "self", ".", "pendingCleanup", ")", "{", "complete", "(", ")", ";", "return", ";", "}", "stats", ".", "time", "(", "'Rendering'", ")", ";", "internalRenderTask", ".", "initalizeGraphics", "(", "transparency", ")", ";", "internalRenderTask", ".", "operatorListChanged", "(", ")", ";", "}", ",", "function", "pageDisplayReadPromiseError", "(", "reason", ")", "{", "complete", "(", "reason", ")", ";", "}", ")", ";", "function", "complete", "(", "error", ")", "{", "var", "i", "=", "intentState", ".", "renderTasks", ".", "indexOf", "(", "internalRenderTask", ")", ";", "if", "(", "i", ">=", "0", ")", "{", "intentState", ".", "renderTasks", ".", "splice", "(", "i", ",", "1", ")", ";", "}", "if", "(", "self", ".", "cleanupAfterRender", ")", "{", "self", ".", "pendingCleanup", "=", "true", ";", "}", "self", ".", "_tryCleanup", "(", ")", ";", "if", "(", "error", ")", "{", "internalRenderTask", ".", "capability", ".", "reject", "(", "error", ")", ";", "}", "else", "{", "internalRenderTask", ".", "capability", ".", "resolve", "(", ")", ";", "}", "stats", ".", "timeEnd", "(", "'Rendering'", ")", ";", "stats", ".", "timeEnd", "(", "'Overall'", ")", ";", "}", "return", "renderTask", ";", "}"], "original_docstring": "\nBegins the process of rendering a page to the desired context.\n@param {RenderParameters} params Page render parameters.\n@return {RenderTask} An object that contains the promise, which\nis resolved when the page finishes rendering.\n", "docstring": {"block_comment": "Begins the process of rendering a page to the desired context.", "line_comment": ["If there was a pending destroy cancel it so no cleanup happens during", "this call to render.", "If there s no displayReadyCapability yet, then the operatorList", "was never requested before. Make the request and create the promise.", "Obsolete parameter support"]}, "docstring_tokens": ["Begins", "the", "process", "of", "rendering", "a", "page", "to", "the", "desired", "context", "."], "sample_id": 531, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004398", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFPageProxy_render", "code": "function PDFPageProxy_render(params) {\n      var stats = this.stats;\n      stats.time('Overall');\n\n      // If there was a pending destroy cancel it so no cleanup happens during\n      // this call to render.\n      this.pendingCleanup = false;\n\n      var renderingIntent = (params.intent === 'print' ? 'print' : 'display');\n\n      if (!this.intentStates[renderingIntent]) {\n        this.intentStates[renderingIntent] = {};\n      }\n      var intentState = this.intentStates[renderingIntent];\n\n      // If there's no displayReadyCapability yet, then the operatorList\n      // was never requested before. Make the request and create the promise.\n      if (!intentState.displayReadyCapability) {\n        intentState.receivingOperatorList = true;\n        intentState.displayReadyCapability = createPromiseCapability();\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        this.stats.time('Page Request');\n        this.transport.messageHandler.send('RenderPageRequest', {\n          pageIndex: this.pageNumber - 1,\n          intent: renderingIntent\n        });\n      }\n\n      var internalRenderTask = new InternalRenderTask(complete, params,\n                                                      this.objs,\n                                                      this.commonObjs,\n                                                      intentState.operatorList,\n                                                      this.pageNumber);\n      internalRenderTask.useRequestAnimationFrame = renderingIntent !== 'print';\n      if (!intentState.renderTasks) {\n        intentState.renderTasks = [];\n      }\n      intentState.renderTasks.push(internalRenderTask);\n      var renderTask = internalRenderTask.task;\n\n      // Obsolete parameter support\n      if (params.continueCallback) {\n        deprecated('render is used with continueCallback parameter');\n        renderTask.onContinue = params.continueCallback;\n      }\n\n      var self = this;\n      intentState.displayReadyCapability.promise.then(\n        function pageDisplayReadyPromise(transparency) {\n          if (self.pendingCleanup) {\n            complete();\n            return;\n          }\n          stats.time('Rendering');\n          internalRenderTask.initalizeGraphics(transparency);\n          internalRenderTask.operatorListChanged();\n        },\n        function pageDisplayReadPromiseError(reason) {\n          complete(reason);\n        }\n      );\n\n      function complete(error) {\n        var i = intentState.renderTasks.indexOf(internalRenderTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n\n        if (self.cleanupAfterRender) {\n          self.pendingCleanup = true;\n        }\n        self._tryCleanup();\n\n        if (error) {\n          internalRenderTask.capability.reject(error);\n        } else {\n          internalRenderTask.capability.resolve();\n        }\n        stats.timeEnd('Rendering');\n        stats.timeEnd('Overall');\n      }\n\n      return renderTask;\n    }", "code_tokens": ["function", "PDFPageProxy_render", "(", "params", ")", "{", "var", "stats", "=", "this", ".", "stats", ";", "stats", ".", "time", "(", "'Overall'", ")", ";", "// If there was a pending destroy cancel it so no cleanup happens during", "// this call to render.", "this", ".", "pendingCleanup", "=", "false", ";", "var", "renderingIntent", "=", "(", "params", ".", "intent", "===", "'print'", "?", "'print'", ":", "'display'", ")", ";", "if", "(", "!", "this", ".", "intentStates", "[", "renderingIntent", "]", ")", "{", "this", ".", "intentStates", "[", "renderingIntent", "]", "=", "{", "}", ";", "}", "var", "intentState", "=", "this", ".", "intentStates", "[", "renderingIntent", "]", ";", "// If there's no displayReadyCapability yet, then the operatorList", "// was never requested before. Make the request and create the promise.", "if", "(", "!", "intentState", ".", "displayReadyCapability", ")", "{", "intentState", ".", "receivingOperatorList", "=", "true", ";", "intentState", ".", "displayReadyCapability", "=", "createPromiseCapability", "(", ")", ";", "intentState", ".", "operatorList", "=", "{", "fnArray", ":", "[", "]", ",", "argsArray", ":", "[", "]", ",", "lastChunk", ":", "false", "}", ";", "this", ".", "stats", ".", "time", "(", "'Page Request'", ")", ";", "this", ".", "transport", ".", "messageHandler", ".", "send", "(", "'RenderPageRequest'", ",", "{", "pageIndex", ":", "this", ".", "pageNumber", "-", "1", ",", "intent", ":", "renderingIntent", "}", ")", ";", "}", "var", "internalRenderTask", "=", "new", "InternalRenderTask", "(", "complete", ",", "params", ",", "this", ".", "objs", ",", "this", ".", "commonObjs", ",", "intentState", ".", "operatorList", ",", "this", ".", "pageNumber", ")", ";", "internalRenderTask", ".", "useRequestAnimationFrame", "=", "renderingIntent", "!==", "'print'", ";", "if", "(", "!", "intentState", ".", "renderTasks", ")", "{", "intentState", ".", "renderTasks", "=", "[", "]", ";", "}", "intentState", ".", "renderTasks", ".", "push", "(", "internalRenderTask", ")", ";", "var", "renderTask", "=", "internalRenderTask", ".", "task", ";", "// Obsolete parameter support", "if", "(", "params", ".", "continueCallback", ")", "{", "deprecated", "(", "'render is used with continueCallback parameter'", ")", ";", "renderTask", ".", "onContinue", "=", "params", ".", "continueCallback", ";", "}", "var", "self", "=", "this", ";", "intentState", ".", "displayReadyCapability", ".", "promise", ".", "then", "(", "function", "pageDisplayReadyPromise", "(", "transparency", ")", "{", "if", "(", "self", ".", "pendingCleanup", ")", "{", "complete", "(", ")", ";", "return", ";", "}", "stats", ".", "time", "(", "'Rendering'", ")", ";", "internalRenderTask", ".", "initalizeGraphics", "(", "transparency", ")", ";", "internalRenderTask", ".", "operatorListChanged", "(", ")", ";", "}", ",", "function", "pageDisplayReadPromiseError", "(", "reason", ")", "{", "complete", "(", "reason", ")", ";", "}", ")", ";", "function", "complete", "(", "error", ")", "{", "var", "i", "=", "intentState", ".", "renderTasks", ".", "indexOf", "(", "internalRenderTask", ")", ";", "if", "(", "i", ">=", "0", ")", "{", "intentState", ".", "renderTasks", ".", "splice", "(", "i", ",", "1", ")", ";", "}", "if", "(", "self", ".", "cleanupAfterRender", ")", "{", "self", ".", "pendingCleanup", "=", "true", ";", "}", "self", ".", "_tryCleanup", "(", ")", ";", "if", "(", "error", ")", "{", "internalRenderTask", ".", "capability", ".", "reject", "(", "error", ")", ";", "}", "else", "{", "internalRenderTask", ".", "capability", ".", "resolve", "(", ")", ";", "}", "stats", ".", "timeEnd", "(", "'Rendering'", ")", ";", "stats", ".", "timeEnd", "(", "'Overall'", ")", ";", "}", "return", "renderTask", ";", "}"], "original_docstring": "\nBegins the process of rendering a page to the desired context.\n@param {RenderParameters} params Page render parameters.\n@return {RenderTask} An object that contains the promise, which\nis resolved when the page finishes rendering.\n", "docstring": {"block_comment": "Begins the process of rendering a page to the desired context.", "line_comment": ["If there was a pending destroy cancel it so no cleanup happens during", "this call to render.", "If there s no displayReadyCapability yet, then the operatorList", "was never requested before. Make the request and create the promise.", "Obsolete parameter support"]}, "docstring_tokens": ["Page", "render", "parameters", "."], "sample_id": 531, "prompt_tokens": ["<javascript>", "<param>", "params"], "comment_type": "param", "sentence_id": 1}
{"id": "21004398", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFPageProxy_render", "code": "function PDFPageProxy_render(params) {\n      var stats = this.stats;\n      stats.time('Overall');\n\n      // If there was a pending destroy cancel it so no cleanup happens during\n      // this call to render.\n      this.pendingCleanup = false;\n\n      var renderingIntent = (params.intent === 'print' ? 'print' : 'display');\n\n      if (!this.intentStates[renderingIntent]) {\n        this.intentStates[renderingIntent] = {};\n      }\n      var intentState = this.intentStates[renderingIntent];\n\n      // If there's no displayReadyCapability yet, then the operatorList\n      // was never requested before. Make the request and create the promise.\n      if (!intentState.displayReadyCapability) {\n        intentState.receivingOperatorList = true;\n        intentState.displayReadyCapability = createPromiseCapability();\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        this.stats.time('Page Request');\n        this.transport.messageHandler.send('RenderPageRequest', {\n          pageIndex: this.pageNumber - 1,\n          intent: renderingIntent\n        });\n      }\n\n      var internalRenderTask = new InternalRenderTask(complete, params,\n                                                      this.objs,\n                                                      this.commonObjs,\n                                                      intentState.operatorList,\n                                                      this.pageNumber);\n      internalRenderTask.useRequestAnimationFrame = renderingIntent !== 'print';\n      if (!intentState.renderTasks) {\n        intentState.renderTasks = [];\n      }\n      intentState.renderTasks.push(internalRenderTask);\n      var renderTask = internalRenderTask.task;\n\n      // Obsolete parameter support\n      if (params.continueCallback) {\n        deprecated('render is used with continueCallback parameter');\n        renderTask.onContinue = params.continueCallback;\n      }\n\n      var self = this;\n      intentState.displayReadyCapability.promise.then(\n        function pageDisplayReadyPromise(transparency) {\n          if (self.pendingCleanup) {\n            complete();\n            return;\n          }\n          stats.time('Rendering');\n          internalRenderTask.initalizeGraphics(transparency);\n          internalRenderTask.operatorListChanged();\n        },\n        function pageDisplayReadPromiseError(reason) {\n          complete(reason);\n        }\n      );\n\n      function complete(error) {\n        var i = intentState.renderTasks.indexOf(internalRenderTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n\n        if (self.cleanupAfterRender) {\n          self.pendingCleanup = true;\n        }\n        self._tryCleanup();\n\n        if (error) {\n          internalRenderTask.capability.reject(error);\n        } else {\n          internalRenderTask.capability.resolve();\n        }\n        stats.timeEnd('Rendering');\n        stats.timeEnd('Overall');\n      }\n\n      return renderTask;\n    }", "code_tokens": ["function", "PDFPageProxy_render", "(", "params", ")", "{", "var", "stats", "=", "this", ".", "stats", ";", "stats", ".", "time", "(", "'Overall'", ")", ";", "// If there was a pending destroy cancel it so no cleanup happens during", "// this call to render.", "this", ".", "pendingCleanup", "=", "false", ";", "var", "renderingIntent", "=", "(", "params", ".", "intent", "===", "'print'", "?", "'print'", ":", "'display'", ")", ";", "if", "(", "!", "this", ".", "intentStates", "[", "renderingIntent", "]", ")", "{", "this", ".", "intentStates", "[", "renderingIntent", "]", "=", "{", "}", ";", "}", "var", "intentState", "=", "this", ".", "intentStates", "[", "renderingIntent", "]", ";", "// If there's no displayReadyCapability yet, then the operatorList", "// was never requested before. Make the request and create the promise.", "if", "(", "!", "intentState", ".", "displayReadyCapability", ")", "{", "intentState", ".", "receivingOperatorList", "=", "true", ";", "intentState", ".", "displayReadyCapability", "=", "createPromiseCapability", "(", ")", ";", "intentState", ".", "operatorList", "=", "{", "fnArray", ":", "[", "]", ",", "argsArray", ":", "[", "]", ",", "lastChunk", ":", "false", "}", ";", "this", ".", "stats", ".", "time", "(", "'Page Request'", ")", ";", "this", ".", "transport", ".", "messageHandler", ".", "send", "(", "'RenderPageRequest'", ",", "{", "pageIndex", ":", "this", ".", "pageNumber", "-", "1", ",", "intent", ":", "renderingIntent", "}", ")", ";", "}", "var", "internalRenderTask", "=", "new", "InternalRenderTask", "(", "complete", ",", "params", ",", "this", ".", "objs", ",", "this", ".", "commonObjs", ",", "intentState", ".", "operatorList", ",", "this", ".", "pageNumber", ")", ";", "internalRenderTask", ".", "useRequestAnimationFrame", "=", "renderingIntent", "!==", "'print'", ";", "if", "(", "!", "intentState", ".", "renderTasks", ")", "{", "intentState", ".", "renderTasks", "=", "[", "]", ";", "}", "intentState", ".", "renderTasks", ".", "push", "(", "internalRenderTask", ")", ";", "var", "renderTask", "=", "internalRenderTask", ".", "task", ";", "// Obsolete parameter support", "if", "(", "params", ".", "continueCallback", ")", "{", "deprecated", "(", "'render is used with continueCallback parameter'", ")", ";", "renderTask", ".", "onContinue", "=", "params", ".", "continueCallback", ";", "}", "var", "self", "=", "this", ";", "intentState", ".", "displayReadyCapability", ".", "promise", ".", "then", "(", "function", "pageDisplayReadyPromise", "(", "transparency", ")", "{", "if", "(", "self", ".", "pendingCleanup", ")", "{", "complete", "(", ")", ";", "return", ";", "}", "stats", ".", "time", "(", "'Rendering'", ")", ";", "internalRenderTask", ".", "initalizeGraphics", "(", "transparency", ")", ";", "internalRenderTask", ".", "operatorListChanged", "(", ")", ";", "}", ",", "function", "pageDisplayReadPromiseError", "(", "reason", ")", "{", "complete", "(", "reason", ")", ";", "}", ")", ";", "function", "complete", "(", "error", ")", "{", "var", "i", "=", "intentState", ".", "renderTasks", ".", "indexOf", "(", "internalRenderTask", ")", ";", "if", "(", "i", ">=", "0", ")", "{", "intentState", ".", "renderTasks", ".", "splice", "(", "i", ",", "1", ")", ";", "}", "if", "(", "self", ".", "cleanupAfterRender", ")", "{", "self", ".", "pendingCleanup", "=", "true", ";", "}", "self", ".", "_tryCleanup", "(", ")", ";", "if", "(", "error", ")", "{", "internalRenderTask", ".", "capability", ".", "reject", "(", "error", ")", ";", "}", "else", "{", "internalRenderTask", ".", "capability", ".", "resolve", "(", ")", ";", "}", "stats", ".", "timeEnd", "(", "'Rendering'", ")", ";", "stats", ".", "timeEnd", "(", "'Overall'", ")", ";", "}", "return", "renderTask", ";", "}"], "original_docstring": "\nBegins the process of rendering a page to the desired context.\n@param {RenderParameters} params Page render parameters.\n@return {RenderTask} An object that contains the promise, which\nis resolved when the page finishes rendering.\n", "docstring": {"block_comment": "Begins the process of rendering a page to the desired context.", "line_comment": ["If there was a pending destroy cancel it so no cleanup happens during", "this call to render.", "If there s no displayReadyCapability yet, then the operatorList", "was never requested before. Make the request and create the promise.", "Obsolete parameter support"]}, "docstring_tokens": ["An", "object", "that", "contains", "the", "promise", "which"], "sample_id": 531, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004399", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFDocumentProxy_destroy", "code": "function PDFDocumentProxy_destroy() {\n      return this.loadingTask.destroy();\n    }", "code_tokens": ["function", "PDFDocumentProxy_destroy", "(", ")", "{", "return", "this", ".", "loadingTask", ".", "destroy", "(", ")", ";", "}"], "original_docstring": "\nDestroys current document instance and terminates worker.\n", "docstring": {"block_comment": "Destroys current document instance and terminates worker.", "line_comment": null}, "docstring_tokens": ["Destroys", "current", "document", "instance", "and", "terminates", "worker", "."], "sample_id": 532, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004400", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFDocumentProxy_cleanup", "code": "function PDFDocumentProxy_cleanup() {\n      this.transport.startCleanup();\n    }", "code_tokens": ["function", "PDFDocumentProxy_cleanup", "(", ")", "{", "this", ".", "transport", ".", "startCleanup", "(", ")", ";", "}"], "original_docstring": "\nCleans up resources allocated by the document, e.g. created @font-face.\n", "docstring": {"block_comment": "Cleans up resources allocated by the document, e.g. created  font face.", "line_comment": null}, "docstring_tokens": ["Cleans", "up", "resources", "allocated", "by", "the", "document", "e", ".", "g", ".", "created", "font", "face", "."], "sample_id": 533, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004401", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFDocumentLoadingTask_then", "code": "function PDFDocumentLoadingTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }", "code_tokens": ["function", "PDFDocumentLoadingTask_then", "(", "onFulfilled", ",", "onRejected", ")", "{", "return", "this", ".", "promise", ".", "then", ".", "apply", "(", "this", ".", "promise", ",", "arguments", ")", ";", "}"], "original_docstring": "\nRegisters callbacks to indicate the document loading completion.\n\n@param {function} onFulfilled The callback for the loading completion.\n@param {function} onRejected The callback for the loading failure.\n@return {Promise} A promise that is resolved after the onFulfilled or\nonRejected callback.\n", "docstring": {"block_comment": "Registers callbacks to indicate the document loading completion.", "line_comment": null}, "docstring_tokens": ["Registers", "callbacks", "to", "indicate", "the", "document", "loading", "completion", "."], "sample_id": 534, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004401", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFDocumentLoadingTask_then", "code": "function PDFDocumentLoadingTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }", "code_tokens": ["function", "PDFDocumentLoadingTask_then", "(", "onFulfilled", ",", "onRejected", ")", "{", "return", "this", ".", "promise", ".", "then", ".", "apply", "(", "this", ".", "promise", ",", "arguments", ")", ";", "}"], "original_docstring": "\nRegisters callbacks to indicate the document loading completion.\n\n@param {function} onFulfilled The callback for the loading completion.\n@param {function} onRejected The callback for the loading failure.\n@return {Promise} A promise that is resolved after the onFulfilled or\nonRejected callback.\n", "docstring": {"block_comment": "Registers callbacks to indicate the document loading completion.", "line_comment": null}, "docstring_tokens": ["The", "callback", "for", "the", "loading", "completion", "."], "sample_id": 534, "prompt_tokens": ["<javascript>", "<param>", "onFulfilled"], "comment_type": "param", "sentence_id": 1}
{"id": "21004401", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFDocumentLoadingTask_then", "code": "function PDFDocumentLoadingTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }", "code_tokens": ["function", "PDFDocumentLoadingTask_then", "(", "onFulfilled", ",", "onRejected", ")", "{", "return", "this", ".", "promise", ".", "then", ".", "apply", "(", "this", ".", "promise", ",", "arguments", ")", ";", "}"], "original_docstring": "\nRegisters callbacks to indicate the document loading completion.\n\n@param {function} onFulfilled The callback for the loading completion.\n@param {function} onRejected The callback for the loading failure.\n@return {Promise} A promise that is resolved after the onFulfilled or\nonRejected callback.\n", "docstring": {"block_comment": "Registers callbacks to indicate the document loading completion.", "line_comment": null}, "docstring_tokens": ["The", "callback", "for", "the", "loading", "failure", "."], "sample_id": 534, "prompt_tokens": ["<javascript>", "<param>", "onRejected"], "comment_type": "param", "sentence_id": 2}
{"id": "21004401", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PDFDocumentLoadingTask_then", "code": "function PDFDocumentLoadingTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }", "code_tokens": ["function", "PDFDocumentLoadingTask_then", "(", "onFulfilled", ",", "onRejected", ")", "{", "return", "this", ".", "promise", ".", "then", ".", "apply", "(", "this", ".", "promise", ",", "arguments", ")", ";", "}"], "original_docstring": "\nRegisters callbacks to indicate the document loading completion.\n\n@param {function} onFulfilled The callback for the loading completion.\n@param {function} onRejected The callback for the loading failure.\n@return {Promise} A promise that is resolved after the onFulfilled or\nonRejected callback.\n", "docstring": {"block_comment": "Registers callbacks to indicate the document loading completion.", "line_comment": null}, "docstring_tokens": ["A", "promise", "that", "is", "resolved", "after", "the", "onFulfilled", "or"], "sample_id": 534, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 3}
{"id": "21004402", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      this.destroyed = true;\n\n      var transportDestroyed = !this._transport ? Promise.resolve() :\n        this._transport.destroy();\n      return transportDestroyed.then(function () {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      }.bind(this));\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "destroyed", "=", "true", ";", "var", "transportDestroyed", "=", "!", "this", ".", "_transport", "?", "Promise", ".", "resolve", "(", ")", ":", "this", ".", "_transport", ".", "destroy", "(", ")", ";", "return", "transportDestroyed", ".", "then", "(", "function", "(", ")", "{", "this", ".", "_transport", "=", "null", ";", "if", "(", "this", ".", "_worker", ")", "{", "this", ".", "_worker", ".", "destroy", "(", ")", ";", "this", ".", "_worker", "=", "null", ";", "}", "}", ".", "bind", "(", "this", ")", ")", ";", "}"], "original_docstring": "\nAborts all network requests and destroys worker.\n@return {Promise} A promise that is resolved after destruction activity\nis completed.\n", "docstring": {"block_comment": "Aborts all network requests and destroys worker.", "line_comment": null}, "docstring_tokens": ["Aborts", "all", "network", "requests", "and", "destroys", "worker", "."], "sample_id": 535, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004402", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      this.destroyed = true;\n\n      var transportDestroyed = !this._transport ? Promise.resolve() :\n        this._transport.destroy();\n      return transportDestroyed.then(function () {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      }.bind(this));\n    }", "code_tokens": ["function", "(", ")", "{", "this", ".", "destroyed", "=", "true", ";", "var", "transportDestroyed", "=", "!", "this", ".", "_transport", "?", "Promise", ".", "resolve", "(", ")", ":", "this", ".", "_transport", ".", "destroy", "(", ")", ";", "return", "transportDestroyed", ".", "then", "(", "function", "(", ")", "{", "this", ".", "_transport", "=", "null", ";", "if", "(", "this", ".", "_worker", ")", "{", "this", ".", "_worker", ".", "destroy", "(", ")", ";", "this", ".", "_worker", "=", "null", ";", "}", "}", ".", "bind", "(", "this", ")", ")", ";", "}"], "original_docstring": "\nAborts all network requests and destroys worker.\n@return {Promise} A promise that is resolved after destruction activity\nis completed.\n", "docstring": {"block_comment": "Aborts all network requests and destroys worker.", "line_comment": null}, "docstring_tokens": ["A", "promise", "that", "is", "resolved", "after", "destruction", "activity"], "sample_id": 535, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004403", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "AnnotationLayer_update", "code": "function AnnotationLayer_update(parameters) {\n      for (var i = 0, ii = parameters.annotations.length; i < ii; i++) {\n        var data = parameters.annotations[i];\n        var element = parameters.div.querySelector(\n          '[data-annotation-id=\"' + data.id + '\"]');\n        if (element) {\n          CustomStyle.setProp('transform', element,\n            'matrix(' + parameters.viewport.transform.join(',') + ')');\n        }\n      }\n      parameters.div.removeAttribute('hidden');\n    }", "code_tokens": ["function", "AnnotationLayer_update", "(", "parameters", ")", "{", "for", "(", "var", "i", "=", "0", ",", "ii", "=", "parameters", ".", "annotations", ".", "length", ";", "i", "<", "ii", ";", "i", "++", ")", "{", "var", "data", "=", "parameters", ".", "annotations", "[", "i", "]", ";", "var", "element", "=", "parameters", ".", "div", ".", "querySelector", "(", "'[data-annotation-id=\"'", "+", "data", ".", "id", "+", "'\"]'", ")", ";", "if", "(", "element", ")", "{", "CustomStyle", ".", "setProp", "(", "'transform'", ",", "element", ",", "'matrix('", "+", "parameters", ".", "viewport", ".", "transform", ".", "join", "(", "','", ")", "+", "')'", ")", ";", "}", "}", "parameters", ".", "div", ".", "removeAttribute", "(", "'hidden'", ")", ";", "}"], "original_docstring": "\nUpdate the annotation elements on existing annotation layer.\n\n@public\n@param {AnnotationLayerParameters} parameters\n@memberof AnnotationLayer\n", "docstring": {"block_comment": "Update the annotation elements on existing annotation layer.", "line_comment": null}, "docstring_tokens": ["Update", "the", "annotation", "elements", "on", "existing", "annotation", "layer", "."], "sample_id": 536, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004404", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "AnnotationLayer_render", "code": "function AnnotationLayer_render(parameters) {\n      var annotationElementFactory = new AnnotationElementFactory();\n\n      for (var i = 0, ii = parameters.annotations.length; i < ii; i++) {\n        var data = parameters.annotations[i];\n        if (!data || !data.hasHtml) {\n          continue;\n        }\n\n        var properties = {\n          data: data,\n          layer: parameters.div,\n          page: parameters.page,\n          viewport: parameters.viewport,\n          linkService: parameters.linkService\n        };\n        var element = annotationElementFactory.create(properties);\n        parameters.div.appendChild(element.render());\n      }\n    }", "code_tokens": ["function", "AnnotationLayer_render", "(", "parameters", ")", "{", "var", "annotationElementFactory", "=", "new", "AnnotationElementFactory", "(", ")", ";", "for", "(", "var", "i", "=", "0", ",", "ii", "=", "parameters", ".", "annotations", ".", "length", ";", "i", "<", "ii", ";", "i", "++", ")", "{", "var", "data", "=", "parameters", ".", "annotations", "[", "i", "]", ";", "if", "(", "!", "data", "||", "!", "data", ".", "hasHtml", ")", "{", "continue", ";", "}", "var", "properties", "=", "{", "data", ":", "data", ",", "layer", ":", "parameters", ".", "div", ",", "page", ":", "parameters", ".", "page", ",", "viewport", ":", "parameters", ".", "viewport", ",", "linkService", ":", "parameters", ".", "linkService", "}", ";", "var", "element", "=", "annotationElementFactory", ".", "create", "(", "properties", ")", ";", "parameters", ".", "div", ".", "appendChild", "(", "element", ".", "render", "(", ")", ")", ";", "}", "}"], "original_docstring": "\nRender a new annotation layer with all annotation elements.\n\n@public\n@param {AnnotationLayerParameters} parameters\n@memberof AnnotationLayer\n", "docstring": {"block_comment": "Render a new annotation layer with all annotation elements.", "line_comment": null}, "docstring_tokens": ["Render", "a", "new", "annotation", "layer", "with", "all", "annotation", "elements", "."], "sample_id": 537, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004405", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "UnderlineAnnotationElement_render", "code": "function UnderlineAnnotationElement_render() {\n      this.container.className = 'underlineAnnotation';\n      return this.container;\n    }", "code_tokens": ["function", "UnderlineAnnotationElement_render", "(", ")", "{", "this", ".", "container", ".", "className", "=", "'underlineAnnotation'", ";", "return", "this", ".", "container", ";", "}"], "original_docstring": "\nRender the underline annotation's HTML element in the empty container.\n\n@public\n@memberof UnderlineAnnotationElement\n@returns {HTMLSectionElement}\n", "docstring": {"block_comment": "Render the underline annotation s HTML element in the empty container.", "line_comment": null}, "docstring_tokens": ["Render", "the", "underline", "annotation", "s", "HTML", "element", "in", "the", "empty", "container", "."], "sample_id": 538, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004406", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PopupElement_hide", "code": "function PopupElement_hide(unpin) {\n      if (unpin) {\n        this.pinned = false;\n      }\n      if (!this.hideElement.hasAttribute('hidden') && !this.pinned) {\n        this.hideElement.setAttribute('hidden', true);\n        this.container.style.zIndex -= 1;\n      }\n    }", "code_tokens": ["function", "PopupElement_hide", "(", "unpin", ")", "{", "if", "(", "unpin", ")", "{", "this", ".", "pinned", "=", "false", ";", "}", "if", "(", "!", "this", ".", "hideElement", ".", "hasAttribute", "(", "'hidden'", ")", "&&", "!", "this", ".", "pinned", ")", "{", "this", ".", "hideElement", ".", "setAttribute", "(", "'hidden'", ",", "true", ")", ";", "this", ".", "container", ".", "style", ".", "zIndex", "-=", "1", ";", "}", "}"], "original_docstring": "\nHide the popup.\n\n@private\n@param {boolean} unpin\n@memberof PopupElement\n", "docstring": {"block_comment": "Hide the popup.", "line_comment": null}, "docstring_tokens": ["Hide", "the", "popup", "."], "sample_id": 539, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004407", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PopupElement_show", "code": "function PopupElement_show(pin) {\n      if (pin) {\n        this.pinned = true;\n      }\n      if (this.hideElement.hasAttribute('hidden')) {\n        this.hideElement.removeAttribute('hidden');\n        this.container.style.zIndex += 1;\n      }\n    }", "code_tokens": ["function", "PopupElement_show", "(", "pin", ")", "{", "if", "(", "pin", ")", "{", "this", ".", "pinned", "=", "true", ";", "}", "if", "(", "this", ".", "hideElement", ".", "hasAttribute", "(", "'hidden'", ")", ")", "{", "this", ".", "hideElement", ".", "removeAttribute", "(", "'hidden'", ")", ";", "this", ".", "container", ".", "style", ".", "zIndex", "+=", "1", ";", "}", "}"], "original_docstring": "\nShow the popup.\n\n@private\n@param {boolean} pin\n@memberof PopupElement\n", "docstring": {"block_comment": "Show the popup.", "line_comment": null}, "docstring_tokens": ["Show", "the", "popup", "."], "sample_id": 540, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004408", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PopupElement_toggle", "code": "function PopupElement_toggle() {\n      if (this.pinned) {\n        this._hide(true);\n      } else {\n        this._show(true);\n      }\n    }", "code_tokens": ["function", "PopupElement_toggle", "(", ")", "{", "if", "(", "this", ".", "pinned", ")", "{", "this", ".", "_hide", "(", "true", ")", ";", "}", "else", "{", "this", ".", "_show", "(", "true", ")", ";", "}", "}"], "original_docstring": "\nToggle the visibility of the popup.\n\n@private\n@memberof PopupElement\n", "docstring": {"block_comment": "Toggle the visibility of the popup.", "line_comment": null}, "docstring_tokens": ["Toggle", "the", "visibility", "of", "the", "popup", "."], "sample_id": 541, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004409", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PopupElement_formatContents", "code": "function PopupElement_formatContents(contents) {\n      var p = document.createElement('p');\n      var lines = contents.split(/(?:\\r\\n?|\\n)/);\n      for (var i = 0, ii = lines.length; i < ii; ++i) {\n        var line = lines[i];\n        p.appendChild(document.createTextNode(line));\n        if (i < (ii - 1)) {\n          p.appendChild(document.createElement('br'));\n        }\n      }\n      return p;\n    }", "code_tokens": ["function", "PopupElement_formatContents", "(", "contents", ")", "{", "var", "p", "=", "document", ".", "createElement", "(", "'p'", ")", ";", "var", "lines", "=", "contents", ".", "split", "(", "/", "(?:\\r\\n?|\\n)", "/", ")", ";", "for", "(", "var", "i", "=", "0", ",", "ii", "=", "lines", ".", "length", ";", "i", "<", "ii", ";", "++", "i", ")", "{", "var", "line", "=", "lines", "[", "i", "]", ";", "p", ".", "appendChild", "(", "document", ".", "createTextNode", "(", "line", ")", ")", ";", "if", "(", "i", "<", "(", "ii", "-", "1", ")", ")", "{", "p", ".", "appendChild", "(", "document", ".", "createElement", "(", "'br'", ")", ")", ";", "}", "}", "return", "p", ";", "}"], "original_docstring": "\nFormat the contents of the popup by adding newlines where necessary.\n\n@private\n@param {string} contents\n@memberof PopupElement\n@returns {HTMLParagraphElement}\n", "docstring": {"block_comment": "Format the contents of the popup by adding newlines where necessary.", "line_comment": null}, "docstring_tokens": ["Format", "the", "contents", "of", "the", "popup", "by", "adding", "newlines", "where", "necessary", "."], "sample_id": 542, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004410", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PopupElement_render", "code": "function PopupElement_render() {\n      var wrapper = document.createElement('div');\n      wrapper.className = 'popupWrapper';\n\n      // For Popup annotations we hide the entire section because it contains\n      // only the popup. However, for Text annotations without a separate Popup\n      // annotation, we cannot hide the entire container as the image would\n      // disappear too. In that special case, hiding the wrapper suffices.\n      this.hideElement = (this.hideWrapper ? wrapper : this.container);\n      this.hideElement.setAttribute('hidden', true);\n\n      var popup = document.createElement('div');\n      popup.className = 'popup';\n\n      var color = this.color;\n      if (color) {\n        // Enlighten the color.\n        var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n        var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n        var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n        popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n      }\n\n      var contents = this._formatContents(this.contents);\n      var title = document.createElement('h1');\n      title.textContent = this.title;\n\n      // Attach the event listeners to the trigger element.\n      this.trigger.addEventListener('click', this._toggle.bind(this));\n      this.trigger.addEventListener('mouseover', this._show.bind(this, false));\n      this.trigger.addEventListener('mouseout', this._hide.bind(this, false));\n      popup.addEventListener('click', this._hide.bind(this, true));\n\n      popup.appendChild(title);\n      popup.appendChild(contents);\n      wrapper.appendChild(popup);\n      return wrapper;\n    }", "code_tokens": ["function", "PopupElement_render", "(", ")", "{", "var", "wrapper", "=", "document", ".", "createElement", "(", "'div'", ")", ";", "wrapper", ".", "className", "=", "'popupWrapper'", ";", "// For Popup annotations we hide the entire section because it contains", "// only the popup. However, for Text annotations without a separate Popup", "// annotation, we cannot hide the entire container as the image would", "// disappear too. In that special case, hiding the wrapper suffices.", "this", ".", "hideElement", "=", "(", "this", ".", "hideWrapper", "?", "wrapper", ":", "this", ".", "container", ")", ";", "this", ".", "hideElement", ".", "setAttribute", "(", "'hidden'", ",", "true", ")", ";", "var", "popup", "=", "document", ".", "createElement", "(", "'div'", ")", ";", "popup", ".", "className", "=", "'popup'", ";", "var", "color", "=", "this", ".", "color", ";", "if", "(", "color", ")", "{", "// Enlighten the color.", "var", "r", "=", "BACKGROUND_ENLIGHT", "*", "(", "255", "-", "color", "[", "0", "]", ")", "+", "color", "[", "0", "]", ";", "var", "g", "=", "BACKGROUND_ENLIGHT", "*", "(", "255", "-", "color", "[", "1", "]", ")", "+", "color", "[", "1", "]", ";", "var", "b", "=", "BACKGROUND_ENLIGHT", "*", "(", "255", "-", "color", "[", "2", "]", ")", "+", "color", "[", "2", "]", ";", "popup", ".", "style", ".", "backgroundColor", "=", "Util", ".", "makeCssRgb", "(", "r", "|", "0", ",", "g", "|", "0", ",", "b", "|", "0", ")", ";", "}", "var", "contents", "=", "this", ".", "_formatContents", "(", "this", ".", "contents", ")", ";", "var", "title", "=", "document", ".", "createElement", "(", "'h1'", ")", ";", "title", ".", "textContent", "=", "this", ".", "title", ";", "// Attach the event listeners to the trigger element.", "this", ".", "trigger", ".", "addEventListener", "(", "'click'", ",", "this", ".", "_toggle", ".", "bind", "(", "this", ")", ")", ";", "this", ".", "trigger", ".", "addEventListener", "(", "'mouseover'", ",", "this", ".", "_show", ".", "bind", "(", "this", ",", "false", ")", ")", ";", "this", ".", "trigger", ".", "addEventListener", "(", "'mouseout'", ",", "this", ".", "_hide", ".", "bind", "(", "this", ",", "false", ")", ")", ";", "popup", ".", "addEventListener", "(", "'click'", ",", "this", ".", "_hide", ".", "bind", "(", "this", ",", "true", ")", ")", ";", "popup", ".", "appendChild", "(", "title", ")", ";", "popup", ".", "appendChild", "(", "contents", ")", ";", "wrapper", ".", "appendChild", "(", "popup", ")", ";", "return", "wrapper", ";", "}"], "original_docstring": "\nRender the popup's HTML element.\n\n@public\n@memberof PopupElement\n@returns {HTMLSectionElement}\n", "docstring": {"block_comment": "Render the popup s HTML element.", "line_comment": ["For Popup annotations we hide the entire section because it contains", "only the popup. However, for Text annotations without a separate Popup", "annotation, we cannot hide the entire container as the image would", "disappear too. In that special case, hiding the wrapper suffices.", "Enlighten the color.", "Attach the event listeners to the trigger element."]}, "docstring_tokens": ["Render", "the", "popup", "s", "HTML", "element", "."], "sample_id": 543, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004411", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "PopupAnnotationElement_render", "code": "function PopupAnnotationElement_render() {\n      this.container.className = 'popupAnnotation';\n\n      var selector = '[data-annotation-id=\"' + this.data.parentId + '\"]';\n      var parentElement = this.layer.querySelector(selector);\n      if (!parentElement) {\n        return this.container;\n      }\n\n      var popup = new PopupElement({\n        container: this.container,\n        trigger: parentElement,\n        color: this.data.color,\n        title: this.data.title,\n        contents: this.data.contents\n      });\n\n      // Position the popup next to the parent annotation's container.\n      // PDF viewers ignore a popup annotation's rectangle.\n      var parentLeft = parseFloat(parentElement.style.left);\n      var parentWidth = parseFloat(parentElement.style.width);\n      CustomStyle.setProp('transformOrigin', this.container,\n                          -(parentLeft + parentWidth) + 'px -' +\n                          parentElement.style.top);\n      this.container.style.left = (parentLeft + parentWidth) + 'px';\n\n      this.container.appendChild(popup.render());\n      return this.container;\n    }", "code_tokens": ["function", "PopupAnnotationElement_render", "(", ")", "{", "this", ".", "container", ".", "className", "=", "'popupAnnotation'", ";", "var", "selector", "=", "'[data-annotation-id=\"'", "+", "this", ".", "data", ".", "parentId", "+", "'\"]'", ";", "var", "parentElement", "=", "this", ".", "layer", ".", "querySelector", "(", "selector", ")", ";", "if", "(", "!", "parentElement", ")", "{", "return", "this", ".", "container", ";", "}", "var", "popup", "=", "new", "PopupElement", "(", "{", "container", ":", "this", ".", "container", ",", "trigger", ":", "parentElement", ",", "color", ":", "this", ".", "data", ".", "color", ",", "title", ":", "this", ".", "data", ".", "title", ",", "contents", ":", "this", ".", "data", ".", "contents", "}", ")", ";", "// Position the popup next to the parent annotation's container.", "// PDF viewers ignore a popup annotation's rectangle.", "var", "parentLeft", "=", "parseFloat", "(", "parentElement", ".", "style", ".", "left", ")", ";", "var", "parentWidth", "=", "parseFloat", "(", "parentElement", ".", "style", ".", "width", ")", ";", "CustomStyle", ".", "setProp", "(", "'transformOrigin'", ",", "this", ".", "container", ",", "-", "(", "parentLeft", "+", "parentWidth", ")", "+", "'px -'", "+", "parentElement", ".", "style", ".", "top", ")", ";", "this", ".", "container", ".", "style", ".", "left", "=", "(", "parentLeft", "+", "parentWidth", ")", "+", "'px'", ";", "this", ".", "container", ".", "appendChild", "(", "popup", ".", "render", "(", ")", ")", ";", "return", "this", ".", "container", ";", "}"], "original_docstring": "\nRender the popup annotation's HTML element in the empty container.\n\n@public\n@memberof PopupAnnotationElement\n@returns {HTMLSectionElement}\n", "docstring": {"block_comment": "Render the popup annotation s HTML element in the empty container.", "line_comment": ["Position the popup next to the parent annotation s container.", "PDF viewers ignore a popup annotation s rectangle."]}, "docstring_tokens": ["Render", "the", "popup", "annotation", "s", "HTML", "element", "in", "the", "empty", "container", "."], "sample_id": 544, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004413", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "WidgetAnnotationElement_render", "code": "function WidgetAnnotationElement_render() {\n      var content = document.createElement('div');\n      content.textContent = this.data.fieldValue;\n      var textAlignment = this.data.textAlignment;\n      content.style.textAlign = ['left', 'center', 'right'][textAlignment];\n      content.style.verticalAlign = 'middle';\n      content.style.display = 'table-cell';\n\n      var font = (this.data.fontRefName ?\n        this.page.commonObjs.getData(this.data.fontRefName) : null);\n      this._setTextStyle(content, font);\n\n      this.container.appendChild(content);\n      return this.container;\n    }", "code_tokens": ["function", "WidgetAnnotationElement_render", "(", ")", "{", "var", "content", "=", "document", ".", "createElement", "(", "'div'", ")", ";", "content", ".", "textContent", "=", "this", ".", "data", ".", "fieldValue", ";", "var", "textAlignment", "=", "this", ".", "data", ".", "textAlignment", ";", "content", ".", "style", ".", "textAlign", "=", "[", "'left'", ",", "'center'", ",", "'right'", "]", "[", "textAlignment", "]", ";", "content", ".", "style", ".", "verticalAlign", "=", "'middle'", ";", "content", ".", "style", ".", "display", "=", "'table-cell'", ";", "var", "font", "=", "(", "this", ".", "data", ".", "fontRefName", "?", "this", ".", "page", ".", "commonObjs", ".", "getData", "(", "this", ".", "data", ".", "fontRefName", ")", ":", "null", ")", ";", "this", ".", "_setTextStyle", "(", "content", ",", "font", ")", ";", "this", ".", "container", ".", "appendChild", "(", "content", ")", ";", "return", "this", ".", "container", ";", "}"], "original_docstring": "\nRender the widget annotation's HTML element in the empty container.\n\n@public\n@memberof WidgetAnnotationElement\n@returns {HTMLSectionElement}\n", "docstring": {"block_comment": "Render the widget annotation s HTML element in the empty container.", "line_comment": null}, "docstring_tokens": ["Render", "the", "widget", "annotation", "s", "HTML", "element", "in", "the", "empty", "container", "."], "sample_id": 545, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004414", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "TextAnnotationElement_render", "code": "function TextAnnotationElement_render() {\n      this.container.className = 'textAnnotation';\n\n      var image = document.createElement('img');\n      image.style.height = this.container.style.height;\n      image.style.width = this.container.style.width;\n      image.src = PDFJS.imageResourcesPath + 'annotation-' +\n        this.data.name.toLowerCase() + '.svg';\n      image.alt = '[{{type}} Annotation]';\n      image.dataset.l10nId = 'text_annotation_type';\n      image.dataset.l10nArgs = JSON.stringify({type: this.data.name});\n\n      if (!this.data.hasPopup) {\n        var popupElement = new PopupElement({\n          container: this.container,\n          trigger: image,\n          color: this.data.color,\n          title: this.data.title,\n          contents: this.data.contents,\n          hideWrapper: true\n        });\n        var popup = popupElement.render();\n\n        // Position the popup next to the Text annotation's container.\n        popup.style.left = image.style.width;\n\n        this.container.appendChild(popup);\n      }\n\n      this.container.appendChild(image);\n      return this.container;\n    }", "code_tokens": ["function", "TextAnnotationElement_render", "(", ")", "{", "this", ".", "container", ".", "className", "=", "'textAnnotation'", ";", "var", "image", "=", "document", ".", "createElement", "(", "'img'", ")", ";", "image", ".", "style", ".", "height", "=", "this", ".", "container", ".", "style", ".", "height", ";", "image", ".", "style", ".", "width", "=", "this", ".", "container", ".", "style", ".", "width", ";", "image", ".", "src", "=", "PDFJS", ".", "imageResourcesPath", "+", "'annotation-'", "+", "this", ".", "data", ".", "name", ".", "toLowerCase", "(", ")", "+", "'.svg'", ";", "image", ".", "alt", "=", "'[{{type}} Annotation]'", ";", "image", ".", "dataset", ".", "l10nId", "=", "'text_annotation_type'", ";", "image", ".", "dataset", ".", "l10nArgs", "=", "JSON", ".", "stringify", "(", "{", "type", ":", "this", ".", "data", ".", "name", "}", ")", ";", "if", "(", "!", "this", ".", "data", ".", "hasPopup", ")", "{", "var", "popupElement", "=", "new", "PopupElement", "(", "{", "container", ":", "this", ".", "container", ",", "trigger", ":", "image", ",", "color", ":", "this", ".", "data", ".", "color", ",", "title", ":", "this", ".", "data", ".", "title", ",", "contents", ":", "this", ".", "data", ".", "contents", ",", "hideWrapper", ":", "true", "}", ")", ";", "var", "popup", "=", "popupElement", ".", "render", "(", ")", ";", "// Position the popup next to the Text annotation's container.", "popup", ".", "style", ".", "left", "=", "image", ".", "style", ".", "width", ";", "this", ".", "container", ".", "appendChild", "(", "popup", ")", ";", "}", "this", ".", "container", ".", "appendChild", "(", "image", ")", ";", "return", "this", ".", "container", ";", "}"], "original_docstring": "\nRender the text annotation's HTML element in the empty container.\n\n@public\n@memberof TextAnnotationElement\n@returns {HTMLSectionElement}\n", "docstring": {"block_comment": "Render the text annotation s HTML element in the empty container.", "line_comment": ["Position the popup next to the Text annotation s container."]}, "docstring_tokens": ["Render", "the", "text", "annotation", "s", "HTML", "element", "in", "the", "empty", "container", "."], "sample_id": 546, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004415", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "LinkAnnotationElement_bindNamedAction", "code": "function LinkAnnotationElement_bindNamedAction(link, action) {\n      var self = this;\n\n      link.href = this.linkService.getAnchorUrl('');\n      link.onclick = function() {\n        self.linkService.executeNamedAction(action);\n        return false;\n      };\n      link.className = 'internalLink';\n    }", "code_tokens": ["function", "LinkAnnotationElement_bindNamedAction", "(", "link", ",", "action", ")", "{", "var", "self", "=", "this", ";", "link", ".", "href", "=", "this", ".", "linkService", ".", "getAnchorUrl", "(", "''", ")", ";", "link", ".", "onclick", "=", "function", "(", ")", "{", "self", ".", "linkService", ".", "executeNamedAction", "(", "action", ")", ";", "return", "false", ";", "}", ";", "link", ".", "className", "=", "'internalLink'", ";", "}"], "original_docstring": "\nBind named actions to the link element.\n\n@private\n@param {Object} link\n@param {Object} action\n@memberof LinkAnnotationElement\n", "docstring": {"block_comment": "Bind named actions to the link element.", "line_comment": null}, "docstring_tokens": ["Bind", "named", "actions", "to", "the", "link", "element", "."], "sample_id": 547, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004416", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "LinkAnnotationElement_bindLink", "code": "function LinkAnnotationElement_bindLink(link, destination) {\n      var self = this;\n\n      link.href = this.linkService.getDestinationHash(destination);\n      link.onclick = function() {\n        if (destination) {\n          self.linkService.navigateTo(destination);\n        }\n        return false;\n      };\n      if (destination) {\n        link.className = 'internalLink';\n      }\n    }", "code_tokens": ["function", "LinkAnnotationElement_bindLink", "(", "link", ",", "destination", ")", "{", "var", "self", "=", "this", ";", "link", ".", "href", "=", "this", ".", "linkService", ".", "getDestinationHash", "(", "destination", ")", ";", "link", ".", "onclick", "=", "function", "(", ")", "{", "if", "(", "destination", ")", "{", "self", ".", "linkService", ".", "navigateTo", "(", "destination", ")", ";", "}", "return", "false", ";", "}", ";", "if", "(", "destination", ")", "{", "link", ".", "className", "=", "'internalLink'", ";", "}", "}"], "original_docstring": "\nBind internal links to the link element.\n\n@private\n@param {Object} link\n@param {Object} destination\n@memberof LinkAnnotationElement\n", "docstring": {"block_comment": "Bind internal links to the link element.", "line_comment": null}, "docstring_tokens": ["Bind", "internal", "links", "to", "the", "link", "element", "."], "sample_id": 548, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004417", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "LinkAnnotationElement_render", "code": "function LinkAnnotationElement_render() {\n      this.container.className = 'linkAnnotation';\n\n      var link = document.createElement('a');\n      link.href = link.title = this.data.url || '';\n\n      if (this.data.url && isExternalLinkTargetSet()) {\n        link.target = LinkTargetStringMap[PDFJS.externalLinkTarget];\n      }\n\n      // Strip referrer from the URL.\n      if (this.data.url) {\n        link.rel = PDFJS.externalLinkRel;\n      }\n\n      if (!this.data.url) {\n        if (this.data.action) {\n          this._bindNamedAction(link, this.data.action);\n        } else {\n          this._bindLink(link, ('dest' in this.data) ? this.data.dest : null);\n        }\n      }\n\n      this.container.appendChild(link);\n      return this.container;\n    }", "code_tokens": ["function", "LinkAnnotationElement_render", "(", ")", "{", "this", ".", "container", ".", "className", "=", "'linkAnnotation'", ";", "var", "link", "=", "document", ".", "createElement", "(", "'a'", ")", ";", "link", ".", "href", "=", "link", ".", "title", "=", "this", ".", "data", ".", "url", "||", "''", ";", "if", "(", "this", ".", "data", ".", "url", "&&", "isExternalLinkTargetSet", "(", ")", ")", "{", "link", ".", "target", "=", "LinkTargetStringMap", "[", "PDFJS", ".", "externalLinkTarget", "]", ";", "}", "// Strip referrer from the URL.", "if", "(", "this", ".", "data", ".", "url", ")", "{", "link", ".", "rel", "=", "PDFJS", ".", "externalLinkRel", ";", "}", "if", "(", "!", "this", ".", "data", ".", "url", ")", "{", "if", "(", "this", ".", "data", ".", "action", ")", "{", "this", ".", "_bindNamedAction", "(", "link", ",", "this", ".", "data", ".", "action", ")", ";", "}", "else", "{", "this", ".", "_bindLink", "(", "link", ",", "(", "'dest'", "in", "this", ".", "data", ")", "?", "this", ".", "data", ".", "dest", ":", "null", ")", ";", "}", "}", "this", ".", "container", ".", "appendChild", "(", "link", ")", ";", "return", "this", ".", "container", ";", "}"], "original_docstring": "\nRender the link annotation's HTML element in the empty container.\n\n@public\n@memberof LinkAnnotationElement\n@returns {HTMLSectionElement}\n", "docstring": {"block_comment": "Render the link annotation s HTML element in the empty container.", "line_comment": ["Strip referrer from the URL."]}, "docstring_tokens": ["Render", "the", "link", "annotation", "s", "HTML", "element", "in", "the", "empty", "container", "."], "sample_id": 549, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004418", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "AnnotationElement_render", "code": "function AnnotationElement_render() {\n      throw new Error('Abstract method AnnotationElement.render called');\n    }", "code_tokens": ["function", "AnnotationElement_render", "(", ")", "{", "throw", "new", "Error", "(", "'Abstract method AnnotationElement.render called'", ")", ";", "}"], "original_docstring": "\nRender the annotation's HTML element in the empty container.\n\n@public\n@memberof AnnotationElement\n", "docstring": {"block_comment": "Render the annotation s HTML element in the empty container.", "line_comment": null}, "docstring_tokens": ["Render", "the", "annotation", "s", "HTML", "element", "in", "the", "empty", "container", "."], "sample_id": 550, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004419", "repo": "boneskull/cdnjs", "path": "ajax/libs/pdf.js/1.3.142/pdf.js", "language": "JavaScript", "license": "mit", "func_name": "AnnotationElement_createContainer", "code": "function AnnotationElement_createContainer() {\n      var data = this.data, page = this.page, viewport = this.viewport;\n      var container = document.createElement('section');\n      var width = data.rect[2] - data.rect[0];\n      var height = data.rect[3] - data.rect[1];\n\n      container.setAttribute('data-annotation-id', data.id);\n\n      // Do *not* modify `data.rect`, since that will corrupt the annotation\n      // position on subsequent calls to `_createContainer` (see issue 6804).\n      var rect = Util.normalizeRect([\n        data.rect[0],\n        page.view[3] - data.rect[1] + page.view[1],\n        data.rect[2],\n        page.view[3] - data.rect[3] + page.view[1]\n      ]);\n\n      CustomStyle.setProp('transform', container,\n                          'matrix(' + viewport.transform.join(',') + ')');\n      CustomStyle.setProp('transformOrigin', container,\n                          -rect[0] + 'px ' + -rect[1] + 'px');\n\n      if (data.borderStyle.width > 0) {\n        container.style.borderWidth = data.borderStyle.width + 'px';\n        if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n          // Underline styles only have a bottom border, so we do not need\n          // to adjust for all borders. This yields a similar result as\n          // Adobe Acrobat/Reader.\n          width = width - 2 * data.borderStyle.width;\n          height = height - 2 * data.borderStyle.width;\n        }\n\n        var horizontalRadius = data.borderStyle.horizontalCornerRadius;\n        var verticalRadius = data.borderStyle.verticalCornerRadius;\n        if (horizontalRadius > 0 || verticalRadius > 0) {\n          var radius = horizontalRadius + 'px / ' + verticalRadius + 'px';\n          CustomStyle.setProp('borderRadius', container, radius);\n        }\n\n        switch (data.borderStyle.style) {\n          case AnnotationBorderStyleType.SOLID:\n            container.style.borderStyle = 'solid';\n            break;\n\n          case AnnotationBorderStyleType.DASHED:\n            container.style.borderStyle = 'dashed';\n            break;\n\n          case AnnotationBorderStyleType.BEVELED:\n            warn('Unimplemented border style: beveled');\n            break;\n\n          case AnnotationBorderStyleType.INSET:\n            warn('Unimplemented border style: inset');\n            break;\n\n          case AnnotationBorderStyleType.UNDERLINE:\n            container.style.borderBottomStyle = 'solid';\n            break;\n\n          default:\n            break;\n        }\n\n        if (data.color) {\n          container.style.borderColor =\n            Util.makeCssRgb(data.color[0] | 0,\n                            data.color[1] | 0,\n                            data.color[2] | 0);\n        } else {\n          // Transparent (invisible) border, so do not draw it at all.\n          container.style.borderWidth = 0;\n        }\n      }\n\n      container.style.left = rect[0] + 'px';\n      container.style.top = rect[1] + 'px';\n\n      container.style.width = width + 'px';\n      container.style.height = height + 'px';\n\n      return container;\n    }", "code_tokens": ["function", "AnnotationElement_createContainer", "(", ")", "{", "var", "data", "=", "this", ".", "data", ",", "page", "=", "this", ".", "page", ",", "viewport", "=", "this", ".", "viewport", ";", "var", "container", "=", "document", ".", "createElement", "(", "'section'", ")", ";", "var", "width", "=", "data", ".", "rect", "[", "2", "]", "-", "data", ".", "rect", "[", "0", "]", ";", "var", "height", "=", "data", ".", "rect", "[", "3", "]", "-", "data", ".", "rect", "[", "1", "]", ";", "container", ".", "setAttribute", "(", "'data-annotation-id'", ",", "data", ".", "id", ")", ";", "// Do *not* modify `data.rect`, since that will corrupt the annotation", "// position on subsequent calls to `_createContainer` (see issue 6804).", "var", "rect", "=", "Util", ".", "normalizeRect", "(", "[", "data", ".", "rect", "[", "0", "]", ",", "page", ".", "view", "[", "3", "]", "-", "data", ".", "rect", "[", "1", "]", "+", "page", ".", "view", "[", "1", "]", ",", "data", ".", "rect", "[", "2", "]", ",", "page", ".", "view", "[", "3", "]", "-", "data", ".", "rect", "[", "3", "]", "+", "page", ".", "view", "[", "1", "]", "]", ")", ";", "CustomStyle", ".", "setProp", "(", "'transform'", ",", "container", ",", "'matrix('", "+", "viewport", ".", "transform", ".", "join", "(", "','", ")", "+", "')'", ")", ";", "CustomStyle", ".", "setProp", "(", "'transformOrigin'", ",", "container", ",", "-", "rect", "[", "0", "]", "+", "'px '", "+", "-", "rect", "[", "1", "]", "+", "'px'", ")", ";", "if", "(", "data", ".", "borderStyle", ".", "width", ">", "0", ")", "{", "container", ".", "style", ".", "borderWidth", "=", "data", ".", "borderStyle", ".", "width", "+", "'px'", ";", "if", "(", "data", ".", "borderStyle", ".", "style", "!==", "AnnotationBorderStyleType", ".", "UNDERLINE", ")", "{", "// Underline styles only have a bottom border, so we do not need", "// to adjust for all borders. This yields a similar result as", "// Adobe Acrobat/Reader.", "width", "=", "width", "-", "2", "*", "data", ".", "borderStyle", ".", "width", ";", "height", "=", "height", "-", "2", "*", "data", ".", "borderStyle", ".", "width", ";", "}", "var", "horizontalRadius", "=", "data", ".", "borderStyle", ".", "horizontalCornerRadius", ";", "var", "verticalRadius", "=", "data", ".", "borderStyle", ".", "verticalCornerRadius", ";", "if", "(", "horizontalRadius", ">", "0", "||", "verticalRadius", ">", "0", ")", "{", "var", "radius", "=", "horizontalRadius", "+", "'px / '", "+", "verticalRadius", "+", "'px'", ";", "CustomStyle", ".", "setProp", "(", "'borderRadius'", ",", "container", ",", "radius", ")", ";", "}", "switch", "(", "data", ".", "borderStyle", ".", "style", ")", "{", "case", "AnnotationBorderStyleType", ".", "SOLID", ":", "container", ".", "style", ".", "borderStyle", "=", "'solid'", ";", "break", ";", "case", "AnnotationBorderStyleType", ".", "DASHED", ":", "container", ".", "style", ".", "borderStyle", "=", "'dashed'", ";", "break", ";", "case", "AnnotationBorderStyleType", ".", "BEVELED", ":", "warn", "(", "'Unimplemented border style: beveled'", ")", ";", "break", ";", "case", "AnnotationBorderStyleType", ".", "INSET", ":", "warn", "(", "'Unimplemented border style: inset'", ")", ";", "break", ";", "case", "AnnotationBorderStyleType", ".", "UNDERLINE", ":", "container", ".", "style", ".", "borderBottomStyle", "=", "'solid'", ";", "break", ";", "default", ":", "break", ";", "}", "if", "(", "data", ".", "color", ")", "{", "container", ".", "style", ".", "borderColor", "=", "Util", ".", "makeCssRgb", "(", "data", ".", "color", "[", "0", "]", "|", "0", ",", "data", ".", "color", "[", "1", "]", "|", "0", ",", "data", ".", "color", "[", "2", "]", "|", "0", ")", ";", "}", "else", "{", "// Transparent (invisible) border, so do not draw it at all.", "container", ".", "style", ".", "borderWidth", "=", "0", ";", "}", "}", "container", ".", "style", ".", "left", "=", "rect", "[", "0", "]", "+", "'px'", ";", "container", ".", "style", ".", "top", "=", "rect", "[", "1", "]", "+", "'px'", ";", "container", ".", "style", ".", "width", "=", "width", "+", "'px'", ";", "container", ".", "style", ".", "height", "=", "height", "+", "'px'", ";", "return", "container", ";", "}"], "original_docstring": "\nCreate an empty container for the annotation's HTML element.\n\n@private\n@memberof AnnotationElement\n@returns {HTMLSectionElement}\n", "docstring": {"block_comment": "Create an empty container for the annotation s HTML element.", "line_comment": ["Do  not  modify  data.rect , since that will corrupt the annotation", "position on subsequent calls to  _createContainer   see issue 6804 .", "Underline styles only have a bottom border, so we do not need", "to adjust for all borders. This yields a similar result as", "Adobe Acrobat Reader.", "Transparent  invisible  border, so do not draw it at all."]}, "docstring_tokens": ["Create", "an", "empty", "container", "for", "the", "annotation", "s", "HTML", "element", "."], "sample_id": 551, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004427", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (start,end,span,state,values,padding) {\n      var hitbox = document.getElementById(\"MathJax-HitBox-\"+this.spanID+HTMLCSS.idPostfix);\n      if (hitbox) {hitbox.parentNode.removeChild(hitbox)}\n      var slice = this.SUPER(arguments).HTMLmoveSlice.apply(this,arguments);\n      if (end.length === 0) {\n        span = this.HTMLspanElement(); var n = 0;\n        while (span) {\n          hitbox = this.HTMLhandleHitBox(span,\"-Continue-\"+n);\n          span = span.nextMathJaxSpan; n++;\n        }\n      }\n      return slice;\n    }", "code_tokens": ["function", "(", "start", ",", "end", ",", "span", ",", "state", ",", "values", ",", "padding", ")", "{", "var", "hitbox", "=", "document", ".", "getElementById", "(", "\"MathJax-HitBox-\"", "+", "this", ".", "spanID", "+", "HTMLCSS", ".", "idPostfix", ")", ";", "if", "(", "hitbox", ")", "{", "hitbox", ".", "parentNode", ".", "removeChild", "(", "hitbox", ")", "}", "var", "slice", "=", "this", ".", "SUPER", "(", "arguments", ")", ".", "HTMLmoveSlice", ".", "apply", "(", "this", ",", "arguments", ")", ";", "if", "(", "end", ".", "length", "===", "0", ")", "{", "span", "=", "this", ".", "HTMLspanElement", "(", ")", ";", "var", "n", "=", "0", ";", "while", "(", "span", ")", "{", "hitbox", "=", "this", ".", "HTMLhandleHitBox", "(", "span", ",", "\"-Continue-\"", "+", "n", ")", ";", "span", "=", "span", ".", "nextMathJaxSpan", ";", "n", "++", ";", "}", "}", "return", "slice", ";", "}"], "original_docstring": " Split and move the hit boxes as well ", "docstring": {"block_comment": "Split and move the hit boxes as well", "line_comment": null}, "docstring_tokens": ["Split", "and", "move", "the", "hit", "boxes", "as", "well"], "sample_id": 552, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004428", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (info,state) {\n      if (info.values && info.values.id === this.spanID) {return false}\n      var values = this.getValues(\"linebreak\");\n      var linebreakValue = values.linebreak;\n      if (!linebreakValue || this.hasDimAttr()) {\n        // The MathML spec says that the linebreak attribute should be ignored\n        // if any dimensional attribute is set.\n        linebreakValue = MML.LINEBREAK.AUTO;\n      }\n      //\n      //  Get the default penalty for this location\n      //\n      var W = info.scanW, span = this.HTMLspanElement(), w = span.bbox.w;\n      if (span.style.paddingLeft) {w += HTMLCSS.unEm(span.style.paddingLeft)}\n      if (W - info.shift === 0) {return false} // don't break at zero width (FIXME?)\n      var offset = HTMLCSS.linebreakWidth - W;\n      //\n      var penalty = Math.floor(offset / HTMLCSS.linebreakWidth * 1000);\n      if (penalty < 0) {penalty = PENALTY.toobig - 3*penalty}\n      penalty += info.nest * PENALTY.nestfactor;\n      //\n      //  Get the penalty for this type of break and\n      //    use it to modify the default penalty\n      //\n      var linebreak = PENALTY[linebreakValue];\n      if (linebreakValue === MML.LINEBREAK.AUTO && w >= PENALTY.spacelimit &&\n          !this.mathbackground && !this.background)\n        {linebreak = [(w+PENALTY.spaceoffset)*PENALTY.spacefactor]}\n      if (!(linebreak instanceof Array)) {\n        //  for breaks past the width, don't modify penalty\n        if (offset >= 0) {penalty = linebreak * info.nest}\n      } else {penalty = Math.max(1,penalty + linebreak[0] * info.nest)}\n      //\n      //  If the penalty is no better than the current one, return false\n      //  Otherwise save the data for this breakpoint and return true\n      //\n      if (penalty >= info.penalty) {return false}\n      info.penalty = penalty; info.values = values; info.W = W; info.w = w;\n      values.lineleading = state.VALUES.lineleading;\n      values.linebreakstyle = \"before\"; values.id = this.spanID;\n      return true;\n    }", "code_tokens": ["function", "(", "info", ",", "state", ")", "{", "if", "(", "info", ".", "values", "&&", "info", ".", "values", ".", "id", "===", "this", ".", "spanID", ")", "{", "return", "false", "}", "var", "values", "=", "this", ".", "getValues", "(", "\"linebreak\"", ")", ";", "var", "linebreakValue", "=", "values", ".", "linebreak", ";", "if", "(", "!", "linebreakValue", "||", "this", ".", "hasDimAttr", "(", ")", ")", "{", "// The MathML spec says that the linebreak attribute should be ignored", "// if any dimensional attribute is set.", "linebreakValue", "=", "MML", ".", "LINEBREAK", ".", "AUTO", ";", "}", "//", "//  Get the default penalty for this location", "//", "var", "W", "=", "info", ".", "scanW", ",", "span", "=", "this", ".", "HTMLspanElement", "(", ")", ",", "w", "=", "span", ".", "bbox", ".", "w", ";", "if", "(", "span", ".", "style", ".", "paddingLeft", ")", "{", "w", "+=", "HTMLCSS", ".", "unEm", "(", "span", ".", "style", ".", "paddingLeft", ")", "}", "if", "(", "W", "-", "info", ".", "shift", "===", "0", ")", "{", "return", "false", "}", "// don't break at zero width (FIXME?)", "var", "offset", "=", "HTMLCSS", ".", "linebreakWidth", "-", "W", ";", "//", "var", "penalty", "=", "Math", ".", "floor", "(", "offset", "/", "HTMLCSS", ".", "linebreakWidth", "*", "1000", ")", ";", "if", "(", "penalty", "<", "0", ")", "{", "penalty", "=", "PENALTY", ".", "toobig", "-", "3", "*", "penalty", "}", "penalty", "+=", "info", ".", "nest", "*", "PENALTY", ".", "nestfactor", ";", "//", "//  Get the penalty for this type of break and", "//    use it to modify the default penalty", "//", "var", "linebreak", "=", "PENALTY", "[", "linebreakValue", "]", ";", "if", "(", "linebreakValue", "===", "MML", ".", "LINEBREAK", ".", "AUTO", "&&", "w", ">=", "PENALTY", ".", "spacelimit", "&&", "!", "this", ".", "mathbackground", "&&", "!", "this", ".", "background", ")", "{", "linebreak", "=", "[", "(", "w", "+", "PENALTY", ".", "spaceoffset", ")", "*", "PENALTY", ".", "spacefactor", "]", "}", "if", "(", "!", "(", "linebreak", "instanceof", "Array", ")", ")", "{", "//  for breaks past the width, don't modify penalty", "if", "(", "offset", ">=", "0", ")", "{", "penalty", "=", "linebreak", "*", "info", ".", "nest", "}", "}", "else", "{", "penalty", "=", "Math", ".", "max", "(", "1", ",", "penalty", "+", "linebreak", "[", "0", "]", "*", "info", ".", "nest", ")", "}", "//", "//  If the penalty is no better than the current one, return false", "//  Otherwise save the data for this breakpoint and return true", "//", "if", "(", "penalty", ">=", "info", ".", "penalty", ")", "{", "return", "false", "}", "info", ".", "penalty", "=", "penalty", ";", "info", ".", "values", "=", "values", ";", "info", ".", "W", "=", "W", ";", "info", ".", "w", "=", "w", ";", "values", ".", "lineleading", "=", "state", ".", "VALUES", ".", "lineleading", ";", "values", ".", "linebreakstyle", "=", "\"before\"", ";", "values", ".", "id", "=", "this", ".", "spanID", ";", "return", "true", ";", "}"], "original_docstring": " Override the method for checking line breaks to properly handle <mspace> ", "docstring": {"block_comment": "Override the method for checking line breaks to properly handle", "line_comment": ["The MathML spec says that the linebreak attribute should be ignored", "if any dimensional attribute is set.", "", "Get the default penalty for this location", "", "don t break at zero width  FIXME  ", "", "", "Get the penalty for this type of break and", "use it to modify the default penalty", "", "for breaks past the width, don t modify penalty", "", "If the penalty is no better than the current one, return false", "Otherwise save the data for this breakpoint and return true", ""]}, "docstring_tokens": ["Override", "the", "method", "for", "checking", "line", "breaks", "to", "properly", "handle"], "sample_id": 553, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004430", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (line,state,values) {\n      // FIXME:  handle linebreakstyle === \"duplicate\"\n      // FIXME:  handle linebreakmultchar\n      if (!(state.first || state.last) ||\n           (state.first && state.values.linebreakstyle === MML.LINEBREAKSTYLE.BEFORE) ||\n           (state.last && values.linebreakstyle === MML.LINEBREAKSTYLE.AFTER)) {\n        //\n        //  Move color and span\n        //\n\tvar color = document.getElementById(\"MathJax-Color-\"+this.spanID+HTMLCSS.idPostfix);\n        if (color) {line.appendChild(color)}\n        var span = this.HTMLspanElement();\n        line.appendChild(span);\n        //\n        //  If it is last, remove right padding\n        //  If it is first, remove left padding and recolor\n        //\n        if (state.last) {span.style.paddingRight = \"\"}\n        if (state.first || state.nextIsFirst) {\n          span.style.paddingLeft = \"\";\n          if (color) {this.HTMLremoveColor(span); this.HTMLhandleColor(span)}\n        }\n        if (state.first && span.bbox.w === 0) {state.nextIsFirst = true}\n          else {delete state.nextIsFirst}\n        //\n        //  Update bounding box\n        //\n        this.HTMLcombineBBoxes(this,line.bbox);\n      }\n    }", "code_tokens": ["function", "(", "line", ",", "state", ",", "values", ")", "{", "// FIXME:  handle linebreakstyle === \"duplicate\"", "// FIXME:  handle linebreakmultchar", "if", "(", "!", "(", "state", ".", "first", "||", "state", ".", "last", ")", "||", "(", "state", ".", "first", "&&", "state", ".", "values", ".", "linebreakstyle", "===", "MML", ".", "LINEBREAKSTYLE", ".", "BEFORE", ")", "||", "(", "state", ".", "last", "&&", "values", ".", "linebreakstyle", "===", "MML", ".", "LINEBREAKSTYLE", ".", "AFTER", ")", ")", "{", "//", "//  Move color and span", "//", "var", "color", "=", "document", ".", "getElementById", "(", "\"MathJax-Color-\"", "+", "this", ".", "spanID", "+", "HTMLCSS", ".", "idPostfix", ")", ";", "if", "(", "color", ")", "{", "line", ".", "appendChild", "(", "color", ")", "}", "var", "span", "=", "this", ".", "HTMLspanElement", "(", ")", ";", "line", ".", "appendChild", "(", "span", ")", ";", "//", "//  If it is last, remove right padding", "//  If it is first, remove left padding and recolor", "//", "if", "(", "state", ".", "last", ")", "{", "span", ".", "style", ".", "paddingRight", "=", "\"\"", "}", "if", "(", "state", ".", "first", "||", "state", ".", "nextIsFirst", ")", "{", "span", ".", "style", ".", "paddingLeft", "=", "\"\"", ";", "if", "(", "color", ")", "{", "this", ".", "HTMLremoveColor", "(", "span", ")", ";", "this", ".", "HTMLhandleColor", "(", "span", ")", "}", "}", "if", "(", "state", ".", "first", "&&", "span", ".", "bbox", ".", "w", "===", "0", ")", "{", "state", ".", "nextIsFirst", "=", "true", "}", "else", "{", "delete", "state", ".", "nextIsFirst", "}", "//", "//  Update bounding box", "//", "this", ".", "HTMLcombineBBoxes", "(", "this", ",", "line", ".", "bbox", ")", ";", "}", "}"], "original_docstring": "*************************************************************  Move an element from its original span to its new location in a split element or the new line's span ", "docstring": {"block_comment": "Move an element from its original span to its new location in a split element or the new line s span", "line_comment": [null, null, "", "Move color and span", "", "", "If it is last, remove right padding", "If it is first, remove left padding and recolor", "", "", "Update bounding box", ""]}, "docstring_tokens": ["Move", "an", "element", "from", "its", "original", "span", "to", "its", "new", "location", "in", "a", "split", "element", "or", "the", "new", "line", "s", "span"], "sample_id": 554, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004431", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (span) {\n      var SPAN = this.HTMLspanElement(), n = 0;\n      var LAST = SPAN; while (LAST.nextMathJaxSpan) {LAST = LAST.nextMathJaxSpan; n++}\n      var SLICE = SPAN.cloneNode(false); LAST.nextMathJaxSpan = SLICE; SLICE.nextMathJaxSpan = null;\n      SLICE.id += \"-MathJax-Continue-\"+n;\n      SLICE.bbox = this.HTMLemptyBBox({});\n      return span.appendChild(SLICE);\n    }", "code_tokens": ["function", "(", "span", ")", "{", "var", "SPAN", "=", "this", ".", "HTMLspanElement", "(", ")", ",", "n", "=", "0", ";", "var", "LAST", "=", "SPAN", ";", "while", "(", "LAST", ".", "nextMathJaxSpan", ")", "{", "LAST", "=", "LAST", ".", "nextMathJaxSpan", ";", "n", "++", "}", "var", "SLICE", "=", "SPAN", ".", "cloneNode", "(", "false", ")", ";", "LAST", ".", "nextMathJaxSpan", "=", "SLICE", ";", "SLICE", ".", "nextMathJaxSpan", "=", "null", ";", "SLICE", ".", "id", "+=", "\"-MathJax-Continue-\"", "+", "n", ";", "SLICE", ".", "bbox", "=", "this", ".", "HTMLemptyBBox", "(", "{", "}", ")", ";", "return", "span", ".", "appendChild", "(", "SLICE", ")", ";", "}"], "original_docstring": "*************************************************************  Create a new span for an element that is split in two Clone the original and update its ID. Link the old span to the new one so we can find it later ", "docstring": {"block_comment": "Create a new span for an element that is split in two Clone the original and update its ID. Link the old span to the new one so we can find it later", "line_comment": null}, "docstring_tokens": ["Create", "a", "new", "span", "for", "an", "element", "that", "is", "split", "in", "two", "Clone", "the", "original", "and", "update", "its", "ID", ".", "Link", "the", "old", "span", "to", "the", "new", "one", "so", "we", "can", "find", "it", "later"], "sample_id": 555, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004432", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (start,end,span,state,values,padding) {\n      //\n      //  Get rid of color, if any (added back in later)\n      //  Create a new span for the slice of the element\n      //  Move the selected portion into the slice\n      //  If it is the last slice\n      //    Remove the original (now empty) span\n      //    Rename the Continue-0 span with the original name (for HTMLspanElement)\n      //    Add back the color\n      //\n      this.HTMLremoveColor();\n      var slice = this.HTMLcreateSliceSpan(span);\n      this.HTMLmoveLine(start,end,slice,state,values);\n      slice.style[padding] = \"\";\n      this.HTMLcombineBBoxes(slice,span.bbox);\n      this.HTMLcleanBBox(slice.bbox);\n      if (end.length === 0) {\n        span = this.HTMLspanElement();\n        span.parentNode.removeChild(span);\n        span.nextMathJaxSpan.id = span.id; var n = 0;\n        while (span = span.nextMathJaxSpan) {\n          var color = this.HTMLhandleColor(span);\n          if (color) {color.id += \"-MathJax-Continue-\"+n; n++}\n        }\n      }\n      return slice;\n    }", "code_tokens": ["function", "(", "start", ",", "end", ",", "span", ",", "state", ",", "values", ",", "padding", ")", "{", "//", "//  Get rid of color, if any (added back in later)", "//  Create a new span for the slice of the element", "//  Move the selected portion into the slice", "//  If it is the last slice", "//    Remove the original (now empty) span", "//    Rename the Continue-0 span with the original name (for HTMLspanElement)", "//    Add back the color", "//", "this", ".", "HTMLremoveColor", "(", ")", ";", "var", "slice", "=", "this", ".", "HTMLcreateSliceSpan", "(", "span", ")", ";", "this", ".", "HTMLmoveLine", "(", "start", ",", "end", ",", "slice", ",", "state", ",", "values", ")", ";", "slice", ".", "style", "[", "padding", "]", "=", "\"\"", ";", "this", ".", "HTMLcombineBBoxes", "(", "slice", ",", "span", ".", "bbox", ")", ";", "this", ".", "HTMLcleanBBox", "(", "slice", ".", "bbox", ")", ";", "if", "(", "end", ".", "length", "===", "0", ")", "{", "span", "=", "this", ".", "HTMLspanElement", "(", ")", ";", "span", ".", "parentNode", ".", "removeChild", "(", "span", ")", ";", "span", ".", "nextMathJaxSpan", ".", "id", "=", "span", ".", "id", ";", "var", "n", "=", "0", ";", "while", "(", "span", "=", "span", ".", "nextMathJaxSpan", ")", "{", "var", "color", "=", "this", ".", "HTMLhandleColor", "(", "span", ")", ";", "if", "(", "color", ")", "{", "color", ".", "id", "+=", "\"-MathJax-Continue-\"", "+", "n", ";", "n", "++", "}", "}", "}", "return", "slice", ";", "}"], "original_docstring": "*************************************************************  Split an element and copy the selected items into the new part ", "docstring": {"block_comment": "Split an element and copy the selected items into the new part", "line_comment": ["", "Get rid of color, if any  added back in later ", "Create a new span for the slice of the element", "Move the selected portion into the slice", "If it is the last slice", "Remove the original  now empty  span", "Rename the Continue 0 span with the original name  for HTMLspanElement ", "Add back the color", ""]}, "docstring_tokens": ["Split", "an", "element", "and", "copy", "the", "selected", "items", "into", "the", "new", "part"], "sample_id": 556, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004433", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (start,end,span,state,values) {\n      var i = start[0], j = end[0];\n      if (i == null) {i = -1}; if (j == null) {j = this.data.length-1}\n      if (i === j && start.length > 1) {\n        //\n        //  If starting and ending in the same element move the subpiece to the new line\n        //\n        this.data[i].HTMLmoveSlice(start.slice(1),end.slice(1),span,state,values,\"paddingLeft\");\n      } else {\n        //\n        //  Otherwise, move the remainder of the initial item\n        //  and any others up to the last one\n        //\n        var last = state.last; state.last = false;\n        while (i < j) {\n          if (this.data[i]) {\n            if (start.length <= 1) {this.data[i].HTMLmoveSpan(span,state,values)}\n              else {this.data[i].HTMLmoveSlice(start.slice(1),[],span,state,values,\"paddingLeft\")}\n          }\n          i++; state.first = false; start = [];\n        }\n        //\n        //  If the last item is complete, move it,\n        //    otherwise move the first part of it up to the split\n        //\n        state.last = last;\n        if (this.data[i]) {\n          if (end.length <= 1) {this.data[i].HTMLmoveSpan(span,state,values)}\n            else {this.data[i].HTMLmoveSlice([],end.slice(1),span,state,values,\"paddingRight\")}\n        }\n      }\n    }", "code_tokens": ["function", "(", "start", ",", "end", ",", "span", ",", "state", ",", "values", ")", "{", "var", "i", "=", "start", "[", "0", "]", ",", "j", "=", "end", "[", "0", "]", ";", "if", "(", "i", "==", "null", ")", "{", "i", "=", "-", "1", "}", ";", "if", "(", "j", "==", "null", ")", "{", "j", "=", "this", ".", "data", ".", "length", "-", "1", "}", "if", "(", "i", "===", "j", "&&", "start", ".", "length", ">", "1", ")", "{", "//", "//  If starting and ending in the same element move the subpiece to the new line", "//", "this", ".", "data", "[", "i", "]", ".", "HTMLmoveSlice", "(", "start", ".", "slice", "(", "1", ")", ",", "end", ".", "slice", "(", "1", ")", ",", "span", ",", "state", ",", "values", ",", "\"paddingLeft\"", ")", ";", "}", "else", "{", "//", "//  Otherwise, move the remainder of the initial item", "//  and any others up to the last one", "//", "var", "last", "=", "state", ".", "last", ";", "state", ".", "last", "=", "false", ";", "while", "(", "i", "<", "j", ")", "{", "if", "(", "this", ".", "data", "[", "i", "]", ")", "{", "if", "(", "start", ".", "length", "<=", "1", ")", "{", "this", ".", "data", "[", "i", "]", ".", "HTMLmoveSpan", "(", "span", ",", "state", ",", "values", ")", "}", "else", "{", "this", ".", "data", "[", "i", "]", ".", "HTMLmoveSlice", "(", "start", ".", "slice", "(", "1", ")", ",", "[", "]", ",", "span", ",", "state", ",", "values", ",", "\"paddingLeft\"", ")", "}", "}", "i", "++", ";", "state", ".", "first", "=", "false", ";", "start", "=", "[", "]", ";", "}", "//", "//  If the last item is complete, move it,", "//    otherwise move the first part of it up to the split", "//", "state", ".", "last", "=", "last", ";", "if", "(", "this", ".", "data", "[", "i", "]", ")", "{", "if", "(", "end", ".", "length", "<=", "1", ")", "{", "this", ".", "data", "[", "i", "]", ".", "HTMLmoveSpan", "(", "span", ",", "state", ",", "values", ")", "}", "else", "{", "this", ".", "data", "[", "i", "]", ".", "HTMLmoveSlice", "(", "[", "]", ",", "end", ".", "slice", "(", "1", ")", ",", "span", ",", "state", ",", "values", ",", "\"paddingRight\"", ")", "}", "}", "}", "}"], "original_docstring": "*************************************************************  Move the selected elements into the new line's span, moving whole items when possible, and parts of ones that are split by a line break. ", "docstring": {"block_comment": "Move the selected elements into the new line s span, moving whole items when possible, and parts of ones that are split by a line break.", "line_comment": ["", "If starting and ending in the same element move the subpiece to the new line", "", "", "Otherwise, move the remainder of the initial item", "and any others up to the last one", "", "", "If the last item is complete, move it,", "otherwise move the first part of it up to the split", ""]}, "docstring_tokens": ["Move", "the", "selected", "elements", "into", "the", "new", "line", "s", "span", "moving", "whole", "items", "when", "possible", "and", "parts", "of", "ones", "that", "are", "split", "by", "a", "line", "break", "."], "sample_id": 557, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004434", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (state,values) {\n      var cur = values, prev = state.values, def = state.VALUES, align;\n      if (state.n === 0)     {align = cur.indentalignfirst || prev.indentalignfirst || def.indentalignfirst}\n      else if (state.isLast) {align = prev.indentalignlast || def.indentalignlast}\n      else                   {align = prev.indentalign || def.indentalign}\n      if (align === MML.INDENTALIGN.INDENTALIGN) {align = prev.indentalign || def.indentalign}\n      if (align === MML.INDENTALIGN.AUTO) {align = (state.isTop ? this.displayAlign : MML.INDENTALIGN.LEFT)}\n      return align;\n    }", "code_tokens": ["function", "(", "state", ",", "values", ")", "{", "var", "cur", "=", "values", ",", "prev", "=", "state", ".", "values", ",", "def", "=", "state", ".", "VALUES", ",", "align", ";", "if", "(", "state", ".", "n", "===", "0", ")", "{", "align", "=", "cur", ".", "indentalignfirst", "||", "prev", ".", "indentalignfirst", "||", "def", ".", "indentalignfirst", "}", "else", "if", "(", "state", ".", "isLast", ")", "{", "align", "=", "prev", ".", "indentalignlast", "||", "def", ".", "indentalignlast", "}", "else", "{", "align", "=", "prev", ".", "indentalign", "||", "def", ".", "indentalign", "}", "if", "(", "align", "===", "MML", ".", "INDENTALIGN", ".", "INDENTALIGN", ")", "{", "align", "=", "prev", ".", "indentalign", "||", "def", ".", "indentalign", "}", "if", "(", "align", "===", "MML", ".", "INDENTALIGN", ".", "AUTO", ")", "{", "align", "=", "(", "state", ".", "isTop", "?", "this", ".", "displayAlign", ":", "MML", ".", "INDENTALIGN", ".", "LEFT", ")", "}", "return", "align", ";", "}"], "original_docstring": "*************************************************************  Get alignment and shift values from the given data ", "docstring": {"block_comment": "Get alignment and shift values from the given data", "line_comment": null}, "docstring_tokens": ["Get", "alignment", "and", "shift", "values", "from", "the", "given", "data"], "sample_id": 558, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004435", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (stack,start,end,state,values,broken) {\n      //\n      //  Create a box for the line, with empty BBox\n      //    fill it with the proper elements,\n      //    and clean up the bbox\n      //\n      line = HTMLCSS.createBox(stack);\n      line.bbox = this.HTMLemptyBBox({});\n      state.first = broken; state.last = true;\n      this.HTMLmoveLine(start,end,line,state,values);\n      this.HTMLcleanBBox(line.bbox);\n      //\n      //  Get the alignment and shift values\n      //\n      var align = this.HTMLgetAlign(state,values),\n          shift = this.HTMLgetShift(state,values,align);\n      //\n      //  Set the Y offset based on previous depth, leading, and current height\n      //\n      if (state.n > 0) {\n        var LHD = HTMLCSS.FONTDATA.baselineskip * state.scale;\n        var leading = (state.values.lineleading == null ? state.VALUES : state.values).lineleading * state.scale;\n        state.Y -= Math.max(LHD,state.d + line.bbox.h + leading);\n      }\n      //\n      //  Place the new line\n      //\n      HTMLCSS.alignBox(line,align,state.Y,shift);\n      //\n      //  Save the values needed for the future\n      //\n      state.d = line.bbox.d; state.values = values; state.n++;\n    }", "code_tokens": ["function", "(", "stack", ",", "start", ",", "end", ",", "state", ",", "values", ",", "broken", ")", "{", "//", "//  Create a box for the line, with empty BBox", "//    fill it with the proper elements,", "//    and clean up the bbox", "//", "line", "=", "HTMLCSS", ".", "createBox", "(", "stack", ")", ";", "line", ".", "bbox", "=", "this", ".", "HTMLemptyBBox", "(", "{", "}", ")", ";", "state", ".", "first", "=", "broken", ";", "state", ".", "last", "=", "true", ";", "this", ".", "HTMLmoveLine", "(", "start", ",", "end", ",", "line", ",", "state", ",", "values", ")", ";", "this", ".", "HTMLcleanBBox", "(", "line", ".", "bbox", ")", ";", "//", "//  Get the alignment and shift values", "//", "var", "align", "=", "this", ".", "HTMLgetAlign", "(", "state", ",", "values", ")", ",", "shift", "=", "this", ".", "HTMLgetShift", "(", "state", ",", "values", ",", "align", ")", ";", "//", "//  Set the Y offset based on previous depth, leading, and current height", "//", "if", "(", "state", ".", "n", ">", "0", ")", "{", "var", "LHD", "=", "HTMLCSS", ".", "FONTDATA", ".", "baselineskip", "*", "state", ".", "scale", ";", "var", "leading", "=", "(", "state", ".", "values", ".", "lineleading", "==", "null", "?", "state", ".", "VALUES", ":", "state", ".", "values", ")", ".", "lineleading", "*", "state", ".", "scale", ";", "state", ".", "Y", "-=", "Math", ".", "max", "(", "LHD", ",", "state", ".", "d", "+", "line", ".", "bbox", ".", "h", "+", "leading", ")", ";", "}", "//", "//  Place the new line", "//", "HTMLCSS", ".", "alignBox", "(", "line", ",", "align", ",", "state", ".", "Y", ",", "shift", ")", ";", "//", "//  Save the values needed for the future", "//", "state", ".", "d", "=", "line", ".", "bbox", ".", "d", ";", "state", ".", "values", "=", "values", ";", "state", ".", "n", "++", ";", "}"], "original_docstring": "*************************************************************  Create a new line and move the required elements into it Position it using proper alignment and indenting ", "docstring": {"block_comment": "Create a new line and move the required elements into it Position it using proper alignment and indenting", "line_comment": ["", "Create a box for the line, with empty BBox", "fill it with the proper elements,", "and clean up the bbox", "", "", "Get the alignment and shift values", "", "", "Set the Y offset based on previous depth, leading, and current height", "", "", "Place the new line", "", "", "Save the values needed for the future", ""]}, "docstring_tokens": ["Create", "a", "new", "line", "and", "move", "the", "required", "elements", "into", "it", "Position", "it", "using", "proper", "alignment", "and", "indenting"], "sample_id": 559, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004436", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (info,state) {\n      if (this.isToken) {return false}  // FIXME: handle breaking of token elements\n      if (this.isEmbellished()) {\n        info.embellished = this;\n        return this.CoreMO().HTMLbetterBreak(info,state);\n      }\n      if (this.linebreakContainer) {return false}\n      //\n      //  Get the current breakpoint position and other data\n      //\n      var index = info.index.slice(0), i = info.index.shift(),\n          m = this.data.length, W, w, scanW, broken = (info.index.length > 0), better = false;\n      if (i == null) {i = -1}; if (!broken) {i++; info.W += info.w; info.w = 0}\n      scanW = info.scanW = info.W; info.nest++;\n      //\n      //  Look through the line for breakpoints,\n      //    (as long as we are not too far past the breaking width)\n      //\n      while (i < m && info.scanW < 1.33*HTMLCSS.linebreakWidth) {\n        if (this.data[i]) {\n          if (this.data[i].HTMLbetterBreak(info,state)) {\n            better = true; index = [i].concat(info.index); W = info.W; w = info.w;\n            if (info.penalty === PENALTY.newline) {\n              info.index = index;\n              if (info.nest) {info.nest--}\n              return true;\n            }\n          }\n          scanW = (broken ? info.scanW : this.HTMLaddWidth(i,info,scanW));\n        }\n        info.index = []; i++; broken = false;\n      }\n      if (info.nest) {info.nest--}\n      info.index = index;\n      if (better) {info.W = W; info.w = w}\n      return better;\n    }", "code_tokens": ["function", "(", "info", ",", "state", ")", "{", "if", "(", "this", ".", "isToken", ")", "{", "return", "false", "}", "// FIXME: handle breaking of token elements", "if", "(", "this", ".", "isEmbellished", "(", ")", ")", "{", "info", ".", "embellished", "=", "this", ";", "return", "this", ".", "CoreMO", "(", ")", ".", "HTMLbetterBreak", "(", "info", ",", "state", ")", ";", "}", "if", "(", "this", ".", "linebreakContainer", ")", "{", "return", "false", "}", "//", "//  Get the current breakpoint position and other data", "//", "var", "index", "=", "info", ".", "index", ".", "slice", "(", "0", ")", ",", "i", "=", "info", ".", "index", ".", "shift", "(", ")", ",", "m", "=", "this", ".", "data", ".", "length", ",", "W", ",", "w", ",", "scanW", ",", "broken", "=", "(", "info", ".", "index", ".", "length", ">", "0", ")", ",", "better", "=", "false", ";", "if", "(", "i", "==", "null", ")", "{", "i", "=", "-", "1", "}", ";", "if", "(", "!", "broken", ")", "{", "i", "++", ";", "info", ".", "W", "+=", "info", ".", "w", ";", "info", ".", "w", "=", "0", "}", "scanW", "=", "info", ".", "scanW", "=", "info", ".", "W", ";", "info", ".", "nest", "++", ";", "//", "//  Look through the line for breakpoints,", "//    (as long as we are not too far past the breaking width)", "//", "while", "(", "i", "<", "m", "&&", "info", ".", "scanW", "<", "1.33", "*", "HTMLCSS", ".", "linebreakWidth", ")", "{", "if", "(", "this", ".", "data", "[", "i", "]", ")", "{", "if", "(", "this", ".", "data", "[", "i", "]", ".", "HTMLbetterBreak", "(", "info", ",", "state", ")", ")", "{", "better", "=", "true", ";", "index", "=", "[", "i", "]", ".", "concat", "(", "info", ".", "index", ")", ";", "W", "=", "info", ".", "W", ";", "w", "=", "info", ".", "w", ";", "if", "(", "info", ".", "penalty", "===", "PENALTY", ".", "newline", ")", "{", "info", ".", "index", "=", "index", ";", "if", "(", "info", ".", "nest", ")", "{", "info", ".", "nest", "--", "}", "return", "true", ";", "}", "}", "scanW", "=", "(", "broken", "?", "info", ".", "scanW", ":", "this", ".", "HTMLaddWidth", "(", "i", ",", "info", ",", "scanW", ")", ")", ";", "}", "info", ".", "index", "=", "[", "]", ";", "i", "++", ";", "broken", "=", "false", ";", "}", "if", "(", "info", ".", "nest", ")", "{", "info", ".", "nest", "--", "}", "info", ".", "index", "=", "index", ";", "if", "(", "better", ")", "{", "info", ".", "W", "=", "W", ";", "info", ".", "w", "=", "w", "}", "return", "better", ";", "}"], "original_docstring": "*************************************************************  Locate the next linebreak that is better than the current one ", "docstring": {"block_comment": "Locate the next linebreak that is better than the current one", "line_comment": [null, "", "Get the current breakpoint position and other data", "", "", "Look through the line for breakpoints,", null, ""]}, "docstring_tokens": ["Locate", "the", "next", "linebreak", "that", "is", "better", "than", "the", "current", "one"], "sample_id": 560, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004437", "repo": "dongli/mathjax-rails", "path": "vendor/mathjax/unpacked/jax/output/HTML-CSS/autoload/multiline.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (span) {\n\n      //\n      //  Find the parent element and mark it as multiline\n      //\n      var parent = this;\n      while (parent.inferred || (parent.parent && parent.parent.type === \"mrow\" &&\n             parent.parent.data.length === 1)) {parent = parent.parent}\n      var isTop = ((parent.type === \"math\" && parent.Get(\"display\") === \"block\") ||\n                    parent.type === \"mtd\");\n      parent.isMultiline = true;\n      \n      //\n      //  Default values for the line-breaking parameters\n      //\n      var VALUES = this.getValues(\n        \"linebreak\",\"linebreakstyle\",\"lineleading\",\"linebreakmultchar\",\n        \"indentalign\",\"indentshift\",\n        \"indentalignfirst\",\"indentshiftfirst\",\n        \"indentalignlast\",\"indentshiftlast\"\n      );\n      if (VALUES.linebreakstyle === MML.LINEBREAKSTYLE.INFIXLINEBREAKSTYLE) \n        {VALUES.linebreakstyle = this.Get(\"infixlinebreakstyle\")}\n      VALUES.lineleading = HTMLCSS.length2em(VALUES.lineleading,1,0.5);\n\n      //\n      //  Remove old color and break the span at its best line breaks\n      //\n      this.HTMLremoveColor(span);\n      var stack = HTMLCSS.createStack(span);\n      this.HTMLgetScale();\n      var state = {\n            n: 0, Y: 0,\n            scale: this.scale || 1,\n            isTop: isTop,\n            values: {},\n            VALUES: VALUES\n          },\n          align = this.HTMLgetAlign(state,{}),\n          shift = this.HTMLgetShift(state,{},align),\n          start = [],\n          end = {\n            index:[], penalty:PENALTY.nobreak,\n            w:0, W:shift, shift:shift, scanW:shift,\n            nest: 0\n          },\n          broken = false;\n          \n      while (this.HTMLbetterBreak(end,state) && \n             (end.scanW >= HTMLCSS.linebreakWidth || end.penalty === PENALTY.newline)) {\n        this.HTMLaddLine(stack,start,end.index,state,end.values,broken);\n        start = end.index.slice(0); broken = true;\n        align = this.HTMLgetAlign(state,end.values);\n        shift = this.HTMLgetShift(state,end.values,align);\n        if (align === MML.INDENTALIGN.CENTER) {shift = 0}\n        end.W = end.shift = end.scanW = shift; end.penalty = PENALTY.nobreak;\n      }\n      state.isLast = true;\n      this.HTMLaddLine(stack,start,[],state,ENDVALUES,broken);\n\n      //\n      //  Make top-level spans 100% wide.\n      //  Finish up the space and add the color again\n      //\n      if (isTop) {\n        stack.style.width = \"100%\";\n        if (parent.type === \"math\") {span.bbox.width = \"100%\"}\n      }\n      this.HTMLhandleSpace(span);\n      this.HTMLhandleColor(span);\n      span.bbox.isMultiline = true;\n\n      return span;\n    }", "code_tokens": ["function", "(", "span", ")", "{", "//", "//  Find the parent element and mark it as multiline", "//", "var", "parent", "=", "this", ";", "while", "(", "parent", ".", "inferred", "||", "(", "parent", ".", "parent", "&&", "parent", ".", "parent", ".", "type", "===", "\"mrow\"", "&&", "parent", ".", "parent", ".", "data", ".", "length", "===", "1", ")", ")", "{", "parent", "=", "parent", ".", "parent", "}", "var", "isTop", "=", "(", "(", "parent", ".", "type", "===", "\"math\"", "&&", "parent", ".", "Get", "(", "\"display\"", ")", "===", "\"block\"", ")", "||", "parent", ".", "type", "===", "\"mtd\"", ")", ";", "parent", ".", "isMultiline", "=", "true", ";", "//", "//  Default values for the line-breaking parameters", "//", "var", "VALUES", "=", "this", ".", "getValues", "(", "\"linebreak\"", ",", "\"linebreakstyle\"", ",", "\"lineleading\"", ",", "\"linebreakmultchar\"", ",", "\"indentalign\"", ",", "\"indentshift\"", ",", "\"indentalignfirst\"", ",", "\"indentshiftfirst\"", ",", "\"indentalignlast\"", ",", "\"indentshiftlast\"", ")", ";", "if", "(", "VALUES", ".", "linebreakstyle", "===", "MML", ".", "LINEBREAKSTYLE", ".", "INFIXLINEBREAKSTYLE", ")", "{", "VALUES", ".", "linebreakstyle", "=", "this", ".", "Get", "(", "\"infixlinebreakstyle\"", ")", "}", "VALUES", ".", "lineleading", "=", "HTMLCSS", ".", "length2em", "(", "VALUES", ".", "lineleading", ",", "1", ",", "0.5", ")", ";", "//", "//  Remove old color and break the span at its best line breaks", "//", "this", ".", "HTMLremoveColor", "(", "span", ")", ";", "var", "stack", "=", "HTMLCSS", ".", "createStack", "(", "span", ")", ";", "this", ".", "HTMLgetScale", "(", ")", ";", "var", "state", "=", "{", "n", ":", "0", ",", "Y", ":", "0", ",", "scale", ":", "this", ".", "scale", "||", "1", ",", "isTop", ":", "isTop", ",", "values", ":", "{", "}", ",", "VALUES", ":", "VALUES", "}", ",", "align", "=", "this", ".", "HTMLgetAlign", "(", "state", ",", "{", "}", ")", ",", "shift", "=", "this", ".", "HTMLgetShift", "(", "state", ",", "{", "}", ",", "align", ")", ",", "start", "=", "[", "]", ",", "end", "=", "{", "index", ":", "[", "]", ",", "penalty", ":", "PENALTY", ".", "nobreak", ",", "w", ":", "0", ",", "W", ":", "shift", ",", "shift", ":", "shift", ",", "scanW", ":", "shift", ",", "nest", ":", "0", "}", ",", "broken", "=", "false", ";", "while", "(", "this", ".", "HTMLbetterBreak", "(", "end", ",", "state", ")", "&&", "(", "end", ".", "scanW", ">=", "HTMLCSS", ".", "linebreakWidth", "||", "end", ".", "penalty", "===", "PENALTY", ".", "newline", ")", ")", "{", "this", ".", "HTMLaddLine", "(", "stack", ",", "start", ",", "end", ".", "index", ",", "state", ",", "end", ".", "values", ",", "broken", ")", ";", "start", "=", "end", ".", "index", ".", "slice", "(", "0", ")", ";", "broken", "=", "true", ";", "align", "=", "this", ".", "HTMLgetAlign", "(", "state", ",", "end", ".", "values", ")", ";", "shift", "=", "this", ".", "HTMLgetShift", "(", "state", ",", "end", ".", "values", ",", "align", ")", ";", "if", "(", "align", "===", "MML", ".", "INDENTALIGN", ".", "CENTER", ")", "{", "shift", "=", "0", "}", "end", ".", "W", "=", "end", ".", "shift", "=", "end", ".", "scanW", "=", "shift", ";", "end", ".", "penalty", "=", "PENALTY", ".", "nobreak", ";", "}", "state", ".", "isLast", "=", "true", ";", "this", ".", "HTMLaddLine", "(", "stack", ",", "start", ",", "[", "]", ",", "state", ",", "ENDVALUES", ",", "broken", ")", ";", "//", "//  Make top-level spans 100% wide.", "//  Finish up the space and add the color again", "//", "if", "(", "isTop", ")", "{", "stack", ".", "style", ".", "width", "=", "\"100%\"", ";", "if", "(", "parent", ".", "type", "===", "\"math\"", ")", "{", "span", ".", "bbox", ".", "width", "=", "\"100%\"", "}", "}", "this", ".", "HTMLhandleSpace", "(", "span", ")", ";", "this", ".", "HTMLhandleColor", "(", "span", ")", ";", "span", ".", "bbox", ".", "isMultiline", "=", "true", ";", "return", "span", ";", "}"], "original_docstring": "*************************************************************  Handle breaking an mrow into separate lines ", "docstring": {"block_comment": "Handle breaking an mrow into separate lines", "line_comment": ["", "Find the parent element and mark it as multiline", "", "", "Default values for the line breaking parameters", "", "", "Remove old color and break the span at its best line breaks", "", "", "Make top level spans 100  wide.", "Finish up the space and add the color again", ""]}, "docstring_tokens": ["Handle", "breaking", "an", "mrow", "into", "separate", "lines"], "sample_id": 561, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004438", "repo": "aqt01/math_problems", "path": "node_modules/yui/paginator-url/paginator-url.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function (page) {\n        var pageUrl = this.get('pageUrl');\n        if (pageUrl) {\n            return Y.Lang.sub(pageUrl, {\n                page: page || this.get('page')\n            });\n        }\n        return null;\n    }", "code_tokens": ["function", "(", "page", ")", "{", "var", "pageUrl", "=", "this", ".", "get", "(", "'pageUrl'", ")", ";", "if", "(", "pageUrl", ")", "{", "return", "Y", ".", "Lang", ".", "sub", "(", "pageUrl", ",", "{", "page", ":", "page", "||", "this", ".", "get", "(", "'page'", ")", "}", ")", ";", "}", "return", "null", ";", "}"], "original_docstring": "\nReturns a formated URL for the provided page number.\n@method formatPageUrl\n@param {Number} [page] Page value to be used in the formatted URL. If empty, page will be the value of the `page` ATTRS.\n@return {String | null} Formatted URL for the page or `null` if there is not a `pageUrl` set.\n", "docstring": {"block_comment": "Returns a formated URL for the provided page number.", "line_comment": null}, "docstring_tokens": ["Returns", "a", "formated", "URL", "for", "the", "provided", "page", "number", "."], "sample_id": 562, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004438", "repo": "aqt01/math_problems", "path": "node_modules/yui/paginator-url/paginator-url.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function (page) {\n        var pageUrl = this.get('pageUrl');\n        if (pageUrl) {\n            return Y.Lang.sub(pageUrl, {\n                page: page || this.get('page')\n            });\n        }\n        return null;\n    }", "code_tokens": ["function", "(", "page", ")", "{", "var", "pageUrl", "=", "this", ".", "get", "(", "'pageUrl'", ")", ";", "if", "(", "pageUrl", ")", "{", "return", "Y", ".", "Lang", ".", "sub", "(", "pageUrl", ",", "{", "page", ":", "page", "||", "this", ".", "get", "(", "'page'", ")", "}", ")", ";", "}", "return", "null", ";", "}"], "original_docstring": "\nReturns a formated URL for the provided page number.\n@method formatPageUrl\n@param {Number} [page] Page value to be used in the formatted URL. If empty, page will be the value of the `page` ATTRS.\n@return {String | null} Formatted URL for the page or `null` if there is not a `pageUrl` set.\n", "docstring": {"block_comment": "Returns a formated URL for the provided page number.", "line_comment": null}, "docstring_tokens": ["Page", "value", "to", "be", "used", "in", "the", "formatted", "URL", ".", "If", "empty", "page", "will", "be", "the", "value", "of", "the", "page", "ATTRS", "."], "sample_id": 562, "prompt_tokens": ["<javascript>", "<param>", "page"], "comment_type": "param", "sentence_id": 1}
{"id": "21004438", "repo": "aqt01/math_problems", "path": "node_modules/yui/paginator-url/paginator-url.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function (page) {\n        var pageUrl = this.get('pageUrl');\n        if (pageUrl) {\n            return Y.Lang.sub(pageUrl, {\n                page: page || this.get('page')\n            });\n        }\n        return null;\n    }", "code_tokens": ["function", "(", "page", ")", "{", "var", "pageUrl", "=", "this", ".", "get", "(", "'pageUrl'", ")", ";", "if", "(", "pageUrl", ")", "{", "return", "Y", ".", "Lang", ".", "sub", "(", "pageUrl", ",", "{", "page", ":", "page", "||", "this", ".", "get", "(", "'page'", ")", "}", ")", ";", "}", "return", "null", ";", "}"], "original_docstring": "\nReturns a formated URL for the provided page number.\n@method formatPageUrl\n@param {Number} [page] Page value to be used in the formatted URL. If empty, page will be the value of the `page` ATTRS.\n@return {String | null} Formatted URL for the page or `null` if there is not a `pageUrl` set.\n", "docstring": {"block_comment": "Returns a formated URL for the provided page number.", "line_comment": null}, "docstring_tokens": ["|", "null", "}", "Formatted", "URL", "for", "the", "page", "or", "null", "if", "there", "is", "not", "a", "pageUrl", "set", "."], "sample_id": 562, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004439", "repo": "aqt01/math_problems", "path": "node_modules/yui/paginator-url/paginator-url.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function () {\n        return (this.hasNextPage() && this.formatPageUrl(this.get('page') + 1)) || null;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "(", "this", ".", "hasNextPage", "(", ")", "&&", "this", ".", "formatPageUrl", "(", "this", ".", "get", "(", "'page'", ")", "+", "1", ")", ")", "||", "null", ";", "}"], "original_docstring": "\nReturns a formated URL for the next page.\n@method nextPageUrl\n@return {String | null} Formatted URL for the next page or `null` if there is no next page.\n", "docstring": {"block_comment": "Returns a formated URL for the next page.", "line_comment": null}, "docstring_tokens": ["Returns", "a", "formated", "URL", "for", "the", "next", "page", "."], "sample_id": 563, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004439", "repo": "aqt01/math_problems", "path": "node_modules/yui/paginator-url/paginator-url.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function () {\n        return (this.hasNextPage() && this.formatPageUrl(this.get('page') + 1)) || null;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "(", "this", ".", "hasNextPage", "(", ")", "&&", "this", ".", "formatPageUrl", "(", "this", ".", "get", "(", "'page'", ")", "+", "1", ")", ")", "||", "null", ";", "}"], "original_docstring": "\nReturns a formated URL for the next page.\n@method nextPageUrl\n@return {String | null} Formatted URL for the next page or `null` if there is no next page.\n", "docstring": {"block_comment": "Returns a formated URL for the next page.", "line_comment": null}, "docstring_tokens": ["|", "null", "}", "Formatted", "URL", "for", "the", "next", "page", "or", "null", "if", "there", "is", "no", "next", "page", "."], "sample_id": 563, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004440", "repo": "aqt01/math_problems", "path": "node_modules/yui/paginator-url/paginator-url.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function () {\n        return (this.hasPrevPage() && this.formatPageUrl(this.get('page') - 1)) || null;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "(", "this", ".", "hasPrevPage", "(", ")", "&&", "this", ".", "formatPageUrl", "(", "this", ".", "get", "(", "'page'", ")", "-", "1", ")", ")", "||", "null", ";", "}"], "original_docstring": "\nReturns a formated URL for the previous page.\n@method prevPageUrl\n@return {String | null} Formatted URL for the previous page, or `null` if there is no previous page.\n", "docstring": {"block_comment": "Returns a formated URL for the previous page.", "line_comment": null}, "docstring_tokens": ["Returns", "a", "formated", "URL", "for", "the", "previous", "page", "."], "sample_id": 564, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004440", "repo": "aqt01/math_problems", "path": "node_modules/yui/paginator-url/paginator-url.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function () {\n        return (this.hasPrevPage() && this.formatPageUrl(this.get('page') - 1)) || null;\n    }", "code_tokens": ["function", "(", ")", "{", "return", "(", "this", ".", "hasPrevPage", "(", ")", "&&", "this", ".", "formatPageUrl", "(", "this", ".", "get", "(", "'page'", ")", "-", "1", ")", ")", "||", "null", ";", "}"], "original_docstring": "\nReturns a formated URL for the previous page.\n@method prevPageUrl\n@return {String | null} Formatted URL for the previous page, or `null` if there is no previous page.\n", "docstring": {"block_comment": "Returns a formated URL for the previous page.", "line_comment": null}, "docstring_tokens": ["|", "null", "}", "Formatted", "URL", "for", "the", "previous", "page", "or", "null", "if", "there", "is", "no", "previous", "page", "."], "sample_id": 564, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004441", "repo": "megadruck/Shopware-Test1", "path": "themes/Backend/ExtJs/backend/product_feed/view/feed/tab/article.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function () {\n        return Ext.create('Ext.toolbar.Toolbar', {\n                    dock:'top',\n                    ui:'shopware-ui',\n                    items:[\n                        '->',\n                        {\n                            xtype:'textfield',\n                            name:'searchfield',\n                            action:'searchArticles',\n                            width:170,\n                            cls:'searchfield',\n                            enableKeyEvents:true,\n                            checkChangeBuffer:500,\n                            emptyText:'{s name=tab/article/search}Search...{/s}'\n                        },\n                        { xtype:'tbspacer', width:6 }\n                    ]\n                }\n        );\n    }", "code_tokens": ["function", "(", ")", "{", "return", "Ext", ".", "create", "(", "'Ext.toolbar.Toolbar'", ",", "{", "dock", ":", "'top'", ",", "ui", ":", "'shopware-ui'", ",", "items", ":", "[", "'->'", ",", "{", "xtype", ":", "'textfield'", ",", "name", ":", "'searchfield'", ",", "action", ":", "'searchArticles'", ",", "width", ":", "170", ",", "cls", ":", "'searchfield'", ",", "enableKeyEvents", ":", "true", ",", "checkChangeBuffer", ":", "500", ",", "emptyText", ":", "'{s name=tab/article/search}Search...{/s}'", "}", ",", "{", "xtype", ":", "'tbspacer'", ",", "width", ":", "6", "}", "]", "}", ")", ";", "}"], "original_docstring": "\nCreates the grid toolbar with the add and delete button\n\n@return [Ext.toolbar.Toolbar] grid toolbar\n", "docstring": {"block_comment": "Creates the grid toolbar with the add and delete button", "line_comment": null}, "docstring_tokens": ["Creates", "the", "grid", "toolbar", "with", "the", "add", "and", "delete", "button"], "sample_id": 565, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004442", "repo": "megadruck/Shopware-Test1", "path": "themes/Backend/ExtJs/backend/product_feed/view/feed/tab/article.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function () {\n        var me = this;\n        return [{\n            xtype:'ddselector',\n            fromTitle: '{s name=tab/title/article_available}Articles available{/s}',\n            toTitle: '{s name=tab/title/article_chosen}Blocked articles{/s}',\n            fromStore:me.articleStore,\n            buttons:[ 'add','remove' ],\n            gridHeight: 270,\n            selectedItems: me.record.getArticles(),\n            fromFieldDockedItems: [ me.getToolbar() ],\n            buttonsText: {\n                add: \"{s name=tab/article/button_add}Add{/s}\",\n                remove: \"{s name=tab/article/button_remove}Remove{/s}\"\n            }\n        }];\n    }", "code_tokens": ["function", "(", ")", "{", "var", "me", "=", "this", ";", "return", "[", "{", "xtype", ":", "'ddselector'", ",", "fromTitle", ":", "'{s name=tab/title/article_available}Articles available{/s}'", ",", "toTitle", ":", "'{s name=tab/title/article_chosen}Blocked articles{/s}'", ",", "fromStore", ":", "me", ".", "articleStore", ",", "buttons", ":", "[", "'add'", ",", "'remove'", "]", ",", "gridHeight", ":", "270", ",", "selectedItems", ":", "me", ".", "record", ".", "getArticles", "(", ")", ",", "fromFieldDockedItems", ":", "[", "me", ".", "getToolbar", "(", ")", "]", ",", "buttonsText", ":", "{", "add", ":", "\"{s name=tab/article/button_add}Add{/s}\"", ",", "remove", ":", "\"{s name=tab/article/button_remove}Remove{/s}\"", "}", "}", "]", ";", "}"], "original_docstring": "\ncreates all fields for the tab\n", "docstring": {"block_comment": "creates all fields for the tab", "line_comment": null}, "docstring_tokens": ["creates", "all", "fields", "for", "the", "tab"], "sample_id": 566, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004443", "repo": "megadruck/Shopware-Test1", "path": "themes/Backend/ExtJs/backend/product_feed/view/feed/tab/article.js", "language": "JavaScript", "license": "agpl-3.0", "func_name": "", "code": "function () {\n        var me = this;\n\n        me.items = me.getItems();\n        me.callParent(arguments);\n    }", "code_tokens": ["function", "(", ")", "{", "var", "me", "=", "this", ";", "me", ".", "items", "=", "me", ".", "getItems", "(", ")", ";", "me", ".", "callParent", "(", "arguments", ")", ";", "}"], "original_docstring": "\nInitialize the Shopware.apps.ProductFeed.view.feed.tab.Footer and defines the necessary\ndefault configuration\n", "docstring": {"block_comment": "Initialize the Shopware.apps.ProductFeed.view.feed.tab.Footer and defines the necessary \ndefault configuration", "line_comment": null}, "docstring_tokens": ["Initialize", "the", "Shopware", ".", "apps", ".", "ProductFeed", ".", "view", ".", "feed", ".", "tab", ".", "Footer", "and", "defines", "the", "necessary", "default", "configuration"], "sample_id": 567, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004444", "repo": "labase/activnce", "path": "main/static/yui/3.13.0/datasource-jsonschema/datasource-jsonschema.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function(e) {\n        var data = e.data && (e.data.responseText || e.data),\n            schema = this.get('schema'),\n            payload = e.details[0];\n\n        payload.response = Y.DataSchema.JSON.apply.call(this, schema, data) || {\n            meta: {},\n            results: data\n        };\n\n        this.get(\"host\").fire(\"response\", payload);\n\n        return new Y.Do.Halt(\"DataSourceJSONSchema plugin halted _defDataFn\");\n    }", "code_tokens": ["function", "(", "e", ")", "{", "var", "data", "=", "e", ".", "data", "&&", "(", "e", ".", "data", ".", "responseText", "||", "e", ".", "data", ")", ",", "schema", "=", "this", ".", "get", "(", "'schema'", ")", ",", "payload", "=", "e", ".", "details", "[", "0", "]", ";", "payload", ".", "response", "=", "Y", ".", "DataSchema", ".", "JSON", ".", "apply", ".", "call", "(", "this", ",", "schema", ",", "data", ")", "||", "{", "meta", ":", "{", "}", ",", "results", ":", "data", "}", ";", "this", ".", "get", "(", "\"host\"", ")", ".", "fire", "(", "\"response\"", ",", "payload", ")", ";", "return", "new", "Y", ".", "Do", ".", "Halt", "(", "\"DataSourceJSONSchema plugin halted _defDataFn\"", ")", ";", "}"], "original_docstring": "\nParses raw data into a normalized response. To accommodate XHR responses,\nwill first look for data in data.responseText. Otherwise will just work\nwith data.\n\n@method _beforeDefDataFn\n@param tId {Number} Unique transaction ID.\n@param request {Object} The request.\n@param callback {Object} The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n@param data {Object} Raw data.\n@protected\n", "docstring": {"block_comment": "Parses raw data into a normalized response. To accommodate XHR responses, \nwill first look for data in data.responseText. Otherwise will just work \nwith data.", "line_comment": null}, "docstring_tokens": ["Parses", "raw", "data", "into", "a", "normalized", "response", ".", "To", "accommodate", "XHR", "responses", "will", "first", "look", "for", "data", "in", "data", ".", "responseText", ".", "Otherwise", "will", "just", "work", "with", "data", "."], "sample_id": 568, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004446", "repo": "labase/activnce", "path": "main/static/yui/3.13.0/datasource-jsonschema/datasource-jsonschema.js", "language": "JavaScript", "license": "gpl-2.0", "func_name": "", "code": "function() {\n    DataSourceJSONSchema.superclass.constructor.apply(this, arguments);\n}", "code_tokens": ["function", "(", ")", "{", "DataSourceJSONSchema", ".", "superclass", ".", "constructor", ".", "apply", "(", "this", ",", "arguments", ")", ";", "}"], "original_docstring": "\nExtends DataSource with schema-parsing on JSON data.\n\n@module datasource\n@submodule datasource-jsonschema\n \nAdds schema-parsing to the DataSource Utility.\n@class DataSourceJSONSchema\n@extends Plugin.Base\n", "docstring": {"block_comment": "Extends DataSource with schema parsing on JSON data.", "line_comment": null}, "docstring_tokens": ["Extends", "DataSource", "with", "schema", "parsing", "on", "JSON", "data", "."], "sample_id": 569, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004482", "repo": "traintracks/javascript-sdk", "path": "javascript/product/sdk.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n              if (typeof XDomainRequest !== \"undefined\") {\n                // We're using IE8/9\n                return new XDomainRequest();\n              }\n              return new XMLHttpRequest();\n            }", "code_tokens": ["function", "(", ")", "{", "if", "(", "typeof", "XDomainRequest", "!==", "\"undefined\"", ")", "{", "// We're using IE8/9", "return", "new", "XDomainRequest", "(", ")", ";", "}", "return", "new", "XMLHttpRequest", "(", ")", ";", "}"], "original_docstring": "Obtain a browser-specific XHR object", "docstring": {"block_comment": "Obtain a browser specific XHR object", "line_comment": ["We re using IE8 9"]}, "docstring_tokens": ["Obtain", "a", "browser", "specific", "XHR", "object"], "sample_id": 570, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004483", "repo": "traintracks/javascript-sdk", "path": "javascript/product/sdk.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(eventType, event) {\n            if (!arguments.length) {\n                throw new Error(\"No arguments!\");\n            }\n            \n            if (!eventType || typeof eventType !== 'string') {\n                throw new Error('Event type is required and should be string');\n            }\n\n            var data = {\n                clientTimestamp: toUTCTimestamp(new Date()),\n                device: _device,\n                userId: _userId,\n                userName: _userName,\n                sessionId: _sessionId,\n                build: _build,\n                eventType: eventType,\n                data: event\n            };\n\n            if (_latitude && _longitude) {\n                var lat = parseFloat(_latitude);\n                var lon = parseFloat(_longitude);\n                if (!isNaN(lat) && !isNaN(lon)) {\n                    data.location = {\n                        lat: lat,\n                        lon: lon\n                    };\n                }\n            }\n\n            return {level: function(l) {\n                if (_print && typeof console !== \"undefined\" && l !== 'PAGE') {\n                  try {\n                    console[l.toLowerCase()].call(console, data);\n                  } catch (ex) {\n                    // IE compat fix\n                    console.log(data);\n                  }\n                }\n\n                return {send: function() {\n                    if (!(typeof data.data === 'object' && !(data.data instanceof Array) && data.data !== null)) {\n                        _warn(eventType + ' won\\'t be sent since event is not an object');\n                        return;\n                    }\n\n                    var cache = [];\n                    var serialized = JSON.stringify(data, function(key, value) {\n                        // cross-browser indexOf fix\n                        var _indexOf = function(array, obj) {\n                            for (var i = 0; i < array.length; i++) {\n                                if (obj === array[i]) {\n                                    return i;\n                                }\n                            }\n                            return -1;\n                        };\n\n                        if (typeof value === \"undefined\") {\n                            return \"undefined\";\n                        } else if (typeof value === \"object\" && value !== null) {\n                            if (_indexOf(cache, value) !== -1) {\n                              // We've seen this object before;\n                              // return a placeholder instead to prevent\n                              // cycles\n                              return \"<?>\";\n                            }\n                            cache.push(value);\n                        }\n                        return value;\n                    });\n\n                    if (_active) {\n                        _backlog.push(serialized);\n                    } else {\n                        _apiCall(_token, _secret, '[' + serialized + ']');\n                    }\n                }};\n            }};\n        }", "code_tokens": ["function", "(", "eventType", ",", "event", ")", "{", "if", "(", "!", "arguments", ".", "length", ")", "{", "throw", "new", "Error", "(", "\"No arguments!\"", ")", ";", "}", "if", "(", "!", "eventType", "||", "typeof", "eventType", "!==", "'string'", ")", "{", "throw", "new", "Error", "(", "'Event type is required and should be string'", ")", ";", "}", "var", "data", "=", "{", "clientTimestamp", ":", "toUTCTimestamp", "(", "new", "Date", "(", ")", ")", ",", "device", ":", "_device", ",", "userId", ":", "_userId", ",", "userName", ":", "_userName", ",", "sessionId", ":", "_sessionId", ",", "build", ":", "_build", ",", "eventType", ":", "eventType", ",", "data", ":", "event", "}", ";", "if", "(", "_latitude", "&&", "_longitude", ")", "{", "var", "lat", "=", "parseFloat", "(", "_latitude", ")", ";", "var", "lon", "=", "parseFloat", "(", "_longitude", ")", ";", "if", "(", "!", "isNaN", "(", "lat", ")", "&&", "!", "isNaN", "(", "lon", ")", ")", "{", "data", ".", "location", "=", "{", "lat", ":", "lat", ",", "lon", ":", "lon", "}", ";", "}", "}", "return", "{", "level", ":", "function", "(", "l", ")", "{", "if", "(", "_print", "&&", "typeof", "console", "!==", "\"undefined\"", "&&", "l", "!==", "'PAGE'", ")", "{", "try", "{", "console", "[", "l", ".", "toLowerCase", "(", ")", "]", ".", "call", "(", "console", ",", "data", ")", ";", "}", "catch", "(", "ex", ")", "{", "// IE compat fix", "console", ".", "log", "(", "data", ")", ";", "}", "}", "return", "{", "send", ":", "function", "(", ")", "{", "if", "(", "!", "(", "typeof", "data", ".", "data", "===", "'object'", "&&", "!", "(", "data", ".", "data", "instanceof", "Array", ")", "&&", "data", ".", "data", "!==", "null", ")", ")", "{", "_warn", "(", "eventType", "+", "' won\\'t be sent since event is not an object'", ")", ";", "return", ";", "}", "var", "cache", "=", "[", "]", ";", "var", "serialized", "=", "JSON", ".", "stringify", "(", "data", ",", "function", "(", "key", ",", "value", ")", "{", "// cross-browser indexOf fix", "var", "_indexOf", "=", "function", "(", "array", ",", "obj", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "array", ".", "length", ";", "i", "++", ")", "{", "if", "(", "obj", "===", "array", "[", "i", "]", ")", "{", "return", "i", ";", "}", "}", "return", "-", "1", ";", "}", ";", "if", "(", "typeof", "value", "===", "\"undefined\"", ")", "{", "return", "\"undefined\"", ";", "}", "else", "if", "(", "typeof", "value", "===", "\"object\"", "&&", "value", "!==", "null", ")", "{", "if", "(", "_indexOf", "(", "cache", ",", "value", ")", "!==", "-", "1", ")", "{", "// We've seen this object before;", "// return a placeholder instead to prevent", "// cycles", "return", "\"<?>\"", ";", "}", "cache", ".", "push", "(", "value", ")", ";", "}", "return", "value", ";", "}", ")", ";", "if", "(", "_active", ")", "{", "_backlog", ".", "push", "(", "serialized", ")", ";", "}", "else", "{", "_apiCall", "(", "_token", ",", "_secret", ",", "'['", "+", "serialized", "+", "']'", ")", ";", "}", "}", "}", ";", "}", "}", ";", "}"], "original_docstring": "Single arg stops the compiler arity warning", "docstring": {"block_comment": "Single arg stops the compiler arity warning", "line_comment": ["IE compat fix", "cross browser indexOf fix", "We ve seen this object before ", "return a placeholder instead to prevent", "cycles"]}, "docstring_tokens": ["Single", "arg", "stops", "the", "compiler", "arity", "warning"], "sample_id": 571, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004484", "repo": "traintracks/javascript-sdk", "path": "javascript/product/sdk.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(array, obj) {\n                            for (var i = 0; i < array.length; i++) {\n                                if (obj === array[i]) {\n                                    return i;\n                                }\n                            }\n                            return -1;\n                        }", "code_tokens": ["function", "(", "array", ",", "obj", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "array", ".", "length", ";", "i", "++", ")", "{", "if", "(", "obj", "===", "array", "[", "i", "]", ")", "{", "return", "i", ";", "}", "}", "return", "-", "1", ";", "}"], "original_docstring": "cross-browser indexOf fix", "docstring": {"block_comment": "cross browser indexOf fix", "line_comment": null}, "docstring_tokens": ["cross", "browser", "indexOf", "fix"], "sample_id": 572, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004485", "repo": "jepz20/intranet", "path": "public/config.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(moduleName, dependencies) {\n\t\t// Create angular module\n\t\tangular.module(moduleName, dependencies || []);\n\n\t\t// Add the module to the AngularJS configuration file\n\t\tangular.module(applicationModuleName).requires.push(moduleName);\n\t}", "code_tokens": ["function", "(", "moduleName", ",", "dependencies", ")", "{", "// Create angular module", "angular", ".", "module", "(", "moduleName", ",", "dependencies", "||", "[", "]", ")", ";", "// Add the module to the AngularJS configuration file", "angular", ".", "module", "(", "applicationModuleName", ")", ".", "requires", ".", "push", "(", "moduleName", ")", ";", "}"], "original_docstring": "Add a new vertical module", "docstring": {"block_comment": "Add a new vertical module", "line_comment": ["Create angular module", "Add the module to the AngularJS configuration file"]}, "docstring_tokens": ["Add", "a", "new", "vertical", "module"], "sample_id": 573, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004486", "repo": "deitch/jsormdb", "path": "src/HttpChannel.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(arg) {\n\t\t\tmessage(\"beforeload\",arg,loadResponse, \"GET\", loadUrl);\n\t\t}", "code_tokens": ["function", "(", "arg", ")", "{", "message", "(", "\"beforeload\"", ",", "arg", ",", "loadResponse", ",", "\"GET\"", ",", "loadUrl", ")", ";", "}"], "original_docstring": "\nLoad from the remote data source via http. This is presumed to be asynchronous, and thus will\nreturn before the call is complete. Use a callback to capture the result.\n\n@param {Object} [config] Configuration information for the load\n@param {Object} [config.params] Parameters to add to the load. Each element is given as a parameter name to the HTTP\nGET, while the values are expected to be Strings given as the value of HTTP parameter\n@param {Function} [config.callback] Function to be executed when the load is complete, whether success or failure.\nThe callback should expect a single argument, an object, with the following elements:\n<ul>\n<li>success: boolean as to whether or not the load succeeded</li>\n<li>options: the options that were passed to load as config.options</li>\n</ul>\n@param {Object} [config.scope] Scope within which to execute the callback\n@param {Object} [config.options] Options to pass to the callback\n", "docstring": {"block_comment": "Load from the remote data source via  This is presumed to be asynchronous, and thus will \nreturn before the call is complete. Use a callback to capture the result.", "line_comment": null}, "docstring_tokens": ["Load", "from", "the", "remote", "data", "source", "via", "This", "is", "presumed", "to", "be", "asynchronous", "and", "thus", "will", "return", "before", "the", "call", "is", "complete", ".", "Use", "a", "callback", "to", "capture", "the", "result", "."], "sample_id": 574, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004487", "repo": "deitch/jsormdb", "path": "src/HttpChannel.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(arg){\n\t\t\tmessage(\"beforeupdate\",arg,updateResponse, \"POST\", updateUrl);\n\t\t}", "code_tokens": ["function", "(", "arg", ")", "{", "message", "(", "\"beforeupdate\"", ",", "arg", ",", "updateResponse", ",", "\"POST\"", ",", "updateUrl", ")", ";", "}"], "original_docstring": "\nUpdate the remote data source via http. This is presumed to be asynchronous, and thus will\nreturn before the call is complete. Use a callback to capture the result.\n\n@param {Object} [config] Configuration information for the update\n@param {Object} [config.params] Parameters to add to the update. Each element is given as a parameter name to the HTTP\nPUT, while the values are expected to be Strings given as the value of HTTP parameter\n@param {Function} [config.callback] Function to be executed when the update is complete, whether success or failure.\nThe callback should expect a single argument, an object, with the following elements:\n<ul>\n<li>success: boolean as to whether or not the update succeeded</li>\n<li>options: the options that were passed to update as config.options</li>\n</ul>\n@param {Object} [config.scope] Scope within which to execute the callback\n@param {Object} [config.options] Options to pass to the callback\n", "docstring": {"block_comment": "Update the remote data source via  This is presumed to be asynchronous, and thus will \nreturn before the call is complete. Use a callback to capture the result.", "line_comment": null}, "docstring_tokens": ["Update", "the", "remote", "data", "source", "via", "This", "is", "presumed", "to", "be", "asynchronous", "and", "thus", "will", "return", "before", "the", "call", "is", "complete", ".", "Use", "a", "callback", "to", "capture", "the", "result", "."], "sample_id": 575, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004488", "repo": "hgoebl/nerdshow", "path": "lib/server/htdocs/zoom/zoom.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n      clearTimeout( panEngageTimeout );\n      clearInterval( panUpdateInterval );\n\n      magnify( window.scrollX, window.scrollY, 0, 0, 1 );\n\n      level = 1;\n    }", "code_tokens": ["function", "(", ")", "{", "clearTimeout", "(", "panEngageTimeout", ")", ";", "clearInterval", "(", "panUpdateInterval", ")", ";", "magnify", "(", "window", ".", "scrollX", ",", "window", ".", "scrollY", ",", "0", ",", "0", ",", "1", ")", ";", "level", "=", "1", ";", "}"], "original_docstring": "\nResets the document zoom state to its default.\n", "docstring": {"block_comment": "Resets the document zoom state to its default.", "line_comment": null}, "docstring_tokens": ["Resets", "the", "document", "zoom", "state", "to", "its", "default", "."], "sample_id": 576, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004489", "repo": "hgoebl/nerdshow", "path": "lib/server/htdocs/zoom/zoom.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( options ) {\n      // Due to an implementation limitation we can't zoom in\n      // to another element without zooming our first\n      if( level !== 1 ) {\n        zoom.out();\n      }\n      else {\n        options.x = options.x || 0;\n        options.y = options.y || 0;\n\n        // If an element is set, that takes precedence\n        if( !!options.element ) {\n          // Space around the zoomed in element to leave on screen\n          var padding = 20;\n\n          options.width = options.element.getBoundingClientRect().width + ( padding * 2 );\n          options.height = options.element.getBoundingClientRect().height + ( padding * 2 );\n          options.x = options.element.getBoundingClientRect().left - padding;\n          options.y = options.element.getBoundingClientRect().top - padding;\n        }\n\n        // If width/height values are set, calculate scale from those\n        if( options.width !== undefined && options.height !== undefined ) {\n          options.scale = Math.max( Math.min( window.innerWidth / options.width, window.innerHeight / options.height ), 1 );\n        }\n\n        if( options.scale > 1 ) {\n          options.x *= options.scale;\n          options.y *= options.scale;\n\n          magnify( window.scrollX, window.scrollY, options.x, options.y, options.scale );\n\n          // Wait with engaging panning as it may conflict with the\n          // zoom transition\n          panEngageTimeout = setTimeout( function() {\n            panUpdateInterval = setInterval( pan, 1000 / 60 );\n          }, 800 );\n        }\n      }\n    }", "code_tokens": ["function", "(", "options", ")", "{", "// Due to an implementation limitation we can't zoom in", "// to another element without zooming our first", "if", "(", "level", "!==", "1", ")", "{", "zoom", ".", "out", "(", ")", ";", "}", "else", "{", "options", ".", "x", "=", "options", ".", "x", "||", "0", ";", "options", ".", "y", "=", "options", ".", "y", "||", "0", ";", "// If an element is set, that takes precedence", "if", "(", "!", "!", "options", ".", "element", ")", "{", "// Space around the zoomed in element to leave on screen", "var", "padding", "=", "20", ";", "options", ".", "width", "=", "options", ".", "element", ".", "getBoundingClientRect", "(", ")", ".", "width", "+", "(", "padding", "*", "2", ")", ";", "options", ".", "height", "=", "options", ".", "element", ".", "getBoundingClientRect", "(", ")", ".", "height", "+", "(", "padding", "*", "2", ")", ";", "options", ".", "x", "=", "options", ".", "element", ".", "getBoundingClientRect", "(", ")", ".", "left", "-", "padding", ";", "options", ".", "y", "=", "options", ".", "element", ".", "getBoundingClientRect", "(", ")", ".", "top", "-", "padding", ";", "}", "// If width/height values are set, calculate scale from those", "if", "(", "options", ".", "width", "!==", "undefined", "&&", "options", ".", "height", "!==", "undefined", ")", "{", "options", ".", "scale", "=", "Math", ".", "max", "(", "Math", ".", "min", "(", "window", ".", "innerWidth", "/", "options", ".", "width", ",", "window", ".", "innerHeight", "/", "options", ".", "height", ")", ",", "1", ")", ";", "}", "if", "(", "options", ".", "scale", ">", "1", ")", "{", "options", ".", "x", "*=", "options", ".", "scale", ";", "options", ".", "y", "*=", "options", ".", "scale", ";", "magnify", "(", "window", ".", "scrollX", ",", "window", ".", "scrollY", ",", "options", ".", "x", ",", "options", ".", "y", ",", "options", ".", "scale", ")", ";", "// Wait with engaging panning as it may conflict with the", "// zoom transition", "panEngageTimeout", "=", "setTimeout", "(", "function", "(", ")", "{", "panUpdateInterval", "=", "setInterval", "(", "pan", ",", "1000", "/", "60", ")", ";", "}", ",", "800", ")", ";", "}", "}", "}"], "original_docstring": "\nZooms in on either a rectangle or HTML element.\n\n@param {Object} options\n- element: HTML element to zoom in on\nOR\n- x/y: coordinates in non-transformed space to zoom in on\n- width/height: the portion of the screen to zoom in on\n- scale: can be used instead of width/height explicitly set scale\n", "docstring": {"block_comment": "Zooms in on either a rectangle or HTML element.", "line_comment": ["Due to an implementation limitation we can t zoom in", "to another element without zooming our first", "If an element is set, that takes precedence", "Space around the zoomed in element to leave on screen", "If width height values are set, calculate scale from those", "Wait with engaging panning as it may conflict with the", "zoom transition"]}, "docstring_tokens": ["Zooms", "in", "on", "either", "a", "rectangle", "or", "HTML", "element", "."], "sample_id": 577, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004490", "repo": "dundalek/warehouse", "path": "backend/memory.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        return _.clone(this._store);\n    }", "code_tokens": ["function", "(", ")", "{", "return", "_", ".", "clone", "(", "this", ".", "_store", ")", ";", "}"], "original_docstring": "Returns copy of all data", "docstring": {"block_comment": "Returns copy of all data", "line_comment": null}, "docstring_tokens": ["Returns", "copy", "of", "all", "data"], "sample_id": 578, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004491", "repo": "dundalek/warehouse", "path": "backend/memory.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(data) {\n        var ret = {};\n        if (typeof data === 'string') {\n            try {\n                this.fromJSON(JSON.parse(data));\n                return;\n            } catch(e) {\n            }\n        } else if (typeof data === 'object') {\n            if (data.constructor && data.constructor.name === 'Array') {\n                for (var i = 0; i < data.length; i++) {\n                    ret[this._getObjectKey(data[i]) || i] = data[i];\n                }\n            } else {\n                ret = data;\n            }\n        }\n        this._store = ret;\n    }", "code_tokens": ["function", "(", "data", ")", "{", "var", "ret", "=", "{", "}", ";", "if", "(", "typeof", "data", "===", "'string'", ")", "{", "try", "{", "this", ".", "fromJSON", "(", "JSON", ".", "parse", "(", "data", ")", ")", ";", "return", ";", "}", "catch", "(", "e", ")", "{", "}", "}", "else", "if", "(", "typeof", "data", "===", "'object'", ")", "{", "if", "(", "data", ".", "constructor", "&&", "data", ".", "constructor", ".", "name", "===", "'Array'", ")", "{", "for", "(", "var", "i", "=", "0", ";", "i", "<", "data", ".", "length", ";", "i", "++", ")", "{", "ret", "[", "this", ".", "_getObjectKey", "(", "data", "[", "i", "]", ")", "||", "i", "]", "=", "data", "[", "i", "]", ";", "}", "}", "else", "{", "ret", "=", "data", ";", "}", "}", "this", ".", "_store", "=", "ret", ";", "}"], "original_docstring": "Sets data to be used", "docstring": {"block_comment": "Sets data to be used", "line_comment": null}, "docstring_tokens": ["Sets", "data", "to", "be", "used"], "sample_id": 579, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004492", "repo": "waflessnet/Sails-angular", "path": "api/controllers/SimuladorController.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (req,res){\n    var idCategoriaRubro    = req.param('rubro');\n    var idSector            = req.param('sector');\n    var idProducto          = req.param('producto');\n    var prefijo             = \"\";\n    var capaFormulario      = \"\";\n    var select              = \"\";\n    var funcion             = '';\n    switch(idSector){\n      case 'CA':\n        capaFormulario = \"dataCultivosAnuales\";\n        prefijo = 'CA';\n        select  = 'selectRegion';\n        funcion = 'opcionesRegion';\n      break;    \n      case 'GA':\n        capaFormulario = \"dataGanadero\";\n        prefijo = 'GA';           \n        select  = 'selectRegion';     \n        funcion = 'opcionesRegion';               \n      break;\n      case 'FL':\n        capaFormulario = \"dataFlores\";\n        //capaFormulario = \"dataCultivosAnuales\";            \n        prefijo = 'FL';\n        select  = 'selectRegion';\n        funcion = 'opcionesRegion';                                \n      break;\n      case 'FR':\n        switch(idCategoriaRubro){           \n              case 'PO':\n                capaFormulario = \"dataFrutales3Pomaceas\";                      \n                prefijo = 'FRU3PO';\n                select  = 'selectRegion';\n                funcion = 'opcionesRegion';                \n              break;\n          case 'VID':\n                switch(idProducto){\n                  case '2703'://uva pisquera\n                    capaFormulario = \"dataFrutales3Pomaceas\";\n                    prefijo = 'FRU3PO';\n                    select  = 'selectRegion';\n                    funcion = 'opcionesRegion';                                                                                        \n                  break;\n                  default:\n                    capaFormulario = \"dataFrutales3\";\n                    prefijo = 'FRU3';\n                    select  = 'selectRegion';\n                    funcion = 'opcionesRegion';                                                                                        \n                  break;\n                }  \n          break;\n              case 'OL':\n                capaFormulario = \"dataFrutales1Olivo\";\n                prefijo = 'FRU1OL';\n                select  = 'selectRegion';\n                funcion = 'opcionesRegion';                \n              break;\n          default:\n                capaFormulario = \"dataFrutales1\";\n                prefijo = 'FRU1';\n                select  = 'selectRegion';\n                funcion = 'opcionesRegion';                                \n          break;\n        }\n      break;\n      case 'CP':\n        capaFormulario = \"dataPrecio\";\n        prefijo = 'CP';\n        select  = 's';\n        funcion = 'f';        \n      break;  \n    }\n    return res.json({\n        'capaFormulario':capaFormulario\n       ,'prefijo':prefijo\n       ,'select':select\n       ,'funcion':funcion\n       });\n  }", "code_tokens": ["function", "(", "req", ",", "res", ")", "{", "var", "idCategoriaRubro", "=", "req", ".", "param", "(", "'rubro'", ")", ";", "var", "idSector", "=", "req", ".", "param", "(", "'sector'", ")", ";", "var", "idProducto", "=", "req", ".", "param", "(", "'producto'", ")", ";", "var", "prefijo", "=", "\"\"", ";", "var", "capaFormulario", "=", "\"\"", ";", "var", "select", "=", "\"\"", ";", "var", "funcion", "=", "''", ";", "switch", "(", "idSector", ")", "{", "case", "'CA'", ":", "capaFormulario", "=", "\"dataCultivosAnuales\"", ";", "prefijo", "=", "'CA'", ";", "select", "=", "'selectRegion'", ";", "funcion", "=", "'opcionesRegion'", ";", "break", ";", "case", "'GA'", ":", "capaFormulario", "=", "\"dataGanadero\"", ";", "prefijo", "=", "'GA'", ";", "select", "=", "'selectRegion'", ";", "funcion", "=", "'opcionesRegion'", ";", "break", ";", "case", "'FL'", ":", "capaFormulario", "=", "\"dataFlores\"", ";", "//capaFormulario = \"dataCultivosAnuales\";            ", "prefijo", "=", "'FL'", ";", "select", "=", "'selectRegion'", ";", "funcion", "=", "'opcionesRegion'", ";", "break", ";", "case", "'FR'", ":", "switch", "(", "idCategoriaRubro", ")", "{", "case", "'PO'", ":", "capaFormulario", "=", "\"dataFrutales3Pomaceas\"", ";", "prefijo", "=", "'FRU3PO'", ";", "select", "=", "'selectRegion'", ";", "funcion", "=", "'opcionesRegion'", ";", "break", ";", "case", "'VID'", ":", "switch", "(", "idProducto", ")", "{", "case", "'2703'", ":", "//uva pisquera", "capaFormulario", "=", "\"dataFrutales3Pomaceas\"", ";", "prefijo", "=", "'FRU3PO'", ";", "select", "=", "'selectRegion'", ";", "funcion", "=", "'opcionesRegion'", ";", "break", ";", "default", ":", "capaFormulario", "=", "\"dataFrutales3\"", ";", "prefijo", "=", "'FRU3'", ";", "select", "=", "'selectRegion'", ";", "funcion", "=", "'opcionesRegion'", ";", "break", ";", "}", "break", ";", "case", "'OL'", ":", "capaFormulario", "=", "\"dataFrutales1Olivo\"", ";", "prefijo", "=", "'FRU1OL'", ";", "select", "=", "'selectRegion'", ";", "funcion", "=", "'opcionesRegion'", ";", "break", ";", "default", ":", "capaFormulario", "=", "\"dataFrutales1\"", ";", "prefijo", "=", "'FRU1'", ";", "select", "=", "'selectRegion'", ";", "funcion", "=", "'opcionesRegion'", ";", "break", ";", "}", "break", ";", "case", "'CP'", ":", "capaFormulario", "=", "\"dataPrecio\"", ";", "prefijo", "=", "'CP'", ";", "select", "=", "'s'", ";", "funcion", "=", "'f'", ";", "break", ";", "}", "return", "res", ".", "json", "(", "{", "'capaFormulario'", ":", "capaFormulario", ",", "'prefijo'", ":", "prefijo", ",", "'select'", ":", "select", ",", "'funcion'", ":", "funcion", "}", ")", ";", "}"], "original_docstring": "\ndevuelve que capa de formulario deberia mostrar en el paso 2\n@param {Object} req\n@param {Object} res\n", "docstring": {"block_comment": "devuelve que capa de formulario deberia mostrar en el paso 2", "line_comment": ["capaFormulario    dataCultivosAnuales  ", "uva pisquera"]}, "docstring_tokens": ["devuelve", "que", "capa", "de", "formulario", "deberia", "mostrar", "en", "el", "paso", "2"], "sample_id": 580, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004493", "repo": "waflessnet/Sails-angular", "path": "api/controllers/SimuladorController.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (req,res){\n    return res.view('simulador/index',{'fecha':getFecha()});\n  }", "code_tokens": ["function", "(", "req", ",", "res", ")", "{", "return", "res", ".", "view", "(", "'simulador/index'", ",", "{", "'fecha'", ":", "getFecha", "(", ")", "}", ")", ";", "}"], "original_docstring": "\ncarga la pagina principal\n", "docstring": {"block_comment": "carga la pagina principal", "line_comment": null}, "docstring_tokens": ["carga", "la", "pagina", "principal"], "sample_id": 581, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004494", "repo": "Nordstrom/cfn", "path": "test/mocks/stack-events.js", "language": "JavaScript", "license": "mit", "func_name": "cfStackEventFactory", "code": "function cfStackEventFactory (opts) {\n  return Object.assign(cfEventFactory(), {\n    PhysicalResourceId: 'arn:aws:cloudformation:us-west-2:00000000000:stack/test-stack-name/000f000-0000-0000-a000-00000000000',\n    ResourceType: 'AWS::CloudFormation::Stack',\n    LogicalResourceId: 'test-stack-name'\n  }, opts)\n}", "code_tokens": ["function", "cfStackEventFactory", "(", "opts", ")", "{", "return", "Object", ".", "assign", "(", "cfEventFactory", "(", ")", ",", "{", "PhysicalResourceId", ":", "'arn:aws:cloudformation:us-west-2:00000000000:stack/test-stack-name/000f000-0000-0000-a000-00000000000'", ",", "ResourceType", ":", "'AWS::CloudFormation::Stack'", ",", "LogicalResourceId", ":", "'test-stack-name'", "}", ",", "opts", ")", "}"], "original_docstring": "resource type cf stack", "docstring": {"block_comment": "resource type cf stack", "line_comment": null}, "docstring_tokens": ["resource", "type", "cf", "stack"], "sample_id": 582, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004495", "repo": "Nordstrom/cfn", "path": "test/mocks/stack-events.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n  var eventId = uuid.v1()\n\n  var cfEvent = {\n    StackId: 'arn:aws:cloudformation:us-west-2:00000000000:stack/test-stack-name/000f000-0000-0000-a000-00000000000',\n    StackName: 'test-stack-name',\n        // default timestamp is 1 second in future\n    Timestamp: createMockDate(1000),\n        // set event timestamp relative to when stack update started\n    setRelativeTimestamp: function (msInFuture) {\n      this.Timestamp = createMockDate(msInFuture)\n      return this\n    }\n  }\n  return Object.assign(Object.create(cfEvent), {\n    EventId: eventId\n  })\n}", "code_tokens": ["function", "(", ")", "{", "var", "eventId", "=", "uuid", ".", "v1", "(", ")", "var", "cfEvent", "=", "{", "StackId", ":", "'arn:aws:cloudformation:us-west-2:00000000000:stack/test-stack-name/000f000-0000-0000-a000-00000000000'", ",", "StackName", ":", "'test-stack-name'", ",", "// default timestamp is 1 second in future", "Timestamp", ":", "createMockDate", "(", "1000", ")", ",", "// set event timestamp relative to when stack update started", "setRelativeTimestamp", ":", "function", "(", "msInFuture", ")", "{", "this", ".", "Timestamp", "=", "createMockDate", "(", "msInFuture", ")", "return", "this", "}", "}", "return", "Object", ".", "assign", "(", "Object", ".", "create", "(", "cfEvent", ")", ",", "{", "EventId", ":", "eventId", "}", ")", "}"], "original_docstring": "creates new cloud formation event mock with unique event id", "docstring": {"block_comment": "creates new cloud formation event mock with unique event id", "line_comment": ["default timestamp is 1 second in future", "set event timestamp relative to when stack update started"]}, "docstring_tokens": ["creates", "new", "cloud", "formation", "event", "mock", "with", "unique", "event", "id"], "sample_id": 583, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004496", "repo": "Nordstrom/cfn", "path": "test/mocks/stack-events.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (msInFuture) {\n      this.Timestamp = createMockDate(msInFuture)\n      return this\n    }", "code_tokens": ["function", "(", "msInFuture", ")", "{", "this", ".", "Timestamp", "=", "createMockDate", "(", "msInFuture", ")", "return", "this", "}"], "original_docstring": "set event timestamp relative to when stack update started", "docstring": {"block_comment": "set event timestamp relative to when stack update started", "line_comment": null}, "docstring_tokens": ["set", "event", "timestamp", "relative", "to", "when", "stack", "update", "started"], "sample_id": 584, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004497", "repo": "zship/class.js", "path": "src/base/methodResolutionOrder.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(constructor){\n\t\tvar bases = constructor._meta.bases.slice(0);\n\n\t\tvar seqs =\n\t\t\t[[constructor]]\n\t\t\t.concat(bases.map(function(base) {\n\t\t\t\treturn methodResolutionOrder(base);\n\t\t\t}))\n\t\t\t.concat([bases.slice(0)]);\n\n\t\t//the linearization of C is the sum of C plus the merge of the\n\t\t//linearizations of the parents and the list of the parents.\n\t\treturn _merge(seqs);\n\t}", "code_tokens": ["function", "(", "constructor", ")", "{", "var", "bases", "=", "constructor", ".", "_meta", ".", "bases", ".", "slice", "(", "0", ")", ";", "var", "seqs", "=", "[", "[", "constructor", "]", "]", ".", "concat", "(", "bases", ".", "map", "(", "function", "(", "base", ")", "{", "return", "methodResolutionOrder", "(", "base", ")", ";", "}", ")", ")", ".", "concat", "(", "[", "bases", ".", "slice", "(", "0", ")", "]", ")", ";", "//the linearization of C is the sum of C plus the merge of the", "//linearizations of the parents and the list of the parents.", "return", "_merge", "(", "seqs", ")", ";", "}"], "original_docstring": "C3 Method Resolution Order (see http://www.python.org/download/releases/2.3/mro/)", "docstring": {"block_comment": "C3 Method Resolution Order  see", "line_comment": ["the linearization of C is the sum of C plus the merge of the", "linearizations of the parents and the list of the parents."]}, "docstring_tokens": ["C3", "Method", "Resolution", "Order", "see"], "sample_id": 585, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004498", "repo": "lotaris/minirox", "path": "src/client/js/minirox.client.filter.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(event) {\n\t\t\t// Check there is at least one filter\n\t\t\tif (this.ui.filterElements.children().length > 0) {\n\t\t\t\t// Reset the filters\n\t\t\t\tthis.filters = [];\n\n\t\t\t\t// Remove tooltips\n\t\t\t\tthis.ui.filterElements.tooltip('hide');\n\n\t\t\t\t// Remove the filter elements\n\t\t\t\tthis.ui.filterElements.empty();\n\n\t\t\t\t// Notify that the filters are cleaned\n\t\t\t\tthis.trigger('filters:set', this.filters);\n\t\t\t}\n\t\t}", "code_tokens": ["function", "(", "event", ")", "{", "// Check there is at least one filter", "if", "(", "this", ".", "ui", ".", "filterElements", ".", "children", "(", ")", ".", "length", ">", "0", ")", "{", "// Reset the filters", "this", ".", "filters", "=", "[", "]", ";", "// Remove tooltips", "this", ".", "ui", ".", "filterElements", ".", "tooltip", "(", "'hide'", ")", ";", "// Remove the filter elements", "this", ".", "ui", ".", "filterElements", ".", "empty", "(", ")", ";", "// Notify that the filters are cleaned", "this", ".", "trigger", "(", "'filters:set'", ",", "this", ".", "filters", ")", ";", "}", "}"], "original_docstring": "\nClear all the filters and notify once it's done\n\n@param {Event} event The click event\n", "docstring": {"block_comment": "Clear all the filters and notify once it s done", "line_comment": ["Check there is at least one filter", "Reset the filters", "Remove tooltips", "Remove the filter elements", "Notify that the filters are cleaned"]}, "docstring_tokens": ["Clear", "all", "the", "filters", "and", "notify", "once", "it", "s", "done"], "sample_id": 586, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004498", "repo": "lotaris/minirox", "path": "src/client/js/minirox.client.filter.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(event) {\n\t\t\t// Check there is at least one filter\n\t\t\tif (this.ui.filterElements.children().length > 0) {\n\t\t\t\t// Reset the filters\n\t\t\t\tthis.filters = [];\n\n\t\t\t\t// Remove tooltips\n\t\t\t\tthis.ui.filterElements.tooltip('hide');\n\n\t\t\t\t// Remove the filter elements\n\t\t\t\tthis.ui.filterElements.empty();\n\n\t\t\t\t// Notify that the filters are cleaned\n\t\t\t\tthis.trigger('filters:set', this.filters);\n\t\t\t}\n\t\t}", "code_tokens": ["function", "(", "event", ")", "{", "// Check there is at least one filter", "if", "(", "this", ".", "ui", ".", "filterElements", ".", "children", "(", ")", ".", "length", ">", "0", ")", "{", "// Reset the filters", "this", ".", "filters", "=", "[", "]", ";", "// Remove tooltips", "this", ".", "ui", ".", "filterElements", ".", "tooltip", "(", "'hide'", ")", ";", "// Remove the filter elements", "this", ".", "ui", ".", "filterElements", ".", "empty", "(", ")", ";", "// Notify that the filters are cleaned", "this", ".", "trigger", "(", "'filters:set'", ",", "this", ".", "filters", ")", ";", "}", "}"], "original_docstring": "\nClear all the filters and notify once it's done\n\n@param {Event} event The click event\n", "docstring": {"block_comment": "Clear all the filters and notify once it s done", "line_comment": ["Check there is at least one filter", "Reset the filters", "Remove tooltips", "Remove the filter elements", "Notify that the filters are cleaned"]}, "docstring_tokens": ["The", "click", "event"], "sample_id": 586, "prompt_tokens": ["<javascript>", "<param>", "event"], "comment_type": "param", "sentence_id": 1}
{"id": "21004499", "repo": "lotaris/minirox", "path": "src/client/js/minirox.client.filter.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(event) {\n\t\t\t// Find the filter element\n\t\t\tvar filterElement = $(event.target).closest('.filter-element');\n\n\t\t\t// Check the filter element is found\n\t\t\tif (filterElement.length > 0) {\n\t\t\t\t// Get the filter text\n\t\t\t\tvar filterText = filterElement.data('filter');\n\n\t\t\t\t// Remove the filter from the collection\n\t\t\t\tthis.filters = _.reject(this.filters, function(value) {\n\t\t\t\t\treturn value === filterText;\n\t\t\t\t});\n\n\t\t\t\t// Remove the tooltip\n\t\t\t\tfilterElement.find('i').tooltip('hide');\n\n\t\t\t\t// Remove the element\n\t\t\t\tfilterElement.remove();\n\n\t\t\t\t// Notify that the filter is removed\n\t\t\t\tthis.trigger('filters:set', this.filters);\n\t\t\t}\n\t\t}", "code_tokens": ["function", "(", "event", ")", "{", "// Find the filter element", "var", "filterElement", "=", "$", "(", "event", ".", "target", ")", ".", "closest", "(", "'.filter-element'", ")", ";", "// Check the filter element is found", "if", "(", "filterElement", ".", "length", ">", "0", ")", "{", "// Get the filter text", "var", "filterText", "=", "filterElement", ".", "data", "(", "'filter'", ")", ";", "// Remove the filter from the collection", "this", ".", "filters", "=", "_", ".", "reject", "(", "this", ".", "filters", ",", "function", "(", "value", ")", "{", "return", "value", "===", "filterText", ";", "}", ")", ";", "// Remove the tooltip", "filterElement", ".", "find", "(", "'i'", ")", ".", "tooltip", "(", "'hide'", ")", ";", "// Remove the element", "filterElement", ".", "remove", "(", ")", ";", "// Notify that the filter is removed", "this", ".", "trigger", "(", "'filters:set'", ",", "this", ".", "filters", ")", ";", "}", "}"], "original_docstring": "\nRemove a filter element and notify once it's done\n\n@param {Event} event The click event\n", "docstring": {"block_comment": "Remove a filter element and notify once it s done", "line_comment": ["Find the filter element", "Check the filter element is found", "Get the filter text", "Remove the filter from the collection", "Remove the tooltip", "Remove the element", "Notify that the filter is removed"]}, "docstring_tokens": ["Remove", "a", "filter", "element", "and", "notify", "once", "it", "s", "done"], "sample_id": 587, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004499", "repo": "lotaris/minirox", "path": "src/client/js/minirox.client.filter.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(event) {\n\t\t\t// Find the filter element\n\t\t\tvar filterElement = $(event.target).closest('.filter-element');\n\n\t\t\t// Check the filter element is found\n\t\t\tif (filterElement.length > 0) {\n\t\t\t\t// Get the filter text\n\t\t\t\tvar filterText = filterElement.data('filter');\n\n\t\t\t\t// Remove the filter from the collection\n\t\t\t\tthis.filters = _.reject(this.filters, function(value) {\n\t\t\t\t\treturn value === filterText;\n\t\t\t\t});\n\n\t\t\t\t// Remove the tooltip\n\t\t\t\tfilterElement.find('i').tooltip('hide');\n\n\t\t\t\t// Remove the element\n\t\t\t\tfilterElement.remove();\n\n\t\t\t\t// Notify that the filter is removed\n\t\t\t\tthis.trigger('filters:set', this.filters);\n\t\t\t}\n\t\t}", "code_tokens": ["function", "(", "event", ")", "{", "// Find the filter element", "var", "filterElement", "=", "$", "(", "event", ".", "target", ")", ".", "closest", "(", "'.filter-element'", ")", ";", "// Check the filter element is found", "if", "(", "filterElement", ".", "length", ">", "0", ")", "{", "// Get the filter text", "var", "filterText", "=", "filterElement", ".", "data", "(", "'filter'", ")", ";", "// Remove the filter from the collection", "this", ".", "filters", "=", "_", ".", "reject", "(", "this", ".", "filters", ",", "function", "(", "value", ")", "{", "return", "value", "===", "filterText", ";", "}", ")", ";", "// Remove the tooltip", "filterElement", ".", "find", "(", "'i'", ")", ".", "tooltip", "(", "'hide'", ")", ";", "// Remove the element", "filterElement", ".", "remove", "(", ")", ";", "// Notify that the filter is removed", "this", ".", "trigger", "(", "'filters:set'", ",", "this", ".", "filters", ")", ";", "}", "}"], "original_docstring": "\nRemove a filter element and notify once it's done\n\n@param {Event} event The click event\n", "docstring": {"block_comment": "Remove a filter element and notify once it s done", "line_comment": ["Find the filter element", "Check the filter element is found", "Get the filter text", "Remove the filter from the collection", "Remove the tooltip", "Remove the element", "Notify that the filter is removed"]}, "docstring_tokens": ["The", "click", "event"], "sample_id": 587, "prompt_tokens": ["<javascript>", "<param>", "event"], "comment_type": "param", "sentence_id": 1}
{"id": "21004500", "repo": "lotaris/minirox", "path": "src/client/js/minirox.client.filter.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(filter) {\n\t\t\t// Try to find the filter type pattern\n\t\t\tvar iconMatch = this.iconRegex.exec(filter);\n\n\t\t\t// Correct the filter (remove spaces for specific filters) and trimed the filter type\n\t\t\tvar trimedName = null;\n\t\t\tif (iconMatch) {\n\t\t\t\tfilter = _.str.trim(iconMatch[1]) + ':' + _.str.trim(iconMatch[2]);\n\t\t\t\ttrimedName = _.str.trim(iconMatch[1]);\n\t\t\t}\n\n\t\t\t// Check if the filter is already present\n\t\t\tif (filter !== '' && !_.contains(this.filters, filter)) {\n\t\t\t\t// Add the filter\n\t\t\t\tthis.filters.push(filter);\n\n\t\t\t\t// Working variables\n\t\t\t\tvar transformedFilter = '';\n\t\t\t\tvar icon;\n\n\t\t\t\t// Check if the pattern match a known type\n\t\t\t\tif (trimedName && this.icons[trimedName]) {\n\t\t\t\t\ticon =  this.icons[trimedName];\n\t\t\t\t\ttransformedFilter = filter.replace(trimedName + ':', '<i class=\"icon-' + icon.ico + ' filter-icon\" title=\"' + icon.title + '\"></i>');\n\t\t\t\t}\n\n\t\t\t\t// Check if the pattern is recognized but no known type is found\n\t\t\t\telse if (trimedName) {\n\t\t\t\t\ticon =  this.icons.unknown;\n\t\t\t\t\ttransformedFilter = filter.replace(trimedName + ':', '<i class=\"icon-' + icon.ico + ' filter-icon\" title=\"' + icon.title.replace('{type}', trimedName) + '\"></i>');\n\t\t\t\t}\n\n\t\t\t\t// Otherwise put a generic icon for the filter\n\t\t\t\telse {\n\t\t\t\t\ttransformedFilter = '<i class=\"icon-asterisk filter-icon\" title=\"Generic filter\"></i>' + filter;\n\t\t\t\t}\n\n\t\t\t\t// Create the filter element\n\t\t\t\tvar filterElement = $('<span class=\"filter-element-text\">' + transformedFilter + '</span><button class=\"filter-element-close\"><i class=\"icon-remove-sign\"></i></button>');\n\n\t\t\t\t// Initialize the tooltip\n\t\t\t\tthis.initTooltip(filterElement.find('i'));\n\n\t\t\t\t// Create the filter element for the GUI\n\t\t\t\tvar filterDiv = $('<div class=\"filter-element\"></div>').append(filterElement).data('filter', filter);\n\n\t\t\t\t// Add the filter element\n\t\t\t\tthis.ui.filterElements.append(filterDiv);\n\n\t\t\t\t// Reset the filter field\n\t\t\t\tthis.ui.filter.val('');\n\n\t\t\t\t// Notify that the filter is added\n\t\t\t\tthis.trigger('filters:set', this.filters);\n\t\t\t}\n\t\t}", "code_tokens": ["function", "(", "filter", ")", "{", "// Try to find the filter type pattern", "var", "iconMatch", "=", "this", ".", "iconRegex", ".", "exec", "(", "filter", ")", ";", "// Correct the filter (remove spaces for specific filters) and trimed the filter type", "var", "trimedName", "=", "null", ";", "if", "(", "iconMatch", ")", "{", "filter", "=", "_", ".", "str", ".", "trim", "(", "iconMatch", "[", "1", "]", ")", "+", "':'", "+", "_", ".", "str", ".", "trim", "(", "iconMatch", "[", "2", "]", ")", ";", "trimedName", "=", "_", ".", "str", ".", "trim", "(", "iconMatch", "[", "1", "]", ")", ";", "}", "// Check if the filter is already present", "if", "(", "filter", "!==", "''", "&&", "!", "_", ".", "contains", "(", "this", ".", "filters", ",", "filter", ")", ")", "{", "// Add the filter", "this", ".", "filters", ".", "push", "(", "filter", ")", ";", "// Working variables", "var", "transformedFilter", "=", "''", ";", "var", "icon", ";", "// Check if the pattern match a known type", "if", "(", "trimedName", "&&", "this", ".", "icons", "[", "trimedName", "]", ")", "{", "icon", "=", "this", ".", "icons", "[", "trimedName", "]", ";", "transformedFilter", "=", "filter", ".", "replace", "(", "trimedName", "+", "':'", ",", "'<i class=\"icon-'", "+", "icon", ".", "ico", "+", "' filter-icon\" title=\"'", "+", "icon", ".", "title", "+", "'\"></i>'", ")", ";", "}", "// Check if the pattern is recognized but no known type is found", "else", "if", "(", "trimedName", ")", "{", "icon", "=", "this", ".", "icons", ".", "unknown", ";", "transformedFilter", "=", "filter", ".", "replace", "(", "trimedName", "+", "':'", ",", "'<i class=\"icon-'", "+", "icon", ".", "ico", "+", "' filter-icon\" title=\"'", "+", "icon", ".", "title", ".", "replace", "(", "'{type}'", ",", "trimedName", ")", "+", "'\"></i>'", ")", ";", "}", "// Otherwise put a generic icon for the filter", "else", "{", "transformedFilter", "=", "'<i class=\"icon-asterisk filter-icon\" title=\"Generic filter\"></i>'", "+", "filter", ";", "}", "// Create the filter element", "var", "filterElement", "=", "$", "(", "'<span class=\"filter-element-text\">'", "+", "transformedFilter", "+", "'</span><button class=\"filter-element-close\"><i class=\"icon-remove-sign\"></i></button>'", ")", ";", "// Initialize the tooltip", "this", ".", "initTooltip", "(", "filterElement", ".", "find", "(", "'i'", ")", ")", ";", "// Create the filter element for the GUI", "var", "filterDiv", "=", "$", "(", "'<div class=\"filter-element\"></div>'", ")", ".", "append", "(", "filterElement", ")", ".", "data", "(", "'filter'", ",", "filter", ")", ";", "// Add the filter element", "this", ".", "ui", ".", "filterElements", ".", "append", "(", "filterDiv", ")", ";", "// Reset the filter field", "this", ".", "ui", ".", "filter", ".", "val", "(", "''", ")", ";", "// Notify that the filter is added", "this", ".", "trigger", "(", "'filters:set'", ",", "this", ".", "filters", ")", ";", "}", "}"], "original_docstring": "\nAdd a filter and trigger to the user interface and\nnotify once it is done\n\n@param {String} filter The filter to add\n", "docstring": {"block_comment": "Add a filter and trigger to the user interface and \nnotify once it is done", "line_comment": ["Try to find the filter type pattern", "Correct the filter  remove spaces for specific filters  and trimed the filter type", "Check if the filter is already present", "Add the filter", "Working variables", "Check if the pattern match a known type", "Check if the pattern is recognized but no known type is found", "Otherwise put a generic icon for the filter", "Create the filter element", "Initialize the tooltip", "Create the filter element for the GUI", "Add the filter element", "Reset the filter field", "Notify that the filter is added"]}, "docstring_tokens": ["Add", "a", "filter", "and", "trigger", "to", "the", "user", "interface", "and", "notify", "once", "it", "is", "done"], "sample_id": 588, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004500", "repo": "lotaris/minirox", "path": "src/client/js/minirox.client.filter.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(filter) {\n\t\t\t// Try to find the filter type pattern\n\t\t\tvar iconMatch = this.iconRegex.exec(filter);\n\n\t\t\t// Correct the filter (remove spaces for specific filters) and trimed the filter type\n\t\t\tvar trimedName = null;\n\t\t\tif (iconMatch) {\n\t\t\t\tfilter = _.str.trim(iconMatch[1]) + ':' + _.str.trim(iconMatch[2]);\n\t\t\t\ttrimedName = _.str.trim(iconMatch[1]);\n\t\t\t}\n\n\t\t\t// Check if the filter is already present\n\t\t\tif (filter !== '' && !_.contains(this.filters, filter)) {\n\t\t\t\t// Add the filter\n\t\t\t\tthis.filters.push(filter);\n\n\t\t\t\t// Working variables\n\t\t\t\tvar transformedFilter = '';\n\t\t\t\tvar icon;\n\n\t\t\t\t// Check if the pattern match a known type\n\t\t\t\tif (trimedName && this.icons[trimedName]) {\n\t\t\t\t\ticon =  this.icons[trimedName];\n\t\t\t\t\ttransformedFilter = filter.replace(trimedName + ':', '<i class=\"icon-' + icon.ico + ' filter-icon\" title=\"' + icon.title + '\"></i>');\n\t\t\t\t}\n\n\t\t\t\t// Check if the pattern is recognized but no known type is found\n\t\t\t\telse if (trimedName) {\n\t\t\t\t\ticon =  this.icons.unknown;\n\t\t\t\t\ttransformedFilter = filter.replace(trimedName + ':', '<i class=\"icon-' + icon.ico + ' filter-icon\" title=\"' + icon.title.replace('{type}', trimedName) + '\"></i>');\n\t\t\t\t}\n\n\t\t\t\t// Otherwise put a generic icon for the filter\n\t\t\t\telse {\n\t\t\t\t\ttransformedFilter = '<i class=\"icon-asterisk filter-icon\" title=\"Generic filter\"></i>' + filter;\n\t\t\t\t}\n\n\t\t\t\t// Create the filter element\n\t\t\t\tvar filterElement = $('<span class=\"filter-element-text\">' + transformedFilter + '</span><button class=\"filter-element-close\"><i class=\"icon-remove-sign\"></i></button>');\n\n\t\t\t\t// Initialize the tooltip\n\t\t\t\tthis.initTooltip(filterElement.find('i'));\n\n\t\t\t\t// Create the filter element for the GUI\n\t\t\t\tvar filterDiv = $('<div class=\"filter-element\"></div>').append(filterElement).data('filter', filter);\n\n\t\t\t\t// Add the filter element\n\t\t\t\tthis.ui.filterElements.append(filterDiv);\n\n\t\t\t\t// Reset the filter field\n\t\t\t\tthis.ui.filter.val('');\n\n\t\t\t\t// Notify that the filter is added\n\t\t\t\tthis.trigger('filters:set', this.filters);\n\t\t\t}\n\t\t}", "code_tokens": ["function", "(", "filter", ")", "{", "// Try to find the filter type pattern", "var", "iconMatch", "=", "this", ".", "iconRegex", ".", "exec", "(", "filter", ")", ";", "// Correct the filter (remove spaces for specific filters) and trimed the filter type", "var", "trimedName", "=", "null", ";", "if", "(", "iconMatch", ")", "{", "filter", "=", "_", ".", "str", ".", "trim", "(", "iconMatch", "[", "1", "]", ")", "+", "':'", "+", "_", ".", "str", ".", "trim", "(", "iconMatch", "[", "2", "]", ")", ";", "trimedName", "=", "_", ".", "str", ".", "trim", "(", "iconMatch", "[", "1", "]", ")", ";", "}", "// Check if the filter is already present", "if", "(", "filter", "!==", "''", "&&", "!", "_", ".", "contains", "(", "this", ".", "filters", ",", "filter", ")", ")", "{", "// Add the filter", "this", ".", "filters", ".", "push", "(", "filter", ")", ";", "// Working variables", "var", "transformedFilter", "=", "''", ";", "var", "icon", ";", "// Check if the pattern match a known type", "if", "(", "trimedName", "&&", "this", ".", "icons", "[", "trimedName", "]", ")", "{", "icon", "=", "this", ".", "icons", "[", "trimedName", "]", ";", "transformedFilter", "=", "filter", ".", "replace", "(", "trimedName", "+", "':'", ",", "'<i class=\"icon-'", "+", "icon", ".", "ico", "+", "' filter-icon\" title=\"'", "+", "icon", ".", "title", "+", "'\"></i>'", ")", ";", "}", "// Check if the pattern is recognized but no known type is found", "else", "if", "(", "trimedName", ")", "{", "icon", "=", "this", ".", "icons", ".", "unknown", ";", "transformedFilter", "=", "filter", ".", "replace", "(", "trimedName", "+", "':'", ",", "'<i class=\"icon-'", "+", "icon", ".", "ico", "+", "' filter-icon\" title=\"'", "+", "icon", ".", "title", ".", "replace", "(", "'{type}'", ",", "trimedName", ")", "+", "'\"></i>'", ")", ";", "}", "// Otherwise put a generic icon for the filter", "else", "{", "transformedFilter", "=", "'<i class=\"icon-asterisk filter-icon\" title=\"Generic filter\"></i>'", "+", "filter", ";", "}", "// Create the filter element", "var", "filterElement", "=", "$", "(", "'<span class=\"filter-element-text\">'", "+", "transformedFilter", "+", "'</span><button class=\"filter-element-close\"><i class=\"icon-remove-sign\"></i></button>'", ")", ";", "// Initialize the tooltip", "this", ".", "initTooltip", "(", "filterElement", ".", "find", "(", "'i'", ")", ")", ";", "// Create the filter element for the GUI", "var", "filterDiv", "=", "$", "(", "'<div class=\"filter-element\"></div>'", ")", ".", "append", "(", "filterElement", ")", ".", "data", "(", "'filter'", ",", "filter", ")", ";", "// Add the filter element", "this", ".", "ui", ".", "filterElements", ".", "append", "(", "filterDiv", ")", ";", "// Reset the filter field", "this", ".", "ui", ".", "filter", ".", "val", "(", "''", ")", ";", "// Notify that the filter is added", "this", ".", "trigger", "(", "'filters:set'", ",", "this", ".", "filters", ")", ";", "}", "}"], "original_docstring": "\nAdd a filter and trigger to the user interface and\nnotify once it is done\n\n@param {String} filter The filter to add\n", "docstring": {"block_comment": "Add a filter and trigger to the user interface and \nnotify once it is done", "line_comment": ["Try to find the filter type pattern", "Correct the filter  remove spaces for specific filters  and trimed the filter type", "Check if the filter is already present", "Add the filter", "Working variables", "Check if the pattern match a known type", "Check if the pattern is recognized but no known type is found", "Otherwise put a generic icon for the filter", "Create the filter element", "Initialize the tooltip", "Create the filter element for the GUI", "Add the filter element", "Reset the filter field", "Notify that the filter is added"]}, "docstring_tokens": ["The", "filter", "to", "add"], "sample_id": 588, "prompt_tokens": ["<javascript>", "<param>", "filter"], "comment_type": "param", "sentence_id": 1}
{"id": "21004501", "repo": "lotaris/minirox", "path": "src/client/js/minirox.client.filter.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.addFilter(this.ui.filter.val());\n\t\t}", "code_tokens": ["function", "(", "event", ")", "{", "event", ".", "preventDefault", "(", ")", ";", "this", ".", "addFilter", "(", "this", ".", "ui", ".", "filter", ".", "val", "(", ")", ")", ";", "}"], "original_docstring": "\nAdd a filter from the button clicked\n\n@param {Event} event The click event\n", "docstring": {"block_comment": "Add a filter from the button clicked", "line_comment": null}, "docstring_tokens": ["Add", "a", "filter", "from", "the", "button", "clicked"], "sample_id": 589, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004501", "repo": "lotaris/minirox", "path": "src/client/js/minirox.client.filter.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.addFilter(this.ui.filter.val());\n\t\t}", "code_tokens": ["function", "(", "event", ")", "{", "event", ".", "preventDefault", "(", ")", ";", "this", ".", "addFilter", "(", "this", ".", "ui", ".", "filter", ".", "val", "(", ")", ")", ";", "}"], "original_docstring": "\nAdd a filter from the button clicked\n\n@param {Event} event The click event\n", "docstring": {"block_comment": "Add a filter from the button clicked", "line_comment": null}, "docstring_tokens": ["The", "click", "event"], "sample_id": 589, "prompt_tokens": ["<javascript>", "<param>", "event"], "comment_type": "param", "sentence_id": 1}
{"id": "21004502", "repo": "ezmilhouse/frog", "path": "src/Schema.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (doc, ret, options) {\n\n                            // copy _id value, force string\n                            ret.id = ret._id + '';\n\n                            // remove _id key\n                            delete ret._id;\n\n                            // remove __v key\n                            delete ret.__v;\n\n                            // remove version key\n                            delete ret.version;\n\n                        }", "code_tokens": ["function", "(", "doc", ",", "ret", ",", "options", ")", "{", "// copy _id value, force string", "ret", ".", "id", "=", "ret", ".", "_id", "+", "''", ";", "// remove _id key", "delete", "ret", ".", "_id", ";", "// remove __v key", "delete", "ret", ".", "__v", ";", "// remove version key", "delete", "ret", ".", "version", ";", "}"], "original_docstring": "a transform function to apply to the resulting document before returning", "docstring": {"block_comment": "a transform function to apply to the resulting document before returning", "line_comment": ["copy _id value, force string", "remove _id key", "remove __v key", "remove version key"]}, "docstring_tokens": ["a", "transform", "function", "to", "apply", "to", "the", "resulting", "document", "before", "returning"], "sample_id": 590, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004503", "repo": "thatjs/auriga", "path": "config/middleware/server.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n\n    //  Scope.\n    var self = this;\n\n\n    /*  ================================================================  */\n    /*  Helper functions.                                                 */\n    /*  ================================================================  */\n\n    /**\n     *  Set up server IP address and port # using env variables/defaults.\n     */\n    self.setupVariables = function () {\n        //  Set the environment variables we need.\n        self.ipaddress = process.env.OPENSHIFT_NODEJS_IP;\n        self.port      = process.env.OPENSHIFT_NODEJS_PORT || 8080;\n\n        if (self.ipaddress === undefined) {\n            //  Log errors on OpenShift but continue w/ 127.0.0.1 - this\n            //  allows us to run/test the app locally.\n            console.warn('No OPENSHIFT_NODEJS_IP var, using 127.0.0.1');\n            self.ipaddress = \"127.0.0.1\";\n        }\n    };\n\n\n    /**\n     *  Populate the cache.\n     */\n    self.populateCache = function () {\n        if (self.zcache === undefined) {\n            self.zcache = { 'index.html': '' };\n        }\n\n        //  Local cache for static content.\n        self.zcache['index.html'] = fs.readFileSync('./index.html');\n    };\n\n\n    /**\n     *  Retrieve entry (content) from cache.\n     *  @param {string} key  Key identifying content to retrieve from cache.\n     */\n    self.cache_get = function (key) { return self.zcache[key]; };\n\n\n    /**\n     *  terminator === the termination handler\n     *  Terminate server on receipt of the specified signal.\n     *  @param {string} sig  Signal to terminate on.\n     */\n    self.terminator = function (sig) {\n        if (typeof sig === \"string\") {\n            console.log('%s: Received %s - terminating sample app ...',\n                       Date(Date.now()), sig);\n            process.exit(1);\n        }\n        console.log('%s: Node server stopped.', Date(Date.now()));\n    };\n\n\n    /**\n     *  Setup termination handlers (for exit and a list of signals).\n     */\n    self.setupTerminationHandlers = function () {\n        //  Process on exit and signals.\n        process.on('exit', function () { self.terminator(); });\n\n        // Removed 'SIGPIPE' from the list - bugz 852598.\n        [ 'SIGHUP', 'SIGINT', 'SIGQUIT', 'SIGILL', 'SIGTRAP', 'SIGABRT',\n            'SIGBUS', 'SIGFPE', 'SIGUSR1', 'SIGSEGV', 'SIGUSR2', 'SIGTERM' ]\n            .forEach(function (element, index, array) {\n                process.on(element, function () { self.terminator(element); });\n            });\n    };\n\n\n    /*  ================================================================  */\n    /*  App server functions (main app logic here).                       */\n    /*  ================================================================  */\n\n    /**\n     *  Create the routing table entries + handlers for the application.\n     */\n    self.createRoutes = function () {\n        self.routes = {};\n\n        self.routes.get = {\n\n            '/': function (req, res) {\n                res.setHeader('Content-Type', 'text/html');\n                res.send(self.cache_get('index.html'));\n            },\n\n            '/asciimo': function (req, res) {\n                var link = \"http://i.imgur.com/kmbjB.png\";\n                res.send(\"<html><body><img src='\" + link + \"'></body></html>\");\n            },\n\n            '/jenkins/body_missing/build': function (req, res) {\n                res.setHeader('Content-Type', 'text/html');\n                res.send('/jenkins/body_missing/build - GET request');\n            },\n\n            '/jenkins/dev_branch/build': function (req, res) {\n                res.setHeader('Content-Type', 'text/html');\n                res.send('/jenkins/dev_branch/build - GET request');\n            },\n\n            '/jenkins/stable_branch/build': function (req, res) {\n                res.setHeader('Content-Type', 'text/html');\n                res.send('/jenkins/stable_branch/build - GET request');\n            }\n\n        };\n\n\n        self.routes.post = {\n\n            '/api/jenkins': function (req, res) {\n\n                // console.info('req.body.ref = ', req.body.ref);\n\n\n                var pattern = /(?:refs\\/heads\\/)(.*)/;\n\n                if (req.body && req.body.ref) {\n                    console.info('req.body.ref = ', req.body.ref);\n                    branchName = req.body.ref.match(pattern);\n                } else {\n                    branchName = 'body_missing';\n                }\n\n                var options = {\n                    host: 'localhost',\n                    port: 8080,\n                    // path: '/jenkins/' + dev_branch/build',\n                    path: '/jenkins/' + branchName + '/build',\n                    method: 'GET',\n                    headers: req.headers\n                };\n\n                var getJenkins = http.request(options, function (resJenkins) {\n\n                    resJenkins.setEncoding('utf8');\n\n                    // pass request data to parent post route\n                    resJenkins.on('data', function (chunk) {\n                        res.write(chunk);\n                    });\n\n                    resJenkins.on('close', function () {\n                        res.writeHead(resJenkins.statusCode);\n                        res.end();\n                    });\n\n                    resJenkins.on('end', function () {\n                        res.end();\n                    });\n\n\n\n                }).on('error', function (e) {\n\n                    console.info(e);\n                    res.writeHead(500);\n                    res.end();\n\n                });\n\n                getJenkins.end();\n\n            }\n\n        };\n\n    };\n\n    /**\n     *  Initialize the server (express) and create the routes and register\n     *  the handlers.\n     */\n    self.initializeServer = function () {\n        var r;\n        self.createRoutes();\n        self.app = express.createServer();\n\n        self.app.use(bodyParser.json());\n\n        //  Add GET handlers for the app (from the routes).\n        for (r in self.routes.get) {\n            if (self.routes.get.hasOwnProperty(r)) {\n                self.app.get(r, self.routes.get[r]);\n            }\n        }\n\n        //  Add POST handlers for the app (from the routes).\n        for (r in self.routes.post) {\n            if (self.routes.post.hasOwnProperty(r)) {\n                self.app.post(r, self.routes.post[r]);\n            }\n        }\n\n        // console.info(self.routes);\n\n    };\n\n\n    /**\n     *  Initializes the sample application.\n     */\n    self.initialize = function () {\n        self.setupVariables();\n        self.populateCache();\n        self.setupTerminationHandlers();\n\n        // Create the express server and routes.\n        self.initializeServer();\n    };\n\n\n    /**\n     *  Start the server (starts up the sample application).\n     */\n    self.start = function () {\n        //  Start the app on the specific interface (and port).\n        self.app.listen(self.port, self.ipaddress, function () {\n            console.log('%s: Node server started on %s:%d ...',\n                        Date(Date.now()), self.ipaddress, self.port);\n        });\n    };\n\n}", "code_tokens": ["function", "(", ")", "{", "//  Scope.", "var", "self", "=", "this", ";", "/*  ================================================================  */", "/*  Helper functions.                                                 */", "/*  ================================================================  */", "/**\n     *  Set up server IP address and port # using env variables/defaults.\n     */", "self", ".", "setupVariables", "=", "function", "(", ")", "{", "//  Set the environment variables we need.", "self", ".", "ipaddress", "=", "process", ".", "env", ".", "OPENSHIFT_NODEJS_IP", ";", "self", ".", "port", "=", "process", ".", "env", ".", "OPENSHIFT_NODEJS_PORT", "||", "8080", ";", "if", "(", "self", ".", "ipaddress", "===", "undefined", ")", "{", "//  Log errors on OpenShift but continue w/ 127.0.0.1 - this", "//  allows us to run/test the app locally.", "console", ".", "warn", "(", "'No OPENSHIFT_NODEJS_IP var, using 127.0.0.1'", ")", ";", "self", ".", "ipaddress", "=", "\"127.0.0.1\"", ";", "}", "}", ";", "/**\n     *  Populate the cache.\n     */", "self", ".", "populateCache", "=", "function", "(", ")", "{", "if", "(", "self", ".", "zcache", "===", "undefined", ")", "{", "self", ".", "zcache", "=", "{", "'index.html'", ":", "''", "}", ";", "}", "//  Local cache for static content.", "self", ".", "zcache", "[", "'index.html'", "]", "=", "fs", ".", "readFileSync", "(", "'./index.html'", ")", ";", "}", ";", "/**\n     *  Retrieve entry (content) from cache.\n     *  @param {string} key  Key identifying content to retrieve from cache.\n     */", "self", ".", "cache_get", "=", "function", "(", "key", ")", "{", "return", "self", ".", "zcache", "[", "key", "]", ";", "}", ";", "/**\n     *  terminator === the termination handler\n     *  Terminate server on receipt of the specified signal.\n     *  @param {string} sig  Signal to terminate on.\n     */", "self", ".", "terminator", "=", "function", "(", "sig", ")", "{", "if", "(", "typeof", "sig", "===", "\"string\"", ")", "{", "console", ".", "log", "(", "'%s: Received %s - terminating sample app ...'", ",", "Date", "(", "Date", ".", "now", "(", ")", ")", ",", "sig", ")", ";", "process", ".", "exit", "(", "1", ")", ";", "}", "console", ".", "log", "(", "'%s: Node server stopped.'", ",", "Date", "(", "Date", ".", "now", "(", ")", ")", ")", ";", "}", ";", "/**\n     *  Setup termination handlers (for exit and a list of signals).\n     */", "self", ".", "setupTerminationHandlers", "=", "function", "(", ")", "{", "//  Process on exit and signals.", "process", ".", "on", "(", "'exit'", ",", "function", "(", ")", "{", "self", ".", "terminator", "(", ")", ";", "}", ")", ";", "// Removed 'SIGPIPE' from the list - bugz 852598.", "[", "'SIGHUP'", ",", "'SIGINT'", ",", "'SIGQUIT'", ",", "'SIGILL'", ",", "'SIGTRAP'", ",", "'SIGABRT'", ",", "'SIGBUS'", ",", "'SIGFPE'", ",", "'SIGUSR1'", ",", "'SIGSEGV'", ",", "'SIGUSR2'", ",", "'SIGTERM'", "]", ".", "forEach", "(", "function", "(", "element", ",", "index", ",", "array", ")", "{", "process", ".", "on", "(", "element", ",", "function", "(", ")", "{", "self", ".", "terminator", "(", "element", ")", ";", "}", ")", ";", "}", ")", ";", "}", ";", "/*  ================================================================  */", "/*  App server functions (main app logic here).                       */", "/*  ================================================================  */", "/**\n     *  Create the routing table entries + handlers for the application.\n     */", "self", ".", "createRoutes", "=", "function", "(", ")", "{", "self", ".", "routes", "=", "{", "}", ";", "self", ".", "routes", ".", "get", "=", "{", "'/'", ":", "function", "(", "req", ",", "res", ")", "{", "res", ".", "setHeader", "(", "'Content-Type'", ",", "'text/html'", ")", ";", "res", ".", "send", "(", "self", ".", "cache_get", "(", "'index.html'", ")", ")", ";", "}", ",", "'/asciimo'", ":", "function", "(", "req", ",", "res", ")", "{", "var", "link", "=", "\"http://i.imgur.com/kmbjB.png\"", ";", "res", ".", "send", "(", "\"<html><body><img src='\"", "+", "link", "+", "\"'></body></html>\"", ")", ";", "}", ",", "'/jenkins/body_missing/build'", ":", "function", "(", "req", ",", "res", ")", "{", "res", ".", "setHeader", "(", "'Content-Type'", ",", "'text/html'", ")", ";", "res", ".", "send", "(", "'/jenkins/body_missing/build - GET request'", ")", ";", "}", ",", "'/jenkins/dev_branch/build'", ":", "function", "(", "req", ",", "res", ")", "{", "res", ".", "setHeader", "(", "'Content-Type'", ",", "'text/html'", ")", ";", "res", ".", "send", "(", "'/jenkins/dev_branch/build - GET request'", ")", ";", "}", ",", "'/jenkins/stable_branch/build'", ":", "function", "(", "req", ",", "res", ")", "{", "res", ".", "setHeader", "(", "'Content-Type'", ",", "'text/html'", ")", ";", "res", ".", "send", "(", "'/jenkins/stable_branch/build - GET request'", ")", ";", "}", "}", ";", "self", ".", "routes", ".", "post", "=", "{", "'/api/jenkins'", ":", "function", "(", "req", ",", "res", ")", "{", "// console.info('req.body.ref = ', req.body.ref);", "var", "pattern", "=", "/", "(?:refs\\/heads\\/)(.*)", "/", ";", "if", "(", "req", ".", "body", "&&", "req", ".", "body", ".", "ref", ")", "{", "console", ".", "info", "(", "'req.body.ref = '", ",", "req", ".", "body", ".", "ref", ")", ";", "branchName", "=", "req", ".", "body", ".", "ref", ".", "match", "(", "pattern", ")", ";", "}", "else", "{", "branchName", "=", "'body_missing'", ";", "}", "var", "options", "=", "{", "host", ":", "'localhost'", ",", "port", ":", "8080", ",", "// path: '/jenkins/' + dev_branch/build',", "path", ":", "'/jenkins/'", "+", "branchName", "+", "'/build'", ",", "method", ":", "'GET'", ",", "headers", ":", "req", ".", "headers", "}", ";", "var", "getJenkins", "=", "http", ".", "request", "(", "options", ",", "function", "(", "resJenkins", ")", "{", "resJenkins", ".", "setEncoding", "(", "'utf8'", ")", ";", "// pass request data to parent post route", "resJenkins", ".", "on", "(", "'data'", ",", "function", "(", "chunk", ")", "{", "res", ".", "write", "(", "chunk", ")", ";", "}", ")", ";", "resJenkins", ".", "on", "(", "'close'", ",", "function", "(", ")", "{", "res", ".", "writeHead", "(", "resJenkins", ".", "statusCode", ")", ";", "res", ".", "end", "(", ")", ";", "}", ")", ";", "resJenkins", ".", "on", "(", "'end'", ",", "function", "(", ")", "{", "res", ".", "end", "(", ")", ";", "}", ")", ";", "}", ")", ".", "on", "(", "'error'", ",", "function", "(", "e", ")", "{", "console", ".", "info", "(", "e", ")", ";", "res", ".", "writeHead", "(", "500", ")", ";", "res", ".", "end", "(", ")", ";", "}", ")", ";", "getJenkins", ".", "end", "(", ")", ";", "}", "}", ";", "}", ";", "/**\n     *  Initialize the server (express) and create the routes and register\n     *  the handlers.\n     */", "self", ".", "initializeServer", "=", "function", "(", ")", "{", "var", "r", ";", "self", ".", "createRoutes", "(", ")", ";", "self", ".", "app", "=", "express", ".", "createServer", "(", ")", ";", "self", ".", "app", ".", "use", "(", "bodyParser", ".", "json", "(", ")", ")", ";", "//  Add GET handlers for the app (from the routes).", "for", "(", "r", "in", "self", ".", "routes", ".", "get", ")", "{", "if", "(", "self", ".", "routes", ".", "get", ".", "hasOwnProperty", "(", "r", ")", ")", "{", "self", ".", "app", ".", "get", "(", "r", ",", "self", ".", "routes", ".", "get", "[", "r", "]", ")", ";", "}", "}", "//  Add POST handlers for the app (from the routes).", "for", "(", "r", "in", "self", ".", "routes", ".", "post", ")", "{", "if", "(", "self", ".", "routes", ".", "post", ".", "hasOwnProperty", "(", "r", ")", ")", "{", "self", ".", "app", ".", "post", "(", "r", ",", "self", ".", "routes", ".", "post", "[", "r", "]", ")", ";", "}", "}", "// console.info(self.routes);", "}", ";", "/**\n     *  Initializes the sample application.\n     */", "self", ".", "initialize", "=", "function", "(", ")", "{", "self", ".", "setupVariables", "(", ")", ";", "self", ".", "populateCache", "(", ")", ";", "self", ".", "setupTerminationHandlers", "(", ")", ";", "// Create the express server and routes.", "self", ".", "initializeServer", "(", ")", ";", "}", ";", "/**\n     *  Start the server (starts up the sample application).\n     */", "self", ".", "start", "=", "function", "(", ")", "{", "//  Start the app on the specific interface (and port).", "self", ".", "app", ".", "listen", "(", "self", ".", "port", ",", "self", ".", "ipaddress", ",", "function", "(", ")", "{", "console", ".", "log", "(", "'%s: Node server started on %s:%d ...'", ",", "Date", "(", "Date", ".", "now", "(", ")", ")", ",", "self", ".", "ipaddress", ",", "self", ".", "port", ")", ";", "}", ")", ";", "}", ";", "}"], "original_docstring": "\nDefine the sample application.\n", "docstring": {"block_comment": "Define the sample application.", "line_comment": ["Scope.", "", "Helper functions.", "", "Set up server IP address and port   using env variables defaults.", "Set the environment variables we need.", "Log errors on OpenShift but continue w  127.0.0.1   this", "allows us to run test the app locally.", "Populate the cache.", "Local cache for static content.", "Retrieve entry  content  from cache. \n param  string  key  Key identifying content to retrieve from cache.", "terminator     the termination handler \nTerminate server on receipt of the specified signal. \n param  string  sig  Signal to terminate on.", "Setup termination handlers  for exit and a list of signals .", "Process on exit and signals.", "Removed  SIGPIPE  from the list   bugz 852598.", "", "App server functions  main app logic here .", "", "Create the routing table entries   handlers for the application.", "console.info  req.body.ref    , req.body.ref  ", null, "pass request data to parent post route", "Initialize the server  express  and create the routes and register \nthe handlers.", "Add GET handlers for the app  from the routes .", "Add POST handlers for the app  from the routes .", "console.info self.routes  ", "Initializes the sample application.", "Create the express server and routes.", "Start the server  starts up the sample application .", "Start the app on the specific interface  and port ."]}, "docstring_tokens": ["Define", "the", "sample", "application", "."], "sample_id": 591, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004504", "repo": "pquery/elastic-node", "path": "node_modules/geddy/site/app/controllers/main.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (docType, topic, callback) {\n        fetch('docs/' + docType + '/' + topic.path + '.md', function (data) {\n          var content = data\n            , name = topic.name\n            , subHeads = []\n            , lines = content.split('\\n');\n          for (var l in lines) {\n            if (lines[l].indexOf('#### ') == 0) {\n              subHeads.push(geddy.string.trim(lines[l].replace('#### ', '')));\n            }\n          }\n          callback({\n            name: name\n          , content: content\n          , subs: subHeads\n          });\n        });\n      }", "code_tokens": ["function", "(", "docType", ",", "topic", ",", "callback", ")", "{", "fetch", "(", "'docs/'", "+", "docType", "+", "'/'", "+", "topic", ".", "path", "+", "'.md'", ",", "function", "(", "data", ")", "{", "var", "content", "=", "data", ",", "name", "=", "topic", ".", "name", ",", "subHeads", "=", "[", "]", ",", "lines", "=", "content", ".", "split", "(", "'\\n'", ")", ";", "for", "(", "var", "l", "in", "lines", ")", "{", "if", "(", "lines", "[", "l", "]", ".", "indexOf", "(", "'#### '", ")", "==", "0", ")", "{", "subHeads", ".", "push", "(", "geddy", ".", "string", ".", "trim", "(", "lines", "[", "l", "]", ".", "replace", "(", "'#### '", ",", "''", ")", ")", ")", ";", "}", "}", "callback", "(", "{", "name", ":", "name", ",", "content", ":", "content", ",", "subs", ":", "subHeads", "}", ")", ";", "}", ")", ";", "}"], "original_docstring": "Utility methods ===================== Fetch from either GH or from the local FS inside the repo", "docstring": {"block_comment": "Utility methods                       Fetch from either GH or from the local FS inside the repo", "line_comment": null}, "docstring_tokens": ["Utility", "methods", "Fetch", "from", "either", "GH", "or", "from", "the", "local", "FS", "inside", "the", "repo"], "sample_id": 592, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004507", "repo": "MGApcDev/sasstex", "path": "src/scripts/main.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\r\n                var timer = setInterval(function () {\r\n                    if (window.load) {\r\n                        var mp = dom.find('.MathJax_Preview').length,     // MathJax equations detected\r\n                            m = dom.find('.MathJax').length,              // MathJax equations prepared\r\n                            mpr = dom.find('.MathJax_Processing').length; // MathJax equations being processed\r\n                        if (mp === m && mpr === 0) { // All equations prepared and finished processing\r\n                            clearInterval(timer);\r\n                            callback();\r\n                        }\r\n                    }\r\n                }, 100);\r\n            }", "code_tokens": ["function", "(", ")", "{", "var", "timer", "=", "setInterval", "(", "function", "(", ")", "{", "if", "(", "window", ".", "load", ")", "{", "var", "mp", "=", "dom", ".", "find", "(", "'.MathJax_Preview'", ")", ".", "length", ",", "// MathJax equations detected\r", "m", "=", "dom", ".", "find", "(", "'.MathJax'", ")", ".", "length", ",", "// MathJax equations prepared\r", "mpr", "=", "dom", ".", "find", "(", "'.MathJax_Processing'", ")", ".", "length", ";", "// MathJax equations being processed\r", "if", "(", "mp", "===", "m", "&&", "mpr", "===", "0", ")", "{", "// All equations prepared and finished processing\r", "clearInterval", "(", "timer", ")", ";", "callback", "(", ")", ";", "}", "}", "}", ",", "100", ")", ";", "}"], "original_docstring": "Wait with callback till math is rendered.", "docstring": {"block_comment": "Wait with callback till math is rendered.", "line_comment": ["MathJax equations detected", "MathJax equations prepared", "MathJax equations being processed", "All equations prepared and finished processing"]}, "docstring_tokens": ["Wait", "with", "callback", "till", "math", "is", "rendered", "."], "sample_id": 593, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004512", "repo": "jeremyosborne/python", "path": "general/lies-damnlies-stats/client/js/appcache.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        // This should work, but on iOS using Ember, the window.location.reload\n        // isn't causing a page refresh, even though this click callback is\n        // being called. The refresh is embedded in the template for now since\n        // it works quite well.\n        //window.location.reload();\n    }", "code_tokens": ["function", "(", ")", "{", "// This should work, but on iOS using Ember, the window.location.reload", "// isn't causing a page refresh, even though this click callback is", "// being called. The refresh is embedded in the template for now since", "// it works quite well.", "//window.location.reload();", "}"], "original_docstring": "\nHandle click events on the view to refresh the page.\n", "docstring": {"block_comment": "Handle click events on the view to refresh the page.", "line_comment": ["This should work, but on iOS using Ember, the window.location.reload", "isn t causing a page refresh, even though this click callback is", "being called. The refresh is embedded in the template for now since", "it works quite well.", "window.location.reload   "]}, "docstring_tokens": ["Handle", "click", "events", "on", "the", "view", "to", "refresh", "the", "page", "."], "sample_id": 594, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004513", "repo": "jeremyosborne/python", "path": "general/lies-damnlies-stats/client/js/appcache.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        var self = this;\n        \n        this._super();\n        \n        // Setup applicationCache listeners\n        if (window.applicationCache) {\n            if (window.applicationCache.status == 0) {\n                // According to the spec: \n                //    if status == 0 == UNCACHED\n                // than we're not associated with any cache object and we should \n                // proceed like normal.\n                self.ready();\n            }\n            else {\n                // Otherwise, we have a cache and there will be events\n                // associated with it.\n                // Fix jquery (note: figure out if/why this is really needed.)\n                jQuery.ajaxSetup({isLocal:true});\n                \n                // It looks like there are three final events, and only one\n                // will fire:\n                // Fired after the first cache of the manifest.\n                window.applicationCache.addEventListener('cached', function() {\n                    self.ready();\n                }, false);\n                // Fired after the first download of the manifest.\n                window.applicationCache.addEventListener('noupdate', function() {\n                    self.ready();\n                }, false);\n                // Fired when there is a cache update ready.\n                window.applicationCache.addEventListener('updateready', function() {\n                    self.notifyInfo(self.get(\"updateMessage\").loc());\n                    // Display a reload button.\n                    App.pageBodyController.addView(AppCacheRefreshView.create());\n                    self.ready();\n                }, false);\n            }\n        }\n        else {\n            // No cache, proceed like we're online.\n            self.ready();\n        }\n\n    }", "code_tokens": ["function", "(", ")", "{", "var", "self", "=", "this", ";", "this", ".", "_super", "(", ")", ";", "// Setup applicationCache listeners", "if", "(", "window", ".", "applicationCache", ")", "{", "if", "(", "window", ".", "applicationCache", ".", "status", "==", "0", ")", "{", "// According to the spec: ", "//    if status == 0 == UNCACHED", "// than we're not associated with any cache object and we should ", "// proceed like normal.", "self", ".", "ready", "(", ")", ";", "}", "else", "{", "// Otherwise, we have a cache and there will be events", "// associated with it.", "// Fix jquery (note: figure out if/why this is really needed.)", "jQuery", ".", "ajaxSetup", "(", "{", "isLocal", ":", "true", "}", ")", ";", "// It looks like there are three final events, and only one", "// will fire:", "// Fired after the first cache of the manifest.", "window", ".", "applicationCache", ".", "addEventListener", "(", "'cached'", ",", "function", "(", ")", "{", "self", ".", "ready", "(", ")", ";", "}", ",", "false", ")", ";", "// Fired after the first download of the manifest.", "window", ".", "applicationCache", ".", "addEventListener", "(", "'noupdate'", ",", "function", "(", ")", "{", "self", ".", "ready", "(", ")", ";", "}", ",", "false", ")", ";", "// Fired when there is a cache update ready.", "window", ".", "applicationCache", ".", "addEventListener", "(", "'updateready'", ",", "function", "(", ")", "{", "self", ".", "notifyInfo", "(", "self", ".", "get", "(", "\"updateMessage\"", ")", ".", "loc", "(", ")", ")", ";", "// Display a reload button.", "App", ".", "pageBodyController", ".", "addView", "(", "AppCacheRefreshView", ".", "create", "(", ")", ")", ";", "self", ".", "ready", "(", ")", ";", "}", ",", "false", ")", ";", "}", "}", "else", "{", "// No cache, proceed like we're online.", "self", ".", "ready", "(", ")", ";", "}", "}"], "original_docstring": "\nInitialize listeners on the application cache.\n", "docstring": {"block_comment": "Initialize listeners on the application cache.", "line_comment": ["Setup applicationCache listeners", "According to the spec ", "if status    0    UNCACHED", "than we re not associated with any cache object and we should", "proceed like normal.", "Otherwise, we have a cache and there will be events", "associated with it.", "Fix jquery  note  figure out if why this is really needed. ", "It looks like there are three final events, and only one", "will fire ", "Fired after the first cache of the manifest.", "Fired after the first download of the manifest.", "Fired when there is a cache update ready.", "Display a reload button.", "No cache, proceed like we re online."]}, "docstring_tokens": ["Initialize", "listeners", "on", "the", "application", "cache", "."], "sample_id": 595, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004561", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (componentClasses) {\n    _assign(tagToComponentClass, componentClasses);\n  }", "code_tokens": ["function", "(", "componentClasses", ")", "{", "_assign", "(", "tagToComponentClass", ",", "componentClasses", ")", ";", "}"], "original_docstring": "This accepts a keyed object with classes as values. Each key represents a tag. That particular tag will use this class instead of the generic one.", "docstring": {"block_comment": "This accepts a keyed object with classes as values. Each key represents a tag. That particular tag will use this class instead of the generic one.", "line_comment": null}, "docstring_tokens": ["This", "accepts", "a", "keyed", "object", "with", "classes", "as", "values", ".", "Each", "key", "represents", "a", "tag", ".", "That", "particular", "tag", "will", "use", "this", "class", "instead", "of", "the", "generic", "one", "."], "sample_id": 596, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004564", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "capture", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps a top-level event by using event capturing.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps a top level event by using event capturing.", "line_comment": null}, "docstring_tokens": ["Traps", "a", "top", "level", "event", "by", "using", "event", "capturing", "."], "sample_id": 597, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004564", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "capture", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps a top-level event by using event capturing.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps a top level event by using event capturing.", "line_comment": null}, "docstring_tokens": ["Record", "from", "EventConstants", "."], "sample_id": 597, "prompt_tokens": ["<javascript>", "<param>", "topLevelType"], "comment_type": "param", "sentence_id": 1}
{"id": "21004564", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "capture", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps a top-level event by using event capturing.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps a top level event by using event capturing.", "line_comment": null}, "docstring_tokens": ["Event", "name", "(", "e", ".", "g", ".", "click", ")", "."], "sample_id": 597, "prompt_tokens": ["<javascript>", "<param>", "handlerBaseName"], "comment_type": "param", "sentence_id": 2}
{"id": "21004564", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "capture", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps a top-level event by using event capturing.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps a top level event by using event capturing.", "line_comment": null}, "docstring_tokens": ["Element", "on", "which", "to", "attach", "listener", "."], "sample_id": 597, "prompt_tokens": ["<javascript>", "<param>", "handle"], "comment_type": "param", "sentence_id": 3}
{"id": "21004564", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "capture", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps a top-level event by using event capturing.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps a top level event by using event capturing.", "line_comment": null}, "docstring_tokens": ["An", "object", "with", "a", "remove", "function", "which", "will", "forcefully"], "sample_id": 597, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 4}
{"id": "21004565", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "listen", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps top-level events by using event bubbling.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps top level events by using event bubbling.", "line_comment": null}, "docstring_tokens": ["Traps", "top", "level", "events", "by", "using", "event", "bubbling", "."], "sample_id": 598, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004565", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "listen", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps top-level events by using event bubbling.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps top level events by using event bubbling.", "line_comment": null}, "docstring_tokens": ["Record", "from", "EventConstants", "."], "sample_id": 598, "prompt_tokens": ["<javascript>", "<param>", "topLevelType"], "comment_type": "param", "sentence_id": 1}
{"id": "21004565", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "listen", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps top-level events by using event bubbling.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps top level events by using event bubbling.", "line_comment": null}, "docstring_tokens": ["Event", "name", "(", "e", ".", "g", ".", "click", ")", "."], "sample_id": 598, "prompt_tokens": ["<javascript>", "<param>", "handlerBaseName"], "comment_type": "param", "sentence_id": 2}
{"id": "21004565", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "listen", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps top-level events by using event bubbling.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps top level events by using event bubbling.", "line_comment": null}, "docstring_tokens": ["Element", "on", "which", "to", "attach", "listener", "."], "sample_id": 598, "prompt_tokens": ["<javascript>", "<param>", "handle"], "comment_type": "param", "sentence_id": 3}
{"id": "21004565", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  }", "code_tokens": ["function", "(", "topLevelType", ",", "handlerBaseName", ",", "handle", ")", "{", "var", "element", "=", "handle", ";", "if", "(", "!", "element", ")", "{", "return", "null", ";", "}", "return", "EventListener", ".", "listen", "(", "element", ",", "handlerBaseName", ",", "ReactEventListener", ".", "dispatchEvent", ".", "bind", "(", "null", ",", "topLevelType", ")", ")", ";", "}"], "original_docstring": "\nTraps top-level events by using event bubbling.\n\n@param {string} topLevelType Record from `EventConstants`.\n@param {string} handlerBaseName Event name (e.g. \"click\").\n@param {object} handle Element on which to attach listener.\n@return {?object} An object with a remove function which will forcefully\nremove the listener.\n@internal\n", "docstring": {"block_comment": "Traps top level events by using event bubbling.", "line_comment": null}, "docstring_tokens": ["An", "object", "with", "a", "remove", "function", "which", "will", "forcefully"], "sample_id": 598, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 4}
{"id": "21004608", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (InjectedEventPluginOrder) {\n    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  }", "code_tokens": ["function", "(", "InjectedEventPluginOrder", ")", "{", "!", "!", "EventPluginOrder", "?", "process", ".", "env", ".", "NODE_ENV", "!==", "'production'", "?", "invariant", "(", "false", ",", "'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.'", ")", ":", "_prodInvariant", "(", "'101'", ")", ":", "void", "0", ";", "// Clone the ordering so it cannot be dynamically mutated.", "EventPluginOrder", "=", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "InjectedEventPluginOrder", ")", ";", "recomputePluginOrdering", "(", ")", ";", "}"], "original_docstring": "\nInjects an ordering of plugins (by plugin name). This allows the ordering\nto be decoupled from injection of the actual plugins so that ordering is\nalways deterministic regardless of packaging, on-the-fly injection, etc.\n\n@param {array} InjectedEventPluginOrder\n@internal\n@see {EventPluginHub.injection.injectEventPluginOrder}\n", "docstring": {"block_comment": "Injects an ordering of plugins  by plugin name . This allows the ordering \nto be decoupled from injection of the actual plugins so that ordering is \nalways deterministic regardless of packaging, on the fly injection, etc.", "line_comment": ["Clone the ordering so it cannot be dynamically mutated."]}, "docstring_tokens": ["Injects", "an", "ordering", "of", "plugins", "by", "plugin", "name", ".", "This", "allows", "the", "ordering", "to", "be", "decoupled", "from", "injection", "of", "the", "actual", "plugins", "so", "that", "ordering", "is", "always", "deterministic", "regardless", "of", "packaging", "on", "the", "fly", "injection", "etc", "."], "sample_id": 599, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004627", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    this.reset();\n  }", "code_tokens": ["function", "(", ")", "{", "this", ".", "reset", "(", ")", ";", "}"], "original_docstring": "\n`PooledClass` looks for this.\n", "docstring": {"block_comment": " PooledClass  looks for this.", "line_comment": null}, "docstring_tokens": ["PooledClass", "looks", "for", "this", "."], "sample_id": 600, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004628", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    this._callbacks = null;\n    this._contexts = null;\n  }", "code_tokens": ["function", "(", ")", "{", "this", ".", "_callbacks", "=", "null", ";", "this", ".", "_contexts", "=", "null", ";", "}"], "original_docstring": "\nResets the internal queue.\n\n@internal\n", "docstring": {"block_comment": "Resets the internal queue.", "line_comment": null}, "docstring_tokens": ["Resets", "the", "internal", "queue", "."], "sample_id": 601, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004629", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  }", "code_tokens": ["function", "(", ")", "{", "var", "callbacks", "=", "this", ".", "_callbacks", ";", "var", "contexts", "=", "this", ".", "_contexts", ";", "if", "(", "callbacks", ")", "{", "!", "(", "callbacks", ".", "length", "===", "contexts", ".", "length", ")", "?", "process", ".", "env", ".", "NODE_ENV", "!==", "'production'", "?", "invariant", "(", "false", ",", "'Mismatched list of contexts in callback queue'", ")", ":", "_prodInvariant", "(", "'24'", ")", ":", "void", "0", ";", "this", ".", "_callbacks", "=", "null", ";", "this", ".", "_contexts", "=", "null", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "callbacks", ".", "length", ";", "i", "++", ")", "{", "callbacks", "[", "i", "]", ".", "call", "(", "contexts", "[", "i", "]", ")", ";", "}", "callbacks", ".", "length", "=", "0", ";", "contexts", ".", "length", "=", "0", ";", "}", "}"], "original_docstring": "\nInvokes all enqueued callbacks and clears the queue. This is invoked after\nthe DOM representation of a component has been created or updated.\n\n@internal\n", "docstring": {"block_comment": "Invokes all enqueued callbacks and clears the queue. This is invoked after \nthe DOM representation of a component has been created or updated.", "line_comment": null}, "docstring_tokens": ["Invokes", "all", "enqueued", "callbacks", "and", "clears", "the", "queue", ".", "This", "is", "invoked", "after", "the", "DOM", "representation", "of", "a", "component", "has", "been", "created", "or", "updated", "."], "sample_id": 602, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004630", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  }", "code_tokens": ["function", "(", "callback", ",", "context", ")", "{", "this", ".", "_callbacks", "=", "this", ".", "_callbacks", "||", "[", "]", ";", "this", ".", "_contexts", "=", "this", ".", "_contexts", "||", "[", "]", ";", "this", ".", "_callbacks", ".", "push", "(", "callback", ")", ";", "this", ".", "_contexts", ".", "push", "(", "context", ")", ";", "}"], "original_docstring": "\nEnqueues a callback to be invoked when `notifyAll` is invoked.\n\n@param {function} callback Invoked when `notifyAll` is invoked.\n@param {?object} context Context to call `callback` with.\n@internal\n", "docstring": {"block_comment": "Enqueues a callback to be invoked when  notifyAll  is invoked.", "line_comment": null}, "docstring_tokens": ["Enqueues", "a", "callback", "to", "be", "invoked", "when", "notifyAll", "is", "invoked", "."], "sample_id": 603, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004630", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  }", "code_tokens": ["function", "(", "callback", ",", "context", ")", "{", "this", ".", "_callbacks", "=", "this", ".", "_callbacks", "||", "[", "]", ";", "this", ".", "_contexts", "=", "this", ".", "_contexts", "||", "[", "]", ";", "this", ".", "_callbacks", ".", "push", "(", "callback", ")", ";", "this", ".", "_contexts", ".", "push", "(", "context", ")", ";", "}"], "original_docstring": "\nEnqueues a callback to be invoked when `notifyAll` is invoked.\n\n@param {function} callback Invoked when `notifyAll` is invoked.\n@param {?object} context Context to call `callback` with.\n@internal\n", "docstring": {"block_comment": "Enqueues a callback to be invoked when  notifyAll  is invoked.", "line_comment": null}, "docstring_tokens": ["Invoked", "when", "notifyAll", "is", "invoked", "."], "sample_id": 603, "prompt_tokens": ["<javascript>", "<param>", "callback"], "comment_type": "param", "sentence_id": 1}
{"id": "21004630", "repo": "kendricktan/laice", "path": "static/js/inner-stories.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  }", "code_tokens": ["function", "(", "callback", ",", "context", ")", "{", "this", ".", "_callbacks", "=", "this", ".", "_callbacks", "||", "[", "]", ";", "this", ".", "_contexts", "=", "this", ".", "_contexts", "||", "[", "]", ";", "this", ".", "_callbacks", ".", "push", "(", "callback", ")", ";", "this", ".", "_contexts", ".", "push", "(", "context", ")", ";", "}"], "original_docstring": "\nEnqueues a callback to be invoked when `notifyAll` is invoked.\n\n@param {function} callback Invoked when `notifyAll` is invoked.\n@param {?object} context Context to call `callback` with.\n@internal\n", "docstring": {"block_comment": "Enqueues a callback to be invoked when  notifyAll  is invoked.", "line_comment": null}, "docstring_tokens": ["Context", "to", "call", "callback", "with", "."], "sample_id": 603, "prompt_tokens": ["<javascript>", "<param>", "context"], "comment_type": "param", "sentence_id": 2}
{"id": "21004636", "repo": "Wells0420/node-excel", "path": "node_modules/xlsx/xlsx.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(x) {\n\t\tvar z = {};\n\t\tif(!x) return z;\n\t\tvar y;\n\t\t/* 18.4.12 t ST_Xstring (Plaintext String) */\n\t\tif(x[1] === 't') {\n\t\t\tz.t = utf8read(unescapexml(x.replace(/<[^>]*>/g,\"\")));\n\t\t\tz.raw = x;\n\t\t\tz.r = z.t;\n\t\t}\n\t\t/* 18.4.4 r CT_RElt (Rich Text Run) */\n\t\telse if((y = x.match(/<r>/))) {\n\t\t\tz.raw = x;\n\t\t\t/* TODO: properly parse (note: no other valid child can have body text) */\n\t\t\tz.t = utf8read(unescapexml(x.replace(/<[^>]*>/gm,\"\")));\n\t\t\tz.r = parse_rs(x);\n\t\t}\n\t\t/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n\t\t/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n\t\treturn z;\n\t}", "code_tokens": ["function", "(", "x", ")", "{", "var", "z", "=", "{", "}", ";", "if", "(", "!", "x", ")", "return", "z", ";", "var", "y", ";", "/* 18.4.12 t ST_Xstring (Plaintext String) */", "if", "(", "x", "[", "1", "]", "===", "'t'", ")", "{", "z", ".", "t", "=", "utf8read", "(", "unescapexml", "(", "x", ".", "replace", "(", "/", "<[^>]*>", "/", "g", ",", "\"\"", ")", ")", ")", ";", "z", ".", "raw", "=", "x", ";", "z", ".", "r", "=", "z", ".", "t", ";", "}", "/* 18.4.4 r CT_RElt (Rich Text Run) */", "else", "if", "(", "(", "y", "=", "x", ".", "match", "(", "/", "<r>", "/", ")", ")", ")", "{", "z", ".", "raw", "=", "x", ";", "/* TODO: properly parse (note: no other valid child can have body text) */", "z", ".", "t", "=", "utf8read", "(", "unescapexml", "(", "x", ".", "replace", "(", "/", "<[^>]*>", "/", "gm", ",", "\"\"", ")", ")", ")", ";", "z", ".", "r", "=", "parse_rs", "(", "x", ")", ";", "}", "/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */", "/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */", "return", "z", ";", "}"], "original_docstring": "/* 18.4.8 si CT_Rst", "docstring": {"block_comment": "18.4.8 si CT_Rst", "line_comment": ["18.4.12 t ST_Xstring  Plaintext String ", "18.4.4 r CT_RElt  Rich Text Run ", null, "18.4.3 phoneticPr CT_PhoneticPr  TODO  needed for Asian support ", "18.4.6 rPh CT_PhoneticRun  TODO  needed for Asian support "]}, "docstring_tokens": ["18", ".", "4", ".", "8", "si", "CT_Rst"], "sample_id": 604, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004637", "repo": "Wells0420/node-excel", "path": "node_modules/xlsx/xlsx.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(rpr, intro, outro) {\n\t\t\tvar font = {};\n\t\t\trpr.match(/<[^>]*>/g).forEach(function(x) {\n\t\t\t\tvar y = parsexmltag(x);\n\t\t\t\tswitch(y[0]) {\n\t\t\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\t\t\t/* ** not required . */\n\t\t\t\t\tcase '<condense': break;\n\t\t\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\t\t\t/* ** not required . */\n\t\t\t\t\tcase '<extend': break;\n\t\t\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\t\t\t/* ** not required . */\n\t\t\t\t\tcase '<shadow': break;\n\n\t\t\t\t\t/* 18.4.1 charset CT_IntProperty TODO */\n\t\t\t\t\tcase '<charset': break;\n\n\t\t\t\t\t/* 18.4.2 outline CT_BooleanProperty TODO */\n\t\t\t\t\tcase '<outline': break;\n\n\t\t\t\t\t/* 18.4.5 rFont CT_FontName */\n\t\t\t\t\tcase '<rFont': font.name = y.val; break;\n\n\t\t\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\t\t\tcase '<sz': font.sz = y.val; break;\n\n\t\t\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\t\t\tcase '<strike':\n\t\t\t\t\t\tif(!y.val) break;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase '<strike/>': font.strike = 1; break;\n\t\t\t\t\tcase '</strike>': break;\n\n\t\t\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\t\t\tcase '<u':\n\t\t\t\t\t\tif(!y.val) break;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase '<u/>': font.u = 1; break;\n\t\t\t\t\tcase '</u>': break;\n\n\t\t\t\t\t/* 18.8.2 b */\n\t\t\t\t\tcase '<b':\n\t\t\t\t\t\tif(!y.val) break;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase '<b/>': font.b = 1; break;\n\t\t\t\t\tcase '</b>': break;\n\n\t\t\t\t\t/* 18.8.26 i */\n\t\t\t\t\tcase '<i':\n\t\t\t\t\t\tif(!y.val) break;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase '<i/>': font.i = 1; break;\n\t\t\t\t\tcase '</i>': break;\n\n\t\t\t\t\t/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n\t\t\t\t\tcase '<color':\n\t\t\t\t\t\tif(y.rgb) font.color = y.rgb.substr(2,6);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t/* 18.8.18 family ST_FontFamily */\n\t\t\t\t\tcase '<family': font.family = y.val; break;\n\n\t\t\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n\t\t\t\t\tcase '<vertAlign': break;\n\n\t\t\t\t\t/* 18.8.35 scheme CT_FontScheme TODO */\n\t\t\t\t\tcase '<scheme': break;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(y[0][2] !== '/') throw 'Unrecognized rich format ' + y[0];\n\t\t\t\t}\n\t\t\t});\n\t\t\t/* TODO: These should be generated styles, not inline */\n\t\t\tvar style = [];\n\t\t\tif(font.b) style.push(\"font-weight: bold;\");\n\t\t\tif(font.i) style.push(\"font-style: italic;\");\n\t\t\tintro.push('<span style=\"' + style.join(\"\") + '\">');\n\t\t\toutro.push(\"</span>\");\n\t\t}", "code_tokens": ["function", "(", "rpr", ",", "intro", ",", "outro", ")", "{", "var", "font", "=", "{", "}", ";", "rpr", ".", "match", "(", "/", "<[^>]*>", "/", "g", ")", ".", "forEach", "(", "function", "(", "x", ")", "{", "var", "y", "=", "parsexmltag", "(", "x", ")", ";", "switch", "(", "y", "[", "0", "]", ")", "{", "/* 18.8.12 condense CT_BooleanProperty */", "/* ** not required . */", "case", "'<condense'", ":", "break", ";", "/* 18.8.17 extend CT_BooleanProperty */", "/* ** not required . */", "case", "'<extend'", ":", "break", ";", "/* 18.8.36 shadow CT_BooleanProperty */", "/* ** not required . */", "case", "'<shadow'", ":", "break", ";", "/* 18.4.1 charset CT_IntProperty TODO */", "case", "'<charset'", ":", "break", ";", "/* 18.4.2 outline CT_BooleanProperty TODO */", "case", "'<outline'", ":", "break", ";", "/* 18.4.5 rFont CT_FontName */", "case", "'<rFont'", ":", "font", ".", "name", "=", "y", ".", "val", ";", "break", ";", "/* 18.4.11 sz CT_FontSize */", "case", "'<sz'", ":", "font", ".", "sz", "=", "y", ".", "val", ";", "break", ";", "/* 18.4.10 strike CT_BooleanProperty */", "case", "'<strike'", ":", "if", "(", "!", "y", ".", "val", ")", "break", ";", "/* falls through */", "case", "'<strike/>'", ":", "font", ".", "strike", "=", "1", ";", "break", ";", "case", "'</strike>'", ":", "break", ";", "/* 18.4.13 u CT_UnderlineProperty */", "case", "'<u'", ":", "if", "(", "!", "y", ".", "val", ")", "break", ";", "/* falls through */", "case", "'<u/>'", ":", "font", ".", "u", "=", "1", ";", "break", ";", "case", "'</u>'", ":", "break", ";", "/* 18.8.2 b */", "case", "'<b'", ":", "if", "(", "!", "y", ".", "val", ")", "break", ";", "/* falls through */", "case", "'<b/>'", ":", "font", ".", "b", "=", "1", ";", "break", ";", "case", "'</b>'", ":", "break", ";", "/* 18.8.26 i */", "case", "'<i'", ":", "if", "(", "!", "y", ".", "val", ")", "break", ";", "/* falls through */", "case", "'<i/>'", ":", "font", ".", "i", "=", "1", ";", "break", ";", "case", "'</i>'", ":", "break", ";", "/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */", "case", "'<color'", ":", "if", "(", "y", ".", "rgb", ")", "font", ".", "color", "=", "y", ".", "rgb", ".", "substr", "(", "2", ",", "6", ")", ";", "break", ";", "/* 18.8.18 family ST_FontFamily */", "case", "'<family'", ":", "font", ".", "family", "=", "y", ".", "val", ";", "break", ";", "/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */", "case", "'<vertAlign'", ":", "break", ";", "/* 18.8.35 scheme CT_FontScheme TODO */", "case", "'<scheme'", ":", "break", ";", "default", ":", "if", "(", "y", "[", "0", "]", "[", "2", "]", "!==", "'/'", ")", "throw", "'Unrecognized rich format '", "+", "y", "[", "0", "]", ";", "}", "}", ")", ";", "/* TODO: These should be generated styles, not inline */", "var", "style", "=", "[", "]", ";", "if", "(", "font", ".", "b", ")", "style", ".", "push", "(", "\"font-weight: bold;\"", ")", ";", "if", "(", "font", ".", "i", ")", "style", ".", "push", "(", "\"font-style: italic;\"", ")", ";", "intro", ".", "push", "(", "'<span style=\"'", "+", "style", ".", "join", "(", "\"\"", ")", "+", "'\">'", ")", ";", "outro", ".", "push", "(", "\"</span>\"", ")", ";", "}"], "original_docstring": "/* 18.4.7 rPr CT_RPrElt", "docstring": {"block_comment": "18.4.7 rPr CT_RPrElt", "line_comment": ["18.8.12 condense CT_BooleanProperty", "not required .", "18.8.17 extend CT_BooleanProperty", "not required .", "18.8.36 shadow CT_BooleanProperty", "not required .", "18.4.1 charset CT_IntProperty TODO", "18.4.2 outline CT_BooleanProperty TODO", "18.4.5 rFont CT_FontName", "18.4.11 sz CT_FontSize", "18.4.10 strike CT_BooleanProperty", "falls through", "18.4.13 u CT_UnderlineProperty", "falls through", "18.8.2 b", "falls through", "18.8.26 i", "falls through", "18.3.1.15 color CT_Color TODO  tint, theme, auto, indexed", "18.8.18 family ST_FontFamily", "18.4.14 vertAlign CT_VerticalAlignFontProperty TODO", "18.8.35 scheme CT_FontScheme TODO", null]}, "docstring_tokens": ["18", ".", "4", ".", "7", "rPr", "CT_RPrElt"], "sample_id": 605, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004638", "repo": "luisfbmelo/artistasluso", "path": "scripts/services/countries.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function ($q, $http, verb, url, body) {\n\n\t    var deferred = $q.defer();\n\n\t    var header = { 'Content-Type': 'application/json' };\n\n\t    var call = null != body ? $http[verb](url, body, {headers:header}) : $http[verb](url, {headers:header});\n\n\t    call.success(function (data) {\n\n\t        deferred.resolve(data);\n\n\t    }).error(function (err, status) {\n\n\t        deferred.reject({ err: err, status: status });\n\t    });\n\n\t    return deferred.promise;\n\t}", "code_tokens": ["function", "(", "$q", ",", "$http", ",", "verb", ",", "url", ",", "body", ")", "{", "var", "deferred", "=", "$q", ".", "defer", "(", ")", ";", "var", "header", "=", "{", "'Content-Type'", ":", "'application/json'", "}", ";", "var", "call", "=", "null", "!=", "body", "?", "$http", "[", "verb", "]", "(", "url", ",", "body", ",", "{", "headers", ":", "header", "}", ")", ":", "$http", "[", "verb", "]", "(", "url", ",", "{", "headers", ":", "header", "}", ")", ";", "call", ".", "success", "(", "function", "(", "data", ")", "{", "deferred", ".", "resolve", "(", "data", ")", ";", "}", ")", ".", "error", "(", "function", "(", "err", ",", "status", ")", "{", "deferred", ".", "reject", "(", "{", "err", ":", "err", ",", "status", ":", "status", "}", ")", ";", "}", ")", ";", "return", "deferred", ".", "promise", ";", "}"], "original_docstring": " Generate a service promise. ", "docstring": {"block_comment": "Generate a service promise.", "line_comment": null}, "docstring_tokens": ["Generate", "a", "service", "promise", "."], "sample_id": 606, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004639", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    var _this = this\n    var parameters = new Parameters()\n    parameters._attrs = _.cloneDeep(this._attrs)\n    parameters._filters = _.cloneDeep(this._filters)\n    parameters._params = (function () {\n      if (_.isArray(_this._params)) {\n        return Parameters._cloneArray(_this._params)\n      } else if (_.isObject(_this._params)) {\n        return Parameters._cloneObject(_this._params)\n      } else {\n        throw new Error('Invalid parameter value', _this._params)\n      }\n    })()\n    return parameters\n  }", "code_tokens": ["function", "(", ")", "{", "var", "_this", "=", "this", "var", "parameters", "=", "new", "Parameters", "(", ")", "parameters", ".", "_attrs", "=", "_", ".", "cloneDeep", "(", "this", ".", "_attrs", ")", "parameters", ".", "_filters", "=", "_", ".", "cloneDeep", "(", "this", ".", "_filters", ")", "parameters", ".", "_params", "=", "(", "function", "(", ")", "{", "if", "(", "_", ".", "isArray", "(", "_this", ".", "_params", ")", ")", "{", "return", "Parameters", ".", "_cloneArray", "(", "_this", ".", "_params", ")", "}", "else", "if", "(", "_", ".", "isObject", "(", "_this", ".", "_params", ")", ")", "{", "return", "Parameters", ".", "_cloneObject", "(", "_this", ".", "_params", ")", "}", "else", "{", "throw", "new", "Error", "(", "'Invalid parameter value'", ",", "_this", ".", "_params", ")", "}", "}", ")", "(", ")", "return", "parameters", "}"], "original_docstring": "\nClones the current instance of Parameters\n\n@return {Parameters}\n@api public\n", "docstring": {"block_comment": "Clones the current instance of Parameters", "line_comment": null}, "docstring_tokens": ["Clones", "the", "current", "instance", "of", "Parameters"], "sample_id": 607, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004640", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, filters) {\n    for (var key in filters) {\n      var param, isArrObj, filtersArray = filters[key]\n      if (_.isArray(filtersArray) && (param = this._fetch(key))) {\n        if (_.isArray(param._params) || (isArrObj = Object.keys(param._params).every(function (i) { return !_.isNaN(Number(i)) }))) {\n          if (isArrObj) {\n            params[key] = _.transform(param._params, function (result, value, key) {\n              result[key] = Parameters._isPrimitive(value) ? value : value.permit(filtersArray).value()\n            }, {})\n          } else if (!param._params.some(Parameters._isPrimitive)) {\n            params[key] = param._params.map(function (param) { return param.permit(filtersArray).value() })\n          } else {\n            params[key] = param._params.filter(function (elem) { return Parameters._isPrimitive(elem) })\n          }\n          continue\n        }\n        if (filtersArray.length > 0 && param instanceof Parameters) {\n          params[key] = param.permit(filtersArray).value()\n          continue\n        }\n      }\n    }\n  }", "code_tokens": ["function", "(", "params", ",", "filters", ")", "{", "for", "(", "var", "key", "in", "filters", ")", "{", "var", "param", ",", "isArrObj", ",", "filtersArray", "=", "filters", "[", "key", "]", "if", "(", "_", ".", "isArray", "(", "filtersArray", ")", "&&", "(", "param", "=", "this", ".", "_fetch", "(", "key", ")", ")", ")", "{", "if", "(", "_", ".", "isArray", "(", "param", ".", "_params", ")", "||", "(", "isArrObj", "=", "Object", ".", "keys", "(", "param", ".", "_params", ")", ".", "every", "(", "function", "(", "i", ")", "{", "return", "!", "_", ".", "isNaN", "(", "Number", "(", "i", ")", ")", "}", ")", ")", ")", "{", "if", "(", "isArrObj", ")", "{", "params", "[", "key", "]", "=", "_", ".", "transform", "(", "param", ".", "_params", ",", "function", "(", "result", ",", "value", ",", "key", ")", "{", "result", "[", "key", "]", "=", "Parameters", ".", "_isPrimitive", "(", "value", ")", "?", "value", ":", "value", ".", "permit", "(", "filtersArray", ")", ".", "value", "(", ")", "}", ",", "{", "}", ")", "}", "else", "if", "(", "!", "param", ".", "_params", ".", "some", "(", "Parameters", ".", "_isPrimitive", ")", ")", "{", "params", "[", "key", "]", "=", "param", ".", "_params", ".", "map", "(", "function", "(", "param", ")", "{", "return", "param", ".", "permit", "(", "filtersArray", ")", ".", "value", "(", ")", "}", ")", "}", "else", "{", "params", "[", "key", "]", "=", "param", ".", "_params", ".", "filter", "(", "function", "(", "elem", ")", "{", "return", "Parameters", ".", "_isPrimitive", "(", "elem", ")", "}", ")", "}", "continue", "}", "if", "(", "filtersArray", ".", "length", ">", "0", "&&", "param", "instanceof", "Parameters", ")", "{", "params", "[", "key", "]", "=", "param", ".", "permit", "(", "filtersArray", ")", ".", "value", "(", ")", "continue", "}", "}", "}", "}"], "original_docstring": "\nPerforms an assignment of non-primitive values to provided object. Also\nhandles nested parameters.\n\n@api private\n", "docstring": {"block_comment": "Performs an assignment of non primitive values to provided object. Also \nhandles nested parameters.", "line_comment": null}, "docstring_tokens": ["Performs", "an", "assignment", "of", "non", "primitive", "values", "to", "provided", "object", ".", "Also", "handles", "nested", "parameters", "."], "sample_id": 608, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004641", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (params, key) {\n    if (this._hasKey(key) && Parameters._isPrimitive(this._fetch(key))) {\n      params[key] = this._fetch(key)\n    }\n  }", "code_tokens": ["function", "(", "params", ",", "key", ")", "{", "if", "(", "this", ".", "_hasKey", "(", "key", ")", "&&", "Parameters", ".", "_isPrimitive", "(", "this", ".", "_fetch", "(", "key", ")", ")", ")", "{", "params", "[", "key", "]", "=", "this", ".", "_fetch", "(", "key", ")", "}", "}"], "original_docstring": "\nPerforms an assignment of primitive value to provided object.\n\n@api private\n", "docstring": {"block_comment": "Performs an assignment of primitive value to provided object.", "line_comment": null}, "docstring_tokens": ["Performs", "an", "assignment", "of", "primitive", "value", "to", "provided", "object", "."], "sample_id": 609, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004642", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key) { return this._fetch(key) !== undefined }", "code_tokens": ["function", "(", "key", ")", "{", "return", "this", ".", "_fetch", "(", "key", ")", "!==", "undefined", "}"], "original_docstring": "\nIndicates if the key exists.\n\n@return {object}\n@api private\n", "docstring": {"block_comment": "Indicates if the key exists.", "line_comment": null}, "docstring_tokens": ["Indicates", "if", "the", "key", "exists", "."], "sample_id": 610, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004643", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key) {return this._params[key] }", "code_tokens": ["function", "(", "key", ")", "{", "return", "this", ".", "_params", "[", "key", "]", "}"], "original_docstring": "\nReturns parameters value identified by key.\n\n@return {object}\n@api private\n", "docstring": {"block_comment": "Returns parameters value identified by key.", "line_comment": null}, "docstring_tokens": ["Returns", "parameters", "value", "identified", "by", "key", "."], "sample_id": 611, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004644", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    return _.cloneDeep(this._attrs)\n  }", "code_tokens": ["function", "(", ")", "{", "return", "_", ".", "cloneDeep", "(", "this", ".", "_attrs", ")", "}"], "original_docstring": "\nReturns all object data.\n\n@return {object}\n@api public\n", "docstring": {"block_comment": "Returns all object data.", "line_comment": null}, "docstring_tokens": ["Returns", "all", "object", "data", "."], "sample_id": 612, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004645", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n    var _this = this.clone()\n    var params = {}\n\n    _this._filters.forEach(function (filter) {\n      if (typeof filter === 'object') {\n        _this._permitObject(params, filter)\n      } else {\n        _this._permitPrimitive(params, filter)\n      }\n    })\n\n    return params\n  }", "code_tokens": ["function", "(", ")", "{", "var", "_this", "=", "this", ".", "clone", "(", ")", "var", "params", "=", "{", "}", "_this", ".", "_filters", ".", "forEach", "(", "function", "(", "filter", ")", "{", "if", "(", "typeof", "filter", "===", "'object'", ")", "{", "_this", ".", "_permitObject", "(", "params", ",", "filter", ")", "}", "else", "{", "_this", ".", "_permitPrimitive", "(", "params", ",", "filter", ")", "}", "}", ")", "return", "params", "}"], "original_docstring": "\nReturns object with permitted structure.\n\n@return {object}\n@api public\n", "docstring": {"block_comment": "Returns object with permitted structure.", "line_comment": null}, "docstring_tokens": ["Returns", "object", "with", "permitted", "structure", "."], "sample_id": 613, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004646", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (filters) {\n    if (!_.isArray(filters)) {\n      filters = Array.prototype.slice.call(arguments)\n    }\n    var _this = this.clone()\n    _this._filters = filters || []\n\n    return _this\n  }", "code_tokens": ["function", "(", "filters", ")", "{", "if", "(", "!", "_", ".", "isArray", "(", "filters", ")", ")", "{", "filters", "=", "Array", ".", "prototype", ".", "slice", ".", "call", "(", "arguments", ")", "}", "var", "_this", "=", "this", ".", "clone", "(", ")", "_this", ".", "_filters", "=", "filters", "||", "[", "]", "return", "_this", "}"], "original_docstring": "\nDefines filter to use on parameters.\n\n@return {Parameters}\n@api public\n", "docstring": {"block_comment": "Defines filter to use on parameters.", "line_comment": null}, "docstring_tokens": ["Defines", "filter", "to", "use", "on", "parameters", "."], "sample_id": 614, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004647", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key) {\n    var param = Parameters.clone(this._fetch(key))\n    if (!param) throw new Error('param `' + key + '` required')\n    if (!(param instanceof Parameters)) throw new Error('param `' + key + '` is not a Parameters instance')\n    return param\n  }", "code_tokens": ["function", "(", "key", ")", "{", "var", "param", "=", "Parameters", ".", "clone", "(", "this", ".", "_fetch", "(", "key", ")", ")", "if", "(", "!", "param", ")", "throw", "new", "Error", "(", "'param `'", "+", "key", "+", "'` required'", ")", "if", "(", "!", "(", "param", "instanceof", "Parameters", ")", ")", "throw", "new", "Error", "(", "'param `'", "+", "key", "+", "'` is not a Parameters instance'", ")", "return", "param", "}"], "original_docstring": "\nReturns a sub-parameters or throws an error if the requested key does not\nexist. This is usefull when working with nested data (e.g. user[name]).\n\n@return {Parameters}\n@api public\n", "docstring": {"block_comment": "Returns a sub parameters or throws an error if the requested key does not \nexist. This is usefull when working with nested data  e.g. user name  .", "line_comment": null}, "docstring_tokens": ["Returns", "a", "sub", "parameters", "or", "throws", "an", "error", "if", "the", "requested", "key", "does", "not", "exist", ".", "This", "is", "usefull", "when", "working", "with", "nested", "data", "e", ".", "g", ".", "user", "name", "."], "sample_id": 615, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004648", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (value) {\n    return value instanceof Parameters ? value.clone() : value\n  }", "code_tokens": ["function", "(", "value", ")", "{", "return", "value", "instanceof", "Parameters", "?", "value", ".", "clone", "(", ")", ":", "value", "}"], "original_docstring": "\nTries to clone Parameters instance. Otherwise just returns provided input.\n\n@return {Parameters}\n@api public\n", "docstring": {"block_comment": "Tries to clone Parameters instance. Otherwise just returns provided input.", "line_comment": null}, "docstring_tokens": ["Tries", "to", "clone", "Parameters", "instance", ".", "Otherwise", "just", "returns", "provided", "input", "."], "sample_id": 616, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004649", "repo": "vellotis/strong-params", "path": "lib/parameters.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (value) {\n    return PRIMITIVE_TYPES.some(function (Primitive) {\n      return [typeof value, String(value)].some(function (val) { return val === Primitive.name.toLowerCase() })\n    })\n  }", "code_tokens": ["function", "(", "value", ")", "{", "return", "PRIMITIVE_TYPES", ".", "some", "(", "function", "(", "Primitive", ")", "{", "return", "[", "typeof", "value", ",", "String", "(", "value", ")", "]", ".", "some", "(", "function", "(", "val", ")", "{", "return", "val", "===", "Primitive", ".", "name", ".", "toLowerCase", "(", ")", "}", ")", "}", ")", "}"], "original_docstring": "\nIndicates if the value is a primitive. Primitive types are {Boolean},\n{Number}. and {String}.\n\n@return {Parameters}\n@api public\n", "docstring": {"block_comment": "Indicates if the value is a primitive. Primitive types are  Boolean , \n Number . and  String .", "line_comment": null}, "docstring_tokens": ["Indicates", "if", "the", "value", "is", "a", "primitive", ".", "Primitive", "types", "are", "Boolean", "Number", ".", "and", "String", "."], "sample_id": 617, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004650", "repo": "drewsynan/scheming-json", "path": "spec/helpers/jasmineHelpers2.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      return {\n        compare: function (actual) {\n\n          // /* global window */\n          // var quiet = window && !(/verbose=true/).test(window.location.search);\n          var quiet = false;\n\n          var r = jsc.check(actual, { quiet: quiet });\n\n          var pass = r === true;\n          var message = \"\";\n\n          if (pass) {\n            message = \"Expected property not to hold.\";\n          } else {\n            message = \"Expected property to hold. Counterexample found: \" + r.counterexamplestr;\n          }\n\n          return {\n            pass: pass,\n            message: message,\n          };\n        },\n      };\n    }", "code_tokens": ["function", "(", ")", "{", "return", "{", "compare", ":", "function", "(", "actual", ")", "{", "// /* global window */", "// var quiet = window && !(/verbose=true/).test(window.location.search);", "var", "quiet", "=", "false", ";", "var", "r", "=", "jsc", ".", "check", "(", "actual", ",", "{", "quiet", ":", "quiet", "}", ")", ";", "var", "pass", "=", "r", "===", "true", ";", "var", "message", "=", "\"\"", ";", "if", "(", "pass", ")", "{", "message", "=", "\"Expected property not to hold.\"", ";", "}", "else", "{", "message", "=", "\"Expected property to hold. Counterexample found: \"", "+", "r", ".", "counterexamplestr", ";", "}", "return", "{", "pass", ":", "pass", ",", "message", ":", "message", ",", "}", ";", "}", ",", "}", ";", "}"], "original_docstring": "Expects that property is synchronous", "docstring": {"block_comment": "Expects that property is synchronous", "line_comment": ["global window", "var quiet   window       verbose true  .test window.location.search  "]}, "docstring_tokens": ["Expects", "that", "property", "is", "synchronous"], "sample_id": 618, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004651", "repo": "time2hack/movie-db", "path": "src/js/script.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(to) {\n  appRouter.go(to)\n}", "code_tokens": ["function", "(", "to", ")", "{", "appRouter", ".", "go", "(", "to", ")", "}"], "original_docstring": "Redirect to some Page or URL", "docstring": {"block_comment": "Redirect to some Page or URL", "line_comment": null}, "docstring_tokens": ["Redirect", "to", "some", "Page", "or", "URL"], "sample_id": 619, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004652", "repo": "halsn/mean", "path": "modules/users/server/controllers/users/users.password.server.controller.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (emailHTML, user, done) {\n      var mailOptions = {\n        to: user.email,\n        from: config.mailer.from,\n        subject: 'Your password has been changed',\n        html: emailHTML\n      };\n\n      smtpTransport.sendMail(mailOptions, function (err) {\n        done(err, 'done');\n      });\n    }", "code_tokens": ["function", "(", "emailHTML", ",", "user", ",", "done", ")", "{", "var", "mailOptions", "=", "{", "to", ":", "user", ".", "email", ",", "from", ":", "config", ".", "mailer", ".", "from", ",", "subject", ":", "'Your password has been changed'", ",", "html", ":", "emailHTML", "}", ";", "smtpTransport", ".", "sendMail", "(", "mailOptions", ",", "function", "(", "err", ")", "{", "done", "(", "err", ",", "'done'", ")", ";", "}", ")", ";", "}"], "original_docstring": "If valid email, send reset email using service", "docstring": {"block_comment": "If valid email, send reset email using service", "line_comment": null}, "docstring_tokens": ["If", "valid", "email", "send", "reset", "email", "using", "service"], "sample_id": 620, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004653", "repo": "halsn/mean", "path": "modules/users/server/controllers/users/users.password.server.controller.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (token, done) {\n      if (req.body.username) {\n        User.findOne({\n          username: req.body.username.toLowerCase()\n        }, '-salt -password', function (err, user) {\n          if (err || !user) {\n            return res.status(400).send({\n              message: 'No account with that username has been found'\n            });\n          } else if (user.provider !== 'local') {\n            return res.status(400).send({\n              message: 'It seems like you signed up using your ' + user.provider + ' account'\n            });\n          } else {\n            user.resetPasswordToken = token;\n            user.resetPasswordExpires = Date.now() + 3600000; // 1 hour\n\n            user.save(function (err) {\n              done(err, token, user);\n            });\n          }\n        });\n      } else {\n        return res.status(422).send({\n          message: 'Username field must not be blank'\n        });\n      }\n    }", "code_tokens": ["function", "(", "token", ",", "done", ")", "{", "if", "(", "req", ".", "body", ".", "username", ")", "{", "User", ".", "findOne", "(", "{", "username", ":", "req", ".", "body", ".", "username", ".", "toLowerCase", "(", ")", "}", ",", "'-salt -password'", ",", "function", "(", "err", ",", "user", ")", "{", "if", "(", "err", "||", "!", "user", ")", "{", "return", "res", ".", "status", "(", "400", ")", ".", "send", "(", "{", "message", ":", "'No account with that username has been found'", "}", ")", ";", "}", "else", "if", "(", "user", ".", "provider", "!==", "'local'", ")", "{", "return", "res", ".", "status", "(", "400", ")", ".", "send", "(", "{", "message", ":", "'It seems like you signed up using your '", "+", "user", ".", "provider", "+", "' account'", "}", ")", ";", "}", "else", "{", "user", ".", "resetPasswordToken", "=", "token", ";", "user", ".", "resetPasswordExpires", "=", "Date", ".", "now", "(", ")", "+", "3600000", ";", "// 1 hour", "user", ".", "save", "(", "function", "(", "err", ")", "{", "done", "(", "err", ",", "token", ",", "user", ")", ";", "}", ")", ";", "}", "}", ")", ";", "}", "else", "{", "return", "res", ".", "status", "(", "422", ")", ".", "send", "(", "{", "message", ":", "'Username field must not be blank'", "}", ")", ";", "}", "}"], "original_docstring": "Lookup user by username", "docstring": {"block_comment": "Lookup user by username", "line_comment": ["1 hour"]}, "docstring_tokens": ["Lookup", "user", "by", "username"], "sample_id": 621, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004655", "repo": "thinkswan/flux-shopping-cart", "path": "js/components/FluxCartApp.react.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    console.log('[FluxCartApp.react] Received change event from a store, updating state');\n\n    this.setState(getCartState());\n  }", "code_tokens": ["function", "(", ")", "{", "console", ".", "log", "(", "'[FluxCartApp.react] Received change event from a store, updating state'", ")", ";", "this", ".", "setState", "(", "getCartState", "(", ")", ")", ";", "}"], "original_docstring": "Update state when stores emit `change` event", "docstring": {"block_comment": "Update state when stores emit  change  event", "line_comment": null}, "docstring_tokens": ["Update", "state", "when", "stores", "emit", "change", "event"], "sample_id": 622, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004656", "repo": "thinkswan/flux-shopping-cart", "path": "js/components/FluxCartApp.react.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    ProductStore.removeChangeListener(this._onChange);\n    CartStore.removeChangeListener(this._onChange);\n  }", "code_tokens": ["function", "(", ")", "{", "ProductStore", ".", "removeChangeListener", "(", "this", ".", "_onChange", ")", ";", "CartStore", ".", "removeChangeListener", "(", "this", ".", "_onChange", ")", ";", "}"], "original_docstring": "Remove change listeners from stores", "docstring": {"block_comment": "Remove change listeners from stores", "line_comment": null}, "docstring_tokens": ["Remove", "change", "listeners", "from", "stores"], "sample_id": 623, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004657", "repo": "thinkswan/flux-shopping-cart", "path": "js/components/FluxCartApp.react.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    ProductStore.addChangeListener(this._onChange);\n    CartStore.addChangeListener(this._onChange);\n  }", "code_tokens": ["function", "(", ")", "{", "ProductStore", ".", "addChangeListener", "(", "this", ".", "_onChange", ")", ";", "CartStore", ".", "addChangeListener", "(", "this", ".", "_onChange", ")", ";", "}"], "original_docstring": "Add change listeners to stores", "docstring": {"block_comment": "Add change listeners to stores", "line_comment": null}, "docstring_tokens": ["Add", "change", "listeners", "to", "stores"], "sample_id": 624, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004658", "repo": "thinkswan/flux-shopping-cart", "path": "js/components/FluxCartApp.react.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n    return getCartState();\n  }", "code_tokens": ["function", "(", ")", "{", "return", "getCartState", "(", ")", ";", "}"], "original_docstring": "Get initial state from stores", "docstring": {"block_comment": "Get initial state from stores", "line_comment": null}, "docstring_tokens": ["Get", "initial", "state", "from", "stores"], "sample_id": 625, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004659", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (json)\n    {\n        if (json.orientation !== 'orthogonal')\n        {\n            console.warn('Phaser CE supports only orthogonal maps. This map\\'s orientation is \"%s\".', json.orientation);\n\n            return null;\n        }\n\n        //  Map data will consist of: layers, objects, images, tilesets, sizes\n        var map = {\n            width: json.width,\n            height: json.height,\n            tileWidth: json.tilewidth,\n            tileHeight: json.tileheight,\n            orientation: json.orientation,\n            format: Phaser.Tilemap.TILED_JSON,\n            version: json.version,\n            properties: json.properties,\n            widthInPixels: json.width * json.tilewidth,\n            heightInPixels: json.height * json.tileheight\n        };\n\n        //  Tile Layers\n        var layers = [];\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'tilelayer')\n            {\n                continue;\n            }\n\n            var curl = json.layers[i];\n\n            /*\n             * Base64 decode data if necessary\n             * NOTE: uncompressed base64 only.\n             */\n\n            if (!curl.compression && curl.encoding && curl.encoding === 'base64')\n            {\n                var binaryString = window.atob(curl.data);\n                var len = binaryString.length;\n                var bytes = new Array(len);\n\n                /*\n                 * Interpret binaryString as an array of bytes representing\n                 * little-endian encoded uint32 values.\n                 */\n                for (var j = 0; j < len; j += 4)\n                {\n                    bytes[j / 4] = (\n                        binaryString.charCodeAt(j) |\n                        binaryString.charCodeAt(j + 1) << 8 |\n                        binaryString.charCodeAt(j + 2) << 16 |\n                        binaryString.charCodeAt(j + 3) << 24\n                    ) >>> 0;\n                }\n\n                curl.data = bytes;\n\n                delete curl.encoding;\n            }\n            else if (curl.compression)\n            {\n                console.warn('Layer compression is unsupported, skipping layer \"%s\".', curl.name);\n\n                continue;\n            }\n\n            var layer = {\n\n                name: curl.name,\n                x: curl.x,\n                y: curl.y,\n                width: curl.width,\n                height: curl.height,\n                widthInPixels: curl.width * json.tilewidth,\n                heightInPixels: curl.height * json.tileheight,\n                alpha: curl.opacity,\n                offsetX: curl.offsetx,\n                offsetY: curl.offsety,\n                visible: curl.visible,\n                properties: {},\n                indexes: [],\n                callbacks: [],\n                bodies: []\n\n            };\n\n            if (curl.properties)\n            {\n                layer.properties = curl.properties;\n            }\n\n            var x = 0;\n            var row = [];\n            var output = [];\n            var rotation, flipped, flippedVal, gid;\n\n            //  Loop through the data field in the JSON.\n\n            /*\n             *  This is an array containing the tile indexes, one after the other. -1 = no tile, everything else = the tile index (starting at 1 for Tiled, 0 for CSV)\n             *  If the map contains multiple tilesets then the indexes are relative to that which the set starts from.\n             *  Need to set which tileset in the cache = which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.\n             */\n\n            for (var t = 0, len = curl.data.length; t < len; t++)\n            {\n                rotation = 0;\n                flipped = false;\n                gid = curl.data[t];\n                flippedVal = 0;\n\n                //  If true the current tile is flipped or rotated (Tiled TMX format)\n                if (gid > 0x20000000)\n                {\n                    // FlippedX\n                    if (gid > 0x80000000)\n                    {\n                        gid -= 0x80000000;\n                        flippedVal += 4;\n                    }\n\n                    // FlippedY\n                    if (gid > 0x40000000)\n                    {\n                        gid -= 0x40000000;\n                        flippedVal += 2;\n                    }\n\n                    // FlippedAD (anti-diagonal = top-right is swapped with bottom-left corners)\n                    if (gid > 0x20000000)\n                    {\n                        gid -= 0x20000000;\n                        flippedVal += 1;\n                    }\n\n                    switch (flippedVal)\n                    {\n                        case 5:\n                            rotation = Math.PI / 2;\n                            break;\n\n                        case 6:\n                            rotation = Math.PI;\n                            break;\n\n                        case 3:\n                            rotation = 3 * Math.PI / 2;\n                            break;\n\n                        case 4:\n                            rotation = 0;\n                            flipped = true;\n                            break;\n\n                        case 7:\n                            rotation = Math.PI / 2;\n                            flipped = true;\n                            break;\n\n                        case 2:\n                            rotation = Math.PI;\n                            flipped = true;\n                            break;\n\n                        case 1:\n                            rotation = 3 * Math.PI / 2;\n                            flipped = true;\n                            break;\n                    }\n                }\n\n                //  index, x, y, width, height\n                if (gid > 0)\n                {\n                    var tile = new Phaser.Tile(layer, gid, x, output.length, json.tilewidth, json.tileheight);\n\n                    tile.rotation = rotation;\n                    tile.flipped = flipped;\n\n                    if (flippedVal !== 0)\n                    {\n                        //  The WebGL renderer uses this to flip UV coordinates before drawing\n                        tile.flippedVal = flippedVal;\n                    }\n\n                    row.push(tile);\n                }\n                else\n                if (Phaser.TilemapParser.INSERT_NULL)\n                {\n                    row.push(null);\n                }\n                else\n                {\n                    row.push(new Phaser.Tile(layer, -1, x, output.length, json.tilewidth, json.tileheight));\n                }\n\n                x++;\n\n                if (x === curl.width)\n                {\n                    output.push(row);\n                    x = 0;\n                    row = [];\n                }\n            }\n\n            layer.data = output;\n\n            layers.push(layer);\n        }\n\n        map.layers = layers;\n\n        //  Images\n        var images = [];\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'imagelayer')\n            {\n                continue;\n            }\n\n            var curi = json.layers[i];\n\n            var image = {\n\n                name: curi.name,\n                image: curi.image,\n                x: curi.x,\n                y: curi.y,\n                alpha: curi.opacity,\n                visible: curi.visible,\n                properties: {}\n\n            };\n\n            if (curi.properties)\n            {\n                image.properties = curi.properties;\n            }\n\n            images.push(image);\n        }\n\n        map.images = images;\n\n        //  Tilesets & Image Collections\n        var tilesets = [];\n        var tilesetGroupObjects = {};\n        var imagecollections = [];\n        var lastSet = null;\n\n        for (var i = 0; i < json.tilesets.length; i++)\n        {\n            //  name, firstgid, width, height, margin, spacing, properties\n            var set = json.tilesets[i];\n\n            if (set.source)\n            {\n                console.warn('Phaser CE can\\'t load external tilesets (%s). Embed the tileset and then export the map again. https://github.com/photonstorm/phaser-ce/issues/273', set.source);\n            }\n            else if (set.image)\n            {\n                var newSet = new Phaser.Tileset(set.name, set.firstgid, set.tilewidth, set.tileheight, set.margin, set.spacing, set.properties);\n\n                if (set.tileproperties)\n                {\n                    newSet.tileProperties = set.tileproperties;\n                }\n\n                /*\n                 * For a normal sliced tileset the row/count/size information is computed when updated.\n                 * This is done (again) after the image is set.\n                 */\n                newSet.updateTileData(set.imagewidth, set.imageheight);\n\n                tilesets.push(newSet);\n            }\n            else if (set.tiles)\n            {\n                var newCollection = new Phaser.ImageCollection(set.name, set.firstgid, set.tilewidth, set.tileheight, set.margin, set.spacing, set.properties);\n\n                for (var ti in set.tiles)\n                {\n                    var image = set.tiles[ti].image;\n                    var gid = set.firstgid + parseInt(ti, 10);\n                    newCollection.addImage(gid, image);\n                }\n\n                imagecollections.push(newCollection);\n            }\n            else\n            {\n                throw new Error('Tileset ' + set.name + ' has no `image` or `tiles` property.');\n            }\n\n            // build a temporary object for objectgroups found in the tileset's tiles\n            for (var ti in set.tiles)\n            {\n                var objectGroup = set.tiles[ti].objectgroup;\n\n                if (!objectGroup)\n                {\n                    continue;\n                }\n\n                tilesetGroupObjects[parseInt(ti, 10) + set.firstgid] = objectGroup;\n            }\n\n            //  We've got a new Tileset, so set the lastgid into the previous one\n            if (lastSet)\n            {\n                lastSet.lastgid = set.firstgid - 1;\n            }\n\n            lastSet = set;\n        }\n\n        if (tilesets.length === 0 && imagecollections.length === 0)\n        {\n            throw new Error('This tilemap has no tilesets.');\n        }\n\n        map.tilesets = tilesets;\n        map.imagecollections = imagecollections;\n\n        //  Objects & Collision Data (polylines, etc)\n        var objects = {};\n        var collision = {};\n        var objectsMap = {};\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'objectgroup')\n            {\n                continue;\n            }\n\n            var objectGroup = json.layers[i];\n            this.parseObjectGroup(objectGroup, objects, collision, undefined, undefined, objectsMap);\n        }\n\n        map.objects = objects;\n        map.collision = collision;\n        map.objectsMap = objectsMap;\n\n        map.tiles = [];\n\n        //  Finally lets build our super tileset index\n        for (var i = 0; i < map.tilesets.length; i++)\n        {\n            var set = map.tilesets[i];\n\n            var x = set.tileMargin;\n            var y = set.tileMargin;\n\n            var count = 0;\n            var countX = 0;\n            var countY = 0;\n\n            for (var t = set.firstgid; t < set.firstgid + set.total; t++)\n            {\n                //  Can add extra properties here as needed\n                map.tiles[t] = [ x, y, i ];\n\n                x += set.tileWidth + set.tileSpacing;\n\n                count++;\n\n                if (count === set.total)\n                {\n                    break;\n                }\n\n                countX++;\n\n                if (countX === set.columns)\n                {\n                    x = set.tileMargin;\n                    y += set.tileHeight + set.tileSpacing;\n\n                    countX = 0;\n                    countY++;\n\n                    if (countY === set.rows)\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n\n        // assign tile properties\n\n        var layer;\n        var tile;\n        var sid;\n        var set;\n\n        // go through each of the map data layers\n        for (var i = 0; i < map.layers.length; i++)\n        {\n            layer = map.layers[i];\n            collision[layer.name] = [];\n            set = null;\n\n            // rows of tiles\n            for (var j = 0; j < layer.data.length; j++)\n            {\n                row = layer.data[j];\n\n                // individual tiles\n                for (var k = 0; k < row.length; k++)\n                {\n                    tile = row[k];\n\n                    if (tile === null || tile.index < 0)\n                    {\n                        continue;\n                    }\n\n                    // find the relevant tileset\n\n                    sid = map.tiles[tile.index][2];\n                    set = map.tilesets[sid];\n\n                    // if that tile type has any properties, add them to the tile object\n\n                    if (set.tileProperties && set.tileProperties[tile.index - set.firstgid])\n                    {\n                        tile.properties = Phaser.Utils.mixin(set.tileProperties[tile.index - set.firstgid], tile.properties);\n                    }\n\n                    var objectGroup = tilesetGroupObjects[tile.index];\n                    if (objectGroup)\n                    {\n                        // build collisions and objects for objectgroups found in the tileset's tiles\n                        this.parseObjectGroup(\n                            objectGroup,\n                            map.objects,\n                            map.collision,\n                            tile.layer.name,\n                            {\n                                x: tile.worldX + objectGroup.x,\n                                y: tile.worldY + objectGroup.y\n                            },\n                            objectsMap\n                        );\n                    }\n                }\n            }\n        }\n\n        return map;\n    }", "code_tokens": ["function", "(", "json", ")", "{", "if", "(", "json", ".", "orientation", "!==", "'orthogonal'", ")", "{", "console", ".", "warn", "(", "'Phaser CE supports only orthogonal maps. This map\\'s orientation is \"%s\".'", ",", "json", ".", "orientation", ")", ";", "return", "null", ";", "}", "//  Map data will consist of: layers, objects, images, tilesets, sizes", "var", "map", "=", "{", "width", ":", "json", ".", "width", ",", "height", ":", "json", ".", "height", ",", "tileWidth", ":", "json", ".", "tilewidth", ",", "tileHeight", ":", "json", ".", "tileheight", ",", "orientation", ":", "json", ".", "orientation", ",", "format", ":", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ",", "version", ":", "json", ".", "version", ",", "properties", ":", "json", ".", "properties", ",", "widthInPixels", ":", "json", ".", "width", "*", "json", ".", "tilewidth", ",", "heightInPixels", ":", "json", ".", "height", "*", "json", ".", "tileheight", "}", ";", "//  Tile Layers", "var", "layers", "=", "[", "]", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'tilelayer'", ")", "{", "continue", ";", "}", "var", "curl", "=", "json", ".", "layers", "[", "i", "]", ";", "/*\n             * Base64 decode data if necessary\n             * NOTE: uncompressed base64 only.\n             */", "if", "(", "!", "curl", ".", "compression", "&&", "curl", ".", "encoding", "&&", "curl", ".", "encoding", "===", "'base64'", ")", "{", "var", "binaryString", "=", "window", ".", "atob", "(", "curl", ".", "data", ")", ";", "var", "len", "=", "binaryString", ".", "length", ";", "var", "bytes", "=", "new", "Array", "(", "len", ")", ";", "/*\n                 * Interpret binaryString as an array of bytes representing\n                 * little-endian encoded uint32 values.\n                 */", "for", "(", "var", "j", "=", "0", ";", "j", "<", "len", ";", "j", "+=", "4", ")", "{", "bytes", "[", "j", "/", "4", "]", "=", "(", "binaryString", ".", "charCodeAt", "(", "j", ")", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "1", ")", "<<", "8", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "2", ")", "<<", "16", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "3", ")", "<<", "24", ")", ">>>", "0", ";", "}", "curl", ".", "data", "=", "bytes", ";", "delete", "curl", ".", "encoding", ";", "}", "else", "if", "(", "curl", ".", "compression", ")", "{", "console", ".", "warn", "(", "'Layer compression is unsupported, skipping layer \"%s\".'", ",", "curl", ".", "name", ")", ";", "continue", ";", "}", "var", "layer", "=", "{", "name", ":", "curl", ".", "name", ",", "x", ":", "curl", ".", "x", ",", "y", ":", "curl", ".", "y", ",", "width", ":", "curl", ".", "width", ",", "height", ":", "curl", ".", "height", ",", "widthInPixels", ":", "curl", ".", "width", "*", "json", ".", "tilewidth", ",", "heightInPixels", ":", "curl", ".", "height", "*", "json", ".", "tileheight", ",", "alpha", ":", "curl", ".", "opacity", ",", "offsetX", ":", "curl", ".", "offsetx", ",", "offsetY", ":", "curl", ".", "offsety", ",", "visible", ":", "curl", ".", "visible", ",", "properties", ":", "{", "}", ",", "indexes", ":", "[", "]", ",", "callbacks", ":", "[", "]", ",", "bodies", ":", "[", "]", "}", ";", "if", "(", "curl", ".", "properties", ")", "{", "layer", ".", "properties", "=", "curl", ".", "properties", ";", "}", "var", "x", "=", "0", ";", "var", "row", "=", "[", "]", ";", "var", "output", "=", "[", "]", ";", "var", "rotation", ",", "flipped", ",", "flippedVal", ",", "gid", ";", "//  Loop through the data field in the JSON.", "/*\n             *  This is an array containing the tile indexes, one after the other. -1 = no tile, everything else = the tile index (starting at 1 for Tiled, 0 for CSV)\n             *  If the map contains multiple tilesets then the indexes are relative to that which the set starts from.\n             *  Need to set which tileset in the cache = which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.\n             */", "for", "(", "var", "t", "=", "0", ",", "len", "=", "curl", ".", "data", ".", "length", ";", "t", "<", "len", ";", "t", "++", ")", "{", "rotation", "=", "0", ";", "flipped", "=", "false", ";", "gid", "=", "curl", ".", "data", "[", "t", "]", ";", "flippedVal", "=", "0", ";", "//  If true the current tile is flipped or rotated (Tiled TMX format)", "if", "(", "gid", ">", "0x20000000", ")", "{", "// FlippedX", "if", "(", "gid", ">", "0x80000000", ")", "{", "gid", "-=", "0x80000000", ";", "flippedVal", "+=", "4", ";", "}", "// FlippedY", "if", "(", "gid", ">", "0x40000000", ")", "{", "gid", "-=", "0x40000000", ";", "flippedVal", "+=", "2", ";", "}", "// FlippedAD (anti-diagonal = top-right is swapped with bottom-left corners)", "if", "(", "gid", ">", "0x20000000", ")", "{", "gid", "-=", "0x20000000", ";", "flippedVal", "+=", "1", ";", "}", "switch", "(", "flippedVal", ")", "{", "case", "5", ":", "rotation", "=", "Math", ".", "PI", "/", "2", ";", "break", ";", "case", "6", ":", "rotation", "=", "Math", ".", "PI", ";", "break", ";", "case", "3", ":", "rotation", "=", "3", "*", "Math", ".", "PI", "/", "2", ";", "break", ";", "case", "4", ":", "rotation", "=", "0", ";", "flipped", "=", "true", ";", "break", ";", "case", "7", ":", "rotation", "=", "Math", ".", "PI", "/", "2", ";", "flipped", "=", "true", ";", "break", ";", "case", "2", ":", "rotation", "=", "Math", ".", "PI", ";", "flipped", "=", "true", ";", "break", ";", "case", "1", ":", "rotation", "=", "3", "*", "Math", ".", "PI", "/", "2", ";", "flipped", "=", "true", ";", "break", ";", "}", "}", "//  index, x, y, width, height", "if", "(", "gid", ">", "0", ")", "{", "var", "tile", "=", "new", "Phaser", ".", "Tile", "(", "layer", ",", "gid", ",", "x", ",", "output", ".", "length", ",", "json", ".", "tilewidth", ",", "json", ".", "tileheight", ")", ";", "tile", ".", "rotation", "=", "rotation", ";", "tile", ".", "flipped", "=", "flipped", ";", "if", "(", "flippedVal", "!==", "0", ")", "{", "//  The WebGL renderer uses this to flip UV coordinates before drawing", "tile", ".", "flippedVal", "=", "flippedVal", ";", "}", "row", ".", "push", "(", "tile", ")", ";", "}", "else", "if", "(", "Phaser", ".", "TilemapParser", ".", "INSERT_NULL", ")", "{", "row", ".", "push", "(", "null", ")", ";", "}", "else", "{", "row", ".", "push", "(", "new", "Phaser", ".", "Tile", "(", "layer", ",", "-", "1", ",", "x", ",", "output", ".", "length", ",", "json", ".", "tilewidth", ",", "json", ".", "tileheight", ")", ")", ";", "}", "x", "++", ";", "if", "(", "x", "===", "curl", ".", "width", ")", "{", "output", ".", "push", "(", "row", ")", ";", "x", "=", "0", ";", "row", "=", "[", "]", ";", "}", "}", "layer", ".", "data", "=", "output", ";", "layers", ".", "push", "(", "layer", ")", ";", "}", "map", ".", "layers", "=", "layers", ";", "//  Images", "var", "images", "=", "[", "]", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'imagelayer'", ")", "{", "continue", ";", "}", "var", "curi", "=", "json", ".", "layers", "[", "i", "]", ";", "var", "image", "=", "{", "name", ":", "curi", ".", "name", ",", "image", ":", "curi", ".", "image", ",", "x", ":", "curi", ".", "x", ",", "y", ":", "curi", ".", "y", ",", "alpha", ":", "curi", ".", "opacity", ",", "visible", ":", "curi", ".", "visible", ",", "properties", ":", "{", "}", "}", ";", "if", "(", "curi", ".", "properties", ")", "{", "image", ".", "properties", "=", "curi", ".", "properties", ";", "}", "images", ".", "push", "(", "image", ")", ";", "}", "map", ".", "images", "=", "images", ";", "//  Tilesets & Image Collections", "var", "tilesets", "=", "[", "]", ";", "var", "tilesetGroupObjects", "=", "{", "}", ";", "var", "imagecollections", "=", "[", "]", ";", "var", "lastSet", "=", "null", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "tilesets", ".", "length", ";", "i", "++", ")", "{", "//  name, firstgid, width, height, margin, spacing, properties", "var", "set", "=", "json", ".", "tilesets", "[", "i", "]", ";", "if", "(", "set", ".", "source", ")", "{", "console", ".", "warn", "(", "'Phaser CE can\\'t load external tilesets (%s). Embed the tileset and then export the map again. https://github.com/photonstorm/phaser-ce/issues/273'", ",", "set", ".", "source", ")", ";", "}", "else", "if", "(", "set", ".", "image", ")", "{", "var", "newSet", "=", "new", "Phaser", ".", "Tileset", "(", "set", ".", "name", ",", "set", ".", "firstgid", ",", "set", ".", "tilewidth", ",", "set", ".", "tileheight", ",", "set", ".", "margin", ",", "set", ".", "spacing", ",", "set", ".", "properties", ")", ";", "if", "(", "set", ".", "tileproperties", ")", "{", "newSet", ".", "tileProperties", "=", "set", ".", "tileproperties", ";", "}", "/*\n                 * For a normal sliced tileset the row/count/size information is computed when updated.\n                 * This is done (again) after the image is set.\n                 */", "newSet", ".", "updateTileData", "(", "set", ".", "imagewidth", ",", "set", ".", "imageheight", ")", ";", "tilesets", ".", "push", "(", "newSet", ")", ";", "}", "else", "if", "(", "set", ".", "tiles", ")", "{", "var", "newCollection", "=", "new", "Phaser", ".", "ImageCollection", "(", "set", ".", "name", ",", "set", ".", "firstgid", ",", "set", ".", "tilewidth", ",", "set", ".", "tileheight", ",", "set", ".", "margin", ",", "set", ".", "spacing", ",", "set", ".", "properties", ")", ";", "for", "(", "var", "ti", "in", "set", ".", "tiles", ")", "{", "var", "image", "=", "set", ".", "tiles", "[", "ti", "]", ".", "image", ";", "var", "gid", "=", "set", ".", "firstgid", "+", "parseInt", "(", "ti", ",", "10", ")", ";", "newCollection", ".", "addImage", "(", "gid", ",", "image", ")", ";", "}", "imagecollections", ".", "push", "(", "newCollection", ")", ";", "}", "else", "{", "throw", "new", "Error", "(", "'Tileset '", "+", "set", ".", "name", "+", "' has no `image` or `tiles` property.'", ")", ";", "}", "// build a temporary object for objectgroups found in the tileset's tiles", "for", "(", "var", "ti", "in", "set", ".", "tiles", ")", "{", "var", "objectGroup", "=", "set", ".", "tiles", "[", "ti", "]", ".", "objectgroup", ";", "if", "(", "!", "objectGroup", ")", "{", "continue", ";", "}", "tilesetGroupObjects", "[", "parseInt", "(", "ti", ",", "10", ")", "+", "set", ".", "firstgid", "]", "=", "objectGroup", ";", "}", "//  We've got a new Tileset, so set the lastgid into the previous one", "if", "(", "lastSet", ")", "{", "lastSet", ".", "lastgid", "=", "set", ".", "firstgid", "-", "1", ";", "}", "lastSet", "=", "set", ";", "}", "if", "(", "tilesets", ".", "length", "===", "0", "&&", "imagecollections", ".", "length", "===", "0", ")", "{", "throw", "new", "Error", "(", "'This tilemap has no tilesets.'", ")", ";", "}", "map", ".", "tilesets", "=", "tilesets", ";", "map", ".", "imagecollections", "=", "imagecollections", ";", "//  Objects & Collision Data (polylines, etc)", "var", "objects", "=", "{", "}", ";", "var", "collision", "=", "{", "}", ";", "var", "objectsMap", "=", "{", "}", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'objectgroup'", ")", "{", "continue", ";", "}", "var", "objectGroup", "=", "json", ".", "layers", "[", "i", "]", ";", "this", ".", "parseObjectGroup", "(", "objectGroup", ",", "objects", ",", "collision", ",", "undefined", ",", "undefined", ",", "objectsMap", ")", ";", "}", "map", ".", "objects", "=", "objects", ";", "map", ".", "collision", "=", "collision", ";", "map", ".", "objectsMap", "=", "objectsMap", ";", "map", ".", "tiles", "=", "[", "]", ";", "//  Finally lets build our super tileset index", "for", "(", "var", "i", "=", "0", ";", "i", "<", "map", ".", "tilesets", ".", "length", ";", "i", "++", ")", "{", "var", "set", "=", "map", ".", "tilesets", "[", "i", "]", ";", "var", "x", "=", "set", ".", "tileMargin", ";", "var", "y", "=", "set", ".", "tileMargin", ";", "var", "count", "=", "0", ";", "var", "countX", "=", "0", ";", "var", "countY", "=", "0", ";", "for", "(", "var", "t", "=", "set", ".", "firstgid", ";", "t", "<", "set", ".", "firstgid", "+", "set", ".", "total", ";", "t", "++", ")", "{", "//  Can add extra properties here as needed", "map", ".", "tiles", "[", "t", "]", "=", "[", "x", ",", "y", ",", "i", "]", ";", "x", "+=", "set", ".", "tileWidth", "+", "set", ".", "tileSpacing", ";", "count", "++", ";", "if", "(", "count", "===", "set", ".", "total", ")", "{", "break", ";", "}", "countX", "++", ";", "if", "(", "countX", "===", "set", ".", "columns", ")", "{", "x", "=", "set", ".", "tileMargin", ";", "y", "+=", "set", ".", "tileHeight", "+", "set", ".", "tileSpacing", ";", "countX", "=", "0", ";", "countY", "++", ";", "if", "(", "countY", "===", "set", ".", "rows", ")", "{", "break", ";", "}", "}", "}", "}", "// assign tile properties", "var", "layer", ";", "var", "tile", ";", "var", "sid", ";", "var", "set", ";", "// go through each of the map data layers", "for", "(", "var", "i", "=", "0", ";", "i", "<", "map", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "layer", "=", "map", ".", "layers", "[", "i", "]", ";", "collision", "[", "layer", ".", "name", "]", "=", "[", "]", ";", "set", "=", "null", ";", "// rows of tiles", "for", "(", "var", "j", "=", "0", ";", "j", "<", "layer", ".", "data", ".", "length", ";", "j", "++", ")", "{", "row", "=", "layer", ".", "data", "[", "j", "]", ";", "// individual tiles", "for", "(", "var", "k", "=", "0", ";", "k", "<", "row", ".", "length", ";", "k", "++", ")", "{", "tile", "=", "row", "[", "k", "]", ";", "if", "(", "tile", "===", "null", "||", "tile", ".", "index", "<", "0", ")", "{", "continue", ";", "}", "// find the relevant tileset", "sid", "=", "map", ".", "tiles", "[", "tile", ".", "index", "]", "[", "2", "]", ";", "set", "=", "map", ".", "tilesets", "[", "sid", "]", ";", "// if that tile type has any properties, add them to the tile object", "if", "(", "set", ".", "tileProperties", "&&", "set", ".", "tileProperties", "[", "tile", ".", "index", "-", "set", ".", "firstgid", "]", ")", "{", "tile", ".", "properties", "=", "Phaser", ".", "Utils", ".", "mixin", "(", "set", ".", "tileProperties", "[", "tile", ".", "index", "-", "set", ".", "firstgid", "]", ",", "tile", ".", "properties", ")", ";", "}", "var", "objectGroup", "=", "tilesetGroupObjects", "[", "tile", ".", "index", "]", ";", "if", "(", "objectGroup", ")", "{", "// build collisions and objects for objectgroups found in the tileset's tiles", "this", ".", "parseObjectGroup", "(", "objectGroup", ",", "map", ".", "objects", ",", "map", ".", "collision", ",", "tile", ".", "layer", ".", "name", ",", "{", "x", ":", "tile", ".", "worldX", "+", "objectGroup", ".", "x", ",", "y", ":", "tile", ".", "worldY", "+", "objectGroup", ".", "y", "}", ",", "objectsMap", ")", ";", "}", "}", "}", "}", "return", "map", ";", "}"], "original_docstring": "\nParses a Tiled JSON file into valid map data.\n@method Phaser.TilemapParser.parseTiledJSON\n@param {object} json - The JSON map data.\n@return {object} Generated and parsed map data.\n", "docstring": {"block_comment": "Parses a Tiled JSON file into valid map data.", "line_comment": ["Map data will consist of  layers, objects, images, tilesets, sizes", "Tile Layers", null, "Interpret binaryString as an array of bytes representing \nlittle endian encoded uint32 values.", "Loop through the data field in the JSON.", "This is an array containing the tile indexes, one after the other.  1   no tile, everything else   the tile index  starting at 1 for Tiled, 0 for CSV  \nIf the map contains multiple tilesets then the indexes are relative to that which the set starts from. \nNeed to set which tileset in the cache   which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.", "If true the current tile is flipped or rotated  Tiled TMX format ", "FlippedX", "FlippedY", "FlippedAD  anti diagonal   top right is swapped with bottom left corners ", "index, x, y, width, height", "The WebGL renderer uses this to flip UV coordinates before drawing", "Images", "Tilesets   Image Collections", "name, firstgid, width, height, margin, spacing, properties", "For a normal sliced tileset the row count size information is computed when updated. \nThis is done  again  after the image is set.", "build a temporary object for objectgroups found in the tileset s tiles", "We ve got a new Tileset, so set the lastgid into the previous one", "Objects   Collision Data  polylines, etc ", "Finally lets build our super tileset index", "Can add extra properties here as needed", "assign tile properties", "go through each of the map data layers", "rows of tiles", "individual tiles", "find the relevant tileset", "if that tile type has any properties, add them to the tile object", "build collisions and objects for objectgroups found in the tileset s tiles"]}, "docstring_tokens": ["Parses", "a", "Tiled", "JSON", "file", "into", "valid", "map", "data", "."], "sample_id": 626, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004659", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (json)\n    {\n        if (json.orientation !== 'orthogonal')\n        {\n            console.warn('Phaser CE supports only orthogonal maps. This map\\'s orientation is \"%s\".', json.orientation);\n\n            return null;\n        }\n\n        //  Map data will consist of: layers, objects, images, tilesets, sizes\n        var map = {\n            width: json.width,\n            height: json.height,\n            tileWidth: json.tilewidth,\n            tileHeight: json.tileheight,\n            orientation: json.orientation,\n            format: Phaser.Tilemap.TILED_JSON,\n            version: json.version,\n            properties: json.properties,\n            widthInPixels: json.width * json.tilewidth,\n            heightInPixels: json.height * json.tileheight\n        };\n\n        //  Tile Layers\n        var layers = [];\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'tilelayer')\n            {\n                continue;\n            }\n\n            var curl = json.layers[i];\n\n            /*\n             * Base64 decode data if necessary\n             * NOTE: uncompressed base64 only.\n             */\n\n            if (!curl.compression && curl.encoding && curl.encoding === 'base64')\n            {\n                var binaryString = window.atob(curl.data);\n                var len = binaryString.length;\n                var bytes = new Array(len);\n\n                /*\n                 * Interpret binaryString as an array of bytes representing\n                 * little-endian encoded uint32 values.\n                 */\n                for (var j = 0; j < len; j += 4)\n                {\n                    bytes[j / 4] = (\n                        binaryString.charCodeAt(j) |\n                        binaryString.charCodeAt(j + 1) << 8 |\n                        binaryString.charCodeAt(j + 2) << 16 |\n                        binaryString.charCodeAt(j + 3) << 24\n                    ) >>> 0;\n                }\n\n                curl.data = bytes;\n\n                delete curl.encoding;\n            }\n            else if (curl.compression)\n            {\n                console.warn('Layer compression is unsupported, skipping layer \"%s\".', curl.name);\n\n                continue;\n            }\n\n            var layer = {\n\n                name: curl.name,\n                x: curl.x,\n                y: curl.y,\n                width: curl.width,\n                height: curl.height,\n                widthInPixels: curl.width * json.tilewidth,\n                heightInPixels: curl.height * json.tileheight,\n                alpha: curl.opacity,\n                offsetX: curl.offsetx,\n                offsetY: curl.offsety,\n                visible: curl.visible,\n                properties: {},\n                indexes: [],\n                callbacks: [],\n                bodies: []\n\n            };\n\n            if (curl.properties)\n            {\n                layer.properties = curl.properties;\n            }\n\n            var x = 0;\n            var row = [];\n            var output = [];\n            var rotation, flipped, flippedVal, gid;\n\n            //  Loop through the data field in the JSON.\n\n            /*\n             *  This is an array containing the tile indexes, one after the other. -1 = no tile, everything else = the tile index (starting at 1 for Tiled, 0 for CSV)\n             *  If the map contains multiple tilesets then the indexes are relative to that which the set starts from.\n             *  Need to set which tileset in the cache = which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.\n             */\n\n            for (var t = 0, len = curl.data.length; t < len; t++)\n            {\n                rotation = 0;\n                flipped = false;\n                gid = curl.data[t];\n                flippedVal = 0;\n\n                //  If true the current tile is flipped or rotated (Tiled TMX format)\n                if (gid > 0x20000000)\n                {\n                    // FlippedX\n                    if (gid > 0x80000000)\n                    {\n                        gid -= 0x80000000;\n                        flippedVal += 4;\n                    }\n\n                    // FlippedY\n                    if (gid > 0x40000000)\n                    {\n                        gid -= 0x40000000;\n                        flippedVal += 2;\n                    }\n\n                    // FlippedAD (anti-diagonal = top-right is swapped with bottom-left corners)\n                    if (gid > 0x20000000)\n                    {\n                        gid -= 0x20000000;\n                        flippedVal += 1;\n                    }\n\n                    switch (flippedVal)\n                    {\n                        case 5:\n                            rotation = Math.PI / 2;\n                            break;\n\n                        case 6:\n                            rotation = Math.PI;\n                            break;\n\n                        case 3:\n                            rotation = 3 * Math.PI / 2;\n                            break;\n\n                        case 4:\n                            rotation = 0;\n                            flipped = true;\n                            break;\n\n                        case 7:\n                            rotation = Math.PI / 2;\n                            flipped = true;\n                            break;\n\n                        case 2:\n                            rotation = Math.PI;\n                            flipped = true;\n                            break;\n\n                        case 1:\n                            rotation = 3 * Math.PI / 2;\n                            flipped = true;\n                            break;\n                    }\n                }\n\n                //  index, x, y, width, height\n                if (gid > 0)\n                {\n                    var tile = new Phaser.Tile(layer, gid, x, output.length, json.tilewidth, json.tileheight);\n\n                    tile.rotation = rotation;\n                    tile.flipped = flipped;\n\n                    if (flippedVal !== 0)\n                    {\n                        //  The WebGL renderer uses this to flip UV coordinates before drawing\n                        tile.flippedVal = flippedVal;\n                    }\n\n                    row.push(tile);\n                }\n                else\n                if (Phaser.TilemapParser.INSERT_NULL)\n                {\n                    row.push(null);\n                }\n                else\n                {\n                    row.push(new Phaser.Tile(layer, -1, x, output.length, json.tilewidth, json.tileheight));\n                }\n\n                x++;\n\n                if (x === curl.width)\n                {\n                    output.push(row);\n                    x = 0;\n                    row = [];\n                }\n            }\n\n            layer.data = output;\n\n            layers.push(layer);\n        }\n\n        map.layers = layers;\n\n        //  Images\n        var images = [];\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'imagelayer')\n            {\n                continue;\n            }\n\n            var curi = json.layers[i];\n\n            var image = {\n\n                name: curi.name,\n                image: curi.image,\n                x: curi.x,\n                y: curi.y,\n                alpha: curi.opacity,\n                visible: curi.visible,\n                properties: {}\n\n            };\n\n            if (curi.properties)\n            {\n                image.properties = curi.properties;\n            }\n\n            images.push(image);\n        }\n\n        map.images = images;\n\n        //  Tilesets & Image Collections\n        var tilesets = [];\n        var tilesetGroupObjects = {};\n        var imagecollections = [];\n        var lastSet = null;\n\n        for (var i = 0; i < json.tilesets.length; i++)\n        {\n            //  name, firstgid, width, height, margin, spacing, properties\n            var set = json.tilesets[i];\n\n            if (set.source)\n            {\n                console.warn('Phaser CE can\\'t load external tilesets (%s). Embed the tileset and then export the map again. https://github.com/photonstorm/phaser-ce/issues/273', set.source);\n            }\n            else if (set.image)\n            {\n                var newSet = new Phaser.Tileset(set.name, set.firstgid, set.tilewidth, set.tileheight, set.margin, set.spacing, set.properties);\n\n                if (set.tileproperties)\n                {\n                    newSet.tileProperties = set.tileproperties;\n                }\n\n                /*\n                 * For a normal sliced tileset the row/count/size information is computed when updated.\n                 * This is done (again) after the image is set.\n                 */\n                newSet.updateTileData(set.imagewidth, set.imageheight);\n\n                tilesets.push(newSet);\n            }\n            else if (set.tiles)\n            {\n                var newCollection = new Phaser.ImageCollection(set.name, set.firstgid, set.tilewidth, set.tileheight, set.margin, set.spacing, set.properties);\n\n                for (var ti in set.tiles)\n                {\n                    var image = set.tiles[ti].image;\n                    var gid = set.firstgid + parseInt(ti, 10);\n                    newCollection.addImage(gid, image);\n                }\n\n                imagecollections.push(newCollection);\n            }\n            else\n            {\n                throw new Error('Tileset ' + set.name + ' has no `image` or `tiles` property.');\n            }\n\n            // build a temporary object for objectgroups found in the tileset's tiles\n            for (var ti in set.tiles)\n            {\n                var objectGroup = set.tiles[ti].objectgroup;\n\n                if (!objectGroup)\n                {\n                    continue;\n                }\n\n                tilesetGroupObjects[parseInt(ti, 10) + set.firstgid] = objectGroup;\n            }\n\n            //  We've got a new Tileset, so set the lastgid into the previous one\n            if (lastSet)\n            {\n                lastSet.lastgid = set.firstgid - 1;\n            }\n\n            lastSet = set;\n        }\n\n        if (tilesets.length === 0 && imagecollections.length === 0)\n        {\n            throw new Error('This tilemap has no tilesets.');\n        }\n\n        map.tilesets = tilesets;\n        map.imagecollections = imagecollections;\n\n        //  Objects & Collision Data (polylines, etc)\n        var objects = {};\n        var collision = {};\n        var objectsMap = {};\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'objectgroup')\n            {\n                continue;\n            }\n\n            var objectGroup = json.layers[i];\n            this.parseObjectGroup(objectGroup, objects, collision, undefined, undefined, objectsMap);\n        }\n\n        map.objects = objects;\n        map.collision = collision;\n        map.objectsMap = objectsMap;\n\n        map.tiles = [];\n\n        //  Finally lets build our super tileset index\n        for (var i = 0; i < map.tilesets.length; i++)\n        {\n            var set = map.tilesets[i];\n\n            var x = set.tileMargin;\n            var y = set.tileMargin;\n\n            var count = 0;\n            var countX = 0;\n            var countY = 0;\n\n            for (var t = set.firstgid; t < set.firstgid + set.total; t++)\n            {\n                //  Can add extra properties here as needed\n                map.tiles[t] = [ x, y, i ];\n\n                x += set.tileWidth + set.tileSpacing;\n\n                count++;\n\n                if (count === set.total)\n                {\n                    break;\n                }\n\n                countX++;\n\n                if (countX === set.columns)\n                {\n                    x = set.tileMargin;\n                    y += set.tileHeight + set.tileSpacing;\n\n                    countX = 0;\n                    countY++;\n\n                    if (countY === set.rows)\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n\n        // assign tile properties\n\n        var layer;\n        var tile;\n        var sid;\n        var set;\n\n        // go through each of the map data layers\n        for (var i = 0; i < map.layers.length; i++)\n        {\n            layer = map.layers[i];\n            collision[layer.name] = [];\n            set = null;\n\n            // rows of tiles\n            for (var j = 0; j < layer.data.length; j++)\n            {\n                row = layer.data[j];\n\n                // individual tiles\n                for (var k = 0; k < row.length; k++)\n                {\n                    tile = row[k];\n\n                    if (tile === null || tile.index < 0)\n                    {\n                        continue;\n                    }\n\n                    // find the relevant tileset\n\n                    sid = map.tiles[tile.index][2];\n                    set = map.tilesets[sid];\n\n                    // if that tile type has any properties, add them to the tile object\n\n                    if (set.tileProperties && set.tileProperties[tile.index - set.firstgid])\n                    {\n                        tile.properties = Phaser.Utils.mixin(set.tileProperties[tile.index - set.firstgid], tile.properties);\n                    }\n\n                    var objectGroup = tilesetGroupObjects[tile.index];\n                    if (objectGroup)\n                    {\n                        // build collisions and objects for objectgroups found in the tileset's tiles\n                        this.parseObjectGroup(\n                            objectGroup,\n                            map.objects,\n                            map.collision,\n                            tile.layer.name,\n                            {\n                                x: tile.worldX + objectGroup.x,\n                                y: tile.worldY + objectGroup.y\n                            },\n                            objectsMap\n                        );\n                    }\n                }\n            }\n        }\n\n        return map;\n    }", "code_tokens": ["function", "(", "json", ")", "{", "if", "(", "json", ".", "orientation", "!==", "'orthogonal'", ")", "{", "console", ".", "warn", "(", "'Phaser CE supports only orthogonal maps. This map\\'s orientation is \"%s\".'", ",", "json", ".", "orientation", ")", ";", "return", "null", ";", "}", "//  Map data will consist of: layers, objects, images, tilesets, sizes", "var", "map", "=", "{", "width", ":", "json", ".", "width", ",", "height", ":", "json", ".", "height", ",", "tileWidth", ":", "json", ".", "tilewidth", ",", "tileHeight", ":", "json", ".", "tileheight", ",", "orientation", ":", "json", ".", "orientation", ",", "format", ":", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ",", "version", ":", "json", ".", "version", ",", "properties", ":", "json", ".", "properties", ",", "widthInPixels", ":", "json", ".", "width", "*", "json", ".", "tilewidth", ",", "heightInPixels", ":", "json", ".", "height", "*", "json", ".", "tileheight", "}", ";", "//  Tile Layers", "var", "layers", "=", "[", "]", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'tilelayer'", ")", "{", "continue", ";", "}", "var", "curl", "=", "json", ".", "layers", "[", "i", "]", ";", "/*\n             * Base64 decode data if necessary\n             * NOTE: uncompressed base64 only.\n             */", "if", "(", "!", "curl", ".", "compression", "&&", "curl", ".", "encoding", "&&", "curl", ".", "encoding", "===", "'base64'", ")", "{", "var", "binaryString", "=", "window", ".", "atob", "(", "curl", ".", "data", ")", ";", "var", "len", "=", "binaryString", ".", "length", ";", "var", "bytes", "=", "new", "Array", "(", "len", ")", ";", "/*\n                 * Interpret binaryString as an array of bytes representing\n                 * little-endian encoded uint32 values.\n                 */", "for", "(", "var", "j", "=", "0", ";", "j", "<", "len", ";", "j", "+=", "4", ")", "{", "bytes", "[", "j", "/", "4", "]", "=", "(", "binaryString", ".", "charCodeAt", "(", "j", ")", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "1", ")", "<<", "8", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "2", ")", "<<", "16", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "3", ")", "<<", "24", ")", ">>>", "0", ";", "}", "curl", ".", "data", "=", "bytes", ";", "delete", "curl", ".", "encoding", ";", "}", "else", "if", "(", "curl", ".", "compression", ")", "{", "console", ".", "warn", "(", "'Layer compression is unsupported, skipping layer \"%s\".'", ",", "curl", ".", "name", ")", ";", "continue", ";", "}", "var", "layer", "=", "{", "name", ":", "curl", ".", "name", ",", "x", ":", "curl", ".", "x", ",", "y", ":", "curl", ".", "y", ",", "width", ":", "curl", ".", "width", ",", "height", ":", "curl", ".", "height", ",", "widthInPixels", ":", "curl", ".", "width", "*", "json", ".", "tilewidth", ",", "heightInPixels", ":", "curl", ".", "height", "*", "json", ".", "tileheight", ",", "alpha", ":", "curl", ".", "opacity", ",", "offsetX", ":", "curl", ".", "offsetx", ",", "offsetY", ":", "curl", ".", "offsety", ",", "visible", ":", "curl", ".", "visible", ",", "properties", ":", "{", "}", ",", "indexes", ":", "[", "]", ",", "callbacks", ":", "[", "]", ",", "bodies", ":", "[", "]", "}", ";", "if", "(", "curl", ".", "properties", ")", "{", "layer", ".", "properties", "=", "curl", ".", "properties", ";", "}", "var", "x", "=", "0", ";", "var", "row", "=", "[", "]", ";", "var", "output", "=", "[", "]", ";", "var", "rotation", ",", "flipped", ",", "flippedVal", ",", "gid", ";", "//  Loop through the data field in the JSON.", "/*\n             *  This is an array containing the tile indexes, one after the other. -1 = no tile, everything else = the tile index (starting at 1 for Tiled, 0 for CSV)\n             *  If the map contains multiple tilesets then the indexes are relative to that which the set starts from.\n             *  Need to set which tileset in the cache = which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.\n             */", "for", "(", "var", "t", "=", "0", ",", "len", "=", "curl", ".", "data", ".", "length", ";", "t", "<", "len", ";", "t", "++", ")", "{", "rotation", "=", "0", ";", "flipped", "=", "false", ";", "gid", "=", "curl", ".", "data", "[", "t", "]", ";", "flippedVal", "=", "0", ";", "//  If true the current tile is flipped or rotated (Tiled TMX format)", "if", "(", "gid", ">", "0x20000000", ")", "{", "// FlippedX", "if", "(", "gid", ">", "0x80000000", ")", "{", "gid", "-=", "0x80000000", ";", "flippedVal", "+=", "4", ";", "}", "// FlippedY", "if", "(", "gid", ">", "0x40000000", ")", "{", "gid", "-=", "0x40000000", ";", "flippedVal", "+=", "2", ";", "}", "// FlippedAD (anti-diagonal = top-right is swapped with bottom-left corners)", "if", "(", "gid", ">", "0x20000000", ")", "{", "gid", "-=", "0x20000000", ";", "flippedVal", "+=", "1", ";", "}", "switch", "(", "flippedVal", ")", "{", "case", "5", ":", "rotation", "=", "Math", ".", "PI", "/", "2", ";", "break", ";", "case", "6", ":", "rotation", "=", "Math", ".", "PI", ";", "break", ";", "case", "3", ":", "rotation", "=", "3", "*", "Math", ".", "PI", "/", "2", ";", "break", ";", "case", "4", ":", "rotation", "=", "0", ";", "flipped", "=", "true", ";", "break", ";", "case", "7", ":", "rotation", "=", "Math", ".", "PI", "/", "2", ";", "flipped", "=", "true", ";", "break", ";", "case", "2", ":", "rotation", "=", "Math", ".", "PI", ";", "flipped", "=", "true", ";", "break", ";", "case", "1", ":", "rotation", "=", "3", "*", "Math", ".", "PI", "/", "2", ";", "flipped", "=", "true", ";", "break", ";", "}", "}", "//  index, x, y, width, height", "if", "(", "gid", ">", "0", ")", "{", "var", "tile", "=", "new", "Phaser", ".", "Tile", "(", "layer", ",", "gid", ",", "x", ",", "output", ".", "length", ",", "json", ".", "tilewidth", ",", "json", ".", "tileheight", ")", ";", "tile", ".", "rotation", "=", "rotation", ";", "tile", ".", "flipped", "=", "flipped", ";", "if", "(", "flippedVal", "!==", "0", ")", "{", "//  The WebGL renderer uses this to flip UV coordinates before drawing", "tile", ".", "flippedVal", "=", "flippedVal", ";", "}", "row", ".", "push", "(", "tile", ")", ";", "}", "else", "if", "(", "Phaser", ".", "TilemapParser", ".", "INSERT_NULL", ")", "{", "row", ".", "push", "(", "null", ")", ";", "}", "else", "{", "row", ".", "push", "(", "new", "Phaser", ".", "Tile", "(", "layer", ",", "-", "1", ",", "x", ",", "output", ".", "length", ",", "json", ".", "tilewidth", ",", "json", ".", "tileheight", ")", ")", ";", "}", "x", "++", ";", "if", "(", "x", "===", "curl", ".", "width", ")", "{", "output", ".", "push", "(", "row", ")", ";", "x", "=", "0", ";", "row", "=", "[", "]", ";", "}", "}", "layer", ".", "data", "=", "output", ";", "layers", ".", "push", "(", "layer", ")", ";", "}", "map", ".", "layers", "=", "layers", ";", "//  Images", "var", "images", "=", "[", "]", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'imagelayer'", ")", "{", "continue", ";", "}", "var", "curi", "=", "json", ".", "layers", "[", "i", "]", ";", "var", "image", "=", "{", "name", ":", "curi", ".", "name", ",", "image", ":", "curi", ".", "image", ",", "x", ":", "curi", ".", "x", ",", "y", ":", "curi", ".", "y", ",", "alpha", ":", "curi", ".", "opacity", ",", "visible", ":", "curi", ".", "visible", ",", "properties", ":", "{", "}", "}", ";", "if", "(", "curi", ".", "properties", ")", "{", "image", ".", "properties", "=", "curi", ".", "properties", ";", "}", "images", ".", "push", "(", "image", ")", ";", "}", "map", ".", "images", "=", "images", ";", "//  Tilesets & Image Collections", "var", "tilesets", "=", "[", "]", ";", "var", "tilesetGroupObjects", "=", "{", "}", ";", "var", "imagecollections", "=", "[", "]", ";", "var", "lastSet", "=", "null", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "tilesets", ".", "length", ";", "i", "++", ")", "{", "//  name, firstgid, width, height, margin, spacing, properties", "var", "set", "=", "json", ".", "tilesets", "[", "i", "]", ";", "if", "(", "set", ".", "source", ")", "{", "console", ".", "warn", "(", "'Phaser CE can\\'t load external tilesets (%s). Embed the tileset and then export the map again. https://github.com/photonstorm/phaser-ce/issues/273'", ",", "set", ".", "source", ")", ";", "}", "else", "if", "(", "set", ".", "image", ")", "{", "var", "newSet", "=", "new", "Phaser", ".", "Tileset", "(", "set", ".", "name", ",", "set", ".", "firstgid", ",", "set", ".", "tilewidth", ",", "set", ".", "tileheight", ",", "set", ".", "margin", ",", "set", ".", "spacing", ",", "set", ".", "properties", ")", ";", "if", "(", "set", ".", "tileproperties", ")", "{", "newSet", ".", "tileProperties", "=", "set", ".", "tileproperties", ";", "}", "/*\n                 * For a normal sliced tileset the row/count/size information is computed when updated.\n                 * This is done (again) after the image is set.\n                 */", "newSet", ".", "updateTileData", "(", "set", ".", "imagewidth", ",", "set", ".", "imageheight", ")", ";", "tilesets", ".", "push", "(", "newSet", ")", ";", "}", "else", "if", "(", "set", ".", "tiles", ")", "{", "var", "newCollection", "=", "new", "Phaser", ".", "ImageCollection", "(", "set", ".", "name", ",", "set", ".", "firstgid", ",", "set", ".", "tilewidth", ",", "set", ".", "tileheight", ",", "set", ".", "margin", ",", "set", ".", "spacing", ",", "set", ".", "properties", ")", ";", "for", "(", "var", "ti", "in", "set", ".", "tiles", ")", "{", "var", "image", "=", "set", ".", "tiles", "[", "ti", "]", ".", "image", ";", "var", "gid", "=", "set", ".", "firstgid", "+", "parseInt", "(", "ti", ",", "10", ")", ";", "newCollection", ".", "addImage", "(", "gid", ",", "image", ")", ";", "}", "imagecollections", ".", "push", "(", "newCollection", ")", ";", "}", "else", "{", "throw", "new", "Error", "(", "'Tileset '", "+", "set", ".", "name", "+", "' has no `image` or `tiles` property.'", ")", ";", "}", "// build a temporary object for objectgroups found in the tileset's tiles", "for", "(", "var", "ti", "in", "set", ".", "tiles", ")", "{", "var", "objectGroup", "=", "set", ".", "tiles", "[", "ti", "]", ".", "objectgroup", ";", "if", "(", "!", "objectGroup", ")", "{", "continue", ";", "}", "tilesetGroupObjects", "[", "parseInt", "(", "ti", ",", "10", ")", "+", "set", ".", "firstgid", "]", "=", "objectGroup", ";", "}", "//  We've got a new Tileset, so set the lastgid into the previous one", "if", "(", "lastSet", ")", "{", "lastSet", ".", "lastgid", "=", "set", ".", "firstgid", "-", "1", ";", "}", "lastSet", "=", "set", ";", "}", "if", "(", "tilesets", ".", "length", "===", "0", "&&", "imagecollections", ".", "length", "===", "0", ")", "{", "throw", "new", "Error", "(", "'This tilemap has no tilesets.'", ")", ";", "}", "map", ".", "tilesets", "=", "tilesets", ";", "map", ".", "imagecollections", "=", "imagecollections", ";", "//  Objects & Collision Data (polylines, etc)", "var", "objects", "=", "{", "}", ";", "var", "collision", "=", "{", "}", ";", "var", "objectsMap", "=", "{", "}", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'objectgroup'", ")", "{", "continue", ";", "}", "var", "objectGroup", "=", "json", ".", "layers", "[", "i", "]", ";", "this", ".", "parseObjectGroup", "(", "objectGroup", ",", "objects", ",", "collision", ",", "undefined", ",", "undefined", ",", "objectsMap", ")", ";", "}", "map", ".", "objects", "=", "objects", ";", "map", ".", "collision", "=", "collision", ";", "map", ".", "objectsMap", "=", "objectsMap", ";", "map", ".", "tiles", "=", "[", "]", ";", "//  Finally lets build our super tileset index", "for", "(", "var", "i", "=", "0", ";", "i", "<", "map", ".", "tilesets", ".", "length", ";", "i", "++", ")", "{", "var", "set", "=", "map", ".", "tilesets", "[", "i", "]", ";", "var", "x", "=", "set", ".", "tileMargin", ";", "var", "y", "=", "set", ".", "tileMargin", ";", "var", "count", "=", "0", ";", "var", "countX", "=", "0", ";", "var", "countY", "=", "0", ";", "for", "(", "var", "t", "=", "set", ".", "firstgid", ";", "t", "<", "set", ".", "firstgid", "+", "set", ".", "total", ";", "t", "++", ")", "{", "//  Can add extra properties here as needed", "map", ".", "tiles", "[", "t", "]", "=", "[", "x", ",", "y", ",", "i", "]", ";", "x", "+=", "set", ".", "tileWidth", "+", "set", ".", "tileSpacing", ";", "count", "++", ";", "if", "(", "count", "===", "set", ".", "total", ")", "{", "break", ";", "}", "countX", "++", ";", "if", "(", "countX", "===", "set", ".", "columns", ")", "{", "x", "=", "set", ".", "tileMargin", ";", "y", "+=", "set", ".", "tileHeight", "+", "set", ".", "tileSpacing", ";", "countX", "=", "0", ";", "countY", "++", ";", "if", "(", "countY", "===", "set", ".", "rows", ")", "{", "break", ";", "}", "}", "}", "}", "// assign tile properties", "var", "layer", ";", "var", "tile", ";", "var", "sid", ";", "var", "set", ";", "// go through each of the map data layers", "for", "(", "var", "i", "=", "0", ";", "i", "<", "map", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "layer", "=", "map", ".", "layers", "[", "i", "]", ";", "collision", "[", "layer", ".", "name", "]", "=", "[", "]", ";", "set", "=", "null", ";", "// rows of tiles", "for", "(", "var", "j", "=", "0", ";", "j", "<", "layer", ".", "data", ".", "length", ";", "j", "++", ")", "{", "row", "=", "layer", ".", "data", "[", "j", "]", ";", "// individual tiles", "for", "(", "var", "k", "=", "0", ";", "k", "<", "row", ".", "length", ";", "k", "++", ")", "{", "tile", "=", "row", "[", "k", "]", ";", "if", "(", "tile", "===", "null", "||", "tile", ".", "index", "<", "0", ")", "{", "continue", ";", "}", "// find the relevant tileset", "sid", "=", "map", ".", "tiles", "[", "tile", ".", "index", "]", "[", "2", "]", ";", "set", "=", "map", ".", "tilesets", "[", "sid", "]", ";", "// if that tile type has any properties, add them to the tile object", "if", "(", "set", ".", "tileProperties", "&&", "set", ".", "tileProperties", "[", "tile", ".", "index", "-", "set", ".", "firstgid", "]", ")", "{", "tile", ".", "properties", "=", "Phaser", ".", "Utils", ".", "mixin", "(", "set", ".", "tileProperties", "[", "tile", ".", "index", "-", "set", ".", "firstgid", "]", ",", "tile", ".", "properties", ")", ";", "}", "var", "objectGroup", "=", "tilesetGroupObjects", "[", "tile", ".", "index", "]", ";", "if", "(", "objectGroup", ")", "{", "// build collisions and objects for objectgroups found in the tileset's tiles", "this", ".", "parseObjectGroup", "(", "objectGroup", ",", "map", ".", "objects", ",", "map", ".", "collision", ",", "tile", ".", "layer", ".", "name", ",", "{", "x", ":", "tile", ".", "worldX", "+", "objectGroup", ".", "x", ",", "y", ":", "tile", ".", "worldY", "+", "objectGroup", ".", "y", "}", ",", "objectsMap", ")", ";", "}", "}", "}", "}", "return", "map", ";", "}"], "original_docstring": "\nParses a Tiled JSON file into valid map data.\n@method Phaser.TilemapParser.parseTiledJSON\n@param {object} json - The JSON map data.\n@return {object} Generated and parsed map data.\n", "docstring": {"block_comment": "Parses a Tiled JSON file into valid map data.", "line_comment": ["Map data will consist of  layers, objects, images, tilesets, sizes", "Tile Layers", null, "Interpret binaryString as an array of bytes representing \nlittle endian encoded uint32 values.", "Loop through the data field in the JSON.", "This is an array containing the tile indexes, one after the other.  1   no tile, everything else   the tile index  starting at 1 for Tiled, 0 for CSV  \nIf the map contains multiple tilesets then the indexes are relative to that which the set starts from. \nNeed to set which tileset in the cache   which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.", "If true the current tile is flipped or rotated  Tiled TMX format ", "FlippedX", "FlippedY", "FlippedAD  anti diagonal   top right is swapped with bottom left corners ", "index, x, y, width, height", "The WebGL renderer uses this to flip UV coordinates before drawing", "Images", "Tilesets   Image Collections", "name, firstgid, width, height, margin, spacing, properties", "For a normal sliced tileset the row count size information is computed when updated. \nThis is done  again  after the image is set.", "build a temporary object for objectgroups found in the tileset s tiles", "We ve got a new Tileset, so set the lastgid into the previous one", "Objects   Collision Data  polylines, etc ", "Finally lets build our super tileset index", "Can add extra properties here as needed", "assign tile properties", "go through each of the map data layers", "rows of tiles", "individual tiles", "find the relevant tileset", "if that tile type has any properties, add them to the tile object", "build collisions and objects for objectgroups found in the tileset s tiles"]}, "docstring_tokens": ["-", "The", "JSON", "map", "data", "."], "sample_id": 626, "prompt_tokens": ["<javascript>", "<param>", "json"], "comment_type": "param", "sentence_id": 1}
{"id": "21004659", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (json)\n    {\n        if (json.orientation !== 'orthogonal')\n        {\n            console.warn('Phaser CE supports only orthogonal maps. This map\\'s orientation is \"%s\".', json.orientation);\n\n            return null;\n        }\n\n        //  Map data will consist of: layers, objects, images, tilesets, sizes\n        var map = {\n            width: json.width,\n            height: json.height,\n            tileWidth: json.tilewidth,\n            tileHeight: json.tileheight,\n            orientation: json.orientation,\n            format: Phaser.Tilemap.TILED_JSON,\n            version: json.version,\n            properties: json.properties,\n            widthInPixels: json.width * json.tilewidth,\n            heightInPixels: json.height * json.tileheight\n        };\n\n        //  Tile Layers\n        var layers = [];\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'tilelayer')\n            {\n                continue;\n            }\n\n            var curl = json.layers[i];\n\n            /*\n             * Base64 decode data if necessary\n             * NOTE: uncompressed base64 only.\n             */\n\n            if (!curl.compression && curl.encoding && curl.encoding === 'base64')\n            {\n                var binaryString = window.atob(curl.data);\n                var len = binaryString.length;\n                var bytes = new Array(len);\n\n                /*\n                 * Interpret binaryString as an array of bytes representing\n                 * little-endian encoded uint32 values.\n                 */\n                for (var j = 0; j < len; j += 4)\n                {\n                    bytes[j / 4] = (\n                        binaryString.charCodeAt(j) |\n                        binaryString.charCodeAt(j + 1) << 8 |\n                        binaryString.charCodeAt(j + 2) << 16 |\n                        binaryString.charCodeAt(j + 3) << 24\n                    ) >>> 0;\n                }\n\n                curl.data = bytes;\n\n                delete curl.encoding;\n            }\n            else if (curl.compression)\n            {\n                console.warn('Layer compression is unsupported, skipping layer \"%s\".', curl.name);\n\n                continue;\n            }\n\n            var layer = {\n\n                name: curl.name,\n                x: curl.x,\n                y: curl.y,\n                width: curl.width,\n                height: curl.height,\n                widthInPixels: curl.width * json.tilewidth,\n                heightInPixels: curl.height * json.tileheight,\n                alpha: curl.opacity,\n                offsetX: curl.offsetx,\n                offsetY: curl.offsety,\n                visible: curl.visible,\n                properties: {},\n                indexes: [],\n                callbacks: [],\n                bodies: []\n\n            };\n\n            if (curl.properties)\n            {\n                layer.properties = curl.properties;\n            }\n\n            var x = 0;\n            var row = [];\n            var output = [];\n            var rotation, flipped, flippedVal, gid;\n\n            //  Loop through the data field in the JSON.\n\n            /*\n             *  This is an array containing the tile indexes, one after the other. -1 = no tile, everything else = the tile index (starting at 1 for Tiled, 0 for CSV)\n             *  If the map contains multiple tilesets then the indexes are relative to that which the set starts from.\n             *  Need to set which tileset in the cache = which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.\n             */\n\n            for (var t = 0, len = curl.data.length; t < len; t++)\n            {\n                rotation = 0;\n                flipped = false;\n                gid = curl.data[t];\n                flippedVal = 0;\n\n                //  If true the current tile is flipped or rotated (Tiled TMX format)\n                if (gid > 0x20000000)\n                {\n                    // FlippedX\n                    if (gid > 0x80000000)\n                    {\n                        gid -= 0x80000000;\n                        flippedVal += 4;\n                    }\n\n                    // FlippedY\n                    if (gid > 0x40000000)\n                    {\n                        gid -= 0x40000000;\n                        flippedVal += 2;\n                    }\n\n                    // FlippedAD (anti-diagonal = top-right is swapped with bottom-left corners)\n                    if (gid > 0x20000000)\n                    {\n                        gid -= 0x20000000;\n                        flippedVal += 1;\n                    }\n\n                    switch (flippedVal)\n                    {\n                        case 5:\n                            rotation = Math.PI / 2;\n                            break;\n\n                        case 6:\n                            rotation = Math.PI;\n                            break;\n\n                        case 3:\n                            rotation = 3 * Math.PI / 2;\n                            break;\n\n                        case 4:\n                            rotation = 0;\n                            flipped = true;\n                            break;\n\n                        case 7:\n                            rotation = Math.PI / 2;\n                            flipped = true;\n                            break;\n\n                        case 2:\n                            rotation = Math.PI;\n                            flipped = true;\n                            break;\n\n                        case 1:\n                            rotation = 3 * Math.PI / 2;\n                            flipped = true;\n                            break;\n                    }\n                }\n\n                //  index, x, y, width, height\n                if (gid > 0)\n                {\n                    var tile = new Phaser.Tile(layer, gid, x, output.length, json.tilewidth, json.tileheight);\n\n                    tile.rotation = rotation;\n                    tile.flipped = flipped;\n\n                    if (flippedVal !== 0)\n                    {\n                        //  The WebGL renderer uses this to flip UV coordinates before drawing\n                        tile.flippedVal = flippedVal;\n                    }\n\n                    row.push(tile);\n                }\n                else\n                if (Phaser.TilemapParser.INSERT_NULL)\n                {\n                    row.push(null);\n                }\n                else\n                {\n                    row.push(new Phaser.Tile(layer, -1, x, output.length, json.tilewidth, json.tileheight));\n                }\n\n                x++;\n\n                if (x === curl.width)\n                {\n                    output.push(row);\n                    x = 0;\n                    row = [];\n                }\n            }\n\n            layer.data = output;\n\n            layers.push(layer);\n        }\n\n        map.layers = layers;\n\n        //  Images\n        var images = [];\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'imagelayer')\n            {\n                continue;\n            }\n\n            var curi = json.layers[i];\n\n            var image = {\n\n                name: curi.name,\n                image: curi.image,\n                x: curi.x,\n                y: curi.y,\n                alpha: curi.opacity,\n                visible: curi.visible,\n                properties: {}\n\n            };\n\n            if (curi.properties)\n            {\n                image.properties = curi.properties;\n            }\n\n            images.push(image);\n        }\n\n        map.images = images;\n\n        //  Tilesets & Image Collections\n        var tilesets = [];\n        var tilesetGroupObjects = {};\n        var imagecollections = [];\n        var lastSet = null;\n\n        for (var i = 0; i < json.tilesets.length; i++)\n        {\n            //  name, firstgid, width, height, margin, spacing, properties\n            var set = json.tilesets[i];\n\n            if (set.source)\n            {\n                console.warn('Phaser CE can\\'t load external tilesets (%s). Embed the tileset and then export the map again. https://github.com/photonstorm/phaser-ce/issues/273', set.source);\n            }\n            else if (set.image)\n            {\n                var newSet = new Phaser.Tileset(set.name, set.firstgid, set.tilewidth, set.tileheight, set.margin, set.spacing, set.properties);\n\n                if (set.tileproperties)\n                {\n                    newSet.tileProperties = set.tileproperties;\n                }\n\n                /*\n                 * For a normal sliced tileset the row/count/size information is computed when updated.\n                 * This is done (again) after the image is set.\n                 */\n                newSet.updateTileData(set.imagewidth, set.imageheight);\n\n                tilesets.push(newSet);\n            }\n            else if (set.tiles)\n            {\n                var newCollection = new Phaser.ImageCollection(set.name, set.firstgid, set.tilewidth, set.tileheight, set.margin, set.spacing, set.properties);\n\n                for (var ti in set.tiles)\n                {\n                    var image = set.tiles[ti].image;\n                    var gid = set.firstgid + parseInt(ti, 10);\n                    newCollection.addImage(gid, image);\n                }\n\n                imagecollections.push(newCollection);\n            }\n            else\n            {\n                throw new Error('Tileset ' + set.name + ' has no `image` or `tiles` property.');\n            }\n\n            // build a temporary object for objectgroups found in the tileset's tiles\n            for (var ti in set.tiles)\n            {\n                var objectGroup = set.tiles[ti].objectgroup;\n\n                if (!objectGroup)\n                {\n                    continue;\n                }\n\n                tilesetGroupObjects[parseInt(ti, 10) + set.firstgid] = objectGroup;\n            }\n\n            //  We've got a new Tileset, so set the lastgid into the previous one\n            if (lastSet)\n            {\n                lastSet.lastgid = set.firstgid - 1;\n            }\n\n            lastSet = set;\n        }\n\n        if (tilesets.length === 0 && imagecollections.length === 0)\n        {\n            throw new Error('This tilemap has no tilesets.');\n        }\n\n        map.tilesets = tilesets;\n        map.imagecollections = imagecollections;\n\n        //  Objects & Collision Data (polylines, etc)\n        var objects = {};\n        var collision = {};\n        var objectsMap = {};\n\n        for (var i = 0; i < json.layers.length; i++)\n        {\n            if (json.layers[i].type !== 'objectgroup')\n            {\n                continue;\n            }\n\n            var objectGroup = json.layers[i];\n            this.parseObjectGroup(objectGroup, objects, collision, undefined, undefined, objectsMap);\n        }\n\n        map.objects = objects;\n        map.collision = collision;\n        map.objectsMap = objectsMap;\n\n        map.tiles = [];\n\n        //  Finally lets build our super tileset index\n        for (var i = 0; i < map.tilesets.length; i++)\n        {\n            var set = map.tilesets[i];\n\n            var x = set.tileMargin;\n            var y = set.tileMargin;\n\n            var count = 0;\n            var countX = 0;\n            var countY = 0;\n\n            for (var t = set.firstgid; t < set.firstgid + set.total; t++)\n            {\n                //  Can add extra properties here as needed\n                map.tiles[t] = [ x, y, i ];\n\n                x += set.tileWidth + set.tileSpacing;\n\n                count++;\n\n                if (count === set.total)\n                {\n                    break;\n                }\n\n                countX++;\n\n                if (countX === set.columns)\n                {\n                    x = set.tileMargin;\n                    y += set.tileHeight + set.tileSpacing;\n\n                    countX = 0;\n                    countY++;\n\n                    if (countY === set.rows)\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n\n        // assign tile properties\n\n        var layer;\n        var tile;\n        var sid;\n        var set;\n\n        // go through each of the map data layers\n        for (var i = 0; i < map.layers.length; i++)\n        {\n            layer = map.layers[i];\n            collision[layer.name] = [];\n            set = null;\n\n            // rows of tiles\n            for (var j = 0; j < layer.data.length; j++)\n            {\n                row = layer.data[j];\n\n                // individual tiles\n                for (var k = 0; k < row.length; k++)\n                {\n                    tile = row[k];\n\n                    if (tile === null || tile.index < 0)\n                    {\n                        continue;\n                    }\n\n                    // find the relevant tileset\n\n                    sid = map.tiles[tile.index][2];\n                    set = map.tilesets[sid];\n\n                    // if that tile type has any properties, add them to the tile object\n\n                    if (set.tileProperties && set.tileProperties[tile.index - set.firstgid])\n                    {\n                        tile.properties = Phaser.Utils.mixin(set.tileProperties[tile.index - set.firstgid], tile.properties);\n                    }\n\n                    var objectGroup = tilesetGroupObjects[tile.index];\n                    if (objectGroup)\n                    {\n                        // build collisions and objects for objectgroups found in the tileset's tiles\n                        this.parseObjectGroup(\n                            objectGroup,\n                            map.objects,\n                            map.collision,\n                            tile.layer.name,\n                            {\n                                x: tile.worldX + objectGroup.x,\n                                y: tile.worldY + objectGroup.y\n                            },\n                            objectsMap\n                        );\n                    }\n                }\n            }\n        }\n\n        return map;\n    }", "code_tokens": ["function", "(", "json", ")", "{", "if", "(", "json", ".", "orientation", "!==", "'orthogonal'", ")", "{", "console", ".", "warn", "(", "'Phaser CE supports only orthogonal maps. This map\\'s orientation is \"%s\".'", ",", "json", ".", "orientation", ")", ";", "return", "null", ";", "}", "//  Map data will consist of: layers, objects, images, tilesets, sizes", "var", "map", "=", "{", "width", ":", "json", ".", "width", ",", "height", ":", "json", ".", "height", ",", "tileWidth", ":", "json", ".", "tilewidth", ",", "tileHeight", ":", "json", ".", "tileheight", ",", "orientation", ":", "json", ".", "orientation", ",", "format", ":", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ",", "version", ":", "json", ".", "version", ",", "properties", ":", "json", ".", "properties", ",", "widthInPixels", ":", "json", ".", "width", "*", "json", ".", "tilewidth", ",", "heightInPixels", ":", "json", ".", "height", "*", "json", ".", "tileheight", "}", ";", "//  Tile Layers", "var", "layers", "=", "[", "]", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'tilelayer'", ")", "{", "continue", ";", "}", "var", "curl", "=", "json", ".", "layers", "[", "i", "]", ";", "/*\n             * Base64 decode data if necessary\n             * NOTE: uncompressed base64 only.\n             */", "if", "(", "!", "curl", ".", "compression", "&&", "curl", ".", "encoding", "&&", "curl", ".", "encoding", "===", "'base64'", ")", "{", "var", "binaryString", "=", "window", ".", "atob", "(", "curl", ".", "data", ")", ";", "var", "len", "=", "binaryString", ".", "length", ";", "var", "bytes", "=", "new", "Array", "(", "len", ")", ";", "/*\n                 * Interpret binaryString as an array of bytes representing\n                 * little-endian encoded uint32 values.\n                 */", "for", "(", "var", "j", "=", "0", ";", "j", "<", "len", ";", "j", "+=", "4", ")", "{", "bytes", "[", "j", "/", "4", "]", "=", "(", "binaryString", ".", "charCodeAt", "(", "j", ")", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "1", ")", "<<", "8", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "2", ")", "<<", "16", "|", "binaryString", ".", "charCodeAt", "(", "j", "+", "3", ")", "<<", "24", ")", ">>>", "0", ";", "}", "curl", ".", "data", "=", "bytes", ";", "delete", "curl", ".", "encoding", ";", "}", "else", "if", "(", "curl", ".", "compression", ")", "{", "console", ".", "warn", "(", "'Layer compression is unsupported, skipping layer \"%s\".'", ",", "curl", ".", "name", ")", ";", "continue", ";", "}", "var", "layer", "=", "{", "name", ":", "curl", ".", "name", ",", "x", ":", "curl", ".", "x", ",", "y", ":", "curl", ".", "y", ",", "width", ":", "curl", ".", "width", ",", "height", ":", "curl", ".", "height", ",", "widthInPixels", ":", "curl", ".", "width", "*", "json", ".", "tilewidth", ",", "heightInPixels", ":", "curl", ".", "height", "*", "json", ".", "tileheight", ",", "alpha", ":", "curl", ".", "opacity", ",", "offsetX", ":", "curl", ".", "offsetx", ",", "offsetY", ":", "curl", ".", "offsety", ",", "visible", ":", "curl", ".", "visible", ",", "properties", ":", "{", "}", ",", "indexes", ":", "[", "]", ",", "callbacks", ":", "[", "]", ",", "bodies", ":", "[", "]", "}", ";", "if", "(", "curl", ".", "properties", ")", "{", "layer", ".", "properties", "=", "curl", ".", "properties", ";", "}", "var", "x", "=", "0", ";", "var", "row", "=", "[", "]", ";", "var", "output", "=", "[", "]", ";", "var", "rotation", ",", "flipped", ",", "flippedVal", ",", "gid", ";", "//  Loop through the data field in the JSON.", "/*\n             *  This is an array containing the tile indexes, one after the other. -1 = no tile, everything else = the tile index (starting at 1 for Tiled, 0 for CSV)\n             *  If the map contains multiple tilesets then the indexes are relative to that which the set starts from.\n             *  Need to set which tileset in the cache = which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.\n             */", "for", "(", "var", "t", "=", "0", ",", "len", "=", "curl", ".", "data", ".", "length", ";", "t", "<", "len", ";", "t", "++", ")", "{", "rotation", "=", "0", ";", "flipped", "=", "false", ";", "gid", "=", "curl", ".", "data", "[", "t", "]", ";", "flippedVal", "=", "0", ";", "//  If true the current tile is flipped or rotated (Tiled TMX format)", "if", "(", "gid", ">", "0x20000000", ")", "{", "// FlippedX", "if", "(", "gid", ">", "0x80000000", ")", "{", "gid", "-=", "0x80000000", ";", "flippedVal", "+=", "4", ";", "}", "// FlippedY", "if", "(", "gid", ">", "0x40000000", ")", "{", "gid", "-=", "0x40000000", ";", "flippedVal", "+=", "2", ";", "}", "// FlippedAD (anti-diagonal = top-right is swapped with bottom-left corners)", "if", "(", "gid", ">", "0x20000000", ")", "{", "gid", "-=", "0x20000000", ";", "flippedVal", "+=", "1", ";", "}", "switch", "(", "flippedVal", ")", "{", "case", "5", ":", "rotation", "=", "Math", ".", "PI", "/", "2", ";", "break", ";", "case", "6", ":", "rotation", "=", "Math", ".", "PI", ";", "break", ";", "case", "3", ":", "rotation", "=", "3", "*", "Math", ".", "PI", "/", "2", ";", "break", ";", "case", "4", ":", "rotation", "=", "0", ";", "flipped", "=", "true", ";", "break", ";", "case", "7", ":", "rotation", "=", "Math", ".", "PI", "/", "2", ";", "flipped", "=", "true", ";", "break", ";", "case", "2", ":", "rotation", "=", "Math", ".", "PI", ";", "flipped", "=", "true", ";", "break", ";", "case", "1", ":", "rotation", "=", "3", "*", "Math", ".", "PI", "/", "2", ";", "flipped", "=", "true", ";", "break", ";", "}", "}", "//  index, x, y, width, height", "if", "(", "gid", ">", "0", ")", "{", "var", "tile", "=", "new", "Phaser", ".", "Tile", "(", "layer", ",", "gid", ",", "x", ",", "output", ".", "length", ",", "json", ".", "tilewidth", ",", "json", ".", "tileheight", ")", ";", "tile", ".", "rotation", "=", "rotation", ";", "tile", ".", "flipped", "=", "flipped", ";", "if", "(", "flippedVal", "!==", "0", ")", "{", "//  The WebGL renderer uses this to flip UV coordinates before drawing", "tile", ".", "flippedVal", "=", "flippedVal", ";", "}", "row", ".", "push", "(", "tile", ")", ";", "}", "else", "if", "(", "Phaser", ".", "TilemapParser", ".", "INSERT_NULL", ")", "{", "row", ".", "push", "(", "null", ")", ";", "}", "else", "{", "row", ".", "push", "(", "new", "Phaser", ".", "Tile", "(", "layer", ",", "-", "1", ",", "x", ",", "output", ".", "length", ",", "json", ".", "tilewidth", ",", "json", ".", "tileheight", ")", ")", ";", "}", "x", "++", ";", "if", "(", "x", "===", "curl", ".", "width", ")", "{", "output", ".", "push", "(", "row", ")", ";", "x", "=", "0", ";", "row", "=", "[", "]", ";", "}", "}", "layer", ".", "data", "=", "output", ";", "layers", ".", "push", "(", "layer", ")", ";", "}", "map", ".", "layers", "=", "layers", ";", "//  Images", "var", "images", "=", "[", "]", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'imagelayer'", ")", "{", "continue", ";", "}", "var", "curi", "=", "json", ".", "layers", "[", "i", "]", ";", "var", "image", "=", "{", "name", ":", "curi", ".", "name", ",", "image", ":", "curi", ".", "image", ",", "x", ":", "curi", ".", "x", ",", "y", ":", "curi", ".", "y", ",", "alpha", ":", "curi", ".", "opacity", ",", "visible", ":", "curi", ".", "visible", ",", "properties", ":", "{", "}", "}", ";", "if", "(", "curi", ".", "properties", ")", "{", "image", ".", "properties", "=", "curi", ".", "properties", ";", "}", "images", ".", "push", "(", "image", ")", ";", "}", "map", ".", "images", "=", "images", ";", "//  Tilesets & Image Collections", "var", "tilesets", "=", "[", "]", ";", "var", "tilesetGroupObjects", "=", "{", "}", ";", "var", "imagecollections", "=", "[", "]", ";", "var", "lastSet", "=", "null", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "tilesets", ".", "length", ";", "i", "++", ")", "{", "//  name, firstgid, width, height, margin, spacing, properties", "var", "set", "=", "json", ".", "tilesets", "[", "i", "]", ";", "if", "(", "set", ".", "source", ")", "{", "console", ".", "warn", "(", "'Phaser CE can\\'t load external tilesets (%s). Embed the tileset and then export the map again. https://github.com/photonstorm/phaser-ce/issues/273'", ",", "set", ".", "source", ")", ";", "}", "else", "if", "(", "set", ".", "image", ")", "{", "var", "newSet", "=", "new", "Phaser", ".", "Tileset", "(", "set", ".", "name", ",", "set", ".", "firstgid", ",", "set", ".", "tilewidth", ",", "set", ".", "tileheight", ",", "set", ".", "margin", ",", "set", ".", "spacing", ",", "set", ".", "properties", ")", ";", "if", "(", "set", ".", "tileproperties", ")", "{", "newSet", ".", "tileProperties", "=", "set", ".", "tileproperties", ";", "}", "/*\n                 * For a normal sliced tileset the row/count/size information is computed when updated.\n                 * This is done (again) after the image is set.\n                 */", "newSet", ".", "updateTileData", "(", "set", ".", "imagewidth", ",", "set", ".", "imageheight", ")", ";", "tilesets", ".", "push", "(", "newSet", ")", ";", "}", "else", "if", "(", "set", ".", "tiles", ")", "{", "var", "newCollection", "=", "new", "Phaser", ".", "ImageCollection", "(", "set", ".", "name", ",", "set", ".", "firstgid", ",", "set", ".", "tilewidth", ",", "set", ".", "tileheight", ",", "set", ".", "margin", ",", "set", ".", "spacing", ",", "set", ".", "properties", ")", ";", "for", "(", "var", "ti", "in", "set", ".", "tiles", ")", "{", "var", "image", "=", "set", ".", "tiles", "[", "ti", "]", ".", "image", ";", "var", "gid", "=", "set", ".", "firstgid", "+", "parseInt", "(", "ti", ",", "10", ")", ";", "newCollection", ".", "addImage", "(", "gid", ",", "image", ")", ";", "}", "imagecollections", ".", "push", "(", "newCollection", ")", ";", "}", "else", "{", "throw", "new", "Error", "(", "'Tileset '", "+", "set", ".", "name", "+", "' has no `image` or `tiles` property.'", ")", ";", "}", "// build a temporary object for objectgroups found in the tileset's tiles", "for", "(", "var", "ti", "in", "set", ".", "tiles", ")", "{", "var", "objectGroup", "=", "set", ".", "tiles", "[", "ti", "]", ".", "objectgroup", ";", "if", "(", "!", "objectGroup", ")", "{", "continue", ";", "}", "tilesetGroupObjects", "[", "parseInt", "(", "ti", ",", "10", ")", "+", "set", ".", "firstgid", "]", "=", "objectGroup", ";", "}", "//  We've got a new Tileset, so set the lastgid into the previous one", "if", "(", "lastSet", ")", "{", "lastSet", ".", "lastgid", "=", "set", ".", "firstgid", "-", "1", ";", "}", "lastSet", "=", "set", ";", "}", "if", "(", "tilesets", ".", "length", "===", "0", "&&", "imagecollections", ".", "length", "===", "0", ")", "{", "throw", "new", "Error", "(", "'This tilemap has no tilesets.'", ")", ";", "}", "map", ".", "tilesets", "=", "tilesets", ";", "map", ".", "imagecollections", "=", "imagecollections", ";", "//  Objects & Collision Data (polylines, etc)", "var", "objects", "=", "{", "}", ";", "var", "collision", "=", "{", "}", ";", "var", "objectsMap", "=", "{", "}", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "json", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "if", "(", "json", ".", "layers", "[", "i", "]", ".", "type", "!==", "'objectgroup'", ")", "{", "continue", ";", "}", "var", "objectGroup", "=", "json", ".", "layers", "[", "i", "]", ";", "this", ".", "parseObjectGroup", "(", "objectGroup", ",", "objects", ",", "collision", ",", "undefined", ",", "undefined", ",", "objectsMap", ")", ";", "}", "map", ".", "objects", "=", "objects", ";", "map", ".", "collision", "=", "collision", ";", "map", ".", "objectsMap", "=", "objectsMap", ";", "map", ".", "tiles", "=", "[", "]", ";", "//  Finally lets build our super tileset index", "for", "(", "var", "i", "=", "0", ";", "i", "<", "map", ".", "tilesets", ".", "length", ";", "i", "++", ")", "{", "var", "set", "=", "map", ".", "tilesets", "[", "i", "]", ";", "var", "x", "=", "set", ".", "tileMargin", ";", "var", "y", "=", "set", ".", "tileMargin", ";", "var", "count", "=", "0", ";", "var", "countX", "=", "0", ";", "var", "countY", "=", "0", ";", "for", "(", "var", "t", "=", "set", ".", "firstgid", ";", "t", "<", "set", ".", "firstgid", "+", "set", ".", "total", ";", "t", "++", ")", "{", "//  Can add extra properties here as needed", "map", ".", "tiles", "[", "t", "]", "=", "[", "x", ",", "y", ",", "i", "]", ";", "x", "+=", "set", ".", "tileWidth", "+", "set", ".", "tileSpacing", ";", "count", "++", ";", "if", "(", "count", "===", "set", ".", "total", ")", "{", "break", ";", "}", "countX", "++", ";", "if", "(", "countX", "===", "set", ".", "columns", ")", "{", "x", "=", "set", ".", "tileMargin", ";", "y", "+=", "set", ".", "tileHeight", "+", "set", ".", "tileSpacing", ";", "countX", "=", "0", ";", "countY", "++", ";", "if", "(", "countY", "===", "set", ".", "rows", ")", "{", "break", ";", "}", "}", "}", "}", "// assign tile properties", "var", "layer", ";", "var", "tile", ";", "var", "sid", ";", "var", "set", ";", "// go through each of the map data layers", "for", "(", "var", "i", "=", "0", ";", "i", "<", "map", ".", "layers", ".", "length", ";", "i", "++", ")", "{", "layer", "=", "map", ".", "layers", "[", "i", "]", ";", "collision", "[", "layer", ".", "name", "]", "=", "[", "]", ";", "set", "=", "null", ";", "// rows of tiles", "for", "(", "var", "j", "=", "0", ";", "j", "<", "layer", ".", "data", ".", "length", ";", "j", "++", ")", "{", "row", "=", "layer", ".", "data", "[", "j", "]", ";", "// individual tiles", "for", "(", "var", "k", "=", "0", ";", "k", "<", "row", ".", "length", ";", "k", "++", ")", "{", "tile", "=", "row", "[", "k", "]", ";", "if", "(", "tile", "===", "null", "||", "tile", ".", "index", "<", "0", ")", "{", "continue", ";", "}", "// find the relevant tileset", "sid", "=", "map", ".", "tiles", "[", "tile", ".", "index", "]", "[", "2", "]", ";", "set", "=", "map", ".", "tilesets", "[", "sid", "]", ";", "// if that tile type has any properties, add them to the tile object", "if", "(", "set", ".", "tileProperties", "&&", "set", ".", "tileProperties", "[", "tile", ".", "index", "-", "set", ".", "firstgid", "]", ")", "{", "tile", ".", "properties", "=", "Phaser", ".", "Utils", ".", "mixin", "(", "set", ".", "tileProperties", "[", "tile", ".", "index", "-", "set", ".", "firstgid", "]", ",", "tile", ".", "properties", ")", ";", "}", "var", "objectGroup", "=", "tilesetGroupObjects", "[", "tile", ".", "index", "]", ";", "if", "(", "objectGroup", ")", "{", "// build collisions and objects for objectgroups found in the tileset's tiles", "this", ".", "parseObjectGroup", "(", "objectGroup", ",", "map", ".", "objects", ",", "map", ".", "collision", ",", "tile", ".", "layer", ".", "name", ",", "{", "x", ":", "tile", ".", "worldX", "+", "objectGroup", ".", "x", ",", "y", ":", "tile", ".", "worldY", "+", "objectGroup", ".", "y", "}", ",", "objectsMap", ")", ";", "}", "}", "}", "}", "return", "map", ";", "}"], "original_docstring": "\nParses a Tiled JSON file into valid map data.\n@method Phaser.TilemapParser.parseTiledJSON\n@param {object} json - The JSON map data.\n@return {object} Generated and parsed map data.\n", "docstring": {"block_comment": "Parses a Tiled JSON file into valid map data.", "line_comment": ["Map data will consist of  layers, objects, images, tilesets, sizes", "Tile Layers", null, "Interpret binaryString as an array of bytes representing \nlittle endian encoded uint32 values.", "Loop through the data field in the JSON.", "This is an array containing the tile indexes, one after the other.  1   no tile, everything else   the tile index  starting at 1 for Tiled, 0 for CSV  \nIf the map contains multiple tilesets then the indexes are relative to that which the set starts from. \nNeed to set which tileset in the cache   which tileset in the JSON, if you do this manually it means you can use the same map data but a new tileset.", "If true the current tile is flipped or rotated  Tiled TMX format ", "FlippedX", "FlippedY", "FlippedAD  anti diagonal   top right is swapped with bottom left corners ", "index, x, y, width, height", "The WebGL renderer uses this to flip UV coordinates before drawing", "Images", "Tilesets   Image Collections", "name, firstgid, width, height, margin, spacing, properties", "For a normal sliced tileset the row count size information is computed when updated. \nThis is done  again  after the image is set.", "build a temporary object for objectgroups found in the tileset s tiles", "We ve got a new Tileset, so set the lastgid into the previous one", "Objects   Collision Data  polylines, etc ", "Finally lets build our super tileset index", "Can add extra properties here as needed", "assign tile properties", "go through each of the map data layers", "rows of tiles", "individual tiles", "find the relevant tileset", "if that tile type has any properties, add them to the tile object", "build collisions and objects for objectgroups found in the tileset s tiles"]}, "docstring_tokens": ["Generated", "and", "parsed", "map", "data", "."], "sample_id": 626, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004660", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (objectGroup, objectsCollection, collisionCollection, nameKey, relativePosition, objectsMap)\n    {\n        var nameKey = nameKey || objectGroup.name;\n        var relativePosition = relativePosition || {x: 0, y: 0};\n\n        if (!nameKey)\n        {\n            console.warn('No name found for objectGroup', objectGroup);\n        }\n\n        if (relativePosition.x === undefined || relativePosition.y === undefined)\n        {\n            console.warn('Malformed xy properties in relativePosition', relativePosition);\n        }\n\n        objectsCollection[nameKey] = objectsCollection[nameKey] || [];\n        collisionCollection[nameKey] = collisionCollection[nameKey] || [];\n\n        for (var v = 0, len = objectGroup.objects.length; v < len; v++)\n        {\n            var o = objectGroup.objects[v];\n            var object = this.createObject(o);\n\n            object.x += relativePosition.x;\n            object.y += relativePosition.y;\n\n            objectsCollection[nameKey].push(object);\n\n            if (object.id)\n            {\n                objectsMap[object.id] = object;\n            }\n\n            if (o.polyline)\n            {\n                object.polyline = [];\n\n                //  Parse the polyline into an array\n                for (var p = 0; p < o.polyline.length; p++)\n                {\n                    object.polyline.push([ o.polyline[p].x, o.polyline[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.polygon)\n            {\n                //  Parse the polygon into an array\n                object.polygon = [];\n\n                for (var p = 0; p < o.polygon.length; p++)\n                {\n                    object.polygon.push([ o.polygon[p].x, o.polygon[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.ellipse || o.rectangle)\n            {\n                collisionCollection[nameKey].push(object);\n            }\n        }\n\n        return {\n            objectsCollection: objectsCollection,\n            collisionCollection: collisionCollection\n        };\n    }", "code_tokens": ["function", "(", "objectGroup", ",", "objectsCollection", ",", "collisionCollection", ",", "nameKey", ",", "relativePosition", ",", "objectsMap", ")", "{", "var", "nameKey", "=", "nameKey", "||", "objectGroup", ".", "name", ";", "var", "relativePosition", "=", "relativePosition", "||", "{", "x", ":", "0", ",", "y", ":", "0", "}", ";", "if", "(", "!", "nameKey", ")", "{", "console", ".", "warn", "(", "'No name found for objectGroup'", ",", "objectGroup", ")", ";", "}", "if", "(", "relativePosition", ".", "x", "===", "undefined", "||", "relativePosition", ".", "y", "===", "undefined", ")", "{", "console", ".", "warn", "(", "'Malformed xy properties in relativePosition'", ",", "relativePosition", ")", ";", "}", "objectsCollection", "[", "nameKey", "]", "=", "objectsCollection", "[", "nameKey", "]", "||", "[", "]", ";", "collisionCollection", "[", "nameKey", "]", "=", "collisionCollection", "[", "nameKey", "]", "||", "[", "]", ";", "for", "(", "var", "v", "=", "0", ",", "len", "=", "objectGroup", ".", "objects", ".", "length", ";", "v", "<", "len", ";", "v", "++", ")", "{", "var", "o", "=", "objectGroup", ".", "objects", "[", "v", "]", ";", "var", "object", "=", "this", ".", "createObject", "(", "o", ")", ";", "object", ".", "x", "+=", "relativePosition", ".", "x", ";", "object", ".", "y", "+=", "relativePosition", ".", "y", ";", "objectsCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "if", "(", "object", ".", "id", ")", "{", "objectsMap", "[", "object", ".", "id", "]", "=", "object", ";", "}", "if", "(", "o", ".", "polyline", ")", "{", "object", ".", "polyline", "=", "[", "]", ";", "//  Parse the polyline into an array", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polyline", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polyline", ".", "push", "(", "[", "o", ".", "polyline", "[", "p", "]", ".", "x", ",", "o", ".", "polyline", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "polygon", ")", "{", "//  Parse the polygon into an array", "object", ".", "polygon", "=", "[", "]", ";", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polygon", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polygon", ".", "push", "(", "[", "o", ".", "polygon", "[", "p", "]", ".", "x", ",", "o", ".", "polygon", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "ellipse", "||", "o", ".", "rectangle", ")", "{", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "}", "return", "{", "objectsCollection", ":", "objectsCollection", ",", "collisionCollection", ":", "collisionCollection", "}", ";", "}"], "original_docstring": "\nParses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.\n@method Phaser.TilemapParser.parseObjectGroup\n@param {object} objectGroup - A JSON object group.\n@param {object} objectsCollection - An object into which new array of Tiled map objects will be added.\n@param {object} collisionCollection - An object into which new array of collision objects will be added. Currently only polylines are added.\n@param {string} [nameKey=objectGroup.name] - Key under which to store objects in collisions in objectsCollection and collisionCollection\n@param {object} [relativePosition={x: 0, y: 0}] - Coordinates the object group's position is relative to.\n@return {object} A object literal containing the objectsCollection and collisionCollection\n", "docstring": {"block_comment": "Parses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.", "line_comment": ["Parse the polyline into an array", "Parse the polygon into an array"]}, "docstring_tokens": ["Parses", "an", "object", "group", "in", "Tiled", "JSON", "files", ".", "Object", "groups", "can", "be", "found", "in", "both", "layers", "and", "tilesets", ".", "Called", "internally", "in", "parseTiledJSON", "."], "sample_id": 627, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004660", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (objectGroup, objectsCollection, collisionCollection, nameKey, relativePosition, objectsMap)\n    {\n        var nameKey = nameKey || objectGroup.name;\n        var relativePosition = relativePosition || {x: 0, y: 0};\n\n        if (!nameKey)\n        {\n            console.warn('No name found for objectGroup', objectGroup);\n        }\n\n        if (relativePosition.x === undefined || relativePosition.y === undefined)\n        {\n            console.warn('Malformed xy properties in relativePosition', relativePosition);\n        }\n\n        objectsCollection[nameKey] = objectsCollection[nameKey] || [];\n        collisionCollection[nameKey] = collisionCollection[nameKey] || [];\n\n        for (var v = 0, len = objectGroup.objects.length; v < len; v++)\n        {\n            var o = objectGroup.objects[v];\n            var object = this.createObject(o);\n\n            object.x += relativePosition.x;\n            object.y += relativePosition.y;\n\n            objectsCollection[nameKey].push(object);\n\n            if (object.id)\n            {\n                objectsMap[object.id] = object;\n            }\n\n            if (o.polyline)\n            {\n                object.polyline = [];\n\n                //  Parse the polyline into an array\n                for (var p = 0; p < o.polyline.length; p++)\n                {\n                    object.polyline.push([ o.polyline[p].x, o.polyline[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.polygon)\n            {\n                //  Parse the polygon into an array\n                object.polygon = [];\n\n                for (var p = 0; p < o.polygon.length; p++)\n                {\n                    object.polygon.push([ o.polygon[p].x, o.polygon[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.ellipse || o.rectangle)\n            {\n                collisionCollection[nameKey].push(object);\n            }\n        }\n\n        return {\n            objectsCollection: objectsCollection,\n            collisionCollection: collisionCollection\n        };\n    }", "code_tokens": ["function", "(", "objectGroup", ",", "objectsCollection", ",", "collisionCollection", ",", "nameKey", ",", "relativePosition", ",", "objectsMap", ")", "{", "var", "nameKey", "=", "nameKey", "||", "objectGroup", ".", "name", ";", "var", "relativePosition", "=", "relativePosition", "||", "{", "x", ":", "0", ",", "y", ":", "0", "}", ";", "if", "(", "!", "nameKey", ")", "{", "console", ".", "warn", "(", "'No name found for objectGroup'", ",", "objectGroup", ")", ";", "}", "if", "(", "relativePosition", ".", "x", "===", "undefined", "||", "relativePosition", ".", "y", "===", "undefined", ")", "{", "console", ".", "warn", "(", "'Malformed xy properties in relativePosition'", ",", "relativePosition", ")", ";", "}", "objectsCollection", "[", "nameKey", "]", "=", "objectsCollection", "[", "nameKey", "]", "||", "[", "]", ";", "collisionCollection", "[", "nameKey", "]", "=", "collisionCollection", "[", "nameKey", "]", "||", "[", "]", ";", "for", "(", "var", "v", "=", "0", ",", "len", "=", "objectGroup", ".", "objects", ".", "length", ";", "v", "<", "len", ";", "v", "++", ")", "{", "var", "o", "=", "objectGroup", ".", "objects", "[", "v", "]", ";", "var", "object", "=", "this", ".", "createObject", "(", "o", ")", ";", "object", ".", "x", "+=", "relativePosition", ".", "x", ";", "object", ".", "y", "+=", "relativePosition", ".", "y", ";", "objectsCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "if", "(", "object", ".", "id", ")", "{", "objectsMap", "[", "object", ".", "id", "]", "=", "object", ";", "}", "if", "(", "o", ".", "polyline", ")", "{", "object", ".", "polyline", "=", "[", "]", ";", "//  Parse the polyline into an array", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polyline", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polyline", ".", "push", "(", "[", "o", ".", "polyline", "[", "p", "]", ".", "x", ",", "o", ".", "polyline", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "polygon", ")", "{", "//  Parse the polygon into an array", "object", ".", "polygon", "=", "[", "]", ";", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polygon", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polygon", ".", "push", "(", "[", "o", ".", "polygon", "[", "p", "]", ".", "x", ",", "o", ".", "polygon", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "ellipse", "||", "o", ".", "rectangle", ")", "{", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "}", "return", "{", "objectsCollection", ":", "objectsCollection", ",", "collisionCollection", ":", "collisionCollection", "}", ";", "}"], "original_docstring": "\nParses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.\n@method Phaser.TilemapParser.parseObjectGroup\n@param {object} objectGroup - A JSON object group.\n@param {object} objectsCollection - An object into which new array of Tiled map objects will be added.\n@param {object} collisionCollection - An object into which new array of collision objects will be added. Currently only polylines are added.\n@param {string} [nameKey=objectGroup.name] - Key under which to store objects in collisions in objectsCollection and collisionCollection\n@param {object} [relativePosition={x: 0, y: 0}] - Coordinates the object group's position is relative to.\n@return {object} A object literal containing the objectsCollection and collisionCollection\n", "docstring": {"block_comment": "Parses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.", "line_comment": ["Parse the polyline into an array", "Parse the polygon into an array"]}, "docstring_tokens": ["-", "A", "JSON", "object", "group", "."], "sample_id": 627, "prompt_tokens": ["<javascript>", "<param>", "objectGroup"], "comment_type": "param", "sentence_id": 1}
{"id": "21004660", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (objectGroup, objectsCollection, collisionCollection, nameKey, relativePosition, objectsMap)\n    {\n        var nameKey = nameKey || objectGroup.name;\n        var relativePosition = relativePosition || {x: 0, y: 0};\n\n        if (!nameKey)\n        {\n            console.warn('No name found for objectGroup', objectGroup);\n        }\n\n        if (relativePosition.x === undefined || relativePosition.y === undefined)\n        {\n            console.warn('Malformed xy properties in relativePosition', relativePosition);\n        }\n\n        objectsCollection[nameKey] = objectsCollection[nameKey] || [];\n        collisionCollection[nameKey] = collisionCollection[nameKey] || [];\n\n        for (var v = 0, len = objectGroup.objects.length; v < len; v++)\n        {\n            var o = objectGroup.objects[v];\n            var object = this.createObject(o);\n\n            object.x += relativePosition.x;\n            object.y += relativePosition.y;\n\n            objectsCollection[nameKey].push(object);\n\n            if (object.id)\n            {\n                objectsMap[object.id] = object;\n            }\n\n            if (o.polyline)\n            {\n                object.polyline = [];\n\n                //  Parse the polyline into an array\n                for (var p = 0; p < o.polyline.length; p++)\n                {\n                    object.polyline.push([ o.polyline[p].x, o.polyline[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.polygon)\n            {\n                //  Parse the polygon into an array\n                object.polygon = [];\n\n                for (var p = 0; p < o.polygon.length; p++)\n                {\n                    object.polygon.push([ o.polygon[p].x, o.polygon[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.ellipse || o.rectangle)\n            {\n                collisionCollection[nameKey].push(object);\n            }\n        }\n\n        return {\n            objectsCollection: objectsCollection,\n            collisionCollection: collisionCollection\n        };\n    }", "code_tokens": ["function", "(", "objectGroup", ",", "objectsCollection", ",", "collisionCollection", ",", "nameKey", ",", "relativePosition", ",", "objectsMap", ")", "{", "var", "nameKey", "=", "nameKey", "||", "objectGroup", ".", "name", ";", "var", "relativePosition", "=", "relativePosition", "||", "{", "x", ":", "0", ",", "y", ":", "0", "}", ";", "if", "(", "!", "nameKey", ")", "{", "console", ".", "warn", "(", "'No name found for objectGroup'", ",", "objectGroup", ")", ";", "}", "if", "(", "relativePosition", ".", "x", "===", "undefined", "||", "relativePosition", ".", "y", "===", "undefined", ")", "{", "console", ".", "warn", "(", "'Malformed xy properties in relativePosition'", ",", "relativePosition", ")", ";", "}", "objectsCollection", "[", "nameKey", "]", "=", "objectsCollection", "[", "nameKey", "]", "||", "[", "]", ";", "collisionCollection", "[", "nameKey", "]", "=", "collisionCollection", "[", "nameKey", "]", "||", "[", "]", ";", "for", "(", "var", "v", "=", "0", ",", "len", "=", "objectGroup", ".", "objects", ".", "length", ";", "v", "<", "len", ";", "v", "++", ")", "{", "var", "o", "=", "objectGroup", ".", "objects", "[", "v", "]", ";", "var", "object", "=", "this", ".", "createObject", "(", "o", ")", ";", "object", ".", "x", "+=", "relativePosition", ".", "x", ";", "object", ".", "y", "+=", "relativePosition", ".", "y", ";", "objectsCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "if", "(", "object", ".", "id", ")", "{", "objectsMap", "[", "object", ".", "id", "]", "=", "object", ";", "}", "if", "(", "o", ".", "polyline", ")", "{", "object", ".", "polyline", "=", "[", "]", ";", "//  Parse the polyline into an array", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polyline", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polyline", ".", "push", "(", "[", "o", ".", "polyline", "[", "p", "]", ".", "x", ",", "o", ".", "polyline", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "polygon", ")", "{", "//  Parse the polygon into an array", "object", ".", "polygon", "=", "[", "]", ";", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polygon", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polygon", ".", "push", "(", "[", "o", ".", "polygon", "[", "p", "]", ".", "x", ",", "o", ".", "polygon", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "ellipse", "||", "o", ".", "rectangle", ")", "{", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "}", "return", "{", "objectsCollection", ":", "objectsCollection", ",", "collisionCollection", ":", "collisionCollection", "}", ";", "}"], "original_docstring": "\nParses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.\n@method Phaser.TilemapParser.parseObjectGroup\n@param {object} objectGroup - A JSON object group.\n@param {object} objectsCollection - An object into which new array of Tiled map objects will be added.\n@param {object} collisionCollection - An object into which new array of collision objects will be added. Currently only polylines are added.\n@param {string} [nameKey=objectGroup.name] - Key under which to store objects in collisions in objectsCollection and collisionCollection\n@param {object} [relativePosition={x: 0, y: 0}] - Coordinates the object group's position is relative to.\n@return {object} A object literal containing the objectsCollection and collisionCollection\n", "docstring": {"block_comment": "Parses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.", "line_comment": ["Parse the polyline into an array", "Parse the polygon into an array"]}, "docstring_tokens": ["-", "An", "object", "into", "which", "new", "array", "of", "Tiled", "map", "objects", "will", "be", "added", "."], "sample_id": 627, "prompt_tokens": ["<javascript>", "<param>", "objectsCollection"], "comment_type": "param", "sentence_id": 2}
{"id": "21004660", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (objectGroup, objectsCollection, collisionCollection, nameKey, relativePosition, objectsMap)\n    {\n        var nameKey = nameKey || objectGroup.name;\n        var relativePosition = relativePosition || {x: 0, y: 0};\n\n        if (!nameKey)\n        {\n            console.warn('No name found for objectGroup', objectGroup);\n        }\n\n        if (relativePosition.x === undefined || relativePosition.y === undefined)\n        {\n            console.warn('Malformed xy properties in relativePosition', relativePosition);\n        }\n\n        objectsCollection[nameKey] = objectsCollection[nameKey] || [];\n        collisionCollection[nameKey] = collisionCollection[nameKey] || [];\n\n        for (var v = 0, len = objectGroup.objects.length; v < len; v++)\n        {\n            var o = objectGroup.objects[v];\n            var object = this.createObject(o);\n\n            object.x += relativePosition.x;\n            object.y += relativePosition.y;\n\n            objectsCollection[nameKey].push(object);\n\n            if (object.id)\n            {\n                objectsMap[object.id] = object;\n            }\n\n            if (o.polyline)\n            {\n                object.polyline = [];\n\n                //  Parse the polyline into an array\n                for (var p = 0; p < o.polyline.length; p++)\n                {\n                    object.polyline.push([ o.polyline[p].x, o.polyline[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.polygon)\n            {\n                //  Parse the polygon into an array\n                object.polygon = [];\n\n                for (var p = 0; p < o.polygon.length; p++)\n                {\n                    object.polygon.push([ o.polygon[p].x, o.polygon[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.ellipse || o.rectangle)\n            {\n                collisionCollection[nameKey].push(object);\n            }\n        }\n\n        return {\n            objectsCollection: objectsCollection,\n            collisionCollection: collisionCollection\n        };\n    }", "code_tokens": ["function", "(", "objectGroup", ",", "objectsCollection", ",", "collisionCollection", ",", "nameKey", ",", "relativePosition", ",", "objectsMap", ")", "{", "var", "nameKey", "=", "nameKey", "||", "objectGroup", ".", "name", ";", "var", "relativePosition", "=", "relativePosition", "||", "{", "x", ":", "0", ",", "y", ":", "0", "}", ";", "if", "(", "!", "nameKey", ")", "{", "console", ".", "warn", "(", "'No name found for objectGroup'", ",", "objectGroup", ")", ";", "}", "if", "(", "relativePosition", ".", "x", "===", "undefined", "||", "relativePosition", ".", "y", "===", "undefined", ")", "{", "console", ".", "warn", "(", "'Malformed xy properties in relativePosition'", ",", "relativePosition", ")", ";", "}", "objectsCollection", "[", "nameKey", "]", "=", "objectsCollection", "[", "nameKey", "]", "||", "[", "]", ";", "collisionCollection", "[", "nameKey", "]", "=", "collisionCollection", "[", "nameKey", "]", "||", "[", "]", ";", "for", "(", "var", "v", "=", "0", ",", "len", "=", "objectGroup", ".", "objects", ".", "length", ";", "v", "<", "len", ";", "v", "++", ")", "{", "var", "o", "=", "objectGroup", ".", "objects", "[", "v", "]", ";", "var", "object", "=", "this", ".", "createObject", "(", "o", ")", ";", "object", ".", "x", "+=", "relativePosition", ".", "x", ";", "object", ".", "y", "+=", "relativePosition", ".", "y", ";", "objectsCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "if", "(", "object", ".", "id", ")", "{", "objectsMap", "[", "object", ".", "id", "]", "=", "object", ";", "}", "if", "(", "o", ".", "polyline", ")", "{", "object", ".", "polyline", "=", "[", "]", ";", "//  Parse the polyline into an array", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polyline", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polyline", ".", "push", "(", "[", "o", ".", "polyline", "[", "p", "]", ".", "x", ",", "o", ".", "polyline", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "polygon", ")", "{", "//  Parse the polygon into an array", "object", ".", "polygon", "=", "[", "]", ";", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polygon", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polygon", ".", "push", "(", "[", "o", ".", "polygon", "[", "p", "]", ".", "x", ",", "o", ".", "polygon", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "ellipse", "||", "o", ".", "rectangle", ")", "{", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "}", "return", "{", "objectsCollection", ":", "objectsCollection", ",", "collisionCollection", ":", "collisionCollection", "}", ";", "}"], "original_docstring": "\nParses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.\n@method Phaser.TilemapParser.parseObjectGroup\n@param {object} objectGroup - A JSON object group.\n@param {object} objectsCollection - An object into which new array of Tiled map objects will be added.\n@param {object} collisionCollection - An object into which new array of collision objects will be added. Currently only polylines are added.\n@param {string} [nameKey=objectGroup.name] - Key under which to store objects in collisions in objectsCollection and collisionCollection\n@param {object} [relativePosition={x: 0, y: 0}] - Coordinates the object group's position is relative to.\n@return {object} A object literal containing the objectsCollection and collisionCollection\n", "docstring": {"block_comment": "Parses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.", "line_comment": ["Parse the polyline into an array", "Parse the polygon into an array"]}, "docstring_tokens": ["-", "An", "object", "into", "which", "new", "array", "of", "collision", "objects", "will", "be", "added", ".", "Currently", "only", "polylines", "are", "added", "."], "sample_id": 627, "prompt_tokens": ["<javascript>", "<param>", "collisionCollection"], "comment_type": "param", "sentence_id": 3}
{"id": "21004660", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (objectGroup, objectsCollection, collisionCollection, nameKey, relativePosition, objectsMap)\n    {\n        var nameKey = nameKey || objectGroup.name;\n        var relativePosition = relativePosition || {x: 0, y: 0};\n\n        if (!nameKey)\n        {\n            console.warn('No name found for objectGroup', objectGroup);\n        }\n\n        if (relativePosition.x === undefined || relativePosition.y === undefined)\n        {\n            console.warn('Malformed xy properties in relativePosition', relativePosition);\n        }\n\n        objectsCollection[nameKey] = objectsCollection[nameKey] || [];\n        collisionCollection[nameKey] = collisionCollection[nameKey] || [];\n\n        for (var v = 0, len = objectGroup.objects.length; v < len; v++)\n        {\n            var o = objectGroup.objects[v];\n            var object = this.createObject(o);\n\n            object.x += relativePosition.x;\n            object.y += relativePosition.y;\n\n            objectsCollection[nameKey].push(object);\n\n            if (object.id)\n            {\n                objectsMap[object.id] = object;\n            }\n\n            if (o.polyline)\n            {\n                object.polyline = [];\n\n                //  Parse the polyline into an array\n                for (var p = 0; p < o.polyline.length; p++)\n                {\n                    object.polyline.push([ o.polyline[p].x, o.polyline[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.polygon)\n            {\n                //  Parse the polygon into an array\n                object.polygon = [];\n\n                for (var p = 0; p < o.polygon.length; p++)\n                {\n                    object.polygon.push([ o.polygon[p].x, o.polygon[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.ellipse || o.rectangle)\n            {\n                collisionCollection[nameKey].push(object);\n            }\n        }\n\n        return {\n            objectsCollection: objectsCollection,\n            collisionCollection: collisionCollection\n        };\n    }", "code_tokens": ["function", "(", "objectGroup", ",", "objectsCollection", ",", "collisionCollection", ",", "nameKey", ",", "relativePosition", ",", "objectsMap", ")", "{", "var", "nameKey", "=", "nameKey", "||", "objectGroup", ".", "name", ";", "var", "relativePosition", "=", "relativePosition", "||", "{", "x", ":", "0", ",", "y", ":", "0", "}", ";", "if", "(", "!", "nameKey", ")", "{", "console", ".", "warn", "(", "'No name found for objectGroup'", ",", "objectGroup", ")", ";", "}", "if", "(", "relativePosition", ".", "x", "===", "undefined", "||", "relativePosition", ".", "y", "===", "undefined", ")", "{", "console", ".", "warn", "(", "'Malformed xy properties in relativePosition'", ",", "relativePosition", ")", ";", "}", "objectsCollection", "[", "nameKey", "]", "=", "objectsCollection", "[", "nameKey", "]", "||", "[", "]", ";", "collisionCollection", "[", "nameKey", "]", "=", "collisionCollection", "[", "nameKey", "]", "||", "[", "]", ";", "for", "(", "var", "v", "=", "0", ",", "len", "=", "objectGroup", ".", "objects", ".", "length", ";", "v", "<", "len", ";", "v", "++", ")", "{", "var", "o", "=", "objectGroup", ".", "objects", "[", "v", "]", ";", "var", "object", "=", "this", ".", "createObject", "(", "o", ")", ";", "object", ".", "x", "+=", "relativePosition", ".", "x", ";", "object", ".", "y", "+=", "relativePosition", ".", "y", ";", "objectsCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "if", "(", "object", ".", "id", ")", "{", "objectsMap", "[", "object", ".", "id", "]", "=", "object", ";", "}", "if", "(", "o", ".", "polyline", ")", "{", "object", ".", "polyline", "=", "[", "]", ";", "//  Parse the polyline into an array", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polyline", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polyline", ".", "push", "(", "[", "o", ".", "polyline", "[", "p", "]", ".", "x", ",", "o", ".", "polyline", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "polygon", ")", "{", "//  Parse the polygon into an array", "object", ".", "polygon", "=", "[", "]", ";", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polygon", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polygon", ".", "push", "(", "[", "o", ".", "polygon", "[", "p", "]", ".", "x", ",", "o", ".", "polygon", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "ellipse", "||", "o", ".", "rectangle", ")", "{", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "}", "return", "{", "objectsCollection", ":", "objectsCollection", ",", "collisionCollection", ":", "collisionCollection", "}", ";", "}"], "original_docstring": "\nParses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.\n@method Phaser.TilemapParser.parseObjectGroup\n@param {object} objectGroup - A JSON object group.\n@param {object} objectsCollection - An object into which new array of Tiled map objects will be added.\n@param {object} collisionCollection - An object into which new array of collision objects will be added. Currently only polylines are added.\n@param {string} [nameKey=objectGroup.name] - Key under which to store objects in collisions in objectsCollection and collisionCollection\n@param {object} [relativePosition={x: 0, y: 0}] - Coordinates the object group's position is relative to.\n@return {object} A object literal containing the objectsCollection and collisionCollection\n", "docstring": {"block_comment": "Parses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.", "line_comment": ["Parse the polyline into an array", "Parse the polygon into an array"]}, "docstring_tokens": ["-", "Key", "under", "which", "to", "store", "objects", "in", "collisions", "in", "objectsCollection", "and", "collisionCollection"], "sample_id": 627, "prompt_tokens": ["<javascript>", "<param>", "nameKey"], "comment_type": "param", "sentence_id": 4}
{"id": "21004660", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (objectGroup, objectsCollection, collisionCollection, nameKey, relativePosition, objectsMap)\n    {\n        var nameKey = nameKey || objectGroup.name;\n        var relativePosition = relativePosition || {x: 0, y: 0};\n\n        if (!nameKey)\n        {\n            console.warn('No name found for objectGroup', objectGroup);\n        }\n\n        if (relativePosition.x === undefined || relativePosition.y === undefined)\n        {\n            console.warn('Malformed xy properties in relativePosition', relativePosition);\n        }\n\n        objectsCollection[nameKey] = objectsCollection[nameKey] || [];\n        collisionCollection[nameKey] = collisionCollection[nameKey] || [];\n\n        for (var v = 0, len = objectGroup.objects.length; v < len; v++)\n        {\n            var o = objectGroup.objects[v];\n            var object = this.createObject(o);\n\n            object.x += relativePosition.x;\n            object.y += relativePosition.y;\n\n            objectsCollection[nameKey].push(object);\n\n            if (object.id)\n            {\n                objectsMap[object.id] = object;\n            }\n\n            if (o.polyline)\n            {\n                object.polyline = [];\n\n                //  Parse the polyline into an array\n                for (var p = 0; p < o.polyline.length; p++)\n                {\n                    object.polyline.push([ o.polyline[p].x, o.polyline[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.polygon)\n            {\n                //  Parse the polygon into an array\n                object.polygon = [];\n\n                for (var p = 0; p < o.polygon.length; p++)\n                {\n                    object.polygon.push([ o.polygon[p].x, o.polygon[p].y ]);\n                }\n\n                collisionCollection[nameKey].push(object);\n            }\n            else if (o.ellipse || o.rectangle)\n            {\n                collisionCollection[nameKey].push(object);\n            }\n        }\n\n        return {\n            objectsCollection: objectsCollection,\n            collisionCollection: collisionCollection\n        };\n    }", "code_tokens": ["function", "(", "objectGroup", ",", "objectsCollection", ",", "collisionCollection", ",", "nameKey", ",", "relativePosition", ",", "objectsMap", ")", "{", "var", "nameKey", "=", "nameKey", "||", "objectGroup", ".", "name", ";", "var", "relativePosition", "=", "relativePosition", "||", "{", "x", ":", "0", ",", "y", ":", "0", "}", ";", "if", "(", "!", "nameKey", ")", "{", "console", ".", "warn", "(", "'No name found for objectGroup'", ",", "objectGroup", ")", ";", "}", "if", "(", "relativePosition", ".", "x", "===", "undefined", "||", "relativePosition", ".", "y", "===", "undefined", ")", "{", "console", ".", "warn", "(", "'Malformed xy properties in relativePosition'", ",", "relativePosition", ")", ";", "}", "objectsCollection", "[", "nameKey", "]", "=", "objectsCollection", "[", "nameKey", "]", "||", "[", "]", ";", "collisionCollection", "[", "nameKey", "]", "=", "collisionCollection", "[", "nameKey", "]", "||", "[", "]", ";", "for", "(", "var", "v", "=", "0", ",", "len", "=", "objectGroup", ".", "objects", ".", "length", ";", "v", "<", "len", ";", "v", "++", ")", "{", "var", "o", "=", "objectGroup", ".", "objects", "[", "v", "]", ";", "var", "object", "=", "this", ".", "createObject", "(", "o", ")", ";", "object", ".", "x", "+=", "relativePosition", ".", "x", ";", "object", ".", "y", "+=", "relativePosition", ".", "y", ";", "objectsCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "if", "(", "object", ".", "id", ")", "{", "objectsMap", "[", "object", ".", "id", "]", "=", "object", ";", "}", "if", "(", "o", ".", "polyline", ")", "{", "object", ".", "polyline", "=", "[", "]", ";", "//  Parse the polyline into an array", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polyline", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polyline", ".", "push", "(", "[", "o", ".", "polyline", "[", "p", "]", ".", "x", ",", "o", ".", "polyline", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "polygon", ")", "{", "//  Parse the polygon into an array", "object", ".", "polygon", "=", "[", "]", ";", "for", "(", "var", "p", "=", "0", ";", "p", "<", "o", ".", "polygon", ".", "length", ";", "p", "++", ")", "{", "object", ".", "polygon", ".", "push", "(", "[", "o", ".", "polygon", "[", "p", "]", ".", "x", ",", "o", ".", "polygon", "[", "p", "]", ".", "y", "]", ")", ";", "}", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "else", "if", "(", "o", ".", "ellipse", "||", "o", ".", "rectangle", ")", "{", "collisionCollection", "[", "nameKey", "]", ".", "push", "(", "object", ")", ";", "}", "}", "return", "{", "objectsCollection", ":", "objectsCollection", ",", "collisionCollection", ":", "collisionCollection", "}", ";", "}"], "original_docstring": "\nParses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.\n@method Phaser.TilemapParser.parseObjectGroup\n@param {object} objectGroup - A JSON object group.\n@param {object} objectsCollection - An object into which new array of Tiled map objects will be added.\n@param {object} collisionCollection - An object into which new array of collision objects will be added. Currently only polylines are added.\n@param {string} [nameKey=objectGroup.name] - Key under which to store objects in collisions in objectsCollection and collisionCollection\n@param {object} [relativePosition={x: 0, y: 0}] - Coordinates the object group's position is relative to.\n@return {object} A object literal containing the objectsCollection and collisionCollection\n", "docstring": {"block_comment": "Parses an object group in Tiled JSON files. Object groups can be found in both layers and tilesets. Called internally in parseTiledJSON.", "line_comment": ["Parse the polyline into an array", "Parse the polygon into an array"]}, "docstring_tokens": ["A", "object", "literal", "containing", "the", "objectsCollection", "and", "collisionCollection"], "sample_id": 627, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 5}
{"id": "21004661", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (tileWidth, tileHeight, width, height)\n    {\n        return {\n            width: (width !== undefined && width !== null) ? width : 0,\n            height: (height !== undefined && height !== null) ? height : 0,\n            tileWidth: (tileWidth !== undefined && tileWidth !== null) ? tileWidth : 0,\n            tileHeight: (tileHeight !== undefined && tileHeight !== null) ? tileHeight : 0,\n            orientation: 'orthogonal',\n            version: '1',\n            properties: {},\n            widthInPixels: 0,\n            heightInPixels: 0,\n            layers: [\n                {\n                    name: 'layer',\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                    widthInPixels: 0,\n                    heightInPixels: 0,\n                    alpha: 1,\n                    visible: true,\n                    properties: {},\n                    indexes: [],\n                    callbacks: [],\n                    bodies: [],\n                    data: []\n                }\n            ],\n            images: [],\n            objects: {},\n            collision: {},\n            tilesets: [],\n            tiles: []\n        };\n    }", "code_tokens": ["function", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "return", "{", "width", ":", "(", "width", "!==", "undefined", "&&", "width", "!==", "null", ")", "?", "width", ":", "0", ",", "height", ":", "(", "height", "!==", "undefined", "&&", "height", "!==", "null", ")", "?", "height", ":", "0", ",", "tileWidth", ":", "(", "tileWidth", "!==", "undefined", "&&", "tileWidth", "!==", "null", ")", "?", "tileWidth", ":", "0", ",", "tileHeight", ":", "(", "tileHeight", "!==", "undefined", "&&", "tileHeight", "!==", "null", ")", "?", "tileHeight", ":", "0", ",", "orientation", ":", "'orthogonal'", ",", "version", ":", "'1'", ",", "properties", ":", "{", "}", ",", "widthInPixels", ":", "0", ",", "heightInPixels", ":", "0", ",", "layers", ":", "[", "{", "name", ":", "'layer'", ",", "x", ":", "0", ",", "y", ":", "0", ",", "width", ":", "0", ",", "height", ":", "0", ",", "widthInPixels", ":", "0", ",", "heightInPixels", ":", "0", ",", "alpha", ":", "1", ",", "visible", ":", "true", ",", "properties", ":", "{", "}", ",", "indexes", ":", "[", "]", ",", "callbacks", ":", "[", "]", ",", "bodies", ":", "[", "]", ",", "data", ":", "[", "]", "}", "]", ",", "images", ":", "[", "]", ",", "objects", ":", "{", "}", ",", "collision", ":", "{", "}", ",", "tilesets", ":", "[", "]", ",", "tiles", ":", "[", "]", "}", ";", "}"], "original_docstring": "\nReturns an empty map data object.\n\n@method Phaser.TilemapParser.getEmptyData\n@return {object} Generated map data.\n", "docstring": {"block_comment": "Returns an empty map data object.", "line_comment": null}, "docstring_tokens": ["Returns", "an", "empty", "map", "data", "object", "."], "sample_id": 628, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004661", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (tileWidth, tileHeight, width, height)\n    {\n        return {\n            width: (width !== undefined && width !== null) ? width : 0,\n            height: (height !== undefined && height !== null) ? height : 0,\n            tileWidth: (tileWidth !== undefined && tileWidth !== null) ? tileWidth : 0,\n            tileHeight: (tileHeight !== undefined && tileHeight !== null) ? tileHeight : 0,\n            orientation: 'orthogonal',\n            version: '1',\n            properties: {},\n            widthInPixels: 0,\n            heightInPixels: 0,\n            layers: [\n                {\n                    name: 'layer',\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                    widthInPixels: 0,\n                    heightInPixels: 0,\n                    alpha: 1,\n                    visible: true,\n                    properties: {},\n                    indexes: [],\n                    callbacks: [],\n                    bodies: [],\n                    data: []\n                }\n            ],\n            images: [],\n            objects: {},\n            collision: {},\n            tilesets: [],\n            tiles: []\n        };\n    }", "code_tokens": ["function", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "return", "{", "width", ":", "(", "width", "!==", "undefined", "&&", "width", "!==", "null", ")", "?", "width", ":", "0", ",", "height", ":", "(", "height", "!==", "undefined", "&&", "height", "!==", "null", ")", "?", "height", ":", "0", ",", "tileWidth", ":", "(", "tileWidth", "!==", "undefined", "&&", "tileWidth", "!==", "null", ")", "?", "tileWidth", ":", "0", ",", "tileHeight", ":", "(", "tileHeight", "!==", "undefined", "&&", "tileHeight", "!==", "null", ")", "?", "tileHeight", ":", "0", ",", "orientation", ":", "'orthogonal'", ",", "version", ":", "'1'", ",", "properties", ":", "{", "}", ",", "widthInPixels", ":", "0", ",", "heightInPixels", ":", "0", ",", "layers", ":", "[", "{", "name", ":", "'layer'", ",", "x", ":", "0", ",", "y", ":", "0", ",", "width", ":", "0", ",", "height", ":", "0", ",", "widthInPixels", ":", "0", ",", "heightInPixels", ":", "0", ",", "alpha", ":", "1", ",", "visible", ":", "true", ",", "properties", ":", "{", "}", ",", "indexes", ":", "[", "]", ",", "callbacks", ":", "[", "]", ",", "bodies", ":", "[", "]", ",", "data", ":", "[", "]", "}", "]", ",", "images", ":", "[", "]", ",", "objects", ":", "{", "}", ",", "collision", ":", "{", "}", ",", "tilesets", ":", "[", "]", ",", "tiles", ":", "[", "]", "}", ";", "}"], "original_docstring": "\nReturns an empty map data object.\n\n@method Phaser.TilemapParser.getEmptyData\n@return {object} Generated map data.\n", "docstring": {"block_comment": "Returns an empty map data object.", "line_comment": null}, "docstring_tokens": ["Generated", "map", "data", "."], "sample_id": 628, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004662", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key, data, tileWidth, tileHeight)\n    {\n        var map = this.getEmptyData();\n\n        //  Trim any rogue whitespace from the data\n        data = data.trim();\n\n        var output = [];\n        var rows = data.split('\\n');\n        var height = rows.length;\n        var width = 0;\n\n        for (var y = 0; y < rows.length; y++)\n        {\n            output[y] = [];\n\n            var column = rows[y].split(',');\n\n            for (var x = 0; x < column.length; x++)\n            {\n                output[y][x] = new Phaser.Tile(map.layers[0], parseInt(column[x], 10), x, y, tileWidth, tileHeight);\n            }\n\n            if (width === 0)\n            {\n                width = column.length;\n            }\n        }\n\n        map.format = Phaser.Tilemap.CSV;\n        map.name = key;\n        map.width = width;\n        map.height = height;\n        map.tileWidth = tileWidth;\n        map.tileHeight = tileHeight;\n        map.widthInPixels = width * tileWidth;\n        map.heightInPixels = height * tileHeight;\n\n        map.layers[0].width = width;\n        map.layers[0].height = height;\n        map.layers[0].widthInPixels = map.widthInPixels;\n        map.layers[0].heightInPixels = map.heightInPixels;\n        map.layers[0].data = output;\n\n        return map;\n    }", "code_tokens": ["function", "(", "key", ",", "data", ",", "tileWidth", ",", "tileHeight", ")", "{", "var", "map", "=", "this", ".", "getEmptyData", "(", ")", ";", "//  Trim any rogue whitespace from the data", "data", "=", "data", ".", "trim", "(", ")", ";", "var", "output", "=", "[", "]", ";", "var", "rows", "=", "data", ".", "split", "(", "'\\n'", ")", ";", "var", "height", "=", "rows", ".", "length", ";", "var", "width", "=", "0", ";", "for", "(", "var", "y", "=", "0", ";", "y", "<", "rows", ".", "length", ";", "y", "++", ")", "{", "output", "[", "y", "]", "=", "[", "]", ";", "var", "column", "=", "rows", "[", "y", "]", ".", "split", "(", "','", ")", ";", "for", "(", "var", "x", "=", "0", ";", "x", "<", "column", ".", "length", ";", "x", "++", ")", "{", "output", "[", "y", "]", "[", "x", "]", "=", "new", "Phaser", ".", "Tile", "(", "map", ".", "layers", "[", "0", "]", ",", "parseInt", "(", "column", "[", "x", "]", ",", "10", ")", ",", "x", ",", "y", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "if", "(", "width", "===", "0", ")", "{", "width", "=", "column", ".", "length", ";", "}", "}", "map", ".", "format", "=", "Phaser", ".", "Tilemap", ".", "CSV", ";", "map", ".", "name", "=", "key", ";", "map", ".", "width", "=", "width", ";", "map", ".", "height", "=", "height", ";", "map", ".", "tileWidth", "=", "tileWidth", ";", "map", ".", "tileHeight", "=", "tileHeight", ";", "map", ".", "widthInPixels", "=", "width", "*", "tileWidth", ";", "map", ".", "heightInPixels", "=", "height", "*", "tileHeight", ";", "map", ".", "layers", "[", "0", "]", ".", "width", "=", "width", ";", "map", ".", "layers", "[", "0", "]", ".", "height", "=", "height", ";", "map", ".", "layers", "[", "0", "]", ".", "widthInPixels", "=", "map", ".", "widthInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "heightInPixels", "=", "map", ".", "heightInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "data", "=", "output", ";", "return", "map", ";", "}"], "original_docstring": "\nParses a CSV file into valid map data.\n\n@method Phaser.TilemapParser.parseCSV\n@param {string} key - The name you want to give the map data.\n@param {string} data - The CSV file data.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@return {object} Generated map data.\n", "docstring": {"block_comment": "Parses a CSV file into valid map data.", "line_comment": ["Trim any rogue whitespace from the data"]}, "docstring_tokens": ["Parses", "a", "CSV", "file", "into", "valid", "map", "data", "."], "sample_id": 629, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004662", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key, data, tileWidth, tileHeight)\n    {\n        var map = this.getEmptyData();\n\n        //  Trim any rogue whitespace from the data\n        data = data.trim();\n\n        var output = [];\n        var rows = data.split('\\n');\n        var height = rows.length;\n        var width = 0;\n\n        for (var y = 0; y < rows.length; y++)\n        {\n            output[y] = [];\n\n            var column = rows[y].split(',');\n\n            for (var x = 0; x < column.length; x++)\n            {\n                output[y][x] = new Phaser.Tile(map.layers[0], parseInt(column[x], 10), x, y, tileWidth, tileHeight);\n            }\n\n            if (width === 0)\n            {\n                width = column.length;\n            }\n        }\n\n        map.format = Phaser.Tilemap.CSV;\n        map.name = key;\n        map.width = width;\n        map.height = height;\n        map.tileWidth = tileWidth;\n        map.tileHeight = tileHeight;\n        map.widthInPixels = width * tileWidth;\n        map.heightInPixels = height * tileHeight;\n\n        map.layers[0].width = width;\n        map.layers[0].height = height;\n        map.layers[0].widthInPixels = map.widthInPixels;\n        map.layers[0].heightInPixels = map.heightInPixels;\n        map.layers[0].data = output;\n\n        return map;\n    }", "code_tokens": ["function", "(", "key", ",", "data", ",", "tileWidth", ",", "tileHeight", ")", "{", "var", "map", "=", "this", ".", "getEmptyData", "(", ")", ";", "//  Trim any rogue whitespace from the data", "data", "=", "data", ".", "trim", "(", ")", ";", "var", "output", "=", "[", "]", ";", "var", "rows", "=", "data", ".", "split", "(", "'\\n'", ")", ";", "var", "height", "=", "rows", ".", "length", ";", "var", "width", "=", "0", ";", "for", "(", "var", "y", "=", "0", ";", "y", "<", "rows", ".", "length", ";", "y", "++", ")", "{", "output", "[", "y", "]", "=", "[", "]", ";", "var", "column", "=", "rows", "[", "y", "]", ".", "split", "(", "','", ")", ";", "for", "(", "var", "x", "=", "0", ";", "x", "<", "column", ".", "length", ";", "x", "++", ")", "{", "output", "[", "y", "]", "[", "x", "]", "=", "new", "Phaser", ".", "Tile", "(", "map", ".", "layers", "[", "0", "]", ",", "parseInt", "(", "column", "[", "x", "]", ",", "10", ")", ",", "x", ",", "y", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "if", "(", "width", "===", "0", ")", "{", "width", "=", "column", ".", "length", ";", "}", "}", "map", ".", "format", "=", "Phaser", ".", "Tilemap", ".", "CSV", ";", "map", ".", "name", "=", "key", ";", "map", ".", "width", "=", "width", ";", "map", ".", "height", "=", "height", ";", "map", ".", "tileWidth", "=", "tileWidth", ";", "map", ".", "tileHeight", "=", "tileHeight", ";", "map", ".", "widthInPixels", "=", "width", "*", "tileWidth", ";", "map", ".", "heightInPixels", "=", "height", "*", "tileHeight", ";", "map", ".", "layers", "[", "0", "]", ".", "width", "=", "width", ";", "map", ".", "layers", "[", "0", "]", ".", "height", "=", "height", ";", "map", ".", "layers", "[", "0", "]", ".", "widthInPixels", "=", "map", ".", "widthInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "heightInPixels", "=", "map", ".", "heightInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "data", "=", "output", ";", "return", "map", ";", "}"], "original_docstring": "\nParses a CSV file into valid map data.\n\n@method Phaser.TilemapParser.parseCSV\n@param {string} key - The name you want to give the map data.\n@param {string} data - The CSV file data.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@return {object} Generated map data.\n", "docstring": {"block_comment": "Parses a CSV file into valid map data.", "line_comment": ["Trim any rogue whitespace from the data"]}, "docstring_tokens": ["-", "The", "name", "you", "want", "to", "give", "the", "map", "data", "."], "sample_id": 629, "prompt_tokens": ["<javascript>", "<param>", "key"], "comment_type": "param", "sentence_id": 1}
{"id": "21004662", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key, data, tileWidth, tileHeight)\n    {\n        var map = this.getEmptyData();\n\n        //  Trim any rogue whitespace from the data\n        data = data.trim();\n\n        var output = [];\n        var rows = data.split('\\n');\n        var height = rows.length;\n        var width = 0;\n\n        for (var y = 0; y < rows.length; y++)\n        {\n            output[y] = [];\n\n            var column = rows[y].split(',');\n\n            for (var x = 0; x < column.length; x++)\n            {\n                output[y][x] = new Phaser.Tile(map.layers[0], parseInt(column[x], 10), x, y, tileWidth, tileHeight);\n            }\n\n            if (width === 0)\n            {\n                width = column.length;\n            }\n        }\n\n        map.format = Phaser.Tilemap.CSV;\n        map.name = key;\n        map.width = width;\n        map.height = height;\n        map.tileWidth = tileWidth;\n        map.tileHeight = tileHeight;\n        map.widthInPixels = width * tileWidth;\n        map.heightInPixels = height * tileHeight;\n\n        map.layers[0].width = width;\n        map.layers[0].height = height;\n        map.layers[0].widthInPixels = map.widthInPixels;\n        map.layers[0].heightInPixels = map.heightInPixels;\n        map.layers[0].data = output;\n\n        return map;\n    }", "code_tokens": ["function", "(", "key", ",", "data", ",", "tileWidth", ",", "tileHeight", ")", "{", "var", "map", "=", "this", ".", "getEmptyData", "(", ")", ";", "//  Trim any rogue whitespace from the data", "data", "=", "data", ".", "trim", "(", ")", ";", "var", "output", "=", "[", "]", ";", "var", "rows", "=", "data", ".", "split", "(", "'\\n'", ")", ";", "var", "height", "=", "rows", ".", "length", ";", "var", "width", "=", "0", ";", "for", "(", "var", "y", "=", "0", ";", "y", "<", "rows", ".", "length", ";", "y", "++", ")", "{", "output", "[", "y", "]", "=", "[", "]", ";", "var", "column", "=", "rows", "[", "y", "]", ".", "split", "(", "','", ")", ";", "for", "(", "var", "x", "=", "0", ";", "x", "<", "column", ".", "length", ";", "x", "++", ")", "{", "output", "[", "y", "]", "[", "x", "]", "=", "new", "Phaser", ".", "Tile", "(", "map", ".", "layers", "[", "0", "]", ",", "parseInt", "(", "column", "[", "x", "]", ",", "10", ")", ",", "x", ",", "y", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "if", "(", "width", "===", "0", ")", "{", "width", "=", "column", ".", "length", ";", "}", "}", "map", ".", "format", "=", "Phaser", ".", "Tilemap", ".", "CSV", ";", "map", ".", "name", "=", "key", ";", "map", ".", "width", "=", "width", ";", "map", ".", "height", "=", "height", ";", "map", ".", "tileWidth", "=", "tileWidth", ";", "map", ".", "tileHeight", "=", "tileHeight", ";", "map", ".", "widthInPixels", "=", "width", "*", "tileWidth", ";", "map", ".", "heightInPixels", "=", "height", "*", "tileHeight", ";", "map", ".", "layers", "[", "0", "]", ".", "width", "=", "width", ";", "map", ".", "layers", "[", "0", "]", ".", "height", "=", "height", ";", "map", ".", "layers", "[", "0", "]", ".", "widthInPixels", "=", "map", ".", "widthInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "heightInPixels", "=", "map", ".", "heightInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "data", "=", "output", ";", "return", "map", ";", "}"], "original_docstring": "\nParses a CSV file into valid map data.\n\n@method Phaser.TilemapParser.parseCSV\n@param {string} key - The name you want to give the map data.\n@param {string} data - The CSV file data.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@return {object} Generated map data.\n", "docstring": {"block_comment": "Parses a CSV file into valid map data.", "line_comment": ["Trim any rogue whitespace from the data"]}, "docstring_tokens": ["-", "The", "CSV", "file", "data", "."], "sample_id": 629, "prompt_tokens": ["<javascript>", "<param>", "data"], "comment_type": "param", "sentence_id": 2}
{"id": "21004662", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key, data, tileWidth, tileHeight)\n    {\n        var map = this.getEmptyData();\n\n        //  Trim any rogue whitespace from the data\n        data = data.trim();\n\n        var output = [];\n        var rows = data.split('\\n');\n        var height = rows.length;\n        var width = 0;\n\n        for (var y = 0; y < rows.length; y++)\n        {\n            output[y] = [];\n\n            var column = rows[y].split(',');\n\n            for (var x = 0; x < column.length; x++)\n            {\n                output[y][x] = new Phaser.Tile(map.layers[0], parseInt(column[x], 10), x, y, tileWidth, tileHeight);\n            }\n\n            if (width === 0)\n            {\n                width = column.length;\n            }\n        }\n\n        map.format = Phaser.Tilemap.CSV;\n        map.name = key;\n        map.width = width;\n        map.height = height;\n        map.tileWidth = tileWidth;\n        map.tileHeight = tileHeight;\n        map.widthInPixels = width * tileWidth;\n        map.heightInPixels = height * tileHeight;\n\n        map.layers[0].width = width;\n        map.layers[0].height = height;\n        map.layers[0].widthInPixels = map.widthInPixels;\n        map.layers[0].heightInPixels = map.heightInPixels;\n        map.layers[0].data = output;\n\n        return map;\n    }", "code_tokens": ["function", "(", "key", ",", "data", ",", "tileWidth", ",", "tileHeight", ")", "{", "var", "map", "=", "this", ".", "getEmptyData", "(", ")", ";", "//  Trim any rogue whitespace from the data", "data", "=", "data", ".", "trim", "(", ")", ";", "var", "output", "=", "[", "]", ";", "var", "rows", "=", "data", ".", "split", "(", "'\\n'", ")", ";", "var", "height", "=", "rows", ".", "length", ";", "var", "width", "=", "0", ";", "for", "(", "var", "y", "=", "0", ";", "y", "<", "rows", ".", "length", ";", "y", "++", ")", "{", "output", "[", "y", "]", "=", "[", "]", ";", "var", "column", "=", "rows", "[", "y", "]", ".", "split", "(", "','", ")", ";", "for", "(", "var", "x", "=", "0", ";", "x", "<", "column", ".", "length", ";", "x", "++", ")", "{", "output", "[", "y", "]", "[", "x", "]", "=", "new", "Phaser", ".", "Tile", "(", "map", ".", "layers", "[", "0", "]", ",", "parseInt", "(", "column", "[", "x", "]", ",", "10", ")", ",", "x", ",", "y", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "if", "(", "width", "===", "0", ")", "{", "width", "=", "column", ".", "length", ";", "}", "}", "map", ".", "format", "=", "Phaser", ".", "Tilemap", ".", "CSV", ";", "map", ".", "name", "=", "key", ";", "map", ".", "width", "=", "width", ";", "map", ".", "height", "=", "height", ";", "map", ".", "tileWidth", "=", "tileWidth", ";", "map", ".", "tileHeight", "=", "tileHeight", ";", "map", ".", "widthInPixels", "=", "width", "*", "tileWidth", ";", "map", ".", "heightInPixels", "=", "height", "*", "tileHeight", ";", "map", ".", "layers", "[", "0", "]", ".", "width", "=", "width", ";", "map", ".", "layers", "[", "0", "]", ".", "height", "=", "height", ";", "map", ".", "layers", "[", "0", "]", ".", "widthInPixels", "=", "map", ".", "widthInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "heightInPixels", "=", "map", ".", "heightInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "data", "=", "output", ";", "return", "map", ";", "}"], "original_docstring": "\nParses a CSV file into valid map data.\n\n@method Phaser.TilemapParser.parseCSV\n@param {string} key - The name you want to give the map data.\n@param {string} data - The CSV file data.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@return {object} Generated map data.\n", "docstring": {"block_comment": "Parses a CSV file into valid map data.", "line_comment": ["Trim any rogue whitespace from the data"]}, "docstring_tokens": ["-", "The", "pixel", "width", "of", "a", "single", "map", "tile", ".", "If", "using", "CSV", "data", "you", "must", "specify", "this", ".", "Not", "required", "if", "using", "Tiled", "map", "data", "."], "sample_id": 629, "prompt_tokens": ["<javascript>", "<param>", "tileWidth"], "comment_type": "param", "sentence_id": 3}
{"id": "21004662", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key, data, tileWidth, tileHeight)\n    {\n        var map = this.getEmptyData();\n\n        //  Trim any rogue whitespace from the data\n        data = data.trim();\n\n        var output = [];\n        var rows = data.split('\\n');\n        var height = rows.length;\n        var width = 0;\n\n        for (var y = 0; y < rows.length; y++)\n        {\n            output[y] = [];\n\n            var column = rows[y].split(',');\n\n            for (var x = 0; x < column.length; x++)\n            {\n                output[y][x] = new Phaser.Tile(map.layers[0], parseInt(column[x], 10), x, y, tileWidth, tileHeight);\n            }\n\n            if (width === 0)\n            {\n                width = column.length;\n            }\n        }\n\n        map.format = Phaser.Tilemap.CSV;\n        map.name = key;\n        map.width = width;\n        map.height = height;\n        map.tileWidth = tileWidth;\n        map.tileHeight = tileHeight;\n        map.widthInPixels = width * tileWidth;\n        map.heightInPixels = height * tileHeight;\n\n        map.layers[0].width = width;\n        map.layers[0].height = height;\n        map.layers[0].widthInPixels = map.widthInPixels;\n        map.layers[0].heightInPixels = map.heightInPixels;\n        map.layers[0].data = output;\n\n        return map;\n    }", "code_tokens": ["function", "(", "key", ",", "data", ",", "tileWidth", ",", "tileHeight", ")", "{", "var", "map", "=", "this", ".", "getEmptyData", "(", ")", ";", "//  Trim any rogue whitespace from the data", "data", "=", "data", ".", "trim", "(", ")", ";", "var", "output", "=", "[", "]", ";", "var", "rows", "=", "data", ".", "split", "(", "'\\n'", ")", ";", "var", "height", "=", "rows", ".", "length", ";", "var", "width", "=", "0", ";", "for", "(", "var", "y", "=", "0", ";", "y", "<", "rows", ".", "length", ";", "y", "++", ")", "{", "output", "[", "y", "]", "=", "[", "]", ";", "var", "column", "=", "rows", "[", "y", "]", ".", "split", "(", "','", ")", ";", "for", "(", "var", "x", "=", "0", ";", "x", "<", "column", ".", "length", ";", "x", "++", ")", "{", "output", "[", "y", "]", "[", "x", "]", "=", "new", "Phaser", ".", "Tile", "(", "map", ".", "layers", "[", "0", "]", ",", "parseInt", "(", "column", "[", "x", "]", ",", "10", ")", ",", "x", ",", "y", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "if", "(", "width", "===", "0", ")", "{", "width", "=", "column", ".", "length", ";", "}", "}", "map", ".", "format", "=", "Phaser", ".", "Tilemap", ".", "CSV", ";", "map", ".", "name", "=", "key", ";", "map", ".", "width", "=", "width", ";", "map", ".", "height", "=", "height", ";", "map", ".", "tileWidth", "=", "tileWidth", ";", "map", ".", "tileHeight", "=", "tileHeight", ";", "map", ".", "widthInPixels", "=", "width", "*", "tileWidth", ";", "map", ".", "heightInPixels", "=", "height", "*", "tileHeight", ";", "map", ".", "layers", "[", "0", "]", ".", "width", "=", "width", ";", "map", ".", "layers", "[", "0", "]", ".", "height", "=", "height", ";", "map", ".", "layers", "[", "0", "]", ".", "widthInPixels", "=", "map", ".", "widthInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "heightInPixels", "=", "map", ".", "heightInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "data", "=", "output", ";", "return", "map", ";", "}"], "original_docstring": "\nParses a CSV file into valid map data.\n\n@method Phaser.TilemapParser.parseCSV\n@param {string} key - The name you want to give the map data.\n@param {string} data - The CSV file data.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@return {object} Generated map data.\n", "docstring": {"block_comment": "Parses a CSV file into valid map data.", "line_comment": ["Trim any rogue whitespace from the data"]}, "docstring_tokens": ["-", "The", "pixel", "height", "of", "a", "single", "map", "tile", ".", "If", "using", "CSV", "data", "you", "must", "specify", "this", ".", "Not", "required", "if", "using", "Tiled", "map", "data", "."], "sample_id": 629, "prompt_tokens": ["<javascript>", "<param>", "tileHeight"], "comment_type": "param", "sentence_id": 4}
{"id": "21004662", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (key, data, tileWidth, tileHeight)\n    {\n        var map = this.getEmptyData();\n\n        //  Trim any rogue whitespace from the data\n        data = data.trim();\n\n        var output = [];\n        var rows = data.split('\\n');\n        var height = rows.length;\n        var width = 0;\n\n        for (var y = 0; y < rows.length; y++)\n        {\n            output[y] = [];\n\n            var column = rows[y].split(',');\n\n            for (var x = 0; x < column.length; x++)\n            {\n                output[y][x] = new Phaser.Tile(map.layers[0], parseInt(column[x], 10), x, y, tileWidth, tileHeight);\n            }\n\n            if (width === 0)\n            {\n                width = column.length;\n            }\n        }\n\n        map.format = Phaser.Tilemap.CSV;\n        map.name = key;\n        map.width = width;\n        map.height = height;\n        map.tileWidth = tileWidth;\n        map.tileHeight = tileHeight;\n        map.widthInPixels = width * tileWidth;\n        map.heightInPixels = height * tileHeight;\n\n        map.layers[0].width = width;\n        map.layers[0].height = height;\n        map.layers[0].widthInPixels = map.widthInPixels;\n        map.layers[0].heightInPixels = map.heightInPixels;\n        map.layers[0].data = output;\n\n        return map;\n    }", "code_tokens": ["function", "(", "key", ",", "data", ",", "tileWidth", ",", "tileHeight", ")", "{", "var", "map", "=", "this", ".", "getEmptyData", "(", ")", ";", "//  Trim any rogue whitespace from the data", "data", "=", "data", ".", "trim", "(", ")", ";", "var", "output", "=", "[", "]", ";", "var", "rows", "=", "data", ".", "split", "(", "'\\n'", ")", ";", "var", "height", "=", "rows", ".", "length", ";", "var", "width", "=", "0", ";", "for", "(", "var", "y", "=", "0", ";", "y", "<", "rows", ".", "length", ";", "y", "++", ")", "{", "output", "[", "y", "]", "=", "[", "]", ";", "var", "column", "=", "rows", "[", "y", "]", ".", "split", "(", "','", ")", ";", "for", "(", "var", "x", "=", "0", ";", "x", "<", "column", ".", "length", ";", "x", "++", ")", "{", "output", "[", "y", "]", "[", "x", "]", "=", "new", "Phaser", ".", "Tile", "(", "map", ".", "layers", "[", "0", "]", ",", "parseInt", "(", "column", "[", "x", "]", ",", "10", ")", ",", "x", ",", "y", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "if", "(", "width", "===", "0", ")", "{", "width", "=", "column", ".", "length", ";", "}", "}", "map", ".", "format", "=", "Phaser", ".", "Tilemap", ".", "CSV", ";", "map", ".", "name", "=", "key", ";", "map", ".", "width", "=", "width", ";", "map", ".", "height", "=", "height", ";", "map", ".", "tileWidth", "=", "tileWidth", ";", "map", ".", "tileHeight", "=", "tileHeight", ";", "map", ".", "widthInPixels", "=", "width", "*", "tileWidth", ";", "map", ".", "heightInPixels", "=", "height", "*", "tileHeight", ";", "map", ".", "layers", "[", "0", "]", ".", "width", "=", "width", ";", "map", ".", "layers", "[", "0", "]", ".", "height", "=", "height", ";", "map", ".", "layers", "[", "0", "]", ".", "widthInPixels", "=", "map", ".", "widthInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "heightInPixels", "=", "map", ".", "heightInPixels", ";", "map", ".", "layers", "[", "0", "]", ".", "data", "=", "output", ";", "return", "map", ";", "}"], "original_docstring": "\nParses a CSV file into valid map data.\n\n@method Phaser.TilemapParser.parseCSV\n@param {string} key - The name you want to give the map data.\n@param {string} data - The CSV file data.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@return {object} Generated map data.\n", "docstring": {"block_comment": "Parses a CSV file into valid map data.", "line_comment": ["Trim any rogue whitespace from the data"]}, "docstring_tokens": ["Generated", "map", "data", "."], "sample_id": 629, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 5}
{"id": "21004663", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (game, key, tileWidth, tileHeight, width, height)\n    {\n        if (tileWidth === undefined) { tileWidth = 32; }\n        if (tileHeight === undefined) { tileHeight = 32; }\n        if (width === undefined) { width = 10; }\n        if (height === undefined) { height = 10; }\n\n        if (key === undefined)\n        {\n            return this.getEmptyData();\n        }\n\n        if (key === null)\n        {\n            return this.getEmptyData(tileWidth, tileHeight, width, height);\n        }\n\n        var map = game.cache.getTilemapData(key);\n\n        if (map)\n        {\n            if (map.format === Phaser.Tilemap.CSV)\n            {\n                return this.parseCSV(key, map.data, tileWidth, tileHeight);\n            }\n            else if (!map.format || map.format === Phaser.Tilemap.TILED_JSON)\n            {\n                return this.parseTiledJSON(map.data);\n            }\n        }\n        else\n        {\n            console.warn('No map data found for key \"%s\"', key);\n        }\n    }", "code_tokens": ["function", "(", "game", ",", "key", ",", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "if", "(", "tileWidth", "===", "undefined", ")", "{", "tileWidth", "=", "32", ";", "}", "if", "(", "tileHeight", "===", "undefined", ")", "{", "tileHeight", "=", "32", ";", "}", "if", "(", "width", "===", "undefined", ")", "{", "width", "=", "10", ";", "}", "if", "(", "height", "===", "undefined", ")", "{", "height", "=", "10", ";", "}", "if", "(", "key", "===", "undefined", ")", "{", "return", "this", ".", "getEmptyData", "(", ")", ";", "}", "if", "(", "key", "===", "null", ")", "{", "return", "this", ".", "getEmptyData", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", ";", "}", "var", "map", "=", "game", ".", "cache", ".", "getTilemapData", "(", "key", ")", ";", "if", "(", "map", ")", "{", "if", "(", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "CSV", ")", "{", "return", "this", ".", "parseCSV", "(", "key", ",", "map", ".", "data", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "else", "if", "(", "!", "map", ".", "format", "||", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ")", "{", "return", "this", ".", "parseTiledJSON", "(", "map", ".", "data", ")", ";", "}", "}", "else", "{", "console", ".", "warn", "(", "'No map data found for key \"%s\"'", ",", "key", ")", ";", "}", "}"], "original_docstring": "\nParse tilemap data from the cache and creates data for a Tilemap object.\n\n@method Phaser.TilemapParser.parse\n@param {Phaser.Game} game - Game reference to the currently running game.\n@param {string} key - The key of the tilemap in the Cache.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@return {object} The parsed map object.\n", "docstring": {"block_comment": "Parse tilemap data from the cache and creates data for a Tilemap object.", "line_comment": null}, "docstring_tokens": ["Parse", "tilemap", "data", "from", "the", "cache", "and", "creates", "data", "for", "a", "Tilemap", "object", "."], "sample_id": 630, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004663", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (game, key, tileWidth, tileHeight, width, height)\n    {\n        if (tileWidth === undefined) { tileWidth = 32; }\n        if (tileHeight === undefined) { tileHeight = 32; }\n        if (width === undefined) { width = 10; }\n        if (height === undefined) { height = 10; }\n\n        if (key === undefined)\n        {\n            return this.getEmptyData();\n        }\n\n        if (key === null)\n        {\n            return this.getEmptyData(tileWidth, tileHeight, width, height);\n        }\n\n        var map = game.cache.getTilemapData(key);\n\n        if (map)\n        {\n            if (map.format === Phaser.Tilemap.CSV)\n            {\n                return this.parseCSV(key, map.data, tileWidth, tileHeight);\n            }\n            else if (!map.format || map.format === Phaser.Tilemap.TILED_JSON)\n            {\n                return this.parseTiledJSON(map.data);\n            }\n        }\n        else\n        {\n            console.warn('No map data found for key \"%s\"', key);\n        }\n    }", "code_tokens": ["function", "(", "game", ",", "key", ",", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "if", "(", "tileWidth", "===", "undefined", ")", "{", "tileWidth", "=", "32", ";", "}", "if", "(", "tileHeight", "===", "undefined", ")", "{", "tileHeight", "=", "32", ";", "}", "if", "(", "width", "===", "undefined", ")", "{", "width", "=", "10", ";", "}", "if", "(", "height", "===", "undefined", ")", "{", "height", "=", "10", ";", "}", "if", "(", "key", "===", "undefined", ")", "{", "return", "this", ".", "getEmptyData", "(", ")", ";", "}", "if", "(", "key", "===", "null", ")", "{", "return", "this", ".", "getEmptyData", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", ";", "}", "var", "map", "=", "game", ".", "cache", ".", "getTilemapData", "(", "key", ")", ";", "if", "(", "map", ")", "{", "if", "(", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "CSV", ")", "{", "return", "this", ".", "parseCSV", "(", "key", ",", "map", ".", "data", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "else", "if", "(", "!", "map", ".", "format", "||", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ")", "{", "return", "this", ".", "parseTiledJSON", "(", "map", ".", "data", ")", ";", "}", "}", "else", "{", "console", ".", "warn", "(", "'No map data found for key \"%s\"'", ",", "key", ")", ";", "}", "}"], "original_docstring": "\nParse tilemap data from the cache and creates data for a Tilemap object.\n\n@method Phaser.TilemapParser.parse\n@param {Phaser.Game} game - Game reference to the currently running game.\n@param {string} key - The key of the tilemap in the Cache.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@return {object} The parsed map object.\n", "docstring": {"block_comment": "Parse tilemap data from the cache and creates data for a Tilemap object.", "line_comment": null}, "docstring_tokens": ["-", "Game", "reference", "to", "the", "currently", "running", "game", "."], "sample_id": 630, "prompt_tokens": ["<javascript>", "<param>", "game"], "comment_type": "param", "sentence_id": 1}
{"id": "21004663", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (game, key, tileWidth, tileHeight, width, height)\n    {\n        if (tileWidth === undefined) { tileWidth = 32; }\n        if (tileHeight === undefined) { tileHeight = 32; }\n        if (width === undefined) { width = 10; }\n        if (height === undefined) { height = 10; }\n\n        if (key === undefined)\n        {\n            return this.getEmptyData();\n        }\n\n        if (key === null)\n        {\n            return this.getEmptyData(tileWidth, tileHeight, width, height);\n        }\n\n        var map = game.cache.getTilemapData(key);\n\n        if (map)\n        {\n            if (map.format === Phaser.Tilemap.CSV)\n            {\n                return this.parseCSV(key, map.data, tileWidth, tileHeight);\n            }\n            else if (!map.format || map.format === Phaser.Tilemap.TILED_JSON)\n            {\n                return this.parseTiledJSON(map.data);\n            }\n        }\n        else\n        {\n            console.warn('No map data found for key \"%s\"', key);\n        }\n    }", "code_tokens": ["function", "(", "game", ",", "key", ",", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "if", "(", "tileWidth", "===", "undefined", ")", "{", "tileWidth", "=", "32", ";", "}", "if", "(", "tileHeight", "===", "undefined", ")", "{", "tileHeight", "=", "32", ";", "}", "if", "(", "width", "===", "undefined", ")", "{", "width", "=", "10", ";", "}", "if", "(", "height", "===", "undefined", ")", "{", "height", "=", "10", ";", "}", "if", "(", "key", "===", "undefined", ")", "{", "return", "this", ".", "getEmptyData", "(", ")", ";", "}", "if", "(", "key", "===", "null", ")", "{", "return", "this", ".", "getEmptyData", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", ";", "}", "var", "map", "=", "game", ".", "cache", ".", "getTilemapData", "(", "key", ")", ";", "if", "(", "map", ")", "{", "if", "(", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "CSV", ")", "{", "return", "this", ".", "parseCSV", "(", "key", ",", "map", ".", "data", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "else", "if", "(", "!", "map", ".", "format", "||", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ")", "{", "return", "this", ".", "parseTiledJSON", "(", "map", ".", "data", ")", ";", "}", "}", "else", "{", "console", ".", "warn", "(", "'No map data found for key \"%s\"'", ",", "key", ")", ";", "}", "}"], "original_docstring": "\nParse tilemap data from the cache and creates data for a Tilemap object.\n\n@method Phaser.TilemapParser.parse\n@param {Phaser.Game} game - Game reference to the currently running game.\n@param {string} key - The key of the tilemap in the Cache.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@return {object} The parsed map object.\n", "docstring": {"block_comment": "Parse tilemap data from the cache and creates data for a Tilemap object.", "line_comment": null}, "docstring_tokens": ["-", "The", "key", "of", "the", "tilemap", "in", "the", "Cache", "."], "sample_id": 630, "prompt_tokens": ["<javascript>", "<param>", "key"], "comment_type": "param", "sentence_id": 2}
{"id": "21004663", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (game, key, tileWidth, tileHeight, width, height)\n    {\n        if (tileWidth === undefined) { tileWidth = 32; }\n        if (tileHeight === undefined) { tileHeight = 32; }\n        if (width === undefined) { width = 10; }\n        if (height === undefined) { height = 10; }\n\n        if (key === undefined)\n        {\n            return this.getEmptyData();\n        }\n\n        if (key === null)\n        {\n            return this.getEmptyData(tileWidth, tileHeight, width, height);\n        }\n\n        var map = game.cache.getTilemapData(key);\n\n        if (map)\n        {\n            if (map.format === Phaser.Tilemap.CSV)\n            {\n                return this.parseCSV(key, map.data, tileWidth, tileHeight);\n            }\n            else if (!map.format || map.format === Phaser.Tilemap.TILED_JSON)\n            {\n                return this.parseTiledJSON(map.data);\n            }\n        }\n        else\n        {\n            console.warn('No map data found for key \"%s\"', key);\n        }\n    }", "code_tokens": ["function", "(", "game", ",", "key", ",", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "if", "(", "tileWidth", "===", "undefined", ")", "{", "tileWidth", "=", "32", ";", "}", "if", "(", "tileHeight", "===", "undefined", ")", "{", "tileHeight", "=", "32", ";", "}", "if", "(", "width", "===", "undefined", ")", "{", "width", "=", "10", ";", "}", "if", "(", "height", "===", "undefined", ")", "{", "height", "=", "10", ";", "}", "if", "(", "key", "===", "undefined", ")", "{", "return", "this", ".", "getEmptyData", "(", ")", ";", "}", "if", "(", "key", "===", "null", ")", "{", "return", "this", ".", "getEmptyData", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", ";", "}", "var", "map", "=", "game", ".", "cache", ".", "getTilemapData", "(", "key", ")", ";", "if", "(", "map", ")", "{", "if", "(", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "CSV", ")", "{", "return", "this", ".", "parseCSV", "(", "key", ",", "map", ".", "data", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "else", "if", "(", "!", "map", ".", "format", "||", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ")", "{", "return", "this", ".", "parseTiledJSON", "(", "map", ".", "data", ")", ";", "}", "}", "else", "{", "console", ".", "warn", "(", "'No map data found for key \"%s\"'", ",", "key", ")", ";", "}", "}"], "original_docstring": "\nParse tilemap data from the cache and creates data for a Tilemap object.\n\n@method Phaser.TilemapParser.parse\n@param {Phaser.Game} game - Game reference to the currently running game.\n@param {string} key - The key of the tilemap in the Cache.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@return {object} The parsed map object.\n", "docstring": {"block_comment": "Parse tilemap data from the cache and creates data for a Tilemap object.", "line_comment": null}, "docstring_tokens": ["-", "The", "pixel", "width", "of", "a", "single", "map", "tile", ".", "If", "using", "CSV", "data", "you", "must", "specify", "this", ".", "Not", "required", "if", "using", "Tiled", "map", "data", "."], "sample_id": 630, "prompt_tokens": ["<javascript>", "<param>", "tileWidth"], "comment_type": "param", "sentence_id": 3}
{"id": "21004663", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (game, key, tileWidth, tileHeight, width, height)\n    {\n        if (tileWidth === undefined) { tileWidth = 32; }\n        if (tileHeight === undefined) { tileHeight = 32; }\n        if (width === undefined) { width = 10; }\n        if (height === undefined) { height = 10; }\n\n        if (key === undefined)\n        {\n            return this.getEmptyData();\n        }\n\n        if (key === null)\n        {\n            return this.getEmptyData(tileWidth, tileHeight, width, height);\n        }\n\n        var map = game.cache.getTilemapData(key);\n\n        if (map)\n        {\n            if (map.format === Phaser.Tilemap.CSV)\n            {\n                return this.parseCSV(key, map.data, tileWidth, tileHeight);\n            }\n            else if (!map.format || map.format === Phaser.Tilemap.TILED_JSON)\n            {\n                return this.parseTiledJSON(map.data);\n            }\n        }\n        else\n        {\n            console.warn('No map data found for key \"%s\"', key);\n        }\n    }", "code_tokens": ["function", "(", "game", ",", "key", ",", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "if", "(", "tileWidth", "===", "undefined", ")", "{", "tileWidth", "=", "32", ";", "}", "if", "(", "tileHeight", "===", "undefined", ")", "{", "tileHeight", "=", "32", ";", "}", "if", "(", "width", "===", "undefined", ")", "{", "width", "=", "10", ";", "}", "if", "(", "height", "===", "undefined", ")", "{", "height", "=", "10", ";", "}", "if", "(", "key", "===", "undefined", ")", "{", "return", "this", ".", "getEmptyData", "(", ")", ";", "}", "if", "(", "key", "===", "null", ")", "{", "return", "this", ".", "getEmptyData", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", ";", "}", "var", "map", "=", "game", ".", "cache", ".", "getTilemapData", "(", "key", ")", ";", "if", "(", "map", ")", "{", "if", "(", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "CSV", ")", "{", "return", "this", ".", "parseCSV", "(", "key", ",", "map", ".", "data", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "else", "if", "(", "!", "map", ".", "format", "||", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ")", "{", "return", "this", ".", "parseTiledJSON", "(", "map", ".", "data", ")", ";", "}", "}", "else", "{", "console", ".", "warn", "(", "'No map data found for key \"%s\"'", ",", "key", ")", ";", "}", "}"], "original_docstring": "\nParse tilemap data from the cache and creates data for a Tilemap object.\n\n@method Phaser.TilemapParser.parse\n@param {Phaser.Game} game - Game reference to the currently running game.\n@param {string} key - The key of the tilemap in the Cache.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@return {object} The parsed map object.\n", "docstring": {"block_comment": "Parse tilemap data from the cache and creates data for a Tilemap object.", "line_comment": null}, "docstring_tokens": ["-", "The", "pixel", "height", "of", "a", "single", "map", "tile", ".", "If", "using", "CSV", "data", "you", "must", "specify", "this", ".", "Not", "required", "if", "using", "Tiled", "map", "data", "."], "sample_id": 630, "prompt_tokens": ["<javascript>", "<param>", "tileHeight"], "comment_type": "param", "sentence_id": 4}
{"id": "21004663", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (game, key, tileWidth, tileHeight, width, height)\n    {\n        if (tileWidth === undefined) { tileWidth = 32; }\n        if (tileHeight === undefined) { tileHeight = 32; }\n        if (width === undefined) { width = 10; }\n        if (height === undefined) { height = 10; }\n\n        if (key === undefined)\n        {\n            return this.getEmptyData();\n        }\n\n        if (key === null)\n        {\n            return this.getEmptyData(tileWidth, tileHeight, width, height);\n        }\n\n        var map = game.cache.getTilemapData(key);\n\n        if (map)\n        {\n            if (map.format === Phaser.Tilemap.CSV)\n            {\n                return this.parseCSV(key, map.data, tileWidth, tileHeight);\n            }\n            else if (!map.format || map.format === Phaser.Tilemap.TILED_JSON)\n            {\n                return this.parseTiledJSON(map.data);\n            }\n        }\n        else\n        {\n            console.warn('No map data found for key \"%s\"', key);\n        }\n    }", "code_tokens": ["function", "(", "game", ",", "key", ",", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "if", "(", "tileWidth", "===", "undefined", ")", "{", "tileWidth", "=", "32", ";", "}", "if", "(", "tileHeight", "===", "undefined", ")", "{", "tileHeight", "=", "32", ";", "}", "if", "(", "width", "===", "undefined", ")", "{", "width", "=", "10", ";", "}", "if", "(", "height", "===", "undefined", ")", "{", "height", "=", "10", ";", "}", "if", "(", "key", "===", "undefined", ")", "{", "return", "this", ".", "getEmptyData", "(", ")", ";", "}", "if", "(", "key", "===", "null", ")", "{", "return", "this", ".", "getEmptyData", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", ";", "}", "var", "map", "=", "game", ".", "cache", ".", "getTilemapData", "(", "key", ")", ";", "if", "(", "map", ")", "{", "if", "(", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "CSV", ")", "{", "return", "this", ".", "parseCSV", "(", "key", ",", "map", ".", "data", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "else", "if", "(", "!", "map", ".", "format", "||", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ")", "{", "return", "this", ".", "parseTiledJSON", "(", "map", ".", "data", ")", ";", "}", "}", "else", "{", "console", ".", "warn", "(", "'No map data found for key \"%s\"'", ",", "key", ")", ";", "}", "}"], "original_docstring": "\nParse tilemap data from the cache and creates data for a Tilemap object.\n\n@method Phaser.TilemapParser.parse\n@param {Phaser.Game} game - Game reference to the currently running game.\n@param {string} key - The key of the tilemap in the Cache.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@return {object} The parsed map object.\n", "docstring": {"block_comment": "Parse tilemap data from the cache and creates data for a Tilemap object.", "line_comment": null}, "docstring_tokens": ["-", "The", "width", "of", "the", "map", "in", "tiles", ".", "If", "this", "map", "is", "created", "from", "Tiled", "or", "CSV", "data", "you", "don", "t", "need", "to", "specify", "this", "."], "sample_id": 630, "prompt_tokens": ["<javascript>", "<param>", "width"], "comment_type": "param", "sentence_id": 5}
{"id": "21004663", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (game, key, tileWidth, tileHeight, width, height)\n    {\n        if (tileWidth === undefined) { tileWidth = 32; }\n        if (tileHeight === undefined) { tileHeight = 32; }\n        if (width === undefined) { width = 10; }\n        if (height === undefined) { height = 10; }\n\n        if (key === undefined)\n        {\n            return this.getEmptyData();\n        }\n\n        if (key === null)\n        {\n            return this.getEmptyData(tileWidth, tileHeight, width, height);\n        }\n\n        var map = game.cache.getTilemapData(key);\n\n        if (map)\n        {\n            if (map.format === Phaser.Tilemap.CSV)\n            {\n                return this.parseCSV(key, map.data, tileWidth, tileHeight);\n            }\n            else if (!map.format || map.format === Phaser.Tilemap.TILED_JSON)\n            {\n                return this.parseTiledJSON(map.data);\n            }\n        }\n        else\n        {\n            console.warn('No map data found for key \"%s\"', key);\n        }\n    }", "code_tokens": ["function", "(", "game", ",", "key", ",", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "if", "(", "tileWidth", "===", "undefined", ")", "{", "tileWidth", "=", "32", ";", "}", "if", "(", "tileHeight", "===", "undefined", ")", "{", "tileHeight", "=", "32", ";", "}", "if", "(", "width", "===", "undefined", ")", "{", "width", "=", "10", ";", "}", "if", "(", "height", "===", "undefined", ")", "{", "height", "=", "10", ";", "}", "if", "(", "key", "===", "undefined", ")", "{", "return", "this", ".", "getEmptyData", "(", ")", ";", "}", "if", "(", "key", "===", "null", ")", "{", "return", "this", ".", "getEmptyData", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", ";", "}", "var", "map", "=", "game", ".", "cache", ".", "getTilemapData", "(", "key", ")", ";", "if", "(", "map", ")", "{", "if", "(", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "CSV", ")", "{", "return", "this", ".", "parseCSV", "(", "key", ",", "map", ".", "data", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "else", "if", "(", "!", "map", ".", "format", "||", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ")", "{", "return", "this", ".", "parseTiledJSON", "(", "map", ".", "data", ")", ";", "}", "}", "else", "{", "console", ".", "warn", "(", "'No map data found for key \"%s\"'", ",", "key", ")", ";", "}", "}"], "original_docstring": "\nParse tilemap data from the cache and creates data for a Tilemap object.\n\n@method Phaser.TilemapParser.parse\n@param {Phaser.Game} game - Game reference to the currently running game.\n@param {string} key - The key of the tilemap in the Cache.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@return {object} The parsed map object.\n", "docstring": {"block_comment": "Parse tilemap data from the cache and creates data for a Tilemap object.", "line_comment": null}, "docstring_tokens": ["-", "The", "height", "of", "the", "map", "in", "tiles", ".", "If", "this", "map", "is", "created", "from", "Tiled", "or", "CSV", "data", "you", "don", "t", "need", "to", "specify", "this", "."], "sample_id": 630, "prompt_tokens": ["<javascript>", "<param>", "height"], "comment_type": "param", "sentence_id": 6}
{"id": "21004663", "repo": "photonstorm/phaser-ce", "path": "src/tilemap/TilemapParser.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (game, key, tileWidth, tileHeight, width, height)\n    {\n        if (tileWidth === undefined) { tileWidth = 32; }\n        if (tileHeight === undefined) { tileHeight = 32; }\n        if (width === undefined) { width = 10; }\n        if (height === undefined) { height = 10; }\n\n        if (key === undefined)\n        {\n            return this.getEmptyData();\n        }\n\n        if (key === null)\n        {\n            return this.getEmptyData(tileWidth, tileHeight, width, height);\n        }\n\n        var map = game.cache.getTilemapData(key);\n\n        if (map)\n        {\n            if (map.format === Phaser.Tilemap.CSV)\n            {\n                return this.parseCSV(key, map.data, tileWidth, tileHeight);\n            }\n            else if (!map.format || map.format === Phaser.Tilemap.TILED_JSON)\n            {\n                return this.parseTiledJSON(map.data);\n            }\n        }\n        else\n        {\n            console.warn('No map data found for key \"%s\"', key);\n        }\n    }", "code_tokens": ["function", "(", "game", ",", "key", ",", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", "{", "if", "(", "tileWidth", "===", "undefined", ")", "{", "tileWidth", "=", "32", ";", "}", "if", "(", "tileHeight", "===", "undefined", ")", "{", "tileHeight", "=", "32", ";", "}", "if", "(", "width", "===", "undefined", ")", "{", "width", "=", "10", ";", "}", "if", "(", "height", "===", "undefined", ")", "{", "height", "=", "10", ";", "}", "if", "(", "key", "===", "undefined", ")", "{", "return", "this", ".", "getEmptyData", "(", ")", ";", "}", "if", "(", "key", "===", "null", ")", "{", "return", "this", ".", "getEmptyData", "(", "tileWidth", ",", "tileHeight", ",", "width", ",", "height", ")", ";", "}", "var", "map", "=", "game", ".", "cache", ".", "getTilemapData", "(", "key", ")", ";", "if", "(", "map", ")", "{", "if", "(", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "CSV", ")", "{", "return", "this", ".", "parseCSV", "(", "key", ",", "map", ".", "data", ",", "tileWidth", ",", "tileHeight", ")", ";", "}", "else", "if", "(", "!", "map", ".", "format", "||", "map", ".", "format", "===", "Phaser", ".", "Tilemap", ".", "TILED_JSON", ")", "{", "return", "this", ".", "parseTiledJSON", "(", "map", ".", "data", ")", ";", "}", "}", "else", "{", "console", ".", "warn", "(", "'No map data found for key \"%s\"'", ",", "key", ")", ";", "}", "}"], "original_docstring": "\nParse tilemap data from the cache and creates data for a Tilemap object.\n\n@method Phaser.TilemapParser.parse\n@param {Phaser.Game} game - Game reference to the currently running game.\n@param {string} key - The key of the tilemap in the Cache.\n@param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.\n@param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.\n@return {object} The parsed map object.\n", "docstring": {"block_comment": "Parse tilemap data from the cache and creates data for a Tilemap object.", "line_comment": null}, "docstring_tokens": ["The", "parsed", "map", "object", "."], "sample_id": 630, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 7}
{"id": "21004664", "repo": "teqneers/Greyface", "path": "htdocs/app/controller/LoginController.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        if(!this.getIsMainCreated()) {\n            this.application.viewport.add({xtype: \"gf_main\"});\n            this.setIsMainCreated(true);\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "!", "this", ".", "getIsMainCreated", "(", ")", ")", "{", "this", ".", "application", ".", "viewport", ".", "add", "(", "{", "xtype", ":", "\"gf_main\"", "}", ")", ";", "this", ".", "setIsMainCreated", "(", "true", ")", ";", "}", "}"], "original_docstring": "Create screens on startup...", "docstring": {"block_comment": "Create screens on startup...", "line_comment": null}, "docstring_tokens": ["Create", "screens", "on", "startup", "..."], "sample_id": 631, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004665", "repo": "archtechfl/ttcdisruption", "path": "ttcdisruption/main.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (event) {\n      Session.set(\"displayState\", event.target.value);\n    }", "code_tokens": ["function", "(", "event", ")", "{", "Session", ".", "set", "(", "\"displayState\"", ",", "event", ".", "target", ".", "value", ")", ";", "}"], "original_docstring": "UI events go here", "docstring": {"block_comment": "UI events go here", "line_comment": null}, "docstring_tokens": ["UI", "events", "go", "here"], "sample_id": 632, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004666", "repo": "archtechfl/ttcdisruption", "path": "ttcdisruption/main.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n        if (Session.get(\"displayState\")) {\n          // Filter alerts based on visibility selection\n          var state = Number(Session.get(\"displayState\"));\n          if (state != 4){\n            if (state === 1){\n              state = moment().subtract(3, 'hours').toISOString();\n            } else if (state === 2){\n              state = moment().subtract(24, 'hours').toISOString();\n            } else if (state === 3){\n              state = moment().subtract(1, 'week').toISOString();\n            } else {\n              state = \"\";\n            }\n            return Notices.find(\n              {\n                \"time\" : { $gte : state }\n              },\n              {\n                sort: {time:-1}, reactive:true\n              });\n          } else {\n            state = moment().subtract(2, 'week').toISOString();\n            return Notices.find(\n            {\n              \"time\" : { $gte : state }\n            },\n            {\n              sort: {time:-1}, reactive:true\n            });\n          }\n        } else {\n          var time = moment().subtract(3, 'hours').toISOString();\n          // Otherwise, return all of the alerts\n          var data = Notices.find(\n            {\n              \"time\" : { $gte : time }\n            },\n            {\n              sort: {time:-1}, reactive:true\n            });\n          return data;\n        }\n    }", "code_tokens": ["function", "(", ")", "{", "if", "(", "Session", ".", "get", "(", "\"displayState\"", ")", ")", "{", "// Filter alerts based on visibility selection", "var", "state", "=", "Number", "(", "Session", ".", "get", "(", "\"displayState\"", ")", ")", ";", "if", "(", "state", "!=", "4", ")", "{", "if", "(", "state", "===", "1", ")", "{", "state", "=", "moment", "(", ")", ".", "subtract", "(", "3", ",", "'hours'", ")", ".", "toISOString", "(", ")", ";", "}", "else", "if", "(", "state", "===", "2", ")", "{", "state", "=", "moment", "(", ")", ".", "subtract", "(", "24", ",", "'hours'", ")", ".", "toISOString", "(", ")", ";", "}", "else", "if", "(", "state", "===", "3", ")", "{", "state", "=", "moment", "(", ")", ".", "subtract", "(", "1", ",", "'week'", ")", ".", "toISOString", "(", ")", ";", "}", "else", "{", "state", "=", "\"\"", ";", "}", "return", "Notices", ".", "find", "(", "{", "\"time\"", ":", "{", "$gte", ":", "state", "}", "}", ",", "{", "sort", ":", "{", "time", ":", "-", "1", "}", ",", "reactive", ":", "true", "}", ")", ";", "}", "else", "{", "state", "=", "moment", "(", ")", ".", "subtract", "(", "2", ",", "'week'", ")", ".", "toISOString", "(", ")", ";", "return", "Notices", ".", "find", "(", "{", "\"time\"", ":", "{", "$gte", ":", "state", "}", "}", ",", "{", "sort", ":", "{", "time", ":", "-", "1", "}", ",", "reactive", ":", "true", "}", ")", ";", "}", "}", "else", "{", "var", "time", "=", "moment", "(", ")", ".", "subtract", "(", "3", ",", "'hours'", ")", ".", "toISOString", "(", ")", ";", "// Otherwise, return all of the alerts", "var", "data", "=", "Notices", ".", "find", "(", "{", "\"time\"", ":", "{", "$gte", ":", "time", "}", "}", ",", "{", "sort", ":", "{", "time", ":", "-", "1", "}", ",", "reactive", ":", "true", "}", ")", ";", "return", "data", ";", "}", "}"], "original_docstring": "Helpers go here Get a list of TTC notices into the browser", "docstring": {"block_comment": "Helpers go here Get a list of TTC notices into the browser", "line_comment": ["Filter alerts based on visibility selection", "Otherwise, return all of the alerts"]}, "docstring_tokens": ["Helpers", "go", "here", "Get", "a", "list", "of", "TTC", "notices", "into", "the", "browser"], "sample_id": 633, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004667", "repo": "streamburner/streamburner", "path": "src/env.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\r\n\tthis.is_twitch = false;\r\n\tthis.has_body = false;\r\n\tthis.callbacks = {};\r\n}", "code_tokens": ["function", "(", ")", "{", "this", ".", "is_twitch", "=", "false", ";", "this", ".", "has_body", "=", "false", ";", "this", ".", "callbacks", "=", "{", "}", ";", "}"], "original_docstring": "detects the running environment loads before jQuery is available", "docstring": {"block_comment": "detects the running environment loads before jQuery is available", "line_comment": null}, "docstring_tokens": ["detects", "the", "running", "environment", "loads", "before", "jQuery", "is", "available"], "sample_id": 634, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004668", "repo": "tdukai/isomorphic-sample", "path": "plugins/people/js/contactsPagingModel.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (data) {\n    data = data || {};\n    this.page = data.page ? parseInt(data.page, 10) : 0;\n    this.size = data.size ? parseInt(data.size, 10) : 0;\n    this.sort = data.sort || '';\n    this.count = data.count || 0;\n}", "code_tokens": ["function", "(", "data", ")", "{", "data", "=", "data", "||", "{", "}", ";", "this", ".", "page", "=", "data", ".", "page", "?", "parseInt", "(", "data", ".", "page", ",", "10", ")", ":", "0", ";", "this", ".", "size", "=", "data", ".", "size", "?", "parseInt", "(", "data", ".", "size", ",", "10", ")", ":", "0", ";", "this", ".", "sort", "=", "data", ".", "sort", "||", "''", ";", "this", ".", "count", "=", "data", ".", "count", "||", "0", ";", "}"], "original_docstring": "\nContacts single paging model\n@class ContactsPagingModel\n@constructor\n", "docstring": {"block_comment": "Contacts single paging model", "line_comment": null}, "docstring_tokens": ["Contacts", "single", "paging", "model"], "sample_id": 635, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004669", "repo": "Vrturo/Algo-Gem", "path": "Algorithms/JS/arrays/maxSubArray.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(nums) {\n    var max = nums[0],\n        sum = 0;\n    for( var i=0; i<nums.length; i++ ){\n        sum += nums[i];\n        if( sum > max ) max = sum;\n        if( sum < 0 ) sum = 0;\n    }\n    return max;\n}", "code_tokens": ["function", "(", "nums", ")", "{", "var", "max", "=", "nums", "[", "0", "]", ",", "sum", "=", "0", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "nums", ".", "length", ";", "i", "++", ")", "{", "sum", "+=", "nums", "[", "i", "]", ";", "if", "(", "sum", ">", "max", ")", "max", "=", "sum", ";", "if", "(", "sum", "<", "0", ")", "sum", "=", "0", ";", "}", "return", "max", ";", "}"], "original_docstring": "set variable max as the first subset of nums array set sum to 0 loop through nums with a for each loop set or add sum to the first element if sum is greater than max set it if sum is less than 0 set to 0 return max", "docstring": {"block_comment": "set variable max as the first subset of nums array set sum to 0 loop through nums with a for each loop set or add sum to the first element if sum is greater than max set it if sum is less than 0 set to 0 return max", "line_comment": null}, "docstring_tokens": ["set", "variable", "max", "as", "the", "first", "subset", "of", "nums", "array", "set", "sum", "to", "0", "loop", "through", "nums", "with", "a", "for", "each", "loop", "set", "or", "add", "sum", "to", "the", "first", "element", "if", "sum", "is", "greater", "than", "max", "set", "it", "if", "sum", "is", "less", "than", "0", "set", "to", "0", "return", "max"], "sample_id": 636, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004670", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(newValue) {\r\n\t\tif (arguments.length) {\r\n\t\t\tthis._setValue(newValue);\r\n\t\t\t\r\n\t\t\t// maintains chaining\r\n\t\t\treturn this.element;\r\n\t\t}\r\n\r\n\t\treturn this.curvalue;\r\n\t}", "code_tokens": ["function", "(", "newValue", ")", "{", "if", "(", "arguments", ".", "length", ")", "{", "this", ".", "_setValue", "(", "newValue", ")", ";", "// maintains chaining\r", "return", "this", ".", "element", ";", "}", "return", "this", ".", "curvalue", ";", "}"], "original_docstring": "Set or retrieve the value", "docstring": {"block_comment": "Set or retrieve the value", "line_comment": ["maintains chaining"]}, "docstring_tokens": ["Set", "or", "retrieve", "the", "value"], "sample_id": 637, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004671", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(value, suppressFireEvent) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tself.curvalue = value = self._validate(value);\r\n\t\tself.element.val(value != null ? \r\n\t\t\tself.options.format(value, self.places, self.element) :\r\n\t\t\t'');\r\n\t\t\r\n\t\tif (!suppressFireEvent) {\r\n\t\t\tself.selfChange = true;\r\n\t\t\tself.element.change();\r\n\t\t\tself.selfChange = false;\r\n\t\t}\r\n\t}", "code_tokens": ["function", "(", "value", ",", "suppressFireEvent", ")", "{", "var", "self", "=", "this", ";", "self", ".", "curvalue", "=", "value", "=", "self", ".", "_validate", "(", "value", ")", ";", "self", ".", "element", ".", "val", "(", "value", "!=", "null", "?", "self", ".", "options", ".", "format", "(", "value", ",", "self", ".", "places", ",", "self", ".", "element", ")", ":", "''", ")", ";", "if", "(", "!", "suppressFireEvent", ")", "{", "self", ".", "selfChange", "=", "true", ";", "self", ".", "element", ".", "change", "(", ")", ";", "self", ".", "selfChange", "=", "false", ";", "}", "}"], "original_docstring": "Set the value directly", "docstring": {"block_comment": "Set the value directly", "line_comment": null}, "docstring_tokens": ["Set", "the", "value", "directly"], "sample_id": 638, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004672", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(key, value) {\r\n\t\t$.Widget.prototype._setOption.call(this, key, value);\r\n\t\tthis._procOptions();\r\n\t}", "code_tokens": ["function", "(", "key", ",", "value", ")", "{", "$", ".", "Widget", ".", "prototype", ".", "_setOption", ".", "call", "(", "this", ",", "key", ",", "value", ")", ";", "this", ".", "_procOptions", "(", ")", ";", "}"], "original_docstring": "overrides _setData to force option parsing", "docstring": {"block_comment": "overrides _setData to force option parsing", "line_comment": null}, "docstring_tokens": ["overrides", "_setData", "to", "force", "option", "parsing"], "sample_id": 639, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004673", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\r\n\t\tvar value = this.element.val();\r\n\t\treturn value ? this.options.parse(value, this.element) : null;\r\n\t}", "code_tokens": ["function", "(", ")", "{", "var", "value", "=", "this", ".", "element", ".", "val", "(", ")", ";", "return", "value", "?", "this", ".", "options", ".", "parse", "(", "value", ",", "this", ".", "element", ")", ":", "null", ";", "}"], "original_docstring": "Parse the value currently in the field", "docstring": {"block_comment": "Parse the value currently in the field", "line_comment": null}, "docstring_tokens": ["Parse", "the", "value", "currently", "in", "the", "field"], "sample_id": 640, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004674", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(step) {\r\n\t\t// shortcut\r\n\t\tvar self = this,\r\n\t\t\tvalue = self.curvalue;\r\n\t\t\t\r\n\t\tif (value == null)\r\n\t\t\tvalue = (step > 0 ? self.options.min : self.options.max) || 0;\r\n\t\t\r\n\t\tself._setValue(value + step);\r\n\t}", "code_tokens": ["function", "(", "step", ")", "{", "// shortcut\r", "var", "self", "=", "this", ",", "value", "=", "self", ".", "curvalue", ";", "if", "(", "value", "==", "null", ")", "value", "=", "(", "step", ">", "0", "?", "self", ".", "options", ".", "min", ":", "self", ".", "options", ".", "max", ")", "||", "0", ";", "self", ".", "_setValue", "(", "value", "+", "step", ")", ";", "}"], "original_docstring": "actually spins the timer by a step", "docstring": {"block_comment": "actually spins the timer by a step", "line_comment": ["shortcut"]}, "docstring_tokens": ["actually", "spins", "the", "timer", "by", "a", "step"], "sample_id": 641, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004675", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(dir, large) {\r\n\t\t// shortcuts\r\n\t\tvar self = this,\r\n\t\t\tincrement = self.options.increment,\r\n\t\t\tcurIncrement = increment[self.incCounter];\r\n\t\t\r\n\t\tself._doSpin(dir * curIncrement.mult * (large ? self.options.largeStep : self.options.step));\r\n\t\tself.counter++;\r\n\r\n\t\tif ((self.counter > curIncrement.count) && (self.incCounter < increment.length-1)) {\r\n\t\t\tself.counter = 0;\r\n\t\t\tcurIncrement = increment[++self.incCounter];\r\n\t\t\tself._setTimer(curIncrement.delay, dir, large);\r\n\t\t}\r\n\t}", "code_tokens": ["function", "(", "dir", ",", "large", ")", "{", "// shortcuts\r", "var", "self", "=", "this", ",", "increment", "=", "self", ".", "options", ".", "increment", ",", "curIncrement", "=", "increment", "[", "self", ".", "incCounter", "]", ";", "self", ".", "_doSpin", "(", "dir", "*", "curIncrement", ".", "mult", "*", "(", "large", "?", "self", ".", "options", ".", "largeStep", ":", "self", ".", "options", ".", "step", ")", ")", ";", "self", ".", "counter", "++", ";", "if", "(", "(", "self", ".", "counter", ">", "curIncrement", ".", "count", ")", "&&", "(", "self", ".", "incCounter", "<", "increment", ".", "length", "-", "1", ")", ")", "{", "self", ".", "counter", "=", "0", ";", "curIncrement", "=", "increment", "[", "++", "self", ".", "incCounter", "]", ";", "self", ".", "_setTimer", "(", "curIncrement", ".", "delay", ",", "dir", ",", "large", ")", ";", "}", "}"], "original_docstring": "called by timer for each step in the spin", "docstring": {"block_comment": "called by timer for each step in the spin", "line_comment": ["shortcuts"]}, "docstring_tokens": ["called", "by", "timer", "for", "each", "step", "in", "the", "spin"], "sample_id": 642, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004676", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(dir, large) {\r\n\t\t// shortcuts\r\n\t\tvar self = this,\r\n\t\t\toptions = self.options,\r\n\t\t\tincrement = options.increment;\r\n\t\t\t\r\n\t\t// make sure any changes are posted\r\n\t\tself._change();\r\n\t\tself._doSpin(dir * (large ? self.options.largeStep : self.options.step));\r\n\t\t\r\n\t\tif (increment && increment.length > 0) {\t\t\r\n\t\t\tself.counter = 0;\r\n\t\t\tself.incCounter = 0;\r\n\t\t\tself._setTimer(increment[0].delay, dir, large);\r\n\t\t}\r\n\t}", "code_tokens": ["function", "(", "dir", ",", "large", ")", "{", "// shortcuts\r", "var", "self", "=", "this", ",", "options", "=", "self", ".", "options", ",", "increment", "=", "options", ".", "increment", ";", "// make sure any changes are posted\r", "self", ".", "_change", "(", ")", ";", "self", ".", "_doSpin", "(", "dir", "*", "(", "large", "?", "self", ".", "options", ".", "largeStep", ":", "self", ".", "options", ".", "step", ")", ")", ";", "if", "(", "increment", "&&", "increment", ".", "length", ">", "0", ")", "{", "self", ".", "counter", "=", "0", ";", "self", ".", "incCounter", "=", "0", ";", "self", ".", "_setTimer", "(", "increment", "[", "0", "]", ".", "delay", ",", "dir", ",", "large", ")", ";", "}", "}"], "original_docstring": "performs first step, and starts the spin timer if increment is set", "docstring": {"block_comment": "performs first step, and starts the spin timer if increment is set", "line_comment": ["shortcuts", "make sure any changes are posted"]}, "docstring_tokens": ["performs", "first", "step", "and", "starts", "the", "spin", "timer", "if", "increment", "is", "set"], "sample_id": 643, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004677", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\r\n\t\tif (this.timer) {\r\n\t\t\tclearInterval(this.timer);\r\n\t\t\tthis.timer = 0;\r\n\t\t}\r\n\t}", "code_tokens": ["function", "(", ")", "{", "if", "(", "this", ".", "timer", ")", "{", "clearInterval", "(", "this", ".", "timer", ")", ";", "this", ".", "timer", "=", "0", ";", "}", "}"], "original_docstring": "stops the spin timer", "docstring": {"block_comment": "stops the spin timer", "line_comment": null}, "docstring_tokens": ["stops", "the", "spin", "timer"], "sample_id": 644, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004678", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(delay, dir, large) {\r\n\t\tvar self = this;\r\n\t\tself._stopSpin();\r\n\t\tself.timer = setInterval(fire, delay);\r\n\t\t\r\n\t\tfunction fire() {\r\n\t\t\tself._spin(dir, large);\r\n\t\t}\r\n\t}", "code_tokens": ["function", "(", "delay", ",", "dir", ",", "large", ")", "{", "var", "self", "=", "this", ";", "self", ".", "_stopSpin", "(", ")", ";", "self", ".", "timer", "=", "setInterval", "(", "fire", ",", "delay", ")", ";", "function", "fire", "(", ")", "{", "self", ".", "_spin", "(", "dir", ",", "large", ")", ";", "}", "}"], "original_docstring": "sets an interval to call the _spin function", "docstring": {"block_comment": "sets an interval to call the _spin function", "line_comment": null}, "docstring_tokens": ["sets", "an", "interval", "to", "call", "the", "_spin", "function"], "sample_id": 645, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004679", "repo": "krish24/symfony2-cdominguez", "path": "src/Base/JQueryUIBundle/Resources/public/jui/js/source/addon/jquery.ui.spinner.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\r\n\t\t// shortcuts\r\n\t\tvar self = this,\r\n\t\t\tinput = self.element,\r\n\t\t\ttype = input.attr('type');\r\n\t\t\t\r\n\t\tif (!input.is('input') || ((type != 'text') && (type != 'number'))) {\r\n\t\t\tconsole.error('Invalid target for ui.spinner');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tself._procOptions(true);\r\n\t\tself._createButtons(input);\r\n\r\n\t\tif (!input.is(':enabled'))\r\n\t\t\tself.disable();\r\n\t}", "code_tokens": ["function", "(", ")", "{", "// shortcuts\r", "var", "self", "=", "this", ",", "input", "=", "self", ".", "element", ",", "type", "=", "input", ".", "attr", "(", "'type'", ")", ";", "if", "(", "!", "input", ".", "is", "(", "'input'", ")", "||", "(", "(", "type", "!=", "'text'", ")", "&&", "(", "type", "!=", "'number'", ")", ")", ")", "{", "console", ".", "error", "(", "'Invalid target for ui.spinner'", ")", ";", "return", ";", "}", "self", ".", "_procOptions", "(", "true", ")", ";", "self", ".", "_createButtons", "(", "input", ")", ";", "if", "(", "!", "input", ".", "is", "(", "':enabled'", ")", ")", "self", ".", "disable", "(", ")", ";", "}"], "original_docstring": "* Widget fields * curvalue - current value places - currently effective number of decimal places oWidth - original input width (used for destroy) oMargin - original input right margin (used for destroy) counter - number of spins at the current spin speed incCounter - index within options.increment of the current spin speed selfChange - indicates that change event is being fired by the widget, so don't reprocess input value inputMaxLength - initial maxLength value on the input focused - this spinner currently has the focus", "docstring": {"block_comment": "Widget fields   curvalue   current value places   currently effective number of decimal places oWidth   original input width  used for destroy  oMargin   original input right margin  used for destroy  counter   number of spins at the current spin speed incCounter   index within options.increment of the current spin speed selfChange   indicates that change event is being fired by the widget, so don t reprocess input value inputMaxLength   initial maxLength value on the input focused   this spinner currently has the focus", "line_comment": ["shortcuts"]}, "docstring_tokens": ["Widget", "fields", "curvalue", "current", "value", "places", "currently", "effective", "number", "of", "decimal", "places", "oWidth", "original", "input", "width", "used", "for", "destroy", "oMargin", "original", "input", "right", "margin", "used", "for", "destroy", "counter", "number", "of", "spins", "at", "the", "current", "spin", "speed", "incCounter", "index", "within", "options", ".", "increment", "of", "the", "current", "spin", "speed", "selfChange", "indicates", "that", "change", "event", "is", "being", "fired", "by", "the", "widget", "so", "don", "t", "reprocess", "input", "value", "inputMaxLength", "initial", "maxLength", "value", "on", "the", "input", "focused", "this", "spinner", "currently", "has", "the", "focus"], "sample_id": 646, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004680", "repo": "aliatsis/mongoose-encryption", "path": "index.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(doc){\n      return _.map(authenticationFieldsToCheck, function(field) {\n        return doc.isSelected(field);\n      });\n    }", "code_tokens": ["function", "(", "doc", ")", "{", "return", "_", ".", "map", "(", "authenticationFieldsToCheck", ",", "function", "(", "field", ")", "{", "return", "doc", ".", "isSelected", "(", "field", ")", ";", "}", ")", ";", "}"], "original_docstring": "_id is implicitly selected", "docstring": {"block_comment": "_id is implicitly selected", "line_comment": null}, "docstring_tokens": ["_id", "is", "implicitly", "selected"], "sample_id": 647, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004681", "repo": "aliatsis/mongoose-encryption", "path": "index.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(obj, field, val) {\n    var parts = field.split('.');\n    var partsLen = parts.length;\n    var partRef = obj || {};\n    var i, part;\n\n    for (i = 0; i < partsLen; i++) {\n      part = parts[i];\n\n      if (i === partsLen - 1) {\n        partRef[part] = val;\n      } else {\n        partRef[part] = partRef[part] || {};\n        partRef = partRef[part];\n      }\n    }\n\n    return obj;\n  }", "code_tokens": ["function", "(", "obj", ",", "field", ",", "val", ")", "{", "var", "parts", "=", "field", ".", "split", "(", "'.'", ")", ";", "var", "partsLen", "=", "parts", ".", "length", ";", "var", "partRef", "=", "obj", "||", "{", "}", ";", "var", "i", ",", "part", ";", "for", "(", "i", "=", "0", ";", "i", "<", "partsLen", ";", "i", "++", ")", "{", "part", "=", "parts", "[", "i", "]", ";", "if", "(", "i", "===", "partsLen", "-", "1", ")", "{", "partRef", "[", "part", "]", "=", "val", ";", "}", "else", "{", "partRef", "[", "part", "]", "=", "partRef", "[", "part", "]", "||", "{", "}", ";", "partRef", "=", "partRef", "[", "part", "]", ";", "}", "}", "return", "obj", ";", "}"], "original_docstring": "using mpath.set() for this would be nice but it does not create new objects as it traverses the path", "docstring": {"block_comment": "using mpath.set   for this would be nice but it does not create new objects as it traverses the path", "line_comment": null}, "docstring_tokens": ["using", "mpath", ".", "set", "for", "this", "would", "be", "nice", "but", "it", "does", "not", "create", "new", "objects", "as", "it", "traverses", "the", "path"], "sample_id": 648, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004682", "repo": "Linksku/phonegap-bluetooth-plugin", "path": "www/bluetooth.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function()\n{\n    this.platforms = [ \"android\" ];\n}", "code_tokens": ["function", "(", ")", "{", "this", ".", "platforms", "=", "[", "\"android\"", "]", ";", "}"], "original_docstring": "\nCreate a new instance of Bluetooth(Plugin).\n\n@class       Bluetooth\n@classdesc   BluetoothPlugin for cordova 3.0.0+ (PhoneGap).\n", "docstring": {"block_comment": "Create a new instance of Bluetooth Plugin .", "line_comment": null}, "docstring_tokens": ["Create", "a", "new", "instance", "of", "Bluetooth", "Plugin", "."], "sample_id": 649, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004684", "repo": "aryashreep/eUX", "path": "src/assets/fabricator/scripts/prism.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t}", "code_tokens": ["function", "(", "inside", ",", "before", ",", "insert", ",", "root", ")", "{", "root", "=", "root", "||", "_", ".", "languages", ";", "var", "grammar", "=", "root", "[", "inside", "]", ";", "if", "(", "arguments", ".", "length", "==", "2", ")", "{", "insert", "=", "arguments", "[", "1", "]", ";", "for", "(", "var", "newToken", "in", "insert", ")", "{", "if", "(", "insert", ".", "hasOwnProperty", "(", "newToken", ")", ")", "{", "grammar", "[", "newToken", "]", "=", "insert", "[", "newToken", "]", ";", "}", "}", "return", "grammar", ";", "}", "var", "ret", "=", "{", "}", ";", "for", "(", "var", "token", "in", "grammar", ")", "{", "if", "(", "grammar", ".", "hasOwnProperty", "(", "token", ")", ")", "{", "if", "(", "token", "==", "before", ")", "{", "for", "(", "var", "newToken", "in", "insert", ")", "{", "if", "(", "insert", ".", "hasOwnProperty", "(", "newToken", ")", ")", "{", "ret", "[", "newToken", "]", "=", "insert", "[", "newToken", "]", ";", "}", "}", "}", "ret", "[", "token", "]", "=", "grammar", "[", "token", "]", ";", "}", "}", "// Update references in other language definitions", "_", ".", "languages", ".", "DFS", "(", "_", ".", "languages", ",", "function", "(", "key", ",", "value", ")", "{", "if", "(", "value", "===", "root", "[", "inside", "]", "&&", "key", "!=", "inside", ")", "{", "this", "[", "key", "]", "=", "ret", ";", "}", "}", ")", ";", "return", "root", "[", "inside", "]", "=", "ret", ";", "}"], "original_docstring": "\nInsert a token before another token in a language literal\nAs this needs to recreate the object (we cannot actually insert before keys in object literals),\nwe cannot just provide an object, we need anobject and a key.\n@param inside The key (or language id) of the parent\n@param before The key to insert before. If not provided, the function appends instead.\n@param insert Object with the key/value pairs to insert\n@param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n", "docstring": {"block_comment": "Insert a token before another token in a language literal \nAs this needs to recreate the object  we cannot actually insert before keys in object literals , \nwe cannot just provide an object, we need anobject and a key.", "line_comment": ["Update references in other language definitions"]}, "docstring_tokens": ["Insert", "a", "token", "before", "another", "token", "in", "a", "language", "literal", "As", "this", "needs", "to", "recreate", "the", "object", "we", "cannot", "actually", "insert", "before", "keys", "in", "object", "literals", "we", "cannot", "just", "provide", "an", "object", "we", "need", "anobject", "and", "a", "key", "."], "sample_id": 650, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004687", "repo": "leobalter/qunit-migrate", "path": "libs/qunit/qunit.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( fn ) {\n\t\t\t\t\tvar args,\n\t\t\t\t\t\tl = fn.length;\n\n\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\targs = new Array( l );\n\t\t\t\t\twhile ( l-- ) {\n\n\t\t\t\t\t\t// 97 is 'a'\n\t\t\t\t\t\targs[ l ] = String.fromCharCode( 97 + l );\n\t\t\t\t\t}\n\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t}", "code_tokens": ["function", "(", "fn", ")", "{", "var", "args", ",", "l", "=", "fn", ".", "length", ";", "if", "(", "!", "l", ")", "{", "return", "\"\"", ";", "}", "args", "=", "new", "Array", "(", "l", ")", ";", "while", "(", "l", "--", ")", "{", "// 97 is 'a'", "args", "[", "l", "]", "=", "String", ".", "fromCharCode", "(", "97", "+", "l", ")", ";", "}", "return", "\" \"", "+", "args", ".", "join", "(", "\", \"", ")", "+", "\" \"", ";", "}"], "original_docstring": "function calls it internally, it's the arguments part of the function", "docstring": {"block_comment": "function calls it internally, it s the arguments part of the function", "line_comment": ["97 is  a "]}, "docstring_tokens": ["function", "calls", "it", "internally", "it", "s", "the", "arguments", "part", "of", "the", "function"], "sample_id": 651, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004688", "repo": "leobalter/qunit-migrate", "path": "libs/qunit/qunit.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( extra ) {\n\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\tvar chr = this.indentChar;\n\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&nbsp;\" );\n\t\t\t\t}\n\t\t\t\treturn new Array( this.depth + ( extra || 0 ) ).join( chr );\n\t\t\t}", "code_tokens": ["function", "(", "extra", ")", "{", "if", "(", "!", "this", ".", "multiline", ")", "{", "return", "\"\"", ";", "}", "var", "chr", "=", "this", ".", "indentChar", ";", "if", "(", "this", ".", "HTML", ")", "{", "chr", "=", "chr", ".", "replace", "(", "/", "\\t", "/", "g", ",", "\"   \"", ")", ".", "replace", "(", "/", " ", "/", "g", ",", "\"&nbsp;\"", ")", ";", "}", "return", "new", "Array", "(", "this", ".", "depth", "+", "(", "extra", "||", "0", ")", ")", ".", "join", "(", "chr", ")", ";", "}"], "original_docstring": "extra can be a number, shortcut for increasing-calling-decreasing", "docstring": {"block_comment": "extra can be a number, shortcut for increasing calling decreasing", "line_comment": null}, "docstring_tokens": ["extra", "can", "be", "a", "number", "shortcut", "for", "increasing", "calling", "decreasing"], "sample_id": 652, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004689", "repo": "leobalter/qunit-migrate", "path": "libs/qunit/qunit.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( obj, type, stack ) {\n\t\t\t\tstack = stack || [];\n\t\t\t\tvar inStack, res,\n\t\t\t\t\tparser = this.parsers[ type || this.typeOf( obj ) ];\n\n\t\t\t\ttype = typeof parser;\n\t\t\t\tinStack = inArray( obj, stack );\n\n\t\t\t\tif ( inStack !== -1 ) {\n\t\t\t\t\treturn \"recursion(\" + ( inStack - stack.length ) + \")\";\n\t\t\t\t}\n\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\tstack.push( obj );\n\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\tstack.pop();\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t\treturn ( type === \"string\" ) ? parser : this.parsers.error;\n\t\t\t}", "code_tokens": ["function", "(", "obj", ",", "type", ",", "stack", ")", "{", "stack", "=", "stack", "||", "[", "]", ";", "var", "inStack", ",", "res", ",", "parser", "=", "this", ".", "parsers", "[", "type", "||", "this", ".", "typeOf", "(", "obj", ")", "]", ";", "type", "=", "typeof", "parser", ";", "inStack", "=", "inArray", "(", "obj", ",", "stack", ")", ";", "if", "(", "inStack", "!==", "-", "1", ")", "{", "return", "\"recursion(\"", "+", "(", "inStack", "-", "stack", ".", "length", ")", "+", "\")\"", ";", "}", "if", "(", "type", "===", "\"function\"", ")", "{", "stack", ".", "push", "(", "obj", ")", ";", "res", "=", "parser", ".", "call", "(", "this", ",", "obj", ",", "stack", ")", ";", "stack", ".", "pop", "(", ")", ";", "return", "res", ";", "}", "return", "(", "type", "===", "\"string\"", ")", "?", "parser", ":", "this", ".", "parsers", ".", "error", ";", "}"], "original_docstring": "type is used mostly internally, you can fix a (custom)type in advance", "docstring": {"block_comment": "type is used mostly internally, you can fix a  custom type in advance", "line_comment": null}, "docstring_tokens": ["type", "is", "used", "mostly", "internally", "you", "can", "fix", "a", "custom", "type", "in", "advance"], "sample_id": 653, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004691", "repo": "leobalter/qunit-migrate", "path": "libs/qunit/qunit.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tQUnit.push( expected == actual, actual, expected, message );\n\t}", "code_tokens": ["function", "(", "actual", ",", "expected", ",", "message", ")", "{", "/*jshint eqeqeq:false */", "QUnit", ".", "push", "(", "expected", "==", "actual", ",", "actual", ",", "expected", ",", "message", ")", ";", "}"], "original_docstring": "\nAssert that the first two arguments are equal, with an optional message.\nPrints out both actual and expected values.\n@name equal\n@function\n@example equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );\n", "docstring": {"block_comment": "Assert that the first two arguments are equal, with an optional message. \nPrints out both actual and expected values.", "line_comment": ["jshint eqeqeq false"]}, "docstring_tokens": ["Assert", "that", "the", "first", "two", "arguments", "are", "equal", "with", "an", "optional", "message", ".", "Prints", "out", "both", "actual", "and", "expected", "values", "."], "sample_id": 654, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004692", "repo": "leobalter/qunit-migrate", "path": "libs/qunit/qunit.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( result, msg ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"ok() assertion outside test context, was \" + sourceFromStacktrace( 2 ) );\n\t\t}\n\t\tvar source, details,\n\t\t\toriginalResult = result;\n\n\t\tresult = !!result;\n\t\tmsg = msg || ( result ? \"okay\" : \"failed, expected argument to be truthy, was: \" +\n\t\t\tQUnit.jsDump.parse( originalResult ) );\n\n\t\tdetails = {\n\t\t\tmodule: config.current.module,\n\t\t\tname: config.current.testName,\n\t\t\tresult: result,\n\t\t\tmessage: msg\n\t\t};\n\n\t\tmsg = \"<span class='test-message'>\" + escapeText( msg ) + \"</span>\";\n\n\t\tif ( !result ) {\n\t\t\tsource = sourceFromStacktrace( 2 );\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\tmsg += \"<table><tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\t\tescapeText( source ) +\n\t\t\t\t\t\"</pre></td></tr></table>\";\n\t\t\t}\n\t\t}\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\tconfig.current.assertions.push({\n\t\t\tresult: result,\n\t\t\tmessage: msg\n\t\t});\n\t}", "code_tokens": ["function", "(", "result", ",", "msg", ")", "{", "if", "(", "!", "config", ".", "current", ")", "{", "throw", "new", "Error", "(", "\"ok() assertion outside test context, was \"", "+", "sourceFromStacktrace", "(", "2", ")", ")", ";", "}", "var", "source", ",", "details", ",", "originalResult", "=", "result", ";", "result", "=", "!", "!", "result", ";", "msg", "=", "msg", "||", "(", "result", "?", "\"okay\"", ":", "\"failed, expected argument to be truthy, was: \"", "+", "QUnit", ".", "jsDump", ".", "parse", "(", "originalResult", ")", ")", ";", "details", "=", "{", "module", ":", "config", ".", "current", ".", "module", ",", "name", ":", "config", ".", "current", ".", "testName", ",", "result", ":", "result", ",", "message", ":", "msg", "}", ";", "msg", "=", "\"<span class='test-message'>\"", "+", "escapeText", "(", "msg", ")", "+", "\"</span>\"", ";", "if", "(", "!", "result", ")", "{", "source", "=", "sourceFromStacktrace", "(", "2", ")", ";", "if", "(", "source", ")", "{", "details", ".", "source", "=", "source", ";", "msg", "+=", "\"<table><tr class='test-source'><th>Source: </th><td><pre>\"", "+", "escapeText", "(", "source", ")", "+", "\"</pre></td></tr></table>\"", ";", "}", "}", "runLoggingCallbacks", "(", "\"log\"", ",", "QUnit", ",", "details", ")", ";", "config", ".", "current", ".", "assertions", ".", "push", "(", "{", "result", ":", "result", ",", "message", ":", "msg", "}", ")", ";", "}"], "original_docstring": "\nAsserts rough true-ish result.\n@name ok\n@function\n@example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );\n", "docstring": {"block_comment": "Asserts rough true ish result.", "line_comment": null}, "docstring_tokens": ["Asserts", "rough", "true", "ish", "result", "."], "sample_id": 655, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004693", "repo": "leobalter/qunit-migrate", "path": "libs/qunit/qunit.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function( asserts ) {\n\t\tif ( arguments.length === 1 ) {\n\t\t\tconfig.current.expected = asserts;\n\t\t} else {\n\t\t\treturn config.current.expected;\n\t\t}\n\t}", "code_tokens": ["function", "(", "asserts", ")", "{", "if", "(", "arguments", ".", "length", "===", "1", ")", "{", "config", ".", "current", ".", "expected", "=", "asserts", ";", "}", "else", "{", "return", "config", ".", "current", ".", "expected", ";", "}", "}"], "original_docstring": "Specify the number of expected assertions to guarantee that failed test (no assertions are run at all) don't slip through.", "docstring": {"block_comment": "Specify the number of expected assertions to guarantee that failed test  no assertions are run at all  don t slip through.", "line_comment": null}, "docstring_tokens": ["Specify", "the", "number", "of", "expected", "assertions", "to", "guarantee", "that", "failed", "test", "no", "assertions", "are", "run", "at", "all", "don", "t", "slip", "through", "."], "sample_id": 656, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004697", "repo": "psmithiv/nineam-localization-plugin", "path": "examples/ext-4.1.1-example/app/controls/Date.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function() {\n        var today = Ext.Date.format(new Date(), this.format);\n\n        //update buttons\n        if (this.showToday) {\n            this.todayBtn.setText(Ext.String.format(this.todayText, today));\n            this.todayBtn.setTooltip(Ext.String.format(this.todayTip, today));\n        }\n\n        this.monthBtn.setTooltip(this.monthYearText);\n\n        //update tooltips\n        this.innerEl.dom.title = Ext.String.format(this.ariaTitle, Ext.Date.format(this.activeDate, this.ariaTitleDateFormat));\n        this.prevEl.dom.title = this.prevText;\n        this.nextEl.dom.title = this.nextText;\n\n        //update days table column headers\n        this.dayNames = Ext.Date.dayNames.slice(this.startDay).concat(Ext.Date.dayNames.slice(0, this.startDay));\n        var cells = this.eventEl.dom.rows[0].cells;\n        var len = cells.length;\n        for(var i=0; i < len; i++) {\n            var cell = cells[i];\n            cell.innerHTML = '<span>' + Ext.picker.Date.prototype.getDayInitial(this.dayNames[i]) + '</span>';\n            cell.title = this.dayNames[i];\n        }\n\n        //call update on days table to refresh\n        this.update(this.activeDate, true);\n\n        //hide month picker and set to null so it is recreated next time it is opened\n        this.hideMonthPicker(true);\n        this.monthPicker = null;\n    }", "code_tokens": ["function", "(", ")", "{", "var", "today", "=", "Ext", ".", "Date", ".", "format", "(", "new", "Date", "(", ")", ",", "this", ".", "format", ")", ";", "//update buttons", "if", "(", "this", ".", "showToday", ")", "{", "this", ".", "todayBtn", ".", "setText", "(", "Ext", ".", "String", ".", "format", "(", "this", ".", "todayText", ",", "today", ")", ")", ";", "this", ".", "todayBtn", ".", "setTooltip", "(", "Ext", ".", "String", ".", "format", "(", "this", ".", "todayTip", ",", "today", ")", ")", ";", "}", "this", ".", "monthBtn", ".", "setTooltip", "(", "this", ".", "monthYearText", ")", ";", "//update tooltips", "this", ".", "innerEl", ".", "dom", ".", "title", "=", "Ext", ".", "String", ".", "format", "(", "this", ".", "ariaTitle", ",", "Ext", ".", "Date", ".", "format", "(", "this", ".", "activeDate", ",", "this", ".", "ariaTitleDateFormat", ")", ")", ";", "this", ".", "prevEl", ".", "dom", ".", "title", "=", "this", ".", "prevText", ";", "this", ".", "nextEl", ".", "dom", ".", "title", "=", "this", ".", "nextText", ";", "//update days table column headers", "this", ".", "dayNames", "=", "Ext", ".", "Date", ".", "dayNames", ".", "slice", "(", "this", ".", "startDay", ")", ".", "concat", "(", "Ext", ".", "Date", ".", "dayNames", ".", "slice", "(", "0", ",", "this", ".", "startDay", ")", ")", ";", "var", "cells", "=", "this", ".", "eventEl", ".", "dom", ".", "rows", "[", "0", "]", ".", "cells", ";", "var", "len", "=", "cells", ".", "length", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "len", ";", "i", "++", ")", "{", "var", "cell", "=", "cells", "[", "i", "]", ";", "cell", ".", "innerHTML", "=", "'<span>'", "+", "Ext", ".", "picker", ".", "Date", ".", "prototype", ".", "getDayInitial", "(", "this", ".", "dayNames", "[", "i", "]", ")", "+", "'</span>'", ";", "cell", ".", "title", "=", "this", ".", "dayNames", "[", "i", "]", ";", "}", "//call update on days table to refresh", "this", ".", "update", "(", "this", ".", "activeDate", ",", "true", ")", ";", "//hide month picker and set to null so it is recreated next time it is opened", "this", ".", "hideMonthPicker", "(", "true", ")", ";", "this", ".", "monthPicker", "=", "null", ";", "}"], "original_docstring": "\nRefresh component using Sencha properties now that local has changed\n", "docstring": {"block_comment": "Refresh component using Sencha properties now that local has changed", "line_comment": ["update buttons", "update tooltips", "update days table column headers", "call update on days table to refresh", "hide month picker and set to null so it is recreated next time it is opened"]}, "docstring_tokens": ["Refresh", "component", "using", "Sencha", "properties", "now", "that", "local", "has", "changed"], "sample_id": 657, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004698", "repo": "vgupta6/Project-2", "path": "static/scripts/S3/s3.tmdemo.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(domElement, node){\n        domElement.innerHTML = node.name;\n        var style = domElement.style;\n        style.display = '';\n        style.border = '1px solid transparent';\n        domElement.onmouseover = function() {\n          style.border = '1px solid #9FD4FF';\n        };\n        domElement.onmouseout = function() {\n          style.border = '1px solid transparent';\n        };\n    }", "code_tokens": ["function", "(", "domElement", ",", "node", ")", "{", "domElement", ".", "innerHTML", "=", "node", ".", "name", ";", "var", "style", "=", "domElement", ".", "style", ";", "style", ".", "display", "=", "''", ";", "style", ".", "border", "=", "'1px solid transparent'", ";", "domElement", ".", "onmouseover", "=", "function", "(", ")", "{", "style", ".", "border", "=", "'1px solid #9FD4FF'", ";", "}", ";", "domElement", ".", "onmouseout", "=", "function", "(", ")", "{", "style", ".", "border", "=", "'1px solid transparent'", ";", "}", ";", "}"], "original_docstring": "Add the name of the node in the correponding label This method is called once, on label creation.", "docstring": {"block_comment": "Add the name of the node in the correponding label This method is called once, on label creation.", "line_comment": null}, "docstring_tokens": ["Add", "the", "name", "of", "the", "node", "in", "the", "correponding", "label", "This", "method", "is", "called", "once", "on", "label", "creation", "."], "sample_id": 658, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004699", "repo": "vgupta6/Project-2", "path": "static/scripts/S3/s3.tmdemo.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(tip, node, isLeaf, domElement) {\n        var html = \"<div class=\\\"tip-title\\\">\" + node.name\n          + \"</div><div class=\\\"tip-text\\\">\";\n        var data = node.data;\n        if(data.indicator) {\n          html += \"value: \" + data.indicator;\n        }\n        tip.innerHTML =  html;\n      }", "code_tokens": ["function", "(", "tip", ",", "node", ",", "isLeaf", ",", "domElement", ")", "{", "var", "html", "=", "\"<div class=\\\"tip-title\\\">\"", "+", "node", ".", "name", "+", "\"</div><div class=\\\"tip-text\\\">\"", ";", "var", "data", "=", "node", ".", "data", ";", "if", "(", "data", ".", "indicator", ")", "{", "html", "+=", "\"value: \"", "+", "data", ".", "indicator", ";", "}", "tip", ".", "innerHTML", "=", "html", ";", "}"], "original_docstring": "implement the onShow method to add content to the tooltip when a node is hovered", "docstring": {"block_comment": "implement the onShow method to add content to the tooltip when a node is hovered", "line_comment": null}, "docstring_tokens": ["implement", "the", "onShow", "method", "to", "add", "content", "to", "the", "tooltip", "when", "a", "node", "is", "hovered"], "sample_id": 659, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004700", "repo": "bma73/gordon-examples", "path": "client/js/js/gordon-client-0.1.0.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (id) {\n        this.id = id;\n        this._users = new gordon.Dictionary();\n        this._dataObjects = new gordon.Dictionary();\n        this.data = {};\n    }", "code_tokens": ["function", "(", "id", ")", "{", "this", ".", "id", "=", "id", ";", "this", ".", "_users", "=", "new", "gordon", ".", "Dictionary", "(", ")", ";", "this", ".", "_dataObjects", "=", "new", "gordon", ".", "Dictionary", "(", ")", ";", "this", ".", "data", "=", "{", "}", ";", "}"], "original_docstring": "\nA Room instance stores informations about the current room.\n\n@class Room\n@constructor\n", "docstring": {"block_comment": "A Room instance stores informations about the current room.", "line_comment": null}, "docstring_tokens": ["A", "Room", "instance", "stores", "informations", "about", "the", "current", "room", "."], "sample_id": 660, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004701", "repo": "bma73/gordon-examples", "path": "client/js/js/gordon-client-0.1.0.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (initData) {\n        this._values = {};\n        this.length = 0;\n        if (initData) {\n            for (var key in initData) {\n                this._values[key] = initData[key];\n            }\n        }\n    }", "code_tokens": ["function", "(", "initData", ")", "{", "this", ".", "_values", "=", "{", "}", ";", "this", ".", "length", "=", "0", ";", "if", "(", "initData", ")", "{", "for", "(", "var", "key", "in", "initData", ")", "{", "this", ".", "_values", "[", "key", "]", "=", "initData", "[", "key", "]", ";", "}", "}", "}"], "original_docstring": "\nProvides a basic dictionary class\n\n@example\n<pre>\nvar dict = new gordon.Dictionary();\ndict.put('key1', {id:'1234', text:'Hello!'});\ndict.put('key2', 0xc000);\nconsole.log(dict.hasKey('key1'));\nconsole.log(dict.keysToArray());\n</pre>\n\n@class Dictionary\n@constructor\n", "docstring": {"block_comment": "Provides a basic dictionary class", "line_comment": null}, "docstring_tokens": ["Provides", "a", "basic", "dictionary", "class"], "sample_id": 661, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004702", "repo": "bma73/gordon-examples", "path": "client/js/js/gordon-client-0.1.0.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (sourceBuffer, offset, length) {\n        'use strict';\n        var fillUp = gordon.Util._fillUp;\n        var view = new DataView(sourceBuffer);\n        offset = offset || 0;\n        length = length || sourceBuffer.byteLength;\n\n        var out = fillUp(\"Offset\", 8, \" \") + \"  00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\\n\";\n        var row = \"\";\n        for (var i = 0; i < length; i += 16) {\n            row += fillUp(offset.toString(16).toUpperCase(), 8, \"0\") + \"  \";\n            var n = Math.min(16, length - offset);\n            var string = \"\";\n            for (var j = 0; j < 16; ++j) {\n                if (j < n) {\n                    var value = view.getUint8(offset);\n                    string += value >= 32 ? String.fromCharCode(value) : \".\";\n                    row += fillUp(value.toString(16).toUpperCase(), 2, \"0\") + \" \";\n                    offset++;\n                }\n                else {\n                    row += \"   \";\n                    string += \" \";\n                }\n            }\n            row += \" \" + string + \"\\n\";\n        }\n        out += row;\n        return out;\n    }", "code_tokens": ["function", "(", "sourceBuffer", ",", "offset", ",", "length", ")", "{", "'use strict'", ";", "var", "fillUp", "=", "gordon", ".", "Util", ".", "_fillUp", ";", "var", "view", "=", "new", "DataView", "(", "sourceBuffer", ")", ";", "offset", "=", "offset", "||", "0", ";", "length", "=", "length", "||", "sourceBuffer", ".", "byteLength", ";", "var", "out", "=", "fillUp", "(", "\"Offset\"", ",", "8", ",", "\" \"", ")", "+", "\"  00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\\n\"", ";", "var", "row", "=", "\"\"", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "length", ";", "i", "+=", "16", ")", "{", "row", "+=", "fillUp", "(", "offset", ".", "toString", "(", "16", ")", ".", "toUpperCase", "(", ")", ",", "8", ",", "\"0\"", ")", "+", "\"  \"", ";", "var", "n", "=", "Math", ".", "min", "(", "16", ",", "length", "-", "offset", ")", ";", "var", "string", "=", "\"\"", ";", "for", "(", "var", "j", "=", "0", ";", "j", "<", "16", ";", "++", "j", ")", "{", "if", "(", "j", "<", "n", ")", "{", "var", "value", "=", "view", ".", "getUint8", "(", "offset", ")", ";", "string", "+=", "value", ">=", "32", "?", "String", ".", "fromCharCode", "(", "value", ")", ":", "\".\"", ";", "row", "+=", "fillUp", "(", "value", ".", "toString", "(", "16", ")", ".", "toUpperCase", "(", ")", ",", "2", ",", "\"0\"", ")", "+", "\" \"", ";", "offset", "++", ";", "}", "else", "{", "row", "+=", "\"   \"", ";", "string", "+=", "\" \"", ";", "}", "}", "row", "+=", "\" \"", "+", "string", "+", "\"\\n\"", ";", "}", "out", "+=", "row", ";", "return", "out", ";", "}"], "original_docstring": "\nDumps a buffer to string\n\n@method hexDump\n@param {ArrayBuffer} sourceBuffer\n@param {Number} [offset]\n@param {Number} [length]\n@returns {String} string\n", "docstring": {"block_comment": "Dumps a buffer to string", "line_comment": null}, "docstring_tokens": ["Dumps", "a", "buffer", "to", "string"], "sample_id": 662, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004703", "repo": "bma73/gordon-examples", "path": "client/js/js/gordon-client-0.1.0.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (target, source, targetOffsetBytes, sourceOffsetBytes, sourceLengthBytes) {\n        var t = new Uint8Array(target);\n        var s = new Uint8Array(source, sourceOffsetBytes || 0, sourceLengthBytes || source.length);\n        t.set(s, targetOffsetBytes || 0);\n    }", "code_tokens": ["function", "(", "target", ",", "source", ",", "targetOffsetBytes", ",", "sourceOffsetBytes", ",", "sourceLengthBytes", ")", "{", "var", "t", "=", "new", "Uint8Array", "(", "target", ")", ";", "var", "s", "=", "new", "Uint8Array", "(", "source", ",", "sourceOffsetBytes", "||", "0", ",", "sourceLengthBytes", "||", "source", ".", "length", ")", ";", "t", ".", "set", "(", "s", ",", "targetOffsetBytes", "||", "0", ")", ";", "}"], "original_docstring": "\nCopy bytes from source to target buffer\n\n@method copyBytes\n@param {ArrayBuffer} target The target buffer to copy to.\n@param {ArrayBuffer} source The source buffer to copy from.\n@param {Number} [targetOffsetBytes]\n@param {Number} [sourceOffsetBytes]\n@param {Number} [sourceLengthBytes]\n", "docstring": {"block_comment": "Copy bytes from source to target buffer", "line_comment": null}, "docstring_tokens": ["Copy", "bytes", "from", "source", "to", "target", "buffer"], "sample_id": 663, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004703", "repo": "bma73/gordon-examples", "path": "client/js/js/gordon-client-0.1.0.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (target, source, targetOffsetBytes, sourceOffsetBytes, sourceLengthBytes) {\n        var t = new Uint8Array(target);\n        var s = new Uint8Array(source, sourceOffsetBytes || 0, sourceLengthBytes || source.length);\n        t.set(s, targetOffsetBytes || 0);\n    }", "code_tokens": ["function", "(", "target", ",", "source", ",", "targetOffsetBytes", ",", "sourceOffsetBytes", ",", "sourceLengthBytes", ")", "{", "var", "t", "=", "new", "Uint8Array", "(", "target", ")", ";", "var", "s", "=", "new", "Uint8Array", "(", "source", ",", "sourceOffsetBytes", "||", "0", ",", "sourceLengthBytes", "||", "source", ".", "length", ")", ";", "t", ".", "set", "(", "s", ",", "targetOffsetBytes", "||", "0", ")", ";", "}"], "original_docstring": "\nCopy bytes from source to target buffer\n\n@method copyBytes\n@param {ArrayBuffer} target The target buffer to copy to.\n@param {ArrayBuffer} source The source buffer to copy from.\n@param {Number} [targetOffsetBytes]\n@param {Number} [sourceOffsetBytes]\n@param {Number} [sourceLengthBytes]\n", "docstring": {"block_comment": "Copy bytes from source to target buffer", "line_comment": null}, "docstring_tokens": ["The", "target", "buffer", "to", "copy", "to", "."], "sample_id": 663, "prompt_tokens": ["<javascript>", "<param>", "target"], "comment_type": "param", "sentence_id": 1}
{"id": "21004703", "repo": "bma73/gordon-examples", "path": "client/js/js/gordon-client-0.1.0.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (target, source, targetOffsetBytes, sourceOffsetBytes, sourceLengthBytes) {\n        var t = new Uint8Array(target);\n        var s = new Uint8Array(source, sourceOffsetBytes || 0, sourceLengthBytes || source.length);\n        t.set(s, targetOffsetBytes || 0);\n    }", "code_tokens": ["function", "(", "target", ",", "source", ",", "targetOffsetBytes", ",", "sourceOffsetBytes", ",", "sourceLengthBytes", ")", "{", "var", "t", "=", "new", "Uint8Array", "(", "target", ")", ";", "var", "s", "=", "new", "Uint8Array", "(", "source", ",", "sourceOffsetBytes", "||", "0", ",", "sourceLengthBytes", "||", "source", ".", "length", ")", ";", "t", ".", "set", "(", "s", ",", "targetOffsetBytes", "||", "0", ")", ";", "}"], "original_docstring": "\nCopy bytes from source to target buffer\n\n@method copyBytes\n@param {ArrayBuffer} target The target buffer to copy to.\n@param {ArrayBuffer} source The source buffer to copy from.\n@param {Number} [targetOffsetBytes]\n@param {Number} [sourceOffsetBytes]\n@param {Number} [sourceLengthBytes]\n", "docstring": {"block_comment": "Copy bytes from source to target buffer", "line_comment": null}, "docstring_tokens": ["The", "source", "buffer", "to", "copy", "from", "."], "sample_id": 663, "prompt_tokens": ["<javascript>", "<param>", "source"], "comment_type": "param", "sentence_id": 2}
{"id": "21004704", "repo": "bma73/gordon-examples", "path": "client/js/js/gordon-client-0.1.0.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (str, buffer, offset) {\n        var strUtf8 = decodeURIComponent(encodeURIComponent(str));\n        var ab = new Uint8Array(buffer, offset, strUtf8.length);\n        for (var i = 0; i < strUtf8.length; i++) {\n            ab[i] = strUtf8.charCodeAt(i);\n        }\n        return ab;\n    }", "code_tokens": ["function", "(", "str", ",", "buffer", ",", "offset", ")", "{", "var", "strUtf8", "=", "decodeURIComponent", "(", "encodeURIComponent", "(", "str", ")", ")", ";", "var", "ab", "=", "new", "Uint8Array", "(", "buffer", ",", "offset", ",", "strUtf8", ".", "length", ")", ";", "for", "(", "var", "i", "=", "0", ";", "i", "<", "strUtf8", ".", "length", ";", "i", "++", ")", "{", "ab", "[", "i", "]", "=", "strUtf8", ".", "charCodeAt", "(", "i", ")", ";", "}", "return", "ab", ";", "}"], "original_docstring": "\nConverts an Utf-8 string to an Uint8 array\n\n@method bufferToUtf8String\n@param {String} str\n@param {Buffer} buffer\n@param {Number} [offset]\n@returns {String} string\n", "docstring": {"block_comment": "Converts an Utf 8 string to an Uint8 array", "line_comment": null}, "docstring_tokens": ["Converts", "an", "Utf", "8", "string", "to", "an", "Uint8", "array"], "sample_id": 664, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004705", "repo": "bma73/gordon-examples", "path": "client/js/js/gordon-client-0.1.0.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (buffer, offset, length) {\n        offset = offset || 0;\n        length = length || buffer.length;\n        return decodeURIComponent(encodeURIComponent(String.fromCharCode.apply(null, new Uint8Array(buffer, offset, length))));\n    }", "code_tokens": ["function", "(", "buffer", ",", "offset", ",", "length", ")", "{", "offset", "=", "offset", "||", "0", ";", "length", "=", "length", "||", "buffer", ".", "length", ";", "return", "decodeURIComponent", "(", "encodeURIComponent", "(", "String", ".", "fromCharCode", ".", "apply", "(", "null", ",", "new", "Uint8Array", "(", "buffer", ",", "offset", ",", "length", ")", ")", ")", ")", ";", "}"], "original_docstring": "\nConverts a buffer to an Utf-8 String\n\n@method bufferToUtf8String\n@param {Buffer} buffer\n@param {Number} [offset]\n@param {Boolean} [length]\n@returns {String} string\n", "docstring": {"block_comment": "Converts a buffer to an Utf 8 String", "line_comment": null}, "docstring_tokens": ["Converts", "a", "buffer", "to", "an", "Utf", "8", "String"], "sample_id": 665, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004709", "repo": "markuslerner/travelscope", "path": "src/client/thirdparty/Stats.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function(){var h,a,n=0,o=0,i=Date.now(),u=i,p=i,l=0,q=1E3,r=0,e,j,f,b=[[16,16,48],[0,255,255]],m=0,s=1E3,t=0,d,k,g,c=[[16,48,16],[0,255,0]];h=document.createElement(\"div\");h.style.cursor=\"pointer\";h.style.width=\"80px\";h.style.opacity=\"0.9\";h.style.zIndex=\"10001\";h.addEventListener(\"mousedown\",function(a){a.preventDefault();n=(n+1)%2;n==0?(e.style.display=\"block\",d.style.display=\"none\"):(e.style.display=\"none\",d.style.display=\"block\")},!1);e=document.createElement(\"div\");e.style.textAlign=\n\"left\";e.style.lineHeight=\"1.2em\";e.style.backgroundColor=\"rgb(\"+Math.floor(b[0][0]/2)+\",\"+Math.floor(b[0][1]/2)+\",\"+Math.floor(b[0][2]/2)+\")\";e.style.padding=\"0 0 3px 3px\";h.appendChild(e);j=document.createElement(\"div\");j.style.fontFamily=\"Helvetica, Arial, sans-serif\";j.style.fontSize=\"9px\";j.style.color=\"rgb(\"+b[1][0]+\",\"+b[1][1]+\",\"+b[1][2]+\")\";j.style.fontWeight=\"bold\";j.innerHTML=\"FPS\";e.appendChild(j);f=document.createElement(\"div\");f.style.position=\"relative\";f.style.width=\"74px\";f.style.height=\n\"30px\";f.style.backgroundColor=\"rgb(\"+b[1][0]+\",\"+b[1][1]+\",\"+b[1][2]+\")\";for(e.appendChild(f);f.children.length<74;)a=document.createElement(\"span\"),a.style.width=\"1px\",a.style.height=\"30px\",a.style.cssFloat=\"left\",a.style.backgroundColor=\"rgb(\"+b[0][0]+\",\"+b[0][1]+\",\"+b[0][2]+\")\",f.appendChild(a);d=document.createElement(\"div\");d.style.textAlign=\"left\";d.style.lineHeight=\"1.2em\";d.style.backgroundColor=\"rgb(\"+Math.floor(c[0][0]/2)+\",\"+Math.floor(c[0][1]/2)+\",\"+Math.floor(c[0][2]/2)+\")\";d.style.padding=\n\"0 0 3px 3px\";d.style.display=\"none\";h.appendChild(d);k=document.createElement(\"div\");k.style.fontFamily=\"Helvetica, Arial, sans-serif\";k.style.fontSize=\"9px\";k.style.color=\"rgb(\"+c[1][0]+\",\"+c[1][1]+\",\"+c[1][2]+\")\";k.style.fontWeight=\"bold\";k.innerHTML=\"MS\";d.appendChild(k);g=document.createElement(\"div\");g.style.position=\"relative\";g.style.width=\"74px\";g.style.height=\"30px\";g.style.backgroundColor=\"rgb(\"+c[1][0]+\",\"+c[1][1]+\",\"+c[1][2]+\")\";for(d.appendChild(g);g.children.length<74;)a=document.createElement(\"span\"),\na.style.width=\"1px\",a.style.height=Math.random()*30+\"px\",a.style.cssFloat=\"left\",a.style.backgroundColor=\"rgb(\"+c[0][0]+\",\"+c[0][1]+\",\"+c[0][2]+\")\",g.appendChild(a);return{domElement:h,update:function(){i=Date.now();m=i-u;s=Math.min(s,m);t=Math.max(t,m);k.textContent=m+\" MS (\"+s+\"-\"+t+\")\";var a=Math.min(30,30-m/200*30);g.appendChild(g.firstChild).style.height=a+\"px\";u=i;o++;if(i>p+1E3)l=Math.round(o*1E3/(i-p)),q=Math.min(q,l),r=Math.max(r,l),j.textContent=l+\" FPS (\"+q+\"-\"+r+\")\",a=Math.min(30,30-l/\n100*30),f.appendChild(f.firstChild).style.height=a+\"px\",p=i,o=0}}}", "code_tokens": ["function", "(", ")", "{", "var", "h", ",", "a", ",", "n", "=", "0", ",", "o", "=", "0", ",", "i", "=", "Date", ".", "now", "(", ")", ",", "u", "=", "i", ",", "p", "=", "i", ",", "l", "=", "0", ",", "q", "=", "1E3", ",", "r", "=", "0", ",", "e", ",", "j", ",", "f", ",", "b", "=", "[", "[", "16", ",", "16", ",", "48", "]", ",", "[", "0", ",", "255", ",", "255", "]", "]", ",", "m", "=", "0", ",", "s", "=", "1E3", ",", "t", "=", "0", ",", "d", ",", "k", ",", "g", ",", "c", "=", "[", "[", "16", ",", "48", ",", "16", "]", ",", "[", "0", ",", "255", ",", "0", "]", "]", ";", "h", "=", "document", ".", "createElement", "(", "\"div\"", ")", ";", "h", ".", "style", ".", "cursor", "=", "\"pointer\"", ";", "h", ".", "style", ".", "width", "=", "\"80px\"", ";", "h", ".", "style", ".", "opacity", "=", "\"0.9\"", ";", "h", ".", "style", ".", "zIndex", "=", "\"10001\"", ";", "h", ".", "addEventListener", "(", "\"mousedown\"", ",", "function", "(", "a", ")", "{", "a", ".", "preventDefault", "(", ")", ";", "n", "=", "(", "n", "+", "1", ")", "%", "2", ";", "n", "==", "0", "?", "(", "e", ".", "style", ".", "display", "=", "\"block\"", ",", "d", ".", "style", ".", "display", "=", "\"none\"", ")", ":", "(", "e", ".", "style", ".", "display", "=", "\"none\"", ",", "d", ".", "style", ".", "display", "=", "\"block\"", ")", "}", ",", "!", "1", ")", ";", "e", "=", "document", ".", "createElement", "(", "\"div\"", ")", ";", "e", ".", "style", ".", "textAlign", "=", "\"left\"", ";", "e", ".", "style", ".", "lineHeight", "=", "\"1.2em\"", ";", "e", ".", "style", ".", "backgroundColor", "=", "\"rgb(\"", "+", "Math", ".", "floor", "(", "b", "[", "0", "]", "[", "0", "]", "/", "2", ")", "+", "\",\"", "+", "Math", ".", "floor", "(", "b", "[", "0", "]", "[", "1", "]", "/", "2", ")", "+", "\",\"", "+", "Math", ".", "floor", "(", "b", "[", "0", "]", "[", "2", "]", "/", "2", ")", "+", "\")\"", ";", "e", ".", "style", ".", "padding", "=", "\"0 0 3px 3px\"", ";", "h", ".", "appendChild", "(", "e", ")", ";", "j", "=", "document", ".", "createElement", "(", "\"div\"", ")", ";", "j", ".", "style", ".", "fontFamily", "=", "\"Helvetica, Arial, sans-serif\"", ";", "j", ".", "style", ".", "fontSize", "=", "\"9px\"", ";", "j", ".", "style", ".", "color", "=", "\"rgb(\"", "+", "b", "[", "1", "]", "[", "0", "]", "+", "\",\"", "+", "b", "[", "1", "]", "[", "1", "]", "+", "\",\"", "+", "b", "[", "1", "]", "[", "2", "]", "+", "\")\"", ";", "j", ".", "style", ".", "fontWeight", "=", "\"bold\"", ";", "j", ".", "innerHTML", "=", "\"FPS\"", ";", "e", ".", "appendChild", "(", "j", ")", ";", "f", "=", "document", ".", "createElement", "(", "\"div\"", ")", ";", "f", ".", "style", ".", "position", "=", "\"relative\"", ";", "f", ".", "style", ".", "width", "=", "\"74px\"", ";", "f", ".", "style", ".", "height", "=", "\"30px\"", ";", "f", ".", "style", ".", "backgroundColor", "=", "\"rgb(\"", "+", "b", "[", "1", "]", "[", "0", "]", "+", "\",\"", "+", "b", "[", "1", "]", "[", "1", "]", "+", "\",\"", "+", "b", "[", "1", "]", "[", "2", "]", "+", "\")\"", ";", "for", "(", "e", ".", "appendChild", "(", "f", ")", ";", "f", ".", "children", ".", "length", "<", "74", ";", ")", "a", "=", "document", ".", "createElement", "(", "\"span\"", ")", ",", "a", ".", "style", ".", "width", "=", "\"1px\"", ",", "a", ".", "style", ".", "height", "=", "\"30px\"", ",", "a", ".", "style", ".", "cssFloat", "=", "\"left\"", ",", "a", ".", "style", ".", "backgroundColor", "=", "\"rgb(\"", "+", "b", "[", "0", "]", "[", "0", "]", "+", "\",\"", "+", "b", "[", "0", "]", "[", "1", "]", "+", "\",\"", "+", "b", "[", "0", "]", "[", "2", "]", "+", "\")\"", ",", "f", ".", "appendChild", "(", "a", ")", ";", "d", "=", "document", ".", "createElement", "(", "\"div\"", ")", ";", "d", ".", "style", ".", "textAlign", "=", "\"left\"", ";", "d", ".", "style", ".", "lineHeight", "=", "\"1.2em\"", ";", "d", ".", "style", ".", "backgroundColor", "=", "\"rgb(\"", "+", "Math", ".", "floor", "(", "c", "[", "0", "]", "[", "0", "]", "/", "2", ")", "+", "\",\"", "+", "Math", ".", "floor", "(", "c", "[", "0", "]", "[", "1", "]", "/", "2", ")", "+", "\",\"", "+", "Math", ".", "floor", "(", "c", "[", "0", "]", "[", "2", "]", "/", "2", ")", "+", "\")\"", ";", "d", ".", "style", ".", "padding", "=", "\"0 0 3px 3px\"", ";", "d", ".", "style", ".", "display", "=", "\"none\"", ";", "h", ".", "appendChild", "(", "d", ")", ";", "k", "=", "document", ".", "createElement", "(", "\"div\"", ")", ";", "k", ".", "style", ".", "fontFamily", "=", "\"Helvetica, Arial, sans-serif\"", ";", "k", ".", "style", ".", "fontSize", "=", "\"9px\"", ";", "k", ".", "style", ".", "color", "=", "\"rgb(\"", "+", "c", "[", "1", "]", "[", "0", "]", "+", "\",\"", "+", "c", "[", "1", "]", "[", "1", "]", "+", "\",\"", "+", "c", "[", "1", "]", "[", "2", "]", "+", "\")\"", ";", "k", ".", "style", ".", "fontWeight", "=", "\"bold\"", ";", "k", ".", "innerHTML", "=", "\"MS\"", ";", "d", ".", "appendChild", "(", "k", ")", ";", "g", "=", "document", ".", "createElement", "(", "\"div\"", ")", ";", "g", ".", "style", ".", "position", "=", "\"relative\"", ";", "g", ".", "style", ".", "width", "=", "\"74px\"", ";", "g", ".", "style", ".", "height", "=", "\"30px\"", ";", "g", ".", "style", ".", "backgroundColor", "=", "\"rgb(\"", "+", "c", "[", "1", "]", "[", "0", "]", "+", "\",\"", "+", "c", "[", "1", "]", "[", "1", "]", "+", "\",\"", "+", "c", "[", "1", "]", "[", "2", "]", "+", "\")\"", ";", "for", "(", "d", ".", "appendChild", "(", "g", ")", ";", "g", ".", "children", ".", "length", "<", "74", ";", ")", "a", "=", "document", ".", "createElement", "(", "\"span\"", ")", ",", "a", ".", "style", ".", "width", "=", "\"1px\"", ",", "a", ".", "style", ".", "height", "=", "Math", ".", "random", "(", ")", "*", "30", "+", "\"px\"", ",", "a", ".", "style", ".", "cssFloat", "=", "\"left\"", ",", "a", ".", "style", ".", "backgroundColor", "=", "\"rgb(\"", "+", "c", "[", "0", "]", "[", "0", "]", "+", "\",\"", "+", "c", "[", "0", "]", "[", "1", "]", "+", "\",\"", "+", "c", "[", "0", "]", "[", "2", "]", "+", "\")\"", ",", "g", ".", "appendChild", "(", "a", ")", ";", "return", "{", "domElement", ":", "h", ",", "update", ":", "function", "(", ")", "{", "i", "=", "Date", ".", "now", "(", ")", ";", "m", "=", "i", "-", "u", ";", "s", "=", "Math", ".", "min", "(", "s", ",", "m", ")", ";", "t", "=", "Math", ".", "max", "(", "t", ",", "m", ")", ";", "k", ".", "textContent", "=", "m", "+", "\" MS (\"", "+", "s", "+", "\"-\"", "+", "t", "+", "\")\"", ";", "var", "a", "=", "Math", ".", "min", "(", "30", ",", "30", "-", "m", "/", "200", "*", "30", ")", ";", "g", ".", "appendChild", "(", "g", ".", "firstChild", ")", ".", "style", ".", "height", "=", "a", "+", "\"px\"", ";", "u", "=", "i", ";", "o", "++", ";", "if", "(", "i", ">", "p", "+", "1E3", ")", "l", "=", "Math", ".", "round", "(", "o", "*", "1E3", "/", "(", "i", "-", "p", ")", ")", ",", "q", "=", "Math", ".", "min", "(", "q", ",", "l", ")", ",", "r", "=", "Math", ".", "max", "(", "r", ",", "l", ")", ",", "j", ".", "textContent", "=", "l", "+", "\" FPS (\"", "+", "q", "+", "\"-\"", "+", "r", "+", "\")\"", ",", "a", "=", "Math", ".", "min", "(", "30", ",", "30", "-", "l", "/", "100", "*", "30", ")", ",", "f", ".", "appendChild", "(", "f", ".", "firstChild", ")", ".", "style", ".", "height", "=", "a", "+", "\"px\"", ",", "p", "=", "i", ",", "o", "=", "0", "}", "}", "}"], "original_docstring": "stats.js r8 - http://github.com/mrdoob/stats.js", "docstring": {"block_comment": "stats.js r8", "line_comment": null}, "docstring_tokens": ["stats", ".", "js", "r8"], "sample_id": 666, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004710", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      //also include revision number\n      return getData(this).revisions.map(function (val, index) {\n        val.revisionNumber = index + 1;\n        return val;\n      });\n    }", "code_tokens": ["function", "(", ")", "{", "//also include revision number", "return", "getData", "(", "this", ")", ".", "revisions", ".", "map", "(", "function", "(", "val", ",", "index", ")", "{", "val", ".", "revisionNumber", "=", "index", "+", "1", ";", "return", "val", ";", "}", ")", ";", "}"], "original_docstring": "\nGet revisions for an element.\n\n@param  {jQuery element} $el element to get revisions for\n@return {Array} revision history\n", "docstring": {"block_comment": "Get revisions for an element.", "line_comment": ["also include revision number"]}, "docstring_tokens": ["Get", "revisions", "for", "an", "element", "."], "sample_id": 667, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004711", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (options) {\n      var rt = new RevisionTracker(this, options);\n      this.data('revisionTracker', rt);\n      return this;\n    }", "code_tokens": ["function", "(", "options", ")", "{", "var", "rt", "=", "new", "RevisionTracker", "(", "this", ",", "options", ")", ";", "this", ".", "data", "(", "'revisionTracker'", ",", "rt", ")", ";", "return", "this", ";", "}"], "original_docstring": "\nInititialize this element to track revisions.\n\n@param  {Object} options revision\n@return {[type]}         [description]\n", "docstring": {"block_comment": "Inititialize this element to track revisions.", "line_comment": null}, "docstring_tokens": ["Inititialize", "this", "element", "to", "track", "revisions", "."], "sample_id": 668, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004712", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function ($el) {\n    var rt = $el.data('revisionTracker');\n    if (!rt) {\n      throw new Error('Element is currently not tracking revisions');\n    }\n    return rt;\n  }", "code_tokens": ["function", "(", "$el", ")", "{", "var", "rt", "=", "$el", ".", "data", "(", "'revisionTracker'", ")", ";", "if", "(", "!", "rt", ")", "{", "throw", "new", "Error", "(", "'Element is currently not tracking revisions'", ")", ";", "}", "return", "rt", ";", "}"], "original_docstring": "\nReturns revision track data for element.\n\n@return {RevisionTracker} revision tracker obj.\n", "docstring": {"block_comment": "Returns revision track data for element.", "line_comment": null}, "docstring_tokens": ["Returns", "revision", "track", "data", "for", "element", "."], "sample_id": 669, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004712", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function ($el) {\n    var rt = $el.data('revisionTracker');\n    if (!rt) {\n      throw new Error('Element is currently not tracking revisions');\n    }\n    return rt;\n  }", "code_tokens": ["function", "(", "$el", ")", "{", "var", "rt", "=", "$el", ".", "data", "(", "'revisionTracker'", ")", ";", "if", "(", "!", "rt", ")", "{", "throw", "new", "Error", "(", "'Element is currently not tracking revisions'", ")", ";", "}", "return", "rt", ";", "}"], "original_docstring": "\nReturns revision track data for element.\n\n@return {RevisionTracker} revision tracker obj.\n", "docstring": {"block_comment": "Returns revision track data for element.", "line_comment": null}, "docstring_tokens": ["revision", "tracker", "obj", "."], "sample_id": 669, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004713", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (firstRevNumber, secondRevNumber) {\n      if (!this.diffFunction) {\n        throw new Error('In order to use RevisionTracker#diff, a diffFunction must be supplied as an option');\n      }\n      var first = this.getRevision(firstRevNumber) || {text: ''},\n        second = this.getRevision(secondRevNumber);\n      if (second) {\n        return this.diffFunction(first.text, second.text);\n      }\n    }", "code_tokens": ["function", "(", "firstRevNumber", ",", "secondRevNumber", ")", "{", "if", "(", "!", "this", ".", "diffFunction", ")", "{", "throw", "new", "Error", "(", "'In order to use RevisionTracker#diff, a diffFunction must be supplied as an option'", ")", ";", "}", "var", "first", "=", "this", ".", "getRevision", "(", "firstRevNumber", ")", "||", "{", "text", ":", "''", "}", ",", "second", "=", "this", ".", "getRevision", "(", "secondRevNumber", ")", ";", "if", "(", "second", ")", "{", "return", "this", ".", "diffFunction", "(", "first", ".", "text", ",", "second", ".", "text", ")", ";", "}", "}"], "original_docstring": "\nDiff two revisions.\n\n@param  {number} firstRevNumber  first revision\n@param  {number} secondRevNumber second revision\n@return {string}                 diff of first and second revision\n", "docstring": {"block_comment": "Diff two revisions.", "line_comment": null}, "docstring_tokens": ["Diff", "two", "revisions", "."], "sample_id": 670, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004713", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (firstRevNumber, secondRevNumber) {\n      if (!this.diffFunction) {\n        throw new Error('In order to use RevisionTracker#diff, a diffFunction must be supplied as an option');\n      }\n      var first = this.getRevision(firstRevNumber) || {text: ''},\n        second = this.getRevision(secondRevNumber);\n      if (second) {\n        return this.diffFunction(first.text, second.text);\n      }\n    }", "code_tokens": ["function", "(", "firstRevNumber", ",", "secondRevNumber", ")", "{", "if", "(", "!", "this", ".", "diffFunction", ")", "{", "throw", "new", "Error", "(", "'In order to use RevisionTracker#diff, a diffFunction must be supplied as an option'", ")", ";", "}", "var", "first", "=", "this", ".", "getRevision", "(", "firstRevNumber", ")", "||", "{", "text", ":", "''", "}", ",", "second", "=", "this", ".", "getRevision", "(", "secondRevNumber", ")", ";", "if", "(", "second", ")", "{", "return", "this", ".", "diffFunction", "(", "first", ".", "text", ",", "second", ".", "text", ")", ";", "}", "}"], "original_docstring": "\nDiff two revisions.\n\n@param  {number} firstRevNumber  first revision\n@param  {number} secondRevNumber second revision\n@return {string}                 diff of first and second revision\n", "docstring": {"block_comment": "Diff two revisions.", "line_comment": null}, "docstring_tokens": ["diff", "of", "first", "and", "second", "revision"], "sample_id": 670, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004714", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      return this.popRevision(true);\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "popRevision", "(", "true", ")", ";", "}"], "original_docstring": "\nRedo a revision.\n\n@return {object} revision that was re-applied\n", "docstring": {"block_comment": "Redo a revision.", "line_comment": null}, "docstring_tokens": ["Redo", "a", "revision", "."], "sample_id": 671, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004714", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      return this.popRevision(true);\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "popRevision", "(", "true", ")", ";", "}"], "original_docstring": "\nRedo a revision.\n\n@return {object} revision that was re-applied\n", "docstring": {"block_comment": "Redo a revision.", "line_comment": null}, "docstring_tokens": ["revision", "that", "was", "re", "-", "applied"], "sample_id": 671, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004715", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      return this.popRevision();\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "popRevision", "(", ")", ";", "}"], "original_docstring": "\nUndo the last revision.\n\n@return {object} undone revision\n", "docstring": {"block_comment": "Undo the last revision.", "line_comment": null}, "docstring_tokens": ["Undo", "the", "last", "revision", "."], "sample_id": 672, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004716", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (revisionNumber) {\n      revisionNumber = parseInt(revisionNumber, 10);\n      if (revisionNumber < 0 || revisionNumber > this.revisions.length) {\n        throw new Error('Attempting to go to an invalid revision number');\n      }\n      return this.popRevision(false, revisionNumber);\n    }", "code_tokens": ["function", "(", "revisionNumber", ")", "{", "revisionNumber", "=", "parseInt", "(", "revisionNumber", ",", "10", ")", ";", "if", "(", "revisionNumber", "<", "0", "||", "revisionNumber", ">", "this", ".", "revisions", ".", "length", ")", "{", "throw", "new", "Error", "(", "'Attempting to go to an invalid revision number'", ")", ";", "}", "return", "this", ".", "popRevision", "(", "false", ",", "revisionNumber", ")", ";", "}"], "original_docstring": "\nGo to a revision number.\n\n@param  {number} revisionNumber revision number to make active\n@return {Object} newly active revision\n", "docstring": {"block_comment": "Go to a revision number.", "line_comment": null}, "docstring_tokens": ["Go", "to", "a", "revision", "number", "."], "sample_id": 673, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004716", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (revisionNumber) {\n      revisionNumber = parseInt(revisionNumber, 10);\n      if (revisionNumber < 0 || revisionNumber > this.revisions.length) {\n        throw new Error('Attempting to go to an invalid revision number');\n      }\n      return this.popRevision(false, revisionNumber);\n    }", "code_tokens": ["function", "(", "revisionNumber", ")", "{", "revisionNumber", "=", "parseInt", "(", "revisionNumber", ",", "10", ")", ";", "if", "(", "revisionNumber", "<", "0", "||", "revisionNumber", ">", "this", ".", "revisions", ".", "length", ")", "{", "throw", "new", "Error", "(", "'Attempting to go to an invalid revision number'", ")", ";", "}", "return", "this", ".", "popRevision", "(", "false", ",", "revisionNumber", ")", ";", "}"], "original_docstring": "\nGo to a revision number.\n\n@param  {number} revisionNumber revision number to make active\n@return {Object} newly active revision\n", "docstring": {"block_comment": "Go to a revision number.", "line_comment": null}, "docstring_tokens": ["revision", "number", "to", "make", "active"], "sample_id": 673, "prompt_tokens": ["<javascript>", "<param>", "revisionNumber"], "comment_type": "param", "sentence_id": 1}
{"id": "21004716", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (revisionNumber) {\n      revisionNumber = parseInt(revisionNumber, 10);\n      if (revisionNumber < 0 || revisionNumber > this.revisions.length) {\n        throw new Error('Attempting to go to an invalid revision number');\n      }\n      return this.popRevision(false, revisionNumber);\n    }", "code_tokens": ["function", "(", "revisionNumber", ")", "{", "revisionNumber", "=", "parseInt", "(", "revisionNumber", ",", "10", ")", ";", "if", "(", "revisionNumber", "<", "0", "||", "revisionNumber", ">", "this", ".", "revisions", ".", "length", ")", "{", "throw", "new", "Error", "(", "'Attempting to go to an invalid revision number'", ")", ";", "}", "return", "this", ".", "popRevision", "(", "false", ",", "revisionNumber", ")", ";", "}"], "original_docstring": "\nGo to a revision number.\n\n@param  {number} revisionNumber revision number to make active\n@return {Object} newly active revision\n", "docstring": {"block_comment": "Go to a revision number.", "line_comment": null}, "docstring_tokens": ["newly", "active", "revision"], "sample_id": 673, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004717", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (revisionNumber) {\n      return this.revisions[parseInt(revisionNumber, 10) - 1];\n    }", "code_tokens": ["function", "(", "revisionNumber", ")", "{", "return", "this", ".", "revisions", "[", "parseInt", "(", "revisionNumber", ",", "10", ")", "-", "1", "]", ";", "}"], "original_docstring": "\nGet a particular revision.\n\n@param  {number} revisionNumber number of revision to get\n@return {Object} Revison with property of text and time\n", "docstring": {"block_comment": "Get a particular revision.", "line_comment": null}, "docstring_tokens": ["Get", "a", "particular", "revision", "."], "sample_id": 674, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004717", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (revisionNumber) {\n      return this.revisions[parseInt(revisionNumber, 10) - 1];\n    }", "code_tokens": ["function", "(", "revisionNumber", ")", "{", "return", "this", ".", "revisions", "[", "parseInt", "(", "revisionNumber", ",", "10", ")", "-", "1", "]", ";", "}"], "original_docstring": "\nGet a particular revision.\n\n@param  {number} revisionNumber number of revision to get\n@return {Object} Revison with property of text and time\n", "docstring": {"block_comment": "Get a particular revision.", "line_comment": null}, "docstring_tokens": ["number", "of", "revision", "to", "get"], "sample_id": 674, "prompt_tokens": ["<javascript>", "<param>", "revisionNumber"], "comment_type": "param", "sentence_id": 1}
{"id": "21004717", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (revisionNumber) {\n      return this.revisions[parseInt(revisionNumber, 10) - 1];\n    }", "code_tokens": ["function", "(", "revisionNumber", ")", "{", "return", "this", ".", "revisions", "[", "parseInt", "(", "revisionNumber", ",", "10", ")", "-", "1", "]", ";", "}"], "original_docstring": "\nGet a particular revision.\n\n@param  {number} revisionNumber number of revision to get\n@return {Object} Revison with property of text and time\n", "docstring": {"block_comment": "Get a particular revision.", "line_comment": null}, "docstring_tokens": ["Revison", "with", "property", "of", "text", "and", "time"], "sample_id": 674, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004718", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (reverse, popTo) {\n      var popped,\n        fromArray = reverse ? this.undoneRevisions : this.revisions;\n      if (fromArray.length === 0) {\n        return;\n      }\n      if (popTo) {\n        popped = fromArray.splice(popTo)[0];\n      } else {\n        popped = fromArray.pop();\n      }\n      (reverse ? this.revisions : this.undoneRevisions).push(popped);\n      if (this.revisions.length > 0) {\n        this.$el.val(this.lastRevision().text);\n      } else {\n        this.$el.val('');\n      }\n      return popped;\n    }", "code_tokens": ["function", "(", "reverse", ",", "popTo", ")", "{", "var", "popped", ",", "fromArray", "=", "reverse", "?", "this", ".", "undoneRevisions", ":", "this", ".", "revisions", ";", "if", "(", "fromArray", ".", "length", "===", "0", ")", "{", "return", ";", "}", "if", "(", "popTo", ")", "{", "popped", "=", "fromArray", ".", "splice", "(", "popTo", ")", "[", "0", "]", ";", "}", "else", "{", "popped", "=", "fromArray", ".", "pop", "(", ")", ";", "}", "(", "reverse", "?", "this", ".", "revisions", ":", "this", ".", "undoneRevisions", ")", ".", "push", "(", "popped", ")", ";", "if", "(", "this", ".", "revisions", ".", "length", ">", "0", ")", "{", "this", ".", "$el", ".", "val", "(", "this", ".", "lastRevision", "(", ")", ".", "text", ")", ";", "}", "else", "{", "this", ".", "$el", ".", "val", "(", "''", ")", ";", "}", "return", "popped", ";", "}"], "original_docstring": "\nPop a revision from revisions to undone revisions (or vice versa if reverse is true).\n\n@param  {boolean} reverse if true pop from undone revisions to revisions\n@param  {number} popTo   pop to a specific revisions\n@return {Object} poped revison\n", "docstring": {"block_comment": "Pop a revision from revisions to undone revisions  or vice versa if reverse is true .", "line_comment": null}, "docstring_tokens": ["Pop", "a", "revision", "from", "revisions", "to", "undone", "revisions", "or", "vice", "versa", "if", "reverse", "is", "true", "."], "sample_id": 675, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004718", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (reverse, popTo) {\n      var popped,\n        fromArray = reverse ? this.undoneRevisions : this.revisions;\n      if (fromArray.length === 0) {\n        return;\n      }\n      if (popTo) {\n        popped = fromArray.splice(popTo)[0];\n      } else {\n        popped = fromArray.pop();\n      }\n      (reverse ? this.revisions : this.undoneRevisions).push(popped);\n      if (this.revisions.length > 0) {\n        this.$el.val(this.lastRevision().text);\n      } else {\n        this.$el.val('');\n      }\n      return popped;\n    }", "code_tokens": ["function", "(", "reverse", ",", "popTo", ")", "{", "var", "popped", ",", "fromArray", "=", "reverse", "?", "this", ".", "undoneRevisions", ":", "this", ".", "revisions", ";", "if", "(", "fromArray", ".", "length", "===", "0", ")", "{", "return", ";", "}", "if", "(", "popTo", ")", "{", "popped", "=", "fromArray", ".", "splice", "(", "popTo", ")", "[", "0", "]", ";", "}", "else", "{", "popped", "=", "fromArray", ".", "pop", "(", ")", ";", "}", "(", "reverse", "?", "this", ".", "revisions", ":", "this", ".", "undoneRevisions", ")", ".", "push", "(", "popped", ")", ";", "if", "(", "this", ".", "revisions", ".", "length", ">", "0", ")", "{", "this", ".", "$el", ".", "val", "(", "this", ".", "lastRevision", "(", ")", ".", "text", ")", ";", "}", "else", "{", "this", ".", "$el", ".", "val", "(", "''", ")", ";", "}", "return", "popped", ";", "}"], "original_docstring": "\nPop a revision from revisions to undone revisions (or vice versa if reverse is true).\n\n@param  {boolean} reverse if true pop from undone revisions to revisions\n@param  {number} popTo   pop to a specific revisions\n@return {Object} poped revison\n", "docstring": {"block_comment": "Pop a revision from revisions to undone revisions  or vice versa if reverse is true .", "line_comment": null}, "docstring_tokens": ["if", "true", "pop", "from", "undone", "revisions", "to", "revisions"], "sample_id": 675, "prompt_tokens": ["<javascript>", "<param>", "reverse"], "comment_type": "param", "sentence_id": 1}
{"id": "21004718", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (reverse, popTo) {\n      var popped,\n        fromArray = reverse ? this.undoneRevisions : this.revisions;\n      if (fromArray.length === 0) {\n        return;\n      }\n      if (popTo) {\n        popped = fromArray.splice(popTo)[0];\n      } else {\n        popped = fromArray.pop();\n      }\n      (reverse ? this.revisions : this.undoneRevisions).push(popped);\n      if (this.revisions.length > 0) {\n        this.$el.val(this.lastRevision().text);\n      } else {\n        this.$el.val('');\n      }\n      return popped;\n    }", "code_tokens": ["function", "(", "reverse", ",", "popTo", ")", "{", "var", "popped", ",", "fromArray", "=", "reverse", "?", "this", ".", "undoneRevisions", ":", "this", ".", "revisions", ";", "if", "(", "fromArray", ".", "length", "===", "0", ")", "{", "return", ";", "}", "if", "(", "popTo", ")", "{", "popped", "=", "fromArray", ".", "splice", "(", "popTo", ")", "[", "0", "]", ";", "}", "else", "{", "popped", "=", "fromArray", ".", "pop", "(", ")", ";", "}", "(", "reverse", "?", "this", ".", "revisions", ":", "this", ".", "undoneRevisions", ")", ".", "push", "(", "popped", ")", ";", "if", "(", "this", ".", "revisions", ".", "length", ">", "0", ")", "{", "this", ".", "$el", ".", "val", "(", "this", ".", "lastRevision", "(", ")", ".", "text", ")", ";", "}", "else", "{", "this", ".", "$el", ".", "val", "(", "''", ")", ";", "}", "return", "popped", ";", "}"], "original_docstring": "\nPop a revision from revisions to undone revisions (or vice versa if reverse is true).\n\n@param  {boolean} reverse if true pop from undone revisions to revisions\n@param  {number} popTo   pop to a specific revisions\n@return {Object} poped revison\n", "docstring": {"block_comment": "Pop a revision from revisions to undone revisions  or vice versa if reverse is true .", "line_comment": null}, "docstring_tokens": ["pop", "to", "a", "specific", "revisions"], "sample_id": 675, "prompt_tokens": ["<javascript>", "<param>", "popTo"], "comment_type": "param", "sentence_id": 2}
{"id": "21004719", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      return this.revisions[this.revisions.length - 1];\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "revisions", "[", "this", ".", "revisions", ".", "length", "-", "1", "]", ";", "}"], "original_docstring": "\nGet last revision made.\n@return {Object} Revison with property of text and time\n", "docstring": {"block_comment": "Get last revision made.", "line_comment": null}, "docstring_tokens": ["Get", "last", "revision", "made", "."], "sample_id": 676, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004719", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function () {\n      return this.revisions[this.revisions.length - 1];\n    }", "code_tokens": ["function", "(", ")", "{", "return", "this", ".", "revisions", "[", "this", ".", "revisions", ".", "length", "-", "1", "]", ";", "}"], "original_docstring": "\nGet last revision made.\n@return {Object} Revison with property of text and time\n", "docstring": {"block_comment": "Get last revision made.", "line_comment": null}, "docstring_tokens": ["Revison", "with", "property", "of", "text", "and", "time"], "sample_id": 676, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 1}
{"id": "21004720", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (predicate) {\n      if (predicate === void 0 || predicate === true) {\n        this.revisions.push({text: this.$el.val(), time: Date.now()});\n      }\n    }", "code_tokens": ["function", "(", "predicate", ")", "{", "if", "(", "predicate", "===", "void", "0", "||", "predicate", "===", "true", ")", "{", "this", ".", "revisions", ".", "push", "(", "{", "text", ":", "this", ".", "$el", ".", "val", "(", ")", ",", "time", ":", "Date", ".", "now", "(", ")", "}", ")", ";", "}", "}"], "original_docstring": "\nSaves a revision if predicate passes truth test.\n\n@param  {Boolean} predicate - only save if predicate evaluates to true (or is undefined)\n@return {Object} Revison with property of text and time\n", "docstring": {"block_comment": "Saves a revision if predicate passes truth test.", "line_comment": null}, "docstring_tokens": ["Saves", "a", "revision", "if", "predicate", "passes", "truth", "test", "."], "sample_id": 677, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004720", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (predicate) {\n      if (predicate === void 0 || predicate === true) {\n        this.revisions.push({text: this.$el.val(), time: Date.now()});\n      }\n    }", "code_tokens": ["function", "(", "predicate", ")", "{", "if", "(", "predicate", "===", "void", "0", "||", "predicate", "===", "true", ")", "{", "this", ".", "revisions", ".", "push", "(", "{", "text", ":", "this", ".", "$el", ".", "val", "(", ")", ",", "time", ":", "Date", ".", "now", "(", ")", "}", ")", ";", "}", "}"], "original_docstring": "\nSaves a revision if predicate passes truth test.\n\n@param  {Boolean} predicate - only save if predicate evaluates to true (or is undefined)\n@return {Object} Revison with property of text and time\n", "docstring": {"block_comment": "Saves a revision if predicate passes truth test.", "line_comment": null}, "docstring_tokens": ["-", "only", "save", "if", "predicate", "evaluates", "to", "true", "(", "or", "is", "undefined", ")"], "sample_id": 677, "prompt_tokens": ["<javascript>", "<param>", "predicate"], "comment_type": "param", "sentence_id": 1}
{"id": "21004720", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function (predicate) {\n      if (predicate === void 0 || predicate === true) {\n        this.revisions.push({text: this.$el.val(), time: Date.now()});\n      }\n    }", "code_tokens": ["function", "(", "predicate", ")", "{", "if", "(", "predicate", "===", "void", "0", "||", "predicate", "===", "true", ")", "{", "this", ".", "revisions", ".", "push", "(", "{", "text", ":", "this", ".", "$el", ".", "val", "(", ")", ",", "time", ":", "Date", ".", "now", "(", ")", "}", ")", ";", "}", "}"], "original_docstring": "\nSaves a revision if predicate passes truth test.\n\n@param  {Boolean} predicate - only save if predicate evaluates to true (or is undefined)\n@return {Object} Revison with property of text and time\n", "docstring": {"block_comment": "Saves a revision if predicate passes truth test.", "line_comment": null}, "docstring_tokens": ["Revison", "with", "property", "of", "text", "and", "time"], "sample_id": 677, "prompt_tokens": ["<javascript>", "<return>"], "comment_type": "return", "sentence_id": 2}
{"id": "21004721", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function ($el, options) {\n    options = options || {};\n\n    this.$el = $el;\n    this.revisions = [];\n    this.undoneRevisions = [];\n\n    this.diffFunction = options.diffFunction;\n    if (options.autoSave) {\n      var lastChange, saveAfter = parseInt(options.autoSave, 10);\n      $el.on('change', function () {\n        var now = Date.now();\n        this.saveRevision((now - lastChange)/1000 > saveAfter);\n        lastChange = now;\n      }.bind(this));\n    }\n  }", "code_tokens": ["function", "(", "$el", ",", "options", ")", "{", "options", "=", "options", "||", "{", "}", ";", "this", ".", "$el", "=", "$el", ";", "this", ".", "revisions", "=", "[", "]", ";", "this", ".", "undoneRevisions", "=", "[", "]", ";", "this", ".", "diffFunction", "=", "options", ".", "diffFunction", ";", "if", "(", "options", ".", "autoSave", ")", "{", "var", "lastChange", ",", "saveAfter", "=", "parseInt", "(", "options", ".", "autoSave", ",", "10", ")", ";", "$el", ".", "on", "(", "'change'", ",", "function", "(", ")", "{", "var", "now", "=", "Date", ".", "now", "(", ")", ";", "this", ".", "saveRevision", "(", "(", "now", "-", "lastChange", ")", "/", "1000", ">", "saveAfter", ")", ";", "lastChange", "=", "now", ";", "}", ".", "bind", "(", "this", ")", ")", ";", "}", "}"], "original_docstring": "\nRevision Tracker Base Class.\n@constructor\n@param {[type]} $el     jqeury element to attach revision tracker to\n@param {[type]} options options -\nValid Options are:\nautoSave (integer) - will automatically create a revision after X seconds of paused typing\ndiffFunction (function) - function to call when  performing a diff through the API\n", "docstring": {"block_comment": "Revision Tracker Base Class.", "line_comment": null}, "docstring_tokens": ["Revision", "Tracker", "Base", "Class", "."], "sample_id": 678, "prompt_tokens": ["<javascript>", "<function>"], "comment_type": "main_content", "sentence_id": 0}
{"id": "21004721", "repo": "jonmbake/textbox-revision-tracker", "path": "dist/textbox-revision-tracker.js", "language": "JavaScript", "license": "mit", "func_name": "", "code": "function ($el, options) {\n    options = options || {};\n\n    this.$el = $el;\n    this.revisions = [];\n    this.undoneRevisions = [];\n\n    this.diffFunction = options.diffFunction;\n    if (options.autoSave) {\n      var lastChange, saveAfter = parseInt(options.autoSave, 10);\n      $el.on('change', function () {\n        var now = Date.now();\n        this.saveRevision((now - lastChange)/1000 > saveAfter);\n        lastChange = now;\n      }.bind(this));\n    }\n  }", "code_tokens": ["function", "(", "$el", ",", "options", ")", "{", "options", "=", "options", "||", "{", "}", ";", "this", ".", "$el", "=", "$el", ";", "this", ".", "revisions", "=", "[", "]", ";", "this", ".", "undoneRevisions", "=", "[", "]", ";", "this", ".", "diffFunction", "=", "options", ".", "diffFunction", ";", "if", "(", "options", ".", "autoSave", ")", "{", "var", "lastChange", ",", "saveAfter", "=", "parseInt", "(", "options", ".", "autoSave", ",", "10", ")", ";", "$el", ".", "on", "(", "'change'", ",", "function", "(", ")", "{", "var", "now", "=", "Date", ".", "now", "(", ")", ";", "this", ".", "saveRevision", "(", "(", "now", "-", "lastChange", ")", "/", "1000", ">", "saveAfter", ")", ";", "lastChange", "=", "now", ";", "}", ".", "bind", "(", "this", ")", ")", ";", "}", "}"], "original_docstring": "\nRevision Tracker Base Class.\n@constructor\n@param {[type]} $el     jqeury element to attach revision tracker to\n@param {[type]} options options -\nValid Options are:\nautoSave (integer) - will automatically create a revision after X seconds of paused typing\ndiffFunction (function) - function to call when  performing a diff through the API\n", "docstring": {"block_comment": "Revision Tracker Base Class.", "line_comment": null}, "docstring_tokens": ["jqeury", "element", "to", "attach", "revision", "tracker", "to"], "sample_id": 678, "prompt_tokens": ["<javascript>", "<param>", "$el"], "comment_type": "param", "sentence_id": 1}
